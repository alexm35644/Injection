ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB73:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** #define AS5600_I2C_ADDRESS (0x36 << 1) // Shift left for 8-bit address
  41:Core/Src/main.c **** #define AS5600_RAW_ANGLE_REGISTER 0x0C // Raw angle register address
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** uint16_t raw_angle = 0;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_I2C1_Init(void);
  63:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  64:Core/Src/main.c **** static void MX_TIM3_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  67:Core/Src/main.c **** uint16_t AS5600_ReadRawAngle(void);
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_I2C1_Init();
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 106:Core/Src/main.c ****   MX_TIM3_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c ****   while (1)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     /* USER CODE END WHILE */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 118:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 119:Core/Src/main.c ****     //printf("Calling AS5600...\n");
 120:Core/Src/main.c ****     raw_angle = AS5600_ReadRawAngle();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     char str[6]; // Enough to hold the maximum value of uint16_t (65535) + null terminator
 123:Core/Src/main.c ****     sprintf(str, "%u", raw_angle); // Format the number as an unsigned decimal
 124:Core/Src/main.c ****     printf(str);
 125:Core/Src/main.c ****     printf("\n");
 126:Core/Src/main.c ****     HAL_Delay(100); // 1 second delay between readings
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /**
 133:Core/Src/main.c ****   * @brief System Clock Configuration
 134:Core/Src/main.c ****   * @retval None
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c **** void SystemClock_Config(void)
 137:Core/Src/main.c **** {
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 4


 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_I2C1_Init(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 183:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 184:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 185:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 186:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 187:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 188:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 189:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 190:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 191:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 192:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 204:Core/Src/main.c ****   * @param None
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 5


 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** static void MX_TIM3_Init(void)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 215:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 220:Core/Src/main.c ****   htim3.Instance = TIM3;
 221:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 222:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 223:Core/Src/main.c ****   htim3.Init.Period = 65535;
 224:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 225:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 226:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 231:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 232:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 237:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 238:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 239:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 240:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 251:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief USART1 Initialization Function
 257:Core/Src/main.c ****   * @param None
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 261:Core/Src/main.c **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 270:Core/Src/main.c ****   huart1.Instance = USART1;
 271:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 272:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 273:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 274:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 275:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 276:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 277:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 278:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief GPIO Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_GPIO_Init(void)
 294:Core/Src/main.c **** {
  26              		.loc 1 294 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 295:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 295 3 view .LVU1
  40              		.loc 1 295 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 296:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 297:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 298:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 7


 299:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 300:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 300 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 300 3 view .LVU4
  49              		.loc 1 300 3 view .LVU5
  50 000e 214B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 300 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 300 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 300 3 view .LVU8
 301:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 301 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 301 3 view .LVU10
  65              		.loc 1 301 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 301 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
  73              		.loc 1 301 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 301 3 view .LVU14
 302:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 302 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 302 3 view .LVU16
  80              		.loc 1 302 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 302 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00402 		and	r2, r2, #4
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 302 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 302 3 view .LVU20
 303:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 303 3 view .LVU21
  93              	.LBB7:
  94              		.loc 1 303 3 view .LVU22
  95              		.loc 1 303 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
  97 0048 42F00802 		orr	r2, r2, #8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 8


  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 303 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00803 		and	r3, r3, #8
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 303 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE7:
 106              		.loc 1 303 3 view .LVU26
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 306:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 107              		.loc 1 306 3 view .LVU27
 108 0058 0F4D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF40051 		mov	r1, #8192
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 309:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 114              		.loc 1 309 3 view .LVU28
 115              		.loc 1 309 23 is_stmt 0 view .LVU29
 116 0066 4FF40053 		mov	r3, #8192
 117 006a 0493     		str	r3, [sp, #16]
 310:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 310 3 is_stmt 1 view .LVU30
 119              		.loc 1 310 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
 121 006e 0593     		str	r3, [sp, #20]
 311:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 311 3 is_stmt 1 view .LVU32
 123              		.loc 1 311 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 312:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 312 3 is_stmt 1 view .LVU34
 126              		.loc 1 312 25 is_stmt 0 view .LVU35
 127 0072 0224     		movs	r4, #2
 128 0074 0794     		str	r4, [sp, #28]
 313:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 129              		.loc 1 313 3 is_stmt 1 view .LVU36
 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 */
 316:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 134              		.loc 1 316 3 view .LVU37
 135              		.loc 1 316 23 is_stmt 0 view .LVU38
 136 007e 0323     		movs	r3, #3
 137 0080 0493     		str	r3, [sp, #16]
 317:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 138              		.loc 1 317 3 is_stmt 1 view .LVU39
 139              		.loc 1 317 24 is_stmt 0 view .LVU40
 140 0082 0594     		str	r4, [sp, #20]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 9


 318:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 141              		.loc 1 318 3 is_stmt 1 view .LVU41
 142              		.loc 1 318 25 is_stmt 0 view .LVU42
 143 0084 0794     		str	r4, [sp, #28]
 319:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 144              		.loc 1 319 3 is_stmt 1 view .LVU43
 145 0086 04A9     		add	r1, sp, #16
 146 0088 0448     		ldr	r0, .L3+8
 147 008a FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL2:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 322:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 323:Core/Src/main.c **** }
 149              		.loc 1 323 1 is_stmt 0 view .LVU44
 150 008e 09B0     		add	sp, sp, #36
 151              	.LCFI2:
 152              		.cfi_def_cfa_offset 12
 153              		@ sp needed
 154 0090 30BD     		pop	{r4, r5, pc}
 155              	.L4:
 156 0092 00BF     		.align	2
 157              	.L3:
 158 0094 00100240 		.word	1073876992
 159 0098 00100140 		.word	1073811456
 160 009c 00080140 		.word	1073809408
 161              		.cfi_endproc
 162              	.LFE73:
 164              		.section	.text.__io_putchar,"ax",%progbits
 165              		.align	1
 166              		.global	__io_putchar
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	__io_putchar:
 172              	.LVL3:
 173              	.LFB74:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /**
 328:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 329:Core/Src/main.c ****   * @retval None
 330:Core/Src/main.c ****   */
 331:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 332:Core/Src/main.c ****  {
 174              		.loc 1 332 2 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		.loc 1 332 2 is_stmt 0 view .LVU46
 179 0000 00B5     		push	{lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 4
 182              		.cfi_offset 14, -4
 183 0002 83B0     		sub	sp, sp, #12
 184              	.LCFI4:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 10


 185              		.cfi_def_cfa_offset 16
 186 0004 0190     		str	r0, [sp, #4]
 333:Core/Src/main.c ****    /* Place your implementation of fputc here */
 334:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 335:Core/Src/main.c ****    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 187              		.loc 1 335 4 is_stmt 1 view .LVU47
 188 0006 4FF6FF73 		movw	r3, #65535
 189 000a 0122     		movs	r2, #1
 190 000c 01A9     		add	r1, sp, #4
 191 000e 0348     		ldr	r0, .L7
 192              	.LVL4:
 193              		.loc 1 335 4 is_stmt 0 view .LVU48
 194 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 195              	.LVL5:
 336:Core/Src/main.c ****  
 337:Core/Src/main.c ****    return ch;
 196              		.loc 1 337 4 is_stmt 1 view .LVU49
 338:Core/Src/main.c ****  }
 197              		.loc 1 338 2 is_stmt 0 view .LVU50
 198 0014 0198     		ldr	r0, [sp, #4]
 199 0016 03B0     		add	sp, sp, #12
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 4
 202              		@ sp needed
 203 0018 5DF804FB 		ldr	pc, [sp], #4
 204              	.L8:
 205              		.align	2
 206              	.L7:
 207 001c 00000000 		.word	huart1
 208              		.cfi_endproc
 209              	.LFE74:
 211              		.section	.text.AS5600_ReadRawAngle,"ax",%progbits
 212              		.align	1
 213              		.global	AS5600_ReadRawAngle
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	AS5600_ReadRawAngle:
 219              	.LFB75:
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****  uint16_t AS5600_ReadRawAngle(void)
 341:Core/Src/main.c **** {
 220              		.loc 1 341 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 8
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229 0002 86B0     		sub	sp, sp, #24
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 32
 342:Core/Src/main.c ****     //printf("starting I2C scan...\n");
 343:Core/Src/main.c ****     uint8_t buffer[2] = {0};
 232              		.loc 1 343 5 view .LVU52
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 11


 233              		.loc 1 343 13 is_stmt 0 view .LVU53
 234 0004 0023     		movs	r3, #0
 235 0006 ADF81430 		strh	r3, [sp, #20]	@ movhi
 344:Core/Src/main.c ****     
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****     if (__HAL_I2C_GET_FLAG(&hi2c1, I2C_FLAG_BUSY))
 236              		.loc 1 346 5 is_stmt 1 view .LVU54
 237              		.loc 1 346 9 is_stmt 0 view .LVU55
 238 000a 154B     		ldr	r3, .L14
 239 000c 1B68     		ldr	r3, [r3]
 240 000e 9B69     		ldr	r3, [r3, #24]
 241              		.loc 1 346 8 view .LVU56
 242 0010 13F0020F 		tst	r3, #2
 243 0014 1CD1     		bne	.L13
 244              	.L10:
 347:Core/Src/main.c ****     {
 348:Core/Src/main.c ****       //printf("I2C bus busy, resetting...\n");
 349:Core/Src/main.c ****       HAL_I2C_DeInit(&hi2c1);
 350:Core/Src/main.c ****       HAL_I2C_Init(&hi2c1);
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****     }
 353:Core/Src/main.c ****     
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****     
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****     if (HAL_I2C_Mem_Read(&hi2c1, AS5600_I2C_ADDRESS, AS5600_RAW_ANGLE_REGISTER, 
 245              		.loc 1 357 5 is_stmt 1 view .LVU57
 246              		.loc 1 357 9 is_stmt 0 view .LVU58
 247 0016 4FF0FF33 		mov	r3, #-1
 248 001a 0293     		str	r3, [sp, #8]
 249 001c 0223     		movs	r3, #2
 250 001e 0193     		str	r3, [sp, #4]
 251 0020 05AB     		add	r3, sp, #20
 252 0022 0093     		str	r3, [sp]
 253 0024 0123     		movs	r3, #1
 254 0026 0C22     		movs	r2, #12
 255 0028 6C21     		movs	r1, #108
 256 002a 0D48     		ldr	r0, .L14
 257 002c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 258              	.LVL6:
 259              		.loc 1 357 8 discriminator 1 view .LVU59
 260 0030 38B9     		cbnz	r0, .L11
 358:Core/Src/main.c ****                          I2C_MEMADD_SIZE_8BIT, buffer, 2, HAL_MAX_DELAY) == HAL_OK)
 359:Core/Src/main.c ****     {
 360:Core/Src/main.c ****         raw_angle = (buffer[0] << 8) | buffer[1]; // Combine MSB and LSB
 261              		.loc 1 360 9 is_stmt 1 view .LVU60
 262              		.loc 1 360 28 is_stmt 0 view .LVU61
 263 0032 9DF81420 		ldrb	r2, [sp, #20]	@ zero_extendqisi2
 264              		.loc 1 360 46 view .LVU62
 265 0036 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
 266              		.loc 1 360 38 view .LVU63
 267 003a 43EA0223 		orr	r3, r3, r2, lsl #8
 268              		.loc 1 360 19 view .LVU64
 269 003e 094A     		ldr	r2, .L14+4
 270 0040 1380     		strh	r3, [r2]	@ movhi
 271              	.L11:
 361:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 12


 362:Core/Src/main.c ****     HAL_Delay(10); // 10 ms delay between I2C operations
 272              		.loc 1 362 5 is_stmt 1 view .LVU65
 273 0042 0A20     		movs	r0, #10
 274 0044 FFF7FEFF 		bl	HAL_Delay
 275              	.LVL7:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****     return raw_angle;
 276              		.loc 1 364 5 view .LVU66
 365:Core/Src/main.c **** }
 277              		.loc 1 365 1 is_stmt 0 view .LVU67
 278 0048 064B     		ldr	r3, .L14+4
 279 004a 1888     		ldrh	r0, [r3]
 280 004c 06B0     		add	sp, sp, #24
 281              	.LCFI8:
 282              		.cfi_remember_state
 283              		.cfi_def_cfa_offset 8
 284              		@ sp needed
 285 004e 10BD     		pop	{r4, pc}
 286              	.L13:
 287              	.LCFI9:
 288              		.cfi_restore_state
 349:Core/Src/main.c ****       HAL_I2C_Init(&hi2c1);
 289              		.loc 1 349 7 is_stmt 1 view .LVU68
 290 0050 034C     		ldr	r4, .L14
 291 0052 2046     		mov	r0, r4
 292 0054 FFF7FEFF 		bl	HAL_I2C_DeInit
 293              	.LVL8:
 350:Core/Src/main.c **** 
 294              		.loc 1 350 7 view .LVU69
 295 0058 2046     		mov	r0, r4
 296 005a FFF7FEFF 		bl	HAL_I2C_Init
 297              	.LVL9:
 298 005e DAE7     		b	.L10
 299              	.L15:
 300              		.align	2
 301              	.L14:
 302 0060 00000000 		.word	hi2c1
 303 0064 00000000 		.word	raw_angle
 304              		.cfi_endproc
 305              	.LFE75:
 307              		.section	.text.Error_Handler,"ax",%progbits
 308              		.align	1
 309              		.global	Error_Handler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	Error_Handler:
 315              	.LFB76:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE END 4 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** void Error_Handler(void)
 374:Core/Src/main.c **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 13


 316              		.loc 1 374 1 view -0
 317              		.cfi_startproc
 318              		@ Volatile: function does not return.
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 375:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 376:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 377:Core/Src/main.c ****   __disable_irq();
 322              		.loc 1 377 3 view .LVU71
 323              	.LBB8:
 324              	.LBI8:
 325              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 14


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 15


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 326              		.loc 2 140 27 view .LVU72
 327              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 328              		.loc 2 142 3 view .LVU73
 329              		.syntax unified
 330              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 331 0000 72B6     		cpsid i
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335              	.L17:
 336              	.LBE9:
 337              	.LBE8:
 378:Core/Src/main.c ****   while (1)
 338              		.loc 1 378 3 view .LVU74
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 16


 339              		.loc 1 380 3 view .LVU75
 378:Core/Src/main.c ****   while (1)
 340              		.loc 1 378 9 view .LVU76
 341 0002 FEE7     		b	.L17
 342              		.cfi_endproc
 343              	.LFE76:
 345              		.section	.text.MX_I2C1_Init,"ax",%progbits
 346              		.align	1
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	MX_I2C1_Init:
 352              	.LFB70:
 174:Core/Src/main.c **** 
 353              		.loc 1 174 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              	.LCFI10:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
 183:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 362              		.loc 1 183 3 view .LVU78
 183:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 363              		.loc 1 183 18 is_stmt 0 view .LVU79
 364 0002 0A48     		ldr	r0, .L22
 365 0004 0A4B     		ldr	r3, .L22+4
 366 0006 0360     		str	r3, [r0]
 184:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 367              		.loc 1 184 3 is_stmt 1 view .LVU80
 184:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 368              		.loc 1 184 25 is_stmt 0 view .LVU81
 369 0008 0A4B     		ldr	r3, .L22+8
 370 000a 4360     		str	r3, [r0, #4]
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 371              		.loc 1 185 3 is_stmt 1 view .LVU82
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 372              		.loc 1 185 24 is_stmt 0 view .LVU83
 373 000c 0023     		movs	r3, #0
 374 000e 8360     		str	r3, [r0, #8]
 186:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 375              		.loc 1 186 3 is_stmt 1 view .LVU84
 186:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 376              		.loc 1 186 26 is_stmt 0 view .LVU85
 377 0010 C360     		str	r3, [r0, #12]
 187:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 378              		.loc 1 187 3 is_stmt 1 view .LVU86
 187:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 379              		.loc 1 187 29 is_stmt 0 view .LVU87
 380 0012 4FF48042 		mov	r2, #16384
 381 0016 0261     		str	r2, [r0, #16]
 188:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 382              		.loc 1 188 3 is_stmt 1 view .LVU88
 188:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 383              		.loc 1 188 30 is_stmt 0 view .LVU89
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 17


 384 0018 4361     		str	r3, [r0, #20]
 189:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 385              		.loc 1 189 3 is_stmt 1 view .LVU90
 189:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 386              		.loc 1 189 26 is_stmt 0 view .LVU91
 387 001a 8361     		str	r3, [r0, #24]
 190:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 388              		.loc 1 190 3 is_stmt 1 view .LVU92
 190:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 389              		.loc 1 190 30 is_stmt 0 view .LVU93
 390 001c C361     		str	r3, [r0, #28]
 191:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 391              		.loc 1 191 3 is_stmt 1 view .LVU94
 191:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 392              		.loc 1 191 28 is_stmt 0 view .LVU95
 393 001e 0362     		str	r3, [r0, #32]
 192:Core/Src/main.c ****   {
 394              		.loc 1 192 3 is_stmt 1 view .LVU96
 192:Core/Src/main.c ****   {
 395              		.loc 1 192 7 is_stmt 0 view .LVU97
 396 0020 FFF7FEFF 		bl	HAL_I2C_Init
 397              	.LVL10:
 192:Core/Src/main.c ****   {
 398              		.loc 1 192 6 discriminator 1 view .LVU98
 399 0024 00B9     		cbnz	r0, .L21
 200:Core/Src/main.c **** 
 400              		.loc 1 200 1 view .LVU99
 401 0026 08BD     		pop	{r3, pc}
 402              	.L21:
 194:Core/Src/main.c ****   }
 403              		.loc 1 194 5 is_stmt 1 view .LVU100
 404 0028 FFF7FEFF 		bl	Error_Handler
 405              	.LVL11:
 406              	.L23:
 407              		.align	2
 408              	.L22:
 409 002c 00000000 		.word	hi2c1
 410 0030 00540040 		.word	1073763328
 411 0034 A0860100 		.word	100000
 412              		.cfi_endproc
 413              	.LFE70:
 415              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 416              		.align	1
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 421              	MX_USART1_UART_Init:
 422              	.LFB72:
 261:Core/Src/main.c **** 
 423              		.loc 1 261 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 08B5     		push	{r3, lr}
 428              	.LCFI11:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 3, -8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 18


 431              		.cfi_offset 14, -4
 270:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 432              		.loc 1 270 3 view .LVU102
 270:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 433              		.loc 1 270 19 is_stmt 0 view .LVU103
 434 0002 0A48     		ldr	r0, .L28
 435 0004 0A4B     		ldr	r3, .L28+4
 436 0006 0360     		str	r3, [r0]
 271:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 437              		.loc 1 271 3 is_stmt 1 view .LVU104
 271:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 438              		.loc 1 271 24 is_stmt 0 view .LVU105
 439 0008 4FF4E133 		mov	r3, #115200
 440 000c 4360     		str	r3, [r0, #4]
 272:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 441              		.loc 1 272 3 is_stmt 1 view .LVU106
 272:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 442              		.loc 1 272 26 is_stmt 0 view .LVU107
 443 000e 0023     		movs	r3, #0
 444 0010 8360     		str	r3, [r0, #8]
 273:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 445              		.loc 1 273 3 is_stmt 1 view .LVU108
 273:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 446              		.loc 1 273 24 is_stmt 0 view .LVU109
 447 0012 C360     		str	r3, [r0, #12]
 274:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 448              		.loc 1 274 3 is_stmt 1 view .LVU110
 274:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 449              		.loc 1 274 22 is_stmt 0 view .LVU111
 450 0014 0361     		str	r3, [r0, #16]
 275:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 451              		.loc 1 275 3 is_stmt 1 view .LVU112
 275:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 452              		.loc 1 275 20 is_stmt 0 view .LVU113
 453 0016 0C22     		movs	r2, #12
 454 0018 4261     		str	r2, [r0, #20]
 276:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 455              		.loc 1 276 3 is_stmt 1 view .LVU114
 276:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 456              		.loc 1 276 25 is_stmt 0 view .LVU115
 457 001a 8361     		str	r3, [r0, #24]
 277:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 458              		.loc 1 277 3 is_stmt 1 view .LVU116
 277:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 459              		.loc 1 277 28 is_stmt 0 view .LVU117
 460 001c C361     		str	r3, [r0, #28]
 278:Core/Src/main.c ****   {
 461              		.loc 1 278 3 is_stmt 1 view .LVU118
 278:Core/Src/main.c ****   {
 462              		.loc 1 278 7 is_stmt 0 view .LVU119
 463 001e FFF7FEFF 		bl	HAL_UART_Init
 464              	.LVL12:
 278:Core/Src/main.c ****   {
 465              		.loc 1 278 6 discriminator 1 view .LVU120
 466 0022 00B9     		cbnz	r0, .L27
 286:Core/Src/main.c **** 
 467              		.loc 1 286 1 view .LVU121
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 19


 468 0024 08BD     		pop	{r3, pc}
 469              	.L27:
 280:Core/Src/main.c ****   }
 470              		.loc 1 280 5 is_stmt 1 view .LVU122
 471 0026 FFF7FEFF 		bl	Error_Handler
 472              	.LVL13:
 473              	.L29:
 474 002a 00BF     		.align	2
 475              	.L28:
 476 002c 00000000 		.word	huart1
 477 0030 00380140 		.word	1073821696
 478              		.cfi_endproc
 479              	.LFE72:
 481              		.section	.text.MX_TIM3_Init,"ax",%progbits
 482              		.align	1
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	MX_TIM3_Init:
 488              	.LFB71:
 208:Core/Src/main.c **** 
 489              		.loc 1 208 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 40
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 00B5     		push	{lr}
 494              	.LCFI12:
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 14, -4
 497 0002 8BB0     		sub	sp, sp, #44
 498              	.LCFI13:
 499              		.cfi_def_cfa_offset 48
 214:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 500              		.loc 1 214 3 view .LVU124
 214:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 501              		.loc 1 214 27 is_stmt 0 view .LVU125
 502 0004 0023     		movs	r3, #0
 503 0006 0893     		str	r3, [sp, #32]
 504 0008 0993     		str	r3, [sp, #36]
 215:Core/Src/main.c **** 
 505              		.loc 1 215 3 is_stmt 1 view .LVU126
 215:Core/Src/main.c **** 
 506              		.loc 1 215 22 is_stmt 0 view .LVU127
 507 000a 0193     		str	r3, [sp, #4]
 508 000c 0293     		str	r3, [sp, #8]
 509 000e 0393     		str	r3, [sp, #12]
 510 0010 0493     		str	r3, [sp, #16]
 511 0012 0593     		str	r3, [sp, #20]
 512 0014 0693     		str	r3, [sp, #24]
 513 0016 0793     		str	r3, [sp, #28]
 220:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 514              		.loc 1 220 3 is_stmt 1 view .LVU128
 220:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 515              		.loc 1 220 18 is_stmt 0 view .LVU129
 516 0018 1A48     		ldr	r0, .L40
 517 001a 1B4A     		ldr	r2, .L40+4
 518 001c 0260     		str	r2, [r0]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 20


 221:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 519              		.loc 1 221 3 is_stmt 1 view .LVU130
 221:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 520              		.loc 1 221 24 is_stmt 0 view .LVU131
 521 001e 4360     		str	r3, [r0, #4]
 222:Core/Src/main.c ****   htim3.Init.Period = 65535;
 522              		.loc 1 222 3 is_stmt 1 view .LVU132
 222:Core/Src/main.c ****   htim3.Init.Period = 65535;
 523              		.loc 1 222 26 is_stmt 0 view .LVU133
 524 0020 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 525              		.loc 1 223 3 is_stmt 1 view .LVU134
 223:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 526              		.loc 1 223 21 is_stmt 0 view .LVU135
 527 0022 4FF6FF72 		movw	r2, #65535
 528 0026 C260     		str	r2, [r0, #12]
 224:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 529              		.loc 1 224 3 is_stmt 1 view .LVU136
 224:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 530              		.loc 1 224 28 is_stmt 0 view .LVU137
 531 0028 0361     		str	r3, [r0, #16]
 225:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 532              		.loc 1 225 3 is_stmt 1 view .LVU138
 225:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 533              		.loc 1 225 32 is_stmt 0 view .LVU139
 534 002a 8361     		str	r3, [r0, #24]
 226:Core/Src/main.c ****   {
 535              		.loc 1 226 3 is_stmt 1 view .LVU140
 226:Core/Src/main.c ****   {
 536              		.loc 1 226 7 is_stmt 0 view .LVU141
 537 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 538              	.LVL14:
 226:Core/Src/main.c ****   {
 539              		.loc 1 226 6 discriminator 1 view .LVU142
 540 0030 F8B9     		cbnz	r0, .L36
 230:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 541              		.loc 1 230 3 is_stmt 1 view .LVU143
 230:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542              		.loc 1 230 37 is_stmt 0 view .LVU144
 543 0032 0023     		movs	r3, #0
 544 0034 0893     		str	r3, [sp, #32]
 231:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 545              		.loc 1 231 3 is_stmt 1 view .LVU145
 231:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 546              		.loc 1 231 33 is_stmt 0 view .LVU146
 547 0036 0993     		str	r3, [sp, #36]
 232:Core/Src/main.c ****   {
 548              		.loc 1 232 3 is_stmt 1 view .LVU147
 232:Core/Src/main.c ****   {
 549              		.loc 1 232 7 is_stmt 0 view .LVU148
 550 0038 08A9     		add	r1, sp, #32
 551 003a 1248     		ldr	r0, .L40
 552 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 553              	.LVL15:
 232:Core/Src/main.c ****   {
 554              		.loc 1 232 6 discriminator 1 view .LVU149
 555 0040 C8B9     		cbnz	r0, .L37
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 21


 236:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 556              		.loc 1 236 3 is_stmt 1 view .LVU150
 236:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 557              		.loc 1 236 20 is_stmt 0 view .LVU151
 558 0042 6023     		movs	r3, #96
 559 0044 0193     		str	r3, [sp, #4]
 237:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 560              		.loc 1 237 3 is_stmt 1 view .LVU152
 237:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 561              		.loc 1 237 19 is_stmt 0 view .LVU153
 562 0046 0023     		movs	r3, #0
 563 0048 0293     		str	r3, [sp, #8]
 238:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 564              		.loc 1 238 3 is_stmt 1 view .LVU154
 238:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 565              		.loc 1 238 24 is_stmt 0 view .LVU155
 566 004a 0393     		str	r3, [sp, #12]
 239:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 567              		.loc 1 239 3 is_stmt 1 view .LVU156
 239:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 568              		.loc 1 239 24 is_stmt 0 view .LVU157
 569 004c 0593     		str	r3, [sp, #20]
 240:Core/Src/main.c ****   {
 570              		.loc 1 240 3 is_stmt 1 view .LVU158
 240:Core/Src/main.c ****   {
 571              		.loc 1 240 7 is_stmt 0 view .LVU159
 572 004e 0822     		movs	r2, #8
 573 0050 01A9     		add	r1, sp, #4
 574 0052 0C48     		ldr	r0, .L40
 575 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 576              	.LVL16:
 240:Core/Src/main.c ****   {
 577              		.loc 1 240 6 discriminator 1 view .LVU160
 578 0058 78B9     		cbnz	r0, .L38
 244:Core/Src/main.c ****   {
 579              		.loc 1 244 3 is_stmt 1 view .LVU161
 244:Core/Src/main.c ****   {
 580              		.loc 1 244 7 is_stmt 0 view .LVU162
 581 005a 0C22     		movs	r2, #12
 582 005c 01A9     		add	r1, sp, #4
 583 005e 0948     		ldr	r0, .L40
 584 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 585              	.LVL17:
 244:Core/Src/main.c ****   {
 586              		.loc 1 244 6 discriminator 1 view .LVU163
 587 0064 58B9     		cbnz	r0, .L39
 251:Core/Src/main.c **** 
 588              		.loc 1 251 3 is_stmt 1 view .LVU164
 589 0066 0748     		ldr	r0, .L40
 590 0068 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 591              	.LVL18:
 253:Core/Src/main.c **** 
 592              		.loc 1 253 1 is_stmt 0 view .LVU165
 593 006c 0BB0     		add	sp, sp, #44
 594              	.LCFI14:
 595              		.cfi_remember_state
 596              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 22


 597              		@ sp needed
 598 006e 5DF804FB 		ldr	pc, [sp], #4
 599              	.L36:
 600              	.LCFI15:
 601              		.cfi_restore_state
 228:Core/Src/main.c ****   }
 602              		.loc 1 228 5 is_stmt 1 view .LVU166
 603 0072 FFF7FEFF 		bl	Error_Handler
 604              	.LVL19:
 605              	.L37:
 234:Core/Src/main.c ****   }
 606              		.loc 1 234 5 view .LVU167
 607 0076 FFF7FEFF 		bl	Error_Handler
 608              	.LVL20:
 609              	.L38:
 242:Core/Src/main.c ****   }
 610              		.loc 1 242 5 view .LVU168
 611 007a FFF7FEFF 		bl	Error_Handler
 612              	.LVL21:
 613              	.L39:
 246:Core/Src/main.c ****   }
 614              		.loc 1 246 5 view .LVU169
 615 007e FFF7FEFF 		bl	Error_Handler
 616              	.LVL22:
 617              	.L41:
 618 0082 00BF     		.align	2
 619              	.L40:
 620 0084 00000000 		.word	htim3
 621 0088 00040040 		.word	1073742848
 622              		.cfi_endproc
 623              	.LFE71:
 625              		.section	.text.SystemClock_Config,"ax",%progbits
 626              		.align	1
 627              		.global	SystemClock_Config
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	SystemClock_Config:
 633              	.LFB69:
 137:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 634              		.loc 1 137 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 64
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 00B5     		push	{lr}
 639              	.LCFI16:
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 14, -4
 642 0002 91B0     		sub	sp, sp, #68
 643              	.LCFI17:
 644              		.cfi_def_cfa_offset 72
 138:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 645              		.loc 1 138 3 view .LVU171
 138:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 646              		.loc 1 138 22 is_stmt 0 view .LVU172
 647 0004 2822     		movs	r2, #40
 648 0006 0021     		movs	r1, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 23


 649 0008 06A8     		add	r0, sp, #24
 650 000a FFF7FEFF 		bl	memset
 651              	.LVL23:
 139:Core/Src/main.c **** 
 652              		.loc 1 139 3 is_stmt 1 view .LVU173
 139:Core/Src/main.c **** 
 653              		.loc 1 139 22 is_stmt 0 view .LVU174
 654 000e 0023     		movs	r3, #0
 655 0010 0193     		str	r3, [sp, #4]
 656 0012 0293     		str	r3, [sp, #8]
 657 0014 0393     		str	r3, [sp, #12]
 658 0016 0493     		str	r3, [sp, #16]
 659 0018 0593     		str	r3, [sp, #20]
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 660              		.loc 1 144 3 is_stmt 1 view .LVU175
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 661              		.loc 1 144 36 is_stmt 0 view .LVU176
 662 001a 0223     		movs	r3, #2
 663 001c 0693     		str	r3, [sp, #24]
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 664              		.loc 1 145 3 is_stmt 1 view .LVU177
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 665              		.loc 1 145 30 is_stmt 0 view .LVU178
 666 001e 0123     		movs	r3, #1
 667 0020 0A93     		str	r3, [sp, #40]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 668              		.loc 1 146 3 is_stmt 1 view .LVU179
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 669              		.loc 1 146 41 is_stmt 0 view .LVU180
 670 0022 1023     		movs	r3, #16
 671 0024 0B93     		str	r3, [sp, #44]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 672              		.loc 1 147 3 is_stmt 1 view .LVU181
 148:Core/Src/main.c ****   {
 673              		.loc 1 148 3 view .LVU182
 148:Core/Src/main.c ****   {
 674              		.loc 1 148 7 is_stmt 0 view .LVU183
 675 0026 06A8     		add	r0, sp, #24
 676 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 677              	.LVL24:
 148:Core/Src/main.c ****   {
 678              		.loc 1 148 6 discriminator 1 view .LVU184
 679 002c 68B9     		cbnz	r0, .L46
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 680              		.loc 1 155 3 is_stmt 1 view .LVU185
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 681              		.loc 1 155 31 is_stmt 0 view .LVU186
 682 002e 0F23     		movs	r3, #15
 683 0030 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 684              		.loc 1 157 3 is_stmt 1 view .LVU187
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 685              		.loc 1 157 34 is_stmt 0 view .LVU188
 686 0032 0021     		movs	r1, #0
 687 0034 0291     		str	r1, [sp, #8]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 688              		.loc 1 158 3 is_stmt 1 view .LVU189
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 24


 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 689              		.loc 1 158 35 is_stmt 0 view .LVU190
 690 0036 0391     		str	r1, [sp, #12]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 691              		.loc 1 159 3 is_stmt 1 view .LVU191
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 692              		.loc 1 159 36 is_stmt 0 view .LVU192
 693 0038 0491     		str	r1, [sp, #16]
 160:Core/Src/main.c **** 
 694              		.loc 1 160 3 is_stmt 1 view .LVU193
 160:Core/Src/main.c **** 
 695              		.loc 1 160 36 is_stmt 0 view .LVU194
 696 003a 0591     		str	r1, [sp, #20]
 162:Core/Src/main.c ****   {
 697              		.loc 1 162 3 is_stmt 1 view .LVU195
 162:Core/Src/main.c ****   {
 698              		.loc 1 162 7 is_stmt 0 view .LVU196
 699 003c 01A8     		add	r0, sp, #4
 700 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 701              	.LVL25:
 162:Core/Src/main.c ****   {
 702              		.loc 1 162 6 discriminator 1 view .LVU197
 703 0042 20B9     		cbnz	r0, .L47
 166:Core/Src/main.c **** 
 704              		.loc 1 166 1 view .LVU198
 705 0044 11B0     		add	sp, sp, #68
 706              	.LCFI18:
 707              		.cfi_remember_state
 708              		.cfi_def_cfa_offset 4
 709              		@ sp needed
 710 0046 5DF804FB 		ldr	pc, [sp], #4
 711              	.L46:
 712              	.LCFI19:
 713              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 714              		.loc 1 150 5 is_stmt 1 view .LVU199
 715 004a FFF7FEFF 		bl	Error_Handler
 716              	.LVL26:
 717              	.L47:
 164:Core/Src/main.c ****   }
 718              		.loc 1 164 5 view .LVU200
 719 004e FFF7FEFF 		bl	Error_Handler
 720              	.LVL27:
 721              		.cfi_endproc
 722              	.LFE69:
 724              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 725              		.align	2
 726              	.LC0:
 727 0000 257500   		.ascii	"%u\000"
 728              		.section	.text.main,"ax",%progbits
 729              		.align	1
 730              		.global	main
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	main:
 736              	.LFB68:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 25


  80:Core/Src/main.c **** 
 737              		.loc 1 80 1 view -0
 738              		.cfi_startproc
 739              		@ Volatile: function does not return.
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 00B5     		push	{lr}
 743              	.LCFI20:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 14, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              	.LCFI21:
 748              		.cfi_def_cfa_offset 16
  89:Core/Src/main.c **** 
 749              		.loc 1 89 3 view .LVU202
 750 0004 FFF7FEFF 		bl	HAL_Init
 751              	.LVL28:
  96:Core/Src/main.c **** 
 752              		.loc 1 96 3 view .LVU203
 753 0008 FFF7FEFF 		bl	SystemClock_Config
 754              	.LVL29:
 103:Core/Src/main.c ****   MX_I2C1_Init();
 755              		.loc 1 103 3 view .LVU204
 756 000c FFF7FEFF 		bl	MX_GPIO_Init
 757              	.LVL30:
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 758              		.loc 1 104 3 view .LVU205
 759 0010 FFF7FEFF 		bl	MX_I2C1_Init
 760              	.LVL31:
 105:Core/Src/main.c ****   MX_TIM3_Init();
 761              		.loc 1 105 3 view .LVU206
 762 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 763              	.LVL32:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 764              		.loc 1 106 3 view .LVU207
 765 0018 FFF7FEFF 		bl	MX_TIM3_Init
 766              	.LVL33:
 767              	.L49:
 113:Core/Src/main.c ****   {
 768              		.loc 1 113 3 view .LVU208
 769              	.LBB10:
 118:Core/Src/main.c ****     //printf("Calling AS5600...\n");
 770              		.loc 1 118 5 view .LVU209
 771 001c 4FF40051 		mov	r1, #8192
 772 0020 0A48     		ldr	r0, .L51
 773 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 774              	.LVL34:
 120:Core/Src/main.c **** 
 775              		.loc 1 120 5 view .LVU210
 120:Core/Src/main.c **** 
 776              		.loc 1 120 17 is_stmt 0 view .LVU211
 777 0026 FFF7FEFF 		bl	AS5600_ReadRawAngle
 778              	.LVL35:
 779 002a 0246     		mov	r2, r0
 120:Core/Src/main.c **** 
 780              		.loc 1 120 15 discriminator 1 view .LVU212
 781 002c 084B     		ldr	r3, .L51+4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 26


 782 002e 1880     		strh	r0, [r3]	@ movhi
 122:Core/Src/main.c ****     sprintf(str, "%u", raw_angle); // Format the number as an unsigned decimal
 783              		.loc 1 122 5 is_stmt 1 view .LVU213
 123:Core/Src/main.c ****     printf(str);
 784              		.loc 1 123 5 view .LVU214
 785 0030 0849     		ldr	r1, .L51+8
 786 0032 6846     		mov	r0, sp
 787 0034 FFF7FEFF 		bl	sprintf
 788              	.LVL36:
 124:Core/Src/main.c ****     printf("\n");
 789              		.loc 1 124 5 view .LVU215
 790 0038 6846     		mov	r0, sp
 791 003a FFF7FEFF 		bl	printf
 792              	.LVL37:
 125:Core/Src/main.c ****     HAL_Delay(100); // 1 second delay between readings
 793              		.loc 1 125 5 view .LVU216
 794 003e 0A20     		movs	r0, #10
 795 0040 FFF7FEFF 		bl	putchar
 796              	.LVL38:
 126:Core/Src/main.c **** 
 797              		.loc 1 126 5 view .LVU217
 798 0044 6420     		movs	r0, #100
 799 0046 FFF7FEFF 		bl	HAL_Delay
 800              	.LVL39:
 801              	.LBE10:
 113:Core/Src/main.c ****   {
 802              		.loc 1 113 9 view .LVU218
 803 004a E7E7     		b	.L49
 804              	.L52:
 805              		.align	2
 806              	.L51:
 807 004c 00100140 		.word	1073811456
 808 0050 00000000 		.word	raw_angle
 809 0054 00000000 		.word	.LC0
 810              		.cfi_endproc
 811              	.LFE68:
 813              		.global	raw_angle
 814              		.section	.bss.raw_angle,"aw",%nobits
 815              		.align	1
 818              	raw_angle:
 819 0000 0000     		.space	2
 820              		.global	huart1
 821              		.section	.bss.huart1,"aw",%nobits
 822              		.align	2
 825              	huart1:
 826 0000 00000000 		.space	72
 826      00000000 
 826      00000000 
 826      00000000 
 826      00000000 
 827              		.global	htim3
 828              		.section	.bss.htim3,"aw",%nobits
 829              		.align	2
 832              	htim3:
 833 0000 00000000 		.space	72
 833      00000000 
 833      00000000 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 27


 833      00000000 
 833      00000000 
 834              		.global	hi2c1
 835              		.section	.bss.hi2c1,"aw",%nobits
 836              		.align	2
 839              	hi2c1:
 840 0000 00000000 		.space	84
 840      00000000 
 840      00000000 
 840      00000000 
 840      00000000 
 841              		.text
 842              	.Letext0:
 843              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 844              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 845              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 846              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 847              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 848              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 849              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 850              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 851              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 852              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 853              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 854              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 855              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 856              		.file 16 "Core/Inc/main.h"
 857              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 858              		.file 18 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 859              		.file 19 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:19     .text.MX_GPIO_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:158    .text.MX_GPIO_Init:00000094 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:165    .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:171    .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:207    .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:825    .bss.huart1:00000000 huart1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:212    .text.AS5600_ReadRawAngle:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:218    .text.AS5600_ReadRawAngle:00000000 AS5600_ReadRawAngle
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:302    .text.AS5600_ReadRawAngle:00000060 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:839    .bss.hi2c1:00000000 hi2c1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:818    .bss.raw_angle:00000000 raw_angle
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:308    .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:314    .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:346    .text.MX_I2C1_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:351    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:409    .text.MX_I2C1_Init:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:416    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:421    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:476    .text.MX_USART1_UART_Init:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:482    .text.MX_TIM3_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:487    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:620    .text.MX_TIM3_Init:00000084 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:832    .bss.htim3:00000000 htim3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:626    .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:632    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:725    .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:729    .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:735    .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:807    .text.main:0000004c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:815    .bss.raw_angle:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:822    .bss.huart1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:829    .bss.htim3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s:836    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_I2C_Mem_Read
HAL_Delay
HAL_I2C_DeInit
HAL_I2C_Init
HAL_UART_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
sprintf
printf
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccypFvXx.s 			page 29


putchar
