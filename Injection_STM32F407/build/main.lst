ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB244:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 0
  44:Core/Src/main.c **** #define JOINT2_HOME 90
  45:Core/Src/main.c **** #define JOINT3_HOME 135
  46:Core/Src/main.c **** #define JOINT4_HOME 0
  47:Core/Src/main.c **** #define JOINT5_HOME 15
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** #define INJECT 1
  50:Core/Src/main.c **** #define STOP 0
  51:Core/Src/main.c **** #define RETRACT 2
  52:Core/Src/main.c **** #define INJECTION_LIMIT 1200
  53:Core/Src/main.c **** #define RETRACTION_LIMIT 3800
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** #define MAIN_UART &huart1
  56:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART1
  57:Core/Src/main.c **** #define JOINT1_UART &huart6
  58:Core/Src/main.c **** #define JOINT1_UART_INSTANCE USART6
  59:Core/Src/main.c **** #define JOINT2_UART &huart2
  60:Core/Src/main.c **** #define JOINT2_UART_INSTANCE USART2
  61:Core/Src/main.c **** #define JOINT3_UART &huart3
  62:Core/Src/main.c **** #define JOINT3_UART_INSTANCE USART3
  63:Core/Src/main.c **** #define JOINT4_UART &huart4
  64:Core/Src/main.c **** #define JOINT4_UART_INSTANCE UART4
  65:Core/Src/main.c **** #define JOINT5_UART &huart5
  66:Core/Src/main.c **** #define JOINT5_UART_INSTANCE UART5
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PD */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN PM */
  73:Core/Src/main.c **** #define DEBUG
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** #ifdef DEBUG
  76:Core/Src/main.c ****   #define DEBUG_PRINT(x) Serial.print(x)
  77:Core/Src/main.c ****   #define DEBUG_PRINTLN(x) Serial.println(x)
  78:Core/Src/main.c ****   #define DEBUG_DELAY(x) delay(x)
  79:Core/Src/main.c **** #else
  80:Core/Src/main.c ****   #define DEBUG_PRINT(x)
  81:Core/Src/main.c ****   #define DEBUG_PRINTLN(x)
  82:Core/Src/main.c ****   #define DEBUG_DELAY(x)
  83:Core/Src/main.c **** #endif
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PM */
  86:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 3


  87:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE BEGIN PV */
  90:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  91:Core/Src/main.c **** volatile uint8_t rx_byte;                         // Main UART
  92:Core/Src/main.c **** volatile uint8_t rx_byte1;                        // Joint 1
  93:Core/Src/main.c **** volatile uint8_t rx_byte2;                        // Joint 2
  94:Core/Src/main.c **** volatile uint8_t rx_byte3;                        // Joint 3
  95:Core/Src/main.c **** volatile uint8_t rx_byte4;                        // Joint 4
  96:Core/Src/main.c **** volatile uint8_t rx_byte5;                        // Joint 5
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  99:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
 102:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
 103:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** int joint1 = JOINT1_HOME;
 106:Core/Src/main.c **** int joint2 = JOINT2_HOME;
 107:Core/Src/main.c **** int joint3 = JOINT3_HOME;
 108:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
 109:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
 110:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
 111:Core/Src/main.c **** int ledFlag = 0; 
 112:Core/Src/main.c **** int injectFlag = RETRACT; 
 113:Core/Src/main.c **** volatile uint8_t buttonState = 0; // Global variable to track the button state
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /* USER CODE END PV */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 122:Core/Src/main.c **** void SystemClock_Config(void);
 123:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 124:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART2 int __io_putchar_usart2(int ch)
 127:Core/Src/main.c **** #define printf_joint2(...) do { \
 128:Core/Src/main.c ****     char buffer[256]; \
 129:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 130:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 131:Core/Src/main.c ****         __io_putchar_usart2(buffer[i]); \
 132:Core/Src/main.c ****     } \
 133:Core/Src/main.c **** } while (0)
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
 136:Core/Src/main.c **** #define printf_joint3(...) do { \
 137:Core/Src/main.c ****     char buffer[256]; \
 138:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 139:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 140:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
 141:Core/Src/main.c ****     } \
 142:Core/Src/main.c **** } while (0)
 143:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 4


 144:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART4 int __io_putchar_uart4(int ch)
 145:Core/Src/main.c **** #define printf_joint4(...) do { \
 146:Core/Src/main.c ****     char buffer[256]; \
 147:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 148:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 149:Core/Src/main.c ****         __io_putchar_uart4(buffer[i]); \
 150:Core/Src/main.c ****     } \
 151:Core/Src/main.c **** } while (0)
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART5 int __io_putchar_uart5(int ch)
 154:Core/Src/main.c **** #define printf_joint5(...) do { \
 155:Core/Src/main.c ****     char buffer[256]; \
 156:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 157:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 158:Core/Src/main.c ****         __io_putchar_uart5(buffer[i]); \
 159:Core/Src/main.c ****     } \
 160:Core/Src/main.c **** } while (0)
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
 163:Core/Src/main.c **** #define printf_joint1(...) do { \
 164:Core/Src/main.c ****     char buffer[256]; \
 165:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 166:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 167:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 168:Core/Src/main.c ****     } \
 169:Core/Src/main.c **** } while (0)
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** void Joint1Set(int theta);
 172:Core/Src/main.c **** void Joint2Set(int theta);
 173:Core/Src/main.c **** void Joint3Set(int theta);
 174:Core/Src/main.c **** void Joint4Set(int theta);
 175:Core/Src/main.c **** void Joint5Set(int theta);
 176:Core/Src/main.c **** void ActuatorSet(int theta);
 177:Core/Src/main.c **** int ActuatorStatus();
 178:Core/Src/main.c **** void homeSet(); 
 179:Core/Src/main.c **** uint16_t Read_ADC_PA0();
 180:Core/Src/main.c **** void inject(int direction);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END PFP */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 185:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /* USER CODE END 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief  The application entry point.
 191:Core/Src/main.c ****   * @retval int
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** int main(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END 1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 5


 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 203:Core/Src/main.c ****   HAL_Init();
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END Init */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Configure the system clock */
 210:Core/Src/main.c ****   SystemClock_Config();
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END SysInit */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* Initialize all configured peripherals */
 217:Core/Src/main.c ****   MX_GPIO_Init();
 218:Core/Src/main.c ****   MX_ADC1_Init();
 219:Core/Src/main.c ****   MX_I2C1_Init();
 220:Core/Src/main.c ****   MX_TIM1_Init();
 221:Core/Src/main.c ****   MX_TIM2_Init();
 222:Core/Src/main.c ****   MX_UART4_Init();
 223:Core/Src/main.c ****   MX_UART5_Init();
 224:Core/Src/main.c ****   MX_USART1_UART_Init();
 225:Core/Src/main.c ****   MX_USART2_UART_Init();
 226:Core/Src/main.c ****   MX_USART3_UART_Init();
 227:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 228:Core/Src/main.c ****   MX_TIM4_Init();
 229:Core/Src/main.c ****   MX_TIM3_Init();
 230:Core/Src/main.c ****   MX_USART6_UART_Init();
 231:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 232:Core/Src/main.c ****   
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   printf("System Initialized\r\n");
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1); // Start PWM on PD12
 237:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);  // 50% duty cycle on PD12
 240:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   HomeSet();
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 245:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 246:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 247:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 248:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 249:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END 2 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* Infinite loop */
 255:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 256:Core/Src/main.c ****   while (1)
 257:Core/Src/main.c ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 6


 258:Core/Src/main.c ****     /* USER CODE END WHILE */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****     // Joint4 Button
 263:Core/Src/main.c ****     if(buttonState){
 264:Core/Src/main.c ****       Joint4Set(28);
 265:Core/Src/main.c ****       buttonState = 0; 
 266:Core/Src/main.c ****     }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     // Actuator Test 
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****     
 272:Core/Src/main.c ****     
 273:Core/Src/main.c ****     uint16_t adcValue = Read_ADC_PA0();
 274:Core/Src/main.c ****     HAL_Delay(1);
 275:Core/Src/main.c ****     if(injectFlag == RETRACT){
 276:Core/Src/main.c ****       if(adcValue>=RETRACTION_LIMIT){
 277:Core/Src/main.c ****         inject(STOP);
 278:Core/Src/main.c ****         injectFlag = STOP; 
 279:Core/Src/main.c ****       } 
 280:Core/Src/main.c ****     }
 281:Core/Src/main.c ****     else if(injectFlag == INJECT){
 282:Core/Src/main.c ****       if(adcValue<INJECTION_LIMIT){
 283:Core/Src/main.c ****         inject(STOP);
 284:Core/Src/main.c ****         injectFlag = STOP; 
 285:Core/Src/main.c ****       }
 286:Core/Src/main.c ****     } 
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   /* USER CODE END 3 */
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief System Clock Configuration
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** void SystemClock_Config(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 300:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 305:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 308:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 311:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 7


 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 318:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 326:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 327:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 328:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** /**
 341:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 342:Core/Src/main.c ****   * @retval None
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 345:Core/Src/main.c ****  {
  30              		.loc 1 345 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 345 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 346:Core/Src/main.c ****    /* Place your implementation of fputc here */
 347:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 348:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 348 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 348 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 349:Core/Src/main.c ****  
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 8


 350:Core/Src/main.c ****    return ch;
  52              		.loc 1 350 4 is_stmt 1 view .LVU4
 351:Core/Src/main.c ****  }
  53              		.loc 1 351 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE244:
  67              		.section	.text.__io_putchar_usart2,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart2
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart2:
  75              	.LVL3:
  76              	.LFB245:
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART2{
  77              		.loc 1 353 26 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 353 26 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 354:Core/Src/main.c ****     HAL_UART_Transmit(JOINT2_UART, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 354 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 354 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****       return ch;
  99              		.loc 1 356 7 is_stmt 1 view .LVU10
 357:Core/Src/main.c ****  }
 100              		.loc 1 357 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 9


 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart2
 111              		.cfi_endproc
 112              	.LFE245:
 114              		.section	.text.__io_putchar_usart3,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart3:
 122              	.LVL6:
 123              	.LFB246:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 360:Core/Src/main.c ****  {
 124              		.loc 1 360 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 360 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 361:Core/Src/main.c ****     /* Place your implementation of fputc here */
 362:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 363:Core/Src/main.c ****     HAL_UART_Transmit(JOINT3_UART, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 363 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 363 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****     return ch;
 146              		.loc 1 365 5 is_stmt 1 view .LVU16
 366:Core/Src/main.c ****  }
 147              		.loc 1 366 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 10


 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 001c 00000000 		.word	huart3
 158              		.cfi_endproc
 159              	.LFE246:
 161              		.section	.text.__io_putchar_uart4,"ax",%progbits
 162              		.align	1
 163              		.global	__io_putchar_uart4
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	__io_putchar_uart4:
 169              	.LVL9:
 170              	.LFB247:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART4
 369:Core/Src/main.c ****  {
 171              		.loc 1 369 2 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 369 2 is_stmt 0 view .LVU19
 176 0000 00B5     		push	{lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              	.LCFI10:
 182              		.cfi_def_cfa_offset 16
 183 0004 0190     		str	r0, [sp, #4]
 370:Core/Src/main.c ****     /* Place your implementation of fputc here */
 371:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 372:Core/Src/main.c ****     HAL_UART_Transmit(JOINT4_UART, (uint8_t *)&ch, 1, 0xFFFF);
 184              		.loc 1 372 5 is_stmt 1 view .LVU20
 185 0006 4FF6FF73 		movw	r3, #65535
 186 000a 0122     		movs	r2, #1
 187 000c 01A9     		add	r1, sp, #4
 188 000e 0348     		ldr	r0, .L15
 189              	.LVL10:
 190              		.loc 1 372 5 is_stmt 0 view .LVU21
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 192              	.LVL11:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****     return ch;
 193              		.loc 1 374 5 is_stmt 1 view .LVU22
 375:Core/Src/main.c ****  }
 194              		.loc 1 375 2 is_stmt 0 view .LVU23
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 11


 203              	.L15:
 204 001c 00000000 		.word	huart4
 205              		.cfi_endproc
 206              	.LFE247:
 208              		.section	.text.__io_putchar_uart5,"ax",%progbits
 209              		.align	1
 210              		.global	__io_putchar_uart5
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	__io_putchar_uart5:
 216              	.LVL12:
 217              	.LFB248:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART5
 378:Core/Src/main.c ****  {
 218              		.loc 1 378 2 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 378 2 is_stmt 0 view .LVU25
 223 0000 00B5     		push	{lr}
 224              	.LCFI12:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI13:
 229              		.cfi_def_cfa_offset 16
 230 0004 0190     		str	r0, [sp, #4]
 379:Core/Src/main.c ****     /* Place your implementation of fputc here */
 380:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 381:Core/Src/main.c ****     HAL_UART_Transmit(JOINT5_UART, (uint8_t *)&ch, 1, 0xFFFF);
 231              		.loc 1 381 5 is_stmt 1 view .LVU26
 232 0006 4FF6FF73 		movw	r3, #65535
 233 000a 0122     		movs	r2, #1
 234 000c 01A9     		add	r1, sp, #4
 235 000e 0348     		ldr	r0, .L19
 236              	.LVL13:
 237              		.loc 1 381 5 is_stmt 0 view .LVU27
 238 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 239              	.LVL14:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****     return ch;
 240              		.loc 1 383 5 is_stmt 1 view .LVU28
 384:Core/Src/main.c ****  }
 241              		.loc 1 384 2 is_stmt 0 view .LVU29
 242 0014 0198     		ldr	r0, [sp, #4]
 243 0016 03B0     		add	sp, sp, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0018 5DF804FB 		ldr	pc, [sp], #4
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 001c 00000000 		.word	huart5
 252              		.cfi_endproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 12


 253              	.LFE248:
 255              		.section	.text.__io_putchar_usart6,"ax",%progbits
 256              		.align	1
 257              		.global	__io_putchar_usart6
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	__io_putchar_usart6:
 263              	.LVL15:
 264              	.LFB249:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 387:Core/Src/main.c ****  {
 265              		.loc 1 387 2 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 387 2 is_stmt 0 view .LVU31
 270 0000 00B5     		push	{lr}
 271              	.LCFI15:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 14, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 16
 277 0004 0190     		str	r0, [sp, #4]
 388:Core/Src/main.c ****     /* Place your implementation of fputc here */
 389:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 390:Core/Src/main.c ****     HAL_UART_Transmit(JOINT1_UART, (uint8_t *)&ch, 1, 0xFFFF);
 278              		.loc 1 390 5 is_stmt 1 view .LVU32
 279 0006 4FF6FF73 		movw	r3, #65535
 280 000a 0122     		movs	r2, #1
 281 000c 01A9     		add	r1, sp, #4
 282 000e 0348     		ldr	r0, .L23
 283              	.LVL16:
 284              		.loc 1 390 5 is_stmt 0 view .LVU33
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL17:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****     return ch;
 287              		.loc 1 392 5 is_stmt 1 view .LVU34
 393:Core/Src/main.c ****  }
 288              		.loc 1 393 2 is_stmt 0 view .LVU35
 289 0014 0198     		ldr	r0, [sp, #4]
 290 0016 03B0     		add	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 4
 293              		@ sp needed
 294 0018 5DF804FB 		ldr	pc, [sp], #4
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 001c 00000000 		.word	huart6
 299              		.cfi_endproc
 300              	.LFE249:
 302              		.section	.text.ProcessReceivedJoint,"ax",%progbits
 303              		.align	1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 13


 304              		.global	ProcessReceivedJoint
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	ProcessReceivedJoint:
 310              	.LVL18:
 311              	.LFB252:
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 396:Core/Src/main.c **** {
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****     {
 401:Core/Src/main.c ****         // Store received byte in buffer
 402:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 403:Core/Src/main.c ****         {
 404:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****             // Check for newline or carriage return
 407:Core/Src/main.c ****             if (rx_byte == '\n') 
 408:Core/Src/main.c ****             {
 409:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 410:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 413:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****                 ProcessReceivedString(received_string);
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****                 
 418:Core/Src/main.c ****             }
 419:Core/Src/main.c ****         }
 420:Core/Src/main.c ****         else 
 421:Core/Src/main.c ****         {
 422:Core/Src/main.c ****             // Buffer overflow, reset index
 423:Core/Src/main.c ****             buffer_index = 0;
 424:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 425:Core/Src/main.c ****         }
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****         // Restart UART reception for the next byte
 428:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 429:Core/Src/main.c ****     }
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****     else if(huart -> Instance == JOINT1_UART_INSTANCE){
 432:Core/Src/main.c ****         // Store received byte in buffer
 433:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 434:Core/Src/main.c ****         {
 435:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte1;
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****             // Check for newline or carriage return
 438:Core/Src/main.c ****             if (rx_byte1 == '\n') 
 439:Core/Src/main.c ****             {
 440:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 441:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 14


 444:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 447:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 448:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 449:Core/Src/main.c ****                 }
 450:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 451:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 452:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 453:Core/Src/main.c ****                 }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****                 
 456:Core/Src/main.c ****             }
 457:Core/Src/main.c ****         }
 458:Core/Src/main.c ****         else 
 459:Core/Src/main.c ****         {
 460:Core/Src/main.c ****             // Buffer overflow, reset index
 461:Core/Src/main.c ****             buffer_index = 0;
 462:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 463:Core/Src/main.c ****         }
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****         // Restart UART reception for the next byte
 466:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1);
 467:Core/Src/main.c ****     }
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****     else if(huart -> Instance == JOINT2_UART_INSTANCE){
 470:Core/Src/main.c ****         // Store received byte in buffer
 471:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 472:Core/Src/main.c ****         {
 473:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte2;
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****             // Check for newline or carriage return
 476:Core/Src/main.c ****             if (rx_byte2 == '\n') 
 477:Core/Src/main.c ****             {
 478:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 479:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 482:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 485:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 486:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 487:Core/Src/main.c ****                 }
 488:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 489:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 490:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 491:Core/Src/main.c ****                 }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****                 
 494:Core/Src/main.c ****             }
 495:Core/Src/main.c ****         }
 496:Core/Src/main.c ****         else 
 497:Core/Src/main.c ****         {
 498:Core/Src/main.c ****             // Buffer overflow
 499:Core/Src/main.c ****             buffer_index = 0;
 500:Core/Src/main.c ****             printf("Buffer overflow\r\n");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 15


 501:Core/Src/main.c ****         }
 502:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1);
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****       }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****       else if(huart -> Instance == JOINT3_UART_INSTANCE){
 507:Core/Src/main.c ****         // Store received byte in buffer
 508:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 509:Core/Src/main.c ****         {
 510:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte3;
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****             // Check for newline or carriage return
 513:Core/Src/main.c ****             if (rx_byte3 == '\n') 
 514:Core/Src/main.c ****             {
 515:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 516:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 519:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 522:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 523:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 524:Core/Src/main.c ****                 }
 525:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 526:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 527:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 528:Core/Src/main.c ****                 }
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****                 
 531:Core/Src/main.c ****             }
 532:Core/Src/main.c ****         }
 533:Core/Src/main.c ****         else 
 534:Core/Src/main.c ****         {
 535:Core/Src/main.c ****             // Buffer overflow
 536:Core/Src/main.c ****             buffer_index = 0;
 537:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 538:Core/Src/main.c ****         }
 539:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1);
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****       }
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****       else if(huart -> Instance == JOINT4_UART_INSTANCE){
 544:Core/Src/main.c ****         // Store received byte in buffer
 545:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 546:Core/Src/main.c ****         {
 547:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte4;
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****             // Check for newline or carriage return
 550:Core/Src/main.c ****             if (rx_byte4 == '\n') 
 551:Core/Src/main.c ****             {
 552:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 553:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 556:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 557:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 16


 558:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 559:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 560:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 561:Core/Src/main.c ****                 }
 562:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 563:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 564:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 565:Core/Src/main.c ****                 }
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****                 
 568:Core/Src/main.c ****             }
 569:Core/Src/main.c ****         }
 570:Core/Src/main.c ****         else 
 571:Core/Src/main.c ****         {
 572:Core/Src/main.c ****             // Buffer overflow
 573:Core/Src/main.c ****             buffer_index = 0;
 574:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 575:Core/Src/main.c ****         }
 576:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1);
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****       }
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****       else if(huart -> Instance == JOINT5_UART_INSTANCE){
 581:Core/Src/main.c ****         // Store received byte in buffer
 582:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 583:Core/Src/main.c ****         {
 584:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte5;
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****             // Check for newline or carriage return
 587:Core/Src/main.c ****             if (rx_byte5 == '\n') 
 588:Core/Src/main.c ****             {
 589:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 590:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 593:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 596:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 597:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 598:Core/Src/main.c ****                 }
 599:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 600:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 601:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 602:Core/Src/main.c ****                 }
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****                 
 605:Core/Src/main.c ****             }
 606:Core/Src/main.c ****         }
 607:Core/Src/main.c ****         else 
 608:Core/Src/main.c ****         {
 609:Core/Src/main.c ****             // Buffer overflow
 610:Core/Src/main.c ****             buffer_index = 0;
 611:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 612:Core/Src/main.c ****         }
 613:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1);
 614:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 17


 615:Core/Src/main.c ****       }
 616:Core/Src/main.c **** 
 617:Core/Src/main.c **** }
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****  
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****  
 624:Core/Src/main.c **** 
 625:Core/Src/main.c **** // Function to process the received string
 626:Core/Src/main.c **** void ProcessReceivedString(char *str)
 627:Core/Src/main.c **** {
 628:Core/Src/main.c ****     // Check if the string starts with "set"
 629:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 630:Core/Src/main.c ****     {
 631:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 632:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 635:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 636:Core/Src/main.c ****         {
 637:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 638:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 641:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 642:Core/Src/main.c ****                 // send to joint
 643:Core/Src/main.c ****                 prev_joint1 = joint1;
 644:Core/Src/main.c ****                 Joint1Set(joint1);
 645:Core/Src/main.c ****             }
 646:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 647:Core/Src/main.c ****                 // send to joint
 648:Core/Src/main.c ****                 prev_joint2 = joint2;
 649:Core/Src/main.c ****                 Joint2Set(joint2);
 650:Core/Src/main.c ****             }
 651:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 652:Core/Src/main.c ****                 // send to joint
 653:Core/Src/main.c ****                 prev_joint3 = joint3;
 654:Core/Src/main.c ****                 Joint3Set(joint3);
 655:Core/Src/main.c ****             }
 656:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 657:Core/Src/main.c ****                 // send to joint
 658:Core/Src/main.c ****                 prev_joint4 = joint4;
 659:Core/Src/main.c ****             }
 660:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 661:Core/Src/main.c ****                 // send to joint
 662:Core/Src/main.c ****                 prev_joint5 = joint5;
 663:Core/Src/main.c ****             }
 664:Core/Src/main.c ****             if (actuator != prev_actuator) {
 665:Core/Src/main.c ****                 // send to actuator
 666:Core/Src/main.c ****                 prev_actuator = actuator;
 667:Core/Src/main.c ****             }
 668:Core/Src/main.c ****         }
 669:Core/Src/main.c ****         else
 670:Core/Src/main.c ****         {
 671:Core/Src/main.c ****             printf("Invalid format!\r\n");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 18


 672:Core/Src/main.c ****         }
 673:Core/Src/main.c ****     }
 674:Core/Src/main.c ****     // Just setting joint1 
 675:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 676:Core/Src/main.c ****     {
 677:Core/Src/main.c ****         str += 7;
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 680:Core/Src/main.c ****         {
 681:Core/Src/main.c ****             // Successfully parsed joint1
 682:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****             //if (joint1 != prev_joint1) {
 685:Core/Src/main.c ****                 Joint1Set(joint1);
 686:Core/Src/main.c ****                 prev_joint1 = joint1;
 687:Core/Src/main.c ****             //}
 688:Core/Src/main.c ****         }
 689:Core/Src/main.c ****         else
 690:Core/Src/main.c ****         {
 691:Core/Src/main.c ****             printf("Invalid format!\r\n");
 692:Core/Src/main.c ****         }
 693:Core/Src/main.c ****     }
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****     // Just setting joint2
 696:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 697:Core/Src/main.c ****     {
 698:Core/Src/main.c ****         str += 7;
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 701:Core/Src/main.c ****         {
 702:Core/Src/main.c ****             // Successfully parsed joint2
 703:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****             //if (joint2 != prev_joint2) {
 706:Core/Src/main.c ****                 Joint2Set(joint2);
 707:Core/Src/main.c ****                 prev_joint2 = joint2;
 708:Core/Src/main.c ****             //}
 709:Core/Src/main.c ****         }
 710:Core/Src/main.c ****         else
 711:Core/Src/main.c ****         {
 712:Core/Src/main.c ****             printf("Invalid format!\r\n");
 713:Core/Src/main.c ****         }
 714:Core/Src/main.c ****     }
 715:Core/Src/main.c **** 
 716:Core/Src/main.c ****     // Just setting joint3
 717:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 718:Core/Src/main.c ****     {
 719:Core/Src/main.c ****         str += 7;
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 722:Core/Src/main.c ****         {
 723:Core/Src/main.c ****             // Successfully parsed joint3
 724:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****             //if (joint3 != prev_joint3) {
 727:Core/Src/main.c ****                 Joint3Set(joint3);
 728:Core/Src/main.c ****                 prev_joint3 = joint3;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 19


 729:Core/Src/main.c ****             //}
 730:Core/Src/main.c ****         }
 731:Core/Src/main.c ****         else
 732:Core/Src/main.c ****         {
 733:Core/Src/main.c ****             printf("Invalid format!\r\n");
 734:Core/Src/main.c ****         }
 735:Core/Src/main.c ****     }
 736:Core/Src/main.c **** 
 737:Core/Src/main.c ****     // Just setting joint4
 738:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 739:Core/Src/main.c ****     {
 740:Core/Src/main.c ****         str += 7;
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 743:Core/Src/main.c ****         {
 744:Core/Src/main.c ****             // Successfully parsed joint4
 745:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 746:Core/Src/main.c **** 
 747:Core/Src/main.c ****             //if (joint4 != prev_joint4) {
 748:Core/Src/main.c ****                 Joint4Set(joint4);
 749:Core/Src/main.c ****                 prev_joint4 = joint4;
 750:Core/Src/main.c ****             //}
 751:Core/Src/main.c ****         }
 752:Core/Src/main.c ****         else
 753:Core/Src/main.c ****         {
 754:Core/Src/main.c ****             printf("Invalid format!\r\n");
 755:Core/Src/main.c ****         }
 756:Core/Src/main.c ****     }
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****     // Just setting joint5
 759:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 760:Core/Src/main.c ****     {
 761:Core/Src/main.c ****         str += 7;
 762:Core/Src/main.c **** 
 763:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 764:Core/Src/main.c ****         {
 765:Core/Src/main.c ****             // Successfully parsed joint5
 766:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 767:Core/Src/main.c **** 
 768:Core/Src/main.c ****             //if (joint5 != prev_joint5) {
 769:Core/Src/main.c ****                 Joint5Set(joint5);
 770:Core/Src/main.c ****                 prev_joint5 = joint5;
 771:Core/Src/main.c ****             //}
 772:Core/Src/main.c ****         }
 773:Core/Src/main.c ****         else
 774:Core/Src/main.c ****         {
 775:Core/Src/main.c ****             printf("Invalid format!\r\n");
 776:Core/Src/main.c ****         }
 777:Core/Src/main.c ****     }
 778:Core/Src/main.c **** 
 779:Core/Src/main.c ****     // Just setting actuator
 780:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 781:Core/Src/main.c ****     {
 782:Core/Src/main.c ****         str += 9;
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 785:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 20


 786:Core/Src/main.c ****             // Successfully parsed joint5
 787:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****             //if (actuator != actuator) {
 790:Core/Src/main.c ****                 ActuatorSet(actuator);
 791:Core/Src/main.c ****                 prev_actuator = actuator;
 792:Core/Src/main.c ****             //}
 793:Core/Src/main.c ****         }
 794:Core/Src/main.c ****         else
 795:Core/Src/main.c ****         {
 796:Core/Src/main.c ****             printf("Invalid format!\r\n");
 797:Core/Src/main.c ****         }
 798:Core/Src/main.c ****     }
 799:Core/Src/main.c **** 
 800:Core/Src/main.c ****     else if (strncmp(str, "j1read", 6) == 0)
 801:Core/Src/main.c ****     {
 802:Core/Src/main.c ****         printf_joint1("r\r\n");
 803:Core/Src/main.c ****     }
 804:Core/Src/main.c **** 
 805:Core/Src/main.c ****     else if (strncmp(str, "j2read", 6) == 0)
 806:Core/Src/main.c ****     {
 807:Core/Src/main.c ****         printf_joint2("r\r\n");
 808:Core/Src/main.c ****     }
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****     else if (strncmp(str, "j3read", 6) == 0)
 811:Core/Src/main.c ****     {
 812:Core/Src/main.c ****         printf_joint3("r\r\n");
 813:Core/Src/main.c ****     }
 814:Core/Src/main.c ****       
 815:Core/Src/main.c ****       else if (strncmp(str, "j4read", 6) == 0)
 816:Core/Src/main.c ****       {
 817:Core/Src/main.c ****           printf_joint4("r\r\n");
 818:Core/Src/main.c ****       }
 819:Core/Src/main.c ****   
 820:Core/Src/main.c ****       else if (strncmp(str, "j5read", 6) == 0)
 821:Core/Src/main.c ****       {
 822:Core/Src/main.c ****           printf_joint5("r\r\n");
 823:Core/Src/main.c ****       }
 824:Core/Src/main.c ****   
 825:Core/Src/main.c ****       else if (strncmp(str, "aread", 5) == 0)
 826:Core/Src/main.c ****       {
 827:Core/Src/main.c ****           // Print acutator position or status
 828:Core/Src/main.c ****       }
 829:Core/Src/main.c **** 
 830:Core/Src/main.c **** 
 831:Core/Src/main.c ****     // Set Home 
 832:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 833:Core/Src/main.c ****     {
 834:Core/Src/main.c ****         str += 5;
 835:Core/Src/main.c ****         
 836:Core/Src/main.c ****         HomeSet();
 837:Core/Src/main.c ****         
 838:Core/Src/main.c ****         printf("Set all joints home\r\n");
 839:Core/Src/main.c **** 
 840:Core/Src/main.c ****     }
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 21


 843:Core/Src/main.c ****     {
 844:Core/Src/main.c ****         str += 6;
 845:Core/Src/main.c ****         ledFlag = !ledFlag;
 846:Core/Src/main.c ****         
 847:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 848:Core/Src/main.c **** 
 849:Core/Src/main.c ****     }
 850:Core/Src/main.c **** 
 851:Core/Src/main.c ****     // Prints all joints
 852:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 853:Core/Src/main.c ****     {
 854:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 855:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 856:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 857:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 858:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 859:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 860:Core/Src/main.c ****     }
 861:Core/Src/main.c **** 
 862:Core/Src/main.c ****     else if (strncmp(str, "inject", 6)== 0)
 863:Core/Src/main.c ****     {
 864:Core/Src/main.c ****         injectFlag = INJECT; 
 865:Core/Src/main.c ****         inject(INJECT);
 866:Core/Src/main.c ****         printf("injecting...\r\n");
 867:Core/Src/main.c ****     }
 868:Core/Src/main.c **** 
 869:Core/Src/main.c ****     else if (strncmp(str, "retract", 7)== 0)
 870:Core/Src/main.c ****     {
 871:Core/Src/main.c ****         injectFlag = RETRACT; 
 872:Core/Src/main.c ****         inject(RETRACT);
 873:Core/Src/main.c ****         printf("retracting...\r\n");
 874:Core/Src/main.c ****     }
 875:Core/Src/main.c ****     
 876:Core/Src/main.c ****     else if (strncmp(str, "stop", 4) == 0)
 877:Core/Src/main.c ****     {
 878:Core/Src/main.c ****         injectFlag = STOP; 
 879:Core/Src/main.c ****         inject(STOP);
 880:Core/Src/main.c ****         printf("stopped.\r\n"); 
 881:Core/Src/main.c ****     }
 882:Core/Src/main.c **** 
 883:Core/Src/main.c ****     // Echoes string if no keywords are sent
 884:Core/Src/main.c ****     else
 885:Core/Src/main.c ****     {
 886:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 887:Core/Src/main.c ****     }
 888:Core/Src/main.c **** }
 889:Core/Src/main.c **** 
 890:Core/Src/main.c **** void ProcessReceivedJoint(char *str){
 312              		.loc 1 890 37 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 891:Core/Src/main.c **** 
 892:Core/Src/main.c **** }
 317              		.loc 1 892 1 view .LVU37
 318 0000 7047     		bx	lr
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 22


 319              		.cfi_endproc
 320              	.LFE252:
 322              		.section	.rodata.Joint1Set.str1.4,"aMS",%progbits,1
 323              		.align	2
 324              	.LC0:
 325 0000 25640D0A 		.ascii	"%d\015\012\000"
 325      00
 326              		.section	.text.Joint1Set,"ax",%progbits
 327              		.align	1
 328              		.global	Joint1Set
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	Joint1Set:
 334              	.LVL19:
 335              	.LFB254:
 893:Core/Src/main.c **** void HomeSet(){
 894:Core/Src/main.c ****   //Set all joints to home
 895:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 896:Core/Src/main.c ****   Joint1Set(joint1);
 897:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 898:Core/Src/main.c ****   Joint2Set(joint2);
 899:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 900:Core/Src/main.c ****   Joint3Set(joint3);
 901:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 902:Core/Src/main.c ****   Joint4Set(joint4);
 903:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 904:Core/Src/main.c ****   Joint5Set(joint5);
 905:Core/Src/main.c **** }
 906:Core/Src/main.c **** 
 907:Core/Src/main.c **** void Joint1Set(int theta){
 336              		.loc 1 907 26 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 256
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 907 26 is_stmt 0 view .LVU39
 341 0000 30B5     		push	{r4, r5, lr}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347 0002 C1B0     		sub	sp, sp, #260
 348              	.LCFI19:
 349              		.cfi_def_cfa_offset 272
 350 0004 0346     		mov	r3, r0
 908:Core/Src/main.c ****   printf_joint1("%d\r\n", theta);
 351              		.loc 1 908 3 is_stmt 1 view .LVU40
 352              	.LBB4:
 353              		.loc 1 908 3 view .LVU41
 354              		.loc 1 908 3 view .LVU42
 355 0006 094A     		ldr	r2, .L30
 356 0008 4FF48071 		mov	r1, #256
 357 000c 6846     		mov	r0, sp
 358              	.LVL20:
 359              		.loc 1 908 3 is_stmt 0 view .LVU43
 360 000e FFF7FEFF 		bl	snprintf
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 23


 361              	.LVL21:
 362              		.loc 1 908 3 view .LVU44
 363 0012 0546     		mov	r5, r0
 364              	.LVL22:
 365              		.loc 1 908 3 is_stmt 1 discriminator 1 view .LVU45
 366              	.LBB5:
 367              		.loc 1 908 3 discriminator 1 view .LVU46
 368              		.loc 1 908 3 is_stmt 0 discriminator 1 view .LVU47
 369 0014 0024     		movs	r4, #0
 370              		.loc 1 908 3 view .LVU48
 371 0016 04E0     		b	.L27
 372              	.LVL23:
 373              	.L28:
 374              		.loc 1 908 3 is_stmt 1 discriminator 3 view .LVU49
 375 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 376 001c FFF7FEFF 		bl	__io_putchar_usart6
 377              	.LVL24:
 378              		.loc 1 908 3 discriminator 3 view .LVU50
 379 0020 0134     		adds	r4, r4, #1
 380              	.LVL25:
 381              	.L27:
 382              		.loc 1 908 3 discriminator 2 view .LVU51
 383 0022 AC42     		cmp	r4, r5
 384 0024 F8DB     		blt	.L28
 385              	.LBE5:
 386              	.LBE4:
 909:Core/Src/main.c **** 
 910:Core/Src/main.c **** }
 387              		.loc 1 910 1 is_stmt 0 view .LVU52
 388 0026 41B0     		add	sp, sp, #260
 389              	.LCFI20:
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
 392 0028 30BD     		pop	{r4, r5, pc}
 393              	.LVL26:
 394              	.L31:
 395              		.loc 1 910 1 view .LVU53
 396 002a 00BF     		.align	2
 397              	.L30:
 398 002c 00000000 		.word	.LC0
 399              		.cfi_endproc
 400              	.LFE254:
 402              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 403              		.align	2
 404              	.LC1:
 405 0000 25640A00 		.ascii	"%d\012\000"
 406              		.section	.text.Joint2Set,"ax",%progbits
 407              		.align	1
 408              		.global	Joint2Set
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	Joint2Set:
 414              	.LVL27:
 415              	.LFB255:
 911:Core/Src/main.c **** 
 912:Core/Src/main.c **** void Joint2Set(int theta){
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 24


 416              		.loc 1 912 26 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 256
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 912 26 is_stmt 0 view .LVU55
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 C1B0     		sub	sp, sp, #260
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 272
 430 0004 0346     		mov	r3, r0
 913:Core/Src/main.c ****   printf_joint2("%d\n", theta);
 431              		.loc 1 913 3 is_stmt 1 view .LVU56
 432              	.LBB6:
 433              		.loc 1 913 3 view .LVU57
 434              		.loc 1 913 3 view .LVU58
 435 0006 094A     		ldr	r2, .L36
 436 0008 4FF48071 		mov	r1, #256
 437 000c 6846     		mov	r0, sp
 438              	.LVL28:
 439              		.loc 1 913 3 is_stmt 0 view .LVU59
 440 000e FFF7FEFF 		bl	snprintf
 441              	.LVL29:
 442              		.loc 1 913 3 view .LVU60
 443 0012 0546     		mov	r5, r0
 444              	.LVL30:
 445              		.loc 1 913 3 is_stmt 1 discriminator 1 view .LVU61
 446              	.LBB7:
 447              		.loc 1 913 3 discriminator 1 view .LVU62
 448              		.loc 1 913 3 is_stmt 0 discriminator 1 view .LVU63
 449 0014 0024     		movs	r4, #0
 450              		.loc 1 913 3 view .LVU64
 451 0016 04E0     		b	.L33
 452              	.LVL31:
 453              	.L34:
 454              		.loc 1 913 3 is_stmt 1 discriminator 3 view .LVU65
 455 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 456 001c FFF7FEFF 		bl	__io_putchar_usart2
 457              	.LVL32:
 458              		.loc 1 913 3 discriminator 3 view .LVU66
 459 0020 0134     		adds	r4, r4, #1
 460              	.LVL33:
 461              	.L33:
 462              		.loc 1 913 3 discriminator 2 view .LVU67
 463 0022 AC42     		cmp	r4, r5
 464 0024 F8DB     		blt	.L34
 465              	.LBE7:
 466              	.LBE6:
 914:Core/Src/main.c **** 
 915:Core/Src/main.c **** }
 467              		.loc 1 915 1 is_stmt 0 view .LVU68
 468 0026 41B0     		add	sp, sp, #260
 469              	.LCFI23:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 25


 470              		.cfi_def_cfa_offset 12
 471              		@ sp needed
 472 0028 30BD     		pop	{r4, r5, pc}
 473              	.LVL34:
 474              	.L37:
 475              		.loc 1 915 1 view .LVU69
 476 002a 00BF     		.align	2
 477              	.L36:
 478 002c 00000000 		.word	.LC1
 479              		.cfi_endproc
 480              	.LFE255:
 482              		.section	.text.Joint3Set,"ax",%progbits
 483              		.align	1
 484              		.global	Joint3Set
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	Joint3Set:
 490              	.LVL35:
 491              	.LFB256:
 916:Core/Src/main.c **** 
 917:Core/Src/main.c **** void Joint3Set(int theta){
 492              		.loc 1 917 26 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 256
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 917 26 is_stmt 0 view .LVU71
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 C1B0     		sub	sp, sp, #260
 504              	.LCFI25:
 505              		.cfi_def_cfa_offset 272
 506 0004 0346     		mov	r3, r0
 918:Core/Src/main.c ****   printf_joint3("%d\r\n", theta);
 507              		.loc 1 918 3 is_stmt 1 view .LVU72
 508              	.LBB8:
 509              		.loc 1 918 3 view .LVU73
 510              		.loc 1 918 3 view .LVU74
 511 0006 094A     		ldr	r2, .L42
 512 0008 4FF48071 		mov	r1, #256
 513 000c 6846     		mov	r0, sp
 514              	.LVL36:
 515              		.loc 1 918 3 is_stmt 0 view .LVU75
 516 000e FFF7FEFF 		bl	snprintf
 517              	.LVL37:
 518              		.loc 1 918 3 view .LVU76
 519 0012 0546     		mov	r5, r0
 520              	.LVL38:
 521              		.loc 1 918 3 is_stmt 1 discriminator 1 view .LVU77
 522              	.LBB9:
 523              		.loc 1 918 3 discriminator 1 view .LVU78
 524              		.loc 1 918 3 is_stmt 0 discriminator 1 view .LVU79
 525 0014 0024     		movs	r4, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 26


 526              		.loc 1 918 3 view .LVU80
 527 0016 04E0     		b	.L39
 528              	.LVL39:
 529              	.L40:
 530              		.loc 1 918 3 is_stmt 1 discriminator 3 view .LVU81
 531 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 532 001c FFF7FEFF 		bl	__io_putchar_usart3
 533              	.LVL40:
 534              		.loc 1 918 3 discriminator 3 view .LVU82
 535 0020 0134     		adds	r4, r4, #1
 536              	.LVL41:
 537              	.L39:
 538              		.loc 1 918 3 discriminator 2 view .LVU83
 539 0022 AC42     		cmp	r4, r5
 540 0024 F8DB     		blt	.L40
 541              	.LBE9:
 542              	.LBE8:
 919:Core/Src/main.c **** 
 920:Core/Src/main.c **** }
 543              		.loc 1 920 1 is_stmt 0 view .LVU84
 544 0026 41B0     		add	sp, sp, #260
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 12
 547              		@ sp needed
 548 0028 30BD     		pop	{r4, r5, pc}
 549              	.LVL42:
 550              	.L43:
 551              		.loc 1 920 1 view .LVU85
 552 002a 00BF     		.align	2
 553              	.L42:
 554 002c 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE256:
 558              		.section	.text.Joint4Set,"ax",%progbits
 559              		.align	1
 560              		.global	Joint4Set
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	Joint4Set:
 566              	.LVL43:
 567              	.LFB257:
 921:Core/Src/main.c **** 
 922:Core/Src/main.c **** void Joint4Set(int theta){
 568              		.loc 1 922 26 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 256
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 922 26 is_stmt 0 view .LVU87
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI27:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 C1B0     		sub	sp, sp, #260
 580              	.LCFI28:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 27


 581              		.cfi_def_cfa_offset 272
 582 0004 0346     		mov	r3, r0
 923:Core/Src/main.c ****   printf_joint4("%d\r\n", theta);
 583              		.loc 1 923 3 is_stmt 1 view .LVU88
 584              	.LBB10:
 585              		.loc 1 923 3 view .LVU89
 586              		.loc 1 923 3 view .LVU90
 587 0006 094A     		ldr	r2, .L48
 588 0008 4FF48071 		mov	r1, #256
 589 000c 6846     		mov	r0, sp
 590              	.LVL44:
 591              		.loc 1 923 3 is_stmt 0 view .LVU91
 592 000e FFF7FEFF 		bl	snprintf
 593              	.LVL45:
 594              		.loc 1 923 3 view .LVU92
 595 0012 0546     		mov	r5, r0
 596              	.LVL46:
 597              		.loc 1 923 3 is_stmt 1 discriminator 1 view .LVU93
 598              	.LBB11:
 599              		.loc 1 923 3 discriminator 1 view .LVU94
 600              		.loc 1 923 3 is_stmt 0 discriminator 1 view .LVU95
 601 0014 0024     		movs	r4, #0
 602              		.loc 1 923 3 view .LVU96
 603 0016 04E0     		b	.L45
 604              	.LVL47:
 605              	.L46:
 606              		.loc 1 923 3 is_stmt 1 discriminator 3 view .LVU97
 607 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 608 001c FFF7FEFF 		bl	__io_putchar_uart4
 609              	.LVL48:
 610              		.loc 1 923 3 discriminator 3 view .LVU98
 611 0020 0134     		adds	r4, r4, #1
 612              	.LVL49:
 613              	.L45:
 614              		.loc 1 923 3 discriminator 2 view .LVU99
 615 0022 AC42     		cmp	r4, r5
 616 0024 F8DB     		blt	.L46
 617              	.LBE11:
 618              	.LBE10:
 924:Core/Src/main.c **** 
 925:Core/Src/main.c **** }
 619              		.loc 1 925 1 is_stmt 0 view .LVU100
 620 0026 41B0     		add	sp, sp, #260
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 12
 623              		@ sp needed
 624 0028 30BD     		pop	{r4, r5, pc}
 625              	.LVL50:
 626              	.L49:
 627              		.loc 1 925 1 view .LVU101
 628 002a 00BF     		.align	2
 629              	.L48:
 630 002c 00000000 		.word	.LC0
 631              		.cfi_endproc
 632              	.LFE257:
 634              		.section	.text.Joint5Set,"ax",%progbits
 635              		.align	1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 28


 636              		.global	Joint5Set
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	Joint5Set:
 642              	.LVL51:
 643              	.LFB258:
 926:Core/Src/main.c **** 
 927:Core/Src/main.c **** void Joint5Set(int theta){
 644              		.loc 1 927 26 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 256
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 927 26 is_stmt 0 view .LVU103
 649 0000 30B5     		push	{r4, r5, lr}
 650              	.LCFI30:
 651              		.cfi_def_cfa_offset 12
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
 655 0002 C1B0     		sub	sp, sp, #260
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 272
 658 0004 0346     		mov	r3, r0
 928:Core/Src/main.c ****   printf_joint5("%d\r\n", theta);
 659              		.loc 1 928 3 is_stmt 1 view .LVU104
 660              	.LBB12:
 661              		.loc 1 928 3 view .LVU105
 662              		.loc 1 928 3 view .LVU106
 663 0006 094A     		ldr	r2, .L54
 664 0008 4FF48071 		mov	r1, #256
 665 000c 6846     		mov	r0, sp
 666              	.LVL52:
 667              		.loc 1 928 3 is_stmt 0 view .LVU107
 668 000e FFF7FEFF 		bl	snprintf
 669              	.LVL53:
 670              		.loc 1 928 3 view .LVU108
 671 0012 0546     		mov	r5, r0
 672              	.LVL54:
 673              		.loc 1 928 3 is_stmt 1 discriminator 1 view .LVU109
 674              	.LBB13:
 675              		.loc 1 928 3 discriminator 1 view .LVU110
 676              		.loc 1 928 3 is_stmt 0 discriminator 1 view .LVU111
 677 0014 0024     		movs	r4, #0
 678              		.loc 1 928 3 view .LVU112
 679 0016 04E0     		b	.L51
 680              	.LVL55:
 681              	.L52:
 682              		.loc 1 928 3 is_stmt 1 discriminator 3 view .LVU113
 683 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 684 001c FFF7FEFF 		bl	__io_putchar_uart5
 685              	.LVL56:
 686              		.loc 1 928 3 discriminator 3 view .LVU114
 687 0020 0134     		adds	r4, r4, #1
 688              	.LVL57:
 689              	.L51:
 690              		.loc 1 928 3 discriminator 2 view .LVU115
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 29


 691 0022 AC42     		cmp	r4, r5
 692 0024 F8DB     		blt	.L52
 693              	.LBE13:
 694              	.LBE12:
 929:Core/Src/main.c **** 
 930:Core/Src/main.c **** }
 695              		.loc 1 930 1 is_stmt 0 view .LVU116
 696 0026 41B0     		add	sp, sp, #260
 697              	.LCFI32:
 698              		.cfi_def_cfa_offset 12
 699              		@ sp needed
 700 0028 30BD     		pop	{r4, r5, pc}
 701              	.LVL58:
 702              	.L55:
 703              		.loc 1 930 1 view .LVU117
 704 002a 00BF     		.align	2
 705              	.L54:
 706 002c 00000000 		.word	.LC0
 707              		.cfi_endproc
 708              	.LFE258:
 710              		.section	.text.HomeSet,"ax",%progbits
 711              		.align	1
 712              		.global	HomeSet
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HomeSet:
 718              	.LFB253:
 893:Core/Src/main.c ****   //Set all joints to home
 719              		.loc 1 893 15 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI33:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 895:Core/Src/main.c ****   Joint1Set(joint1);
 728              		.loc 1 895 3 view .LVU119
 895:Core/Src/main.c ****   Joint1Set(joint1);
 729              		.loc 1 895 10 is_stmt 0 view .LVU120
 730 0002 0024     		movs	r4, #0
 731 0004 0C4B     		ldr	r3, .L58
 732 0006 1C60     		str	r4, [r3]
 896:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 733              		.loc 1 896 3 is_stmt 1 view .LVU121
 734 0008 2046     		mov	r0, r4
 735 000a FFF7FEFF 		bl	Joint1Set
 736              	.LVL59:
 897:Core/Src/main.c ****   Joint2Set(joint2);
 737              		.loc 1 897 3 view .LVU122
 897:Core/Src/main.c ****   Joint2Set(joint2);
 738              		.loc 1 897 10 is_stmt 0 view .LVU123
 739 000e 5A20     		movs	r0, #90
 740 0010 0A4B     		ldr	r3, .L58+4
 741 0012 1860     		str	r0, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 30


 898:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 742              		.loc 1 898 3 is_stmt 1 view .LVU124
 743 0014 FFF7FEFF 		bl	Joint2Set
 744              	.LVL60:
 899:Core/Src/main.c ****   Joint3Set(joint3);
 745              		.loc 1 899 3 view .LVU125
 899:Core/Src/main.c ****   Joint3Set(joint3);
 746              		.loc 1 899 10 is_stmt 0 view .LVU126
 747 0018 8720     		movs	r0, #135
 748 001a 094B     		ldr	r3, .L58+8
 749 001c 1860     		str	r0, [r3]
 900:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 750              		.loc 1 900 3 is_stmt 1 view .LVU127
 751 001e FFF7FEFF 		bl	Joint3Set
 752              	.LVL61:
 901:Core/Src/main.c ****   Joint4Set(joint4);
 753              		.loc 1 901 3 view .LVU128
 901:Core/Src/main.c ****   Joint4Set(joint4);
 754              		.loc 1 901 10 is_stmt 0 view .LVU129
 755 0022 084B     		ldr	r3, .L58+12
 756 0024 1C60     		str	r4, [r3]
 902:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 757              		.loc 1 902 3 is_stmt 1 view .LVU130
 758 0026 2046     		mov	r0, r4
 759 0028 FFF7FEFF 		bl	Joint4Set
 760              	.LVL62:
 903:Core/Src/main.c ****   Joint5Set(joint5);
 761              		.loc 1 903 3 view .LVU131
 903:Core/Src/main.c ****   Joint5Set(joint5);
 762              		.loc 1 903 10 is_stmt 0 view .LVU132
 763 002c 0F20     		movs	r0, #15
 764 002e 064B     		ldr	r3, .L58+16
 765 0030 1860     		str	r0, [r3]
 904:Core/Src/main.c **** }
 766              		.loc 1 904 3 is_stmt 1 view .LVU133
 767 0032 FFF7FEFF 		bl	Joint5Set
 768              	.LVL63:
 905:Core/Src/main.c **** 
 769              		.loc 1 905 1 is_stmt 0 view .LVU134
 770 0036 10BD     		pop	{r4, pc}
 771              	.L59:
 772              		.align	2
 773              	.L58:
 774 0038 00000000 		.word	joint1
 775 003c 00000000 		.word	joint2
 776 0040 00000000 		.word	joint3
 777 0044 00000000 		.word	joint4
 778 0048 00000000 		.word	joint5
 779              		.cfi_endproc
 780              	.LFE253:
 782              		.section	.text.ActuatorSet,"ax",%progbits
 783              		.align	1
 784              		.global	ActuatorSet
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	ActuatorSet:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 31


 790              	.LVL64:
 791              	.LFB259:
 931:Core/Src/main.c **** 
 932:Core/Src/main.c **** void ActuatorSet(int theta){
 792              		.loc 1 932 28 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 933:Core/Src/main.c ****   // Set joint. This is connected to the actuator motor controller. 
 934:Core/Src/main.c ****   // Make an actuator status function
 935:Core/Src/main.c **** 
 936:Core/Src/main.c **** }
 797              		.loc 1 936 1 view .LVU136
 798 0000 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE259:
 802              		.section	.text.ActuatorStatus,"ax",%progbits
 803              		.align	1
 804              		.global	ActuatorStatus
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 809              	ActuatorStatus:
 810              	.LFB260:
 937:Core/Src/main.c **** 
 938:Core/Src/main.c **** int ActuatorStatus(){
 811              		.loc 1 938 21 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 939:Core/Src/main.c ****   // Get actuator status
 940:Core/Src/main.c ****   return 0;
 816              		.loc 1 940 3 view .LVU138
 941:Core/Src/main.c **** }
 817              		.loc 1 941 1 is_stmt 0 view .LVU139
 818 0000 0020     		movs	r0, #0
 819 0002 7047     		bx	lr
 820              		.cfi_endproc
 821              	.LFE260:
 823              		.section	.text.Read_ADC_PA0,"ax",%progbits
 824              		.align	1
 825              		.global	Read_ADC_PA0
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 830              	Read_ADC_PA0:
 831              	.LFB261:
 942:Core/Src/main.c **** 
 943:Core/Src/main.c **** uint16_t Read_ADC_PA0() {
 832              		.loc 1 943 25 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836 0000 10B5     		push	{r4, lr}
 837              	.LCFI34:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 32


 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 944:Core/Src/main.c ****   uint16_t adcValue = 0;
 841              		.loc 1 944 3 view .LVU141
 842              	.LVL65:
 945:Core/Src/main.c **** 
 946:Core/Src/main.c ****   // Start ADC Conversion
 947:Core/Src/main.c ****   HAL_ADC_Start(&hadc1);
 843              		.loc 1 947 3 view .LVU142
 844 0002 0A4C     		ldr	r4, .L67
 845 0004 2046     		mov	r0, r4
 846 0006 FFF7FEFF 		bl	HAL_ADC_Start
 847              	.LVL66:
 948:Core/Src/main.c **** 
 949:Core/Src/main.c ****   // Wait for conversion to complete
 950:Core/Src/main.c ****   if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 848              		.loc 1 950 3 view .LVU143
 849              		.loc 1 950 7 is_stmt 0 view .LVU144
 850 000a 4FF0FF31 		mov	r1, #-1
 851 000e 2046     		mov	r0, r4
 852 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 853              	.LVL67:
 854              		.loc 1 950 6 discriminator 1 view .LVU145
 855 0014 28B1     		cbz	r0, .L66
 944:Core/Src/main.c **** 
 856              		.loc 1 944 12 view .LVU146
 857 0016 0024     		movs	r4, #0
 858              	.LVL68:
 859              	.L63:
 951:Core/Src/main.c ****       // Read the ADC value
 952:Core/Src/main.c ****       adcValue = HAL_ADC_GetValue(&hadc1);
 953:Core/Src/main.c ****   }
 954:Core/Src/main.c **** 
 955:Core/Src/main.c ****   // Stop ADC (optional)
 956:Core/Src/main.c ****   HAL_ADC_Stop(&hadc1);
 860              		.loc 1 956 3 is_stmt 1 view .LVU147
 861 0018 0448     		ldr	r0, .L67
 862 001a FFF7FEFF 		bl	HAL_ADC_Stop
 863              	.LVL69:
 957:Core/Src/main.c **** 
 958:Core/Src/main.c ****   return adcValue;
 864              		.loc 1 958 3 view .LVU148
 959:Core/Src/main.c **** }
 865              		.loc 1 959 1 is_stmt 0 view .LVU149
 866 001e 2046     		mov	r0, r4
 867 0020 10BD     		pop	{r4, pc}
 868              	.LVL70:
 869              	.L66:
 952:Core/Src/main.c ****   }
 870              		.loc 1 952 7 is_stmt 1 view .LVU150
 952:Core/Src/main.c ****   }
 871              		.loc 1 952 18 is_stmt 0 view .LVU151
 872 0022 2046     		mov	r0, r4
 873 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 874              	.LVL71:
 952:Core/Src/main.c ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 33


 875              		.loc 1 952 16 discriminator 1 view .LVU152
 876 0028 84B2     		uxth	r4, r0
 877              	.LVL72:
 952:Core/Src/main.c ****   }
 878              		.loc 1 952 16 discriminator 1 view .LVU153
 879 002a F5E7     		b	.L63
 880              	.L68:
 881              		.align	2
 882              	.L67:
 883 002c 00000000 		.word	hadc1
 884              		.cfi_endproc
 885              	.LFE261:
 887              		.section	.text.inject,"ax",%progbits
 888              		.align	1
 889              		.global	inject
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	inject:
 895              	.LVL73:
 896              	.LFB262:
 960:Core/Src/main.c **** 
 961:Core/Src/main.c **** void inject(int direction){
 897              		.loc 1 961 27 is_stmt 1 view -0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 962:Core/Src/main.c ****   if(direction == INJECT){
 902              		.loc 1 962 3 view .LVU155
 903              		.loc 1 962 5 is_stmt 0 view .LVU156
 904 0000 0128     		cmp	r0, #1
 905 0002 08D0     		beq	.L73
 963:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);  // 25% duty cycle on PD13
 964:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);  // 25% duty cycle on PD13
 965:Core/Src/main.c ****   } else if (direction == RETRACT){
 906              		.loc 1 965 10 is_stmt 1 view .LVU157
 907              		.loc 1 965 13 is_stmt 0 view .LVU158
 908 0004 0228     		cmp	r0, #2
 909 0006 0ED0     		beq	.L74
 966:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);  // 25% duty cycle on PD13
 967:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 968:Core/Src/main.c ****   } else if (direction == STOP){
 910              		.loc 1 968 10 is_stmt 1 view .LVU159
 911              		.loc 1 968 13 is_stmt 0 view .LVU160
 912 0008 20B9     		cbnz	r0, .L69
 969:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);  // 25% duty cycle on PD13
 913              		.loc 1 969 5 is_stmt 1 view .LVU161
 914 000a 0B4B     		ldr	r3, .L75
 915 000c 1B68     		ldr	r3, [r3]
 916 000e 0022     		movs	r2, #0
 917 0010 5A63     		str	r2, [r3, #52]
 970:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 918              		.loc 1 970 5 view .LVU162
 919 0012 9A63     		str	r2, [r3, #56]
 920              	.L69:
 971:Core/Src/main.c ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 34


 972:Core/Src/main.c **** }
 921              		.loc 1 972 1 is_stmt 0 view .LVU163
 922 0014 7047     		bx	lr
 923              	.L73:
 963:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);  // 25% duty cycle on PD13
 924              		.loc 1 963 5 is_stmt 1 view .LVU164
 925 0016 084B     		ldr	r3, .L75
 926 0018 1B68     		ldr	r3, [r3]
 927 001a 0022     		movs	r2, #0
 928 001c 5A63     		str	r2, [r3, #52]
 964:Core/Src/main.c ****   } else if (direction == RETRACT){
 929              		.loc 1 964 5 view .LVU165
 930 001e 4FF48042 		mov	r2, #16384
 931 0022 9A63     		str	r2, [r3, #56]
 932 0024 7047     		bx	lr
 933              	.L74:
 966:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 934              		.loc 1 966 5 view .LVU166
 935 0026 044B     		ldr	r3, .L75
 936 0028 1B68     		ldr	r3, [r3]
 937 002a 4FF48042 		mov	r2, #16384
 938 002e 5A63     		str	r2, [r3, #52]
 967:Core/Src/main.c ****   } else if (direction == STOP){
 939              		.loc 1 967 5 view .LVU167
 940 0030 0022     		movs	r2, #0
 941 0032 9A63     		str	r2, [r3, #56]
 942 0034 7047     		bx	lr
 943              	.L76:
 944 0036 00BF     		.align	2
 945              	.L75:
 946 0038 00000000 		.word	htim4
 947              		.cfi_endproc
 948              	.LFE262:
 950              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 951              		.align	2
 952              	.LC2:
 953 0000 73657400 		.ascii	"set\000"
 954              		.align	2
 955              	.LC3:
 956 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 956      2533642D 
 956      2533642D 
 956      2533642D 
 956      2533642D 
 957              		.align	2
 958              	.LC4:
 959 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 959      69766564 
 959      206E756D 
 959      62657273 
 959      3A202564 
 960 0042 0000     		.align	2
 961              	.LC5:
 962 0044 496E7661 		.ascii	"Invalid format!\015\000"
 962      6C696420 
 962      666F726D 
 962      6174210D 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 35


 962      00
 963 0055 000000   		.align	2
 964              	.LC6:
 965 0058 6A6F696E 		.ascii	"joint1\000"
 965      743100
 966 005f 00       		.align	2
 967              	.LC7:
 968 0060 25336400 		.ascii	"%3d\000"
 969              		.align	2
 970              	.LC8:
 971 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 971      74312073 
 971      65743A20 
 971      25640D0A 
 971      00
 972 0075 000000   		.align	2
 973              	.LC9:
 974 0078 6A6F696E 		.ascii	"joint2\000"
 974      743200
 975 007f 00       		.align	2
 976              	.LC10:
 977 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 977      74322073 
 977      65743A20 
 977      25640D0A 
 977      00
 978 0091 000000   		.align	2
 979              	.LC11:
 980 0094 6A6F696E 		.ascii	"joint3\000"
 980      743300
 981 009b 00       		.align	2
 982              	.LC12:
 983 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 983      74332073 
 983      65743A20 
 983      25640D0A 
 983      00
 984 00ad 000000   		.align	2
 985              	.LC13:
 986 00b0 6A6F696E 		.ascii	"joint4\000"
 986      743400
 987 00b7 00       		.align	2
 988              	.LC14:
 989 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 989      74342073 
 989      65743A20 
 989      25640D0A 
 989      00
 990 00c9 000000   		.align	2
 991              	.LC15:
 992 00cc 6A6F696E 		.ascii	"joint5\000"
 992      743500
 993 00d3 00       		.align	2
 994              	.LC16:
 995 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 995      74352073 
 995      65743A20 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 36


 995      25640D0A 
 995      00
 996 00e5 000000   		.align	2
 997              	.LC17:
 998 00e8 61637475 		.ascii	"actuator\000"
 998      61746F72 
 998      00
 999 00f1 000000   		.align	2
 1000              	.LC18:
 1001 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 1001      61746F72 
 1001      20736574 
 1001      3A202564 
 1001      0D0A00
 1002 0107 00       		.align	2
 1003              	.LC19:
 1004 0108 6A317265 		.ascii	"j1read\000"
 1004      616400
 1005 010f 00       		.align	2
 1006              	.LC20:
 1007 0110 6A327265 		.ascii	"j2read\000"
 1007      616400
 1008 0117 00       		.align	2
 1009              	.LC21:
 1010 0118 6A337265 		.ascii	"j3read\000"
 1010      616400
 1011 011f 00       		.align	2
 1012              	.LC22:
 1013 0120 6A347265 		.ascii	"j4read\000"
 1013      616400
 1014 0127 00       		.align	2
 1015              	.LC23:
 1016 0128 6A357265 		.ascii	"j5read\000"
 1016      616400
 1017 012f 00       		.align	2
 1018              	.LC24:
 1019 0130 61726561 		.ascii	"aread\000"
 1019      6400
 1020 0136 0000     		.align	2
 1021              	.LC25:
 1022 0138 686F6D65 		.ascii	"home\000"
 1022      00
 1023 013d 000000   		.align	2
 1024              	.LC26:
 1025 0140 53657420 		.ascii	"Set all joints home\015\000"
 1025      616C6C20 
 1025      6A6F696E 
 1025      74732068 
 1025      6F6D650D 
 1026 0155 000000   		.align	2
 1027              	.LC27:
 1028 0158 666C6173 		.ascii	"flash\000"
 1028      6800
 1029 015e 0000     		.align	2
 1030              	.LC28:
 1031 0160 4C454473 		.ascii	"LEDs Toggled\015\000"
 1031      20546F67 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 37


 1031      676C6564 
 1031      0D00
 1032 016e 0000     		.align	2
 1033              	.LC29:
 1034 0170 7072696E 		.ascii	"print\000"
 1034      7400
 1035 0176 0000     		.align	2
 1036              	.LC30:
 1037 0178 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 1037      74313A20 
 1037      25640D0A 
 1037      00
 1038 0185 000000   		.align	2
 1039              	.LC31:
 1040 0188 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 1040      74323A20 
 1040      25640D0A 
 1040      00
 1041 0195 000000   		.align	2
 1042              	.LC32:
 1043 0198 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 1043      74333A20 
 1043      25640D0A 
 1043      00
 1044 01a5 000000   		.align	2
 1045              	.LC33:
 1046 01a8 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 1046      74343A20 
 1046      25640D0A 
 1046      00
 1047 01b5 000000   		.align	2
 1048              	.LC34:
 1049 01b8 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 1049      74353A20 
 1049      25640D0A 
 1049      00
 1050 01c5 000000   		.align	2
 1051              	.LC35:
 1052 01c8 41637475 		.ascii	"Actuator: %d\015\012\000"
 1052      61746F72 
 1052      3A202564 
 1052      0D0A00
 1053 01d7 00       		.align	2
 1054              	.LC36:
 1055 01d8 696E6A65 		.ascii	"inject\000"
 1055      637400
 1056 01df 00       		.align	2
 1057              	.LC37:
 1058 01e0 696E6A65 		.ascii	"injecting...\015\000"
 1058      6374696E 
 1058      672E2E2E 
 1058      0D00
 1059 01ee 0000     		.align	2
 1060              	.LC38:
 1061 01f0 72657472 		.ascii	"retract\000"
 1061      61637400 
 1062              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 38


 1063              	.LC39:
 1064 01f8 72657472 		.ascii	"retracting...\015\000"
 1064      61637469 
 1064      6E672E2E 
 1064      2E0D00
 1065 0207 00       		.align	2
 1066              	.LC40:
 1067 0208 73746F70 		.ascii	"stop\000"
 1067      00
 1068 020d 000000   		.align	2
 1069              	.LC41:
 1070 0210 73746F70 		.ascii	"stopped.\015\000"
 1070      7065642E 
 1070      0D00
 1071 021a 0000     		.align	2
 1072              	.LC42:
 1073 021c 52656365 		.ascii	"Received: %s\015\012\000"
 1073      69766564 
 1073      3A202573 
 1073      0D0A00
 1074              		.section	.text.ProcessReceivedString,"ax",%progbits
 1075              		.align	1
 1076              		.global	ProcessReceivedString
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1081              	ProcessReceivedString:
 1082              	.LVL74:
 1083              	.LFB251:
 627:Core/Src/main.c ****     // Check if the string starts with "set"
 1084              		.loc 1 627 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 256
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 627:Core/Src/main.c ****     // Check if the string starts with "set"
 1088              		.loc 1 627 1 is_stmt 0 view .LVU169
 1089 0000 30B5     		push	{r4, r5, lr}
 1090              	.LCFI35:
 1091              		.cfi_def_cfa_offset 12
 1092              		.cfi_offset 4, -12
 1093              		.cfi_offset 5, -8
 1094              		.cfi_offset 14, -4
 1095 0002 C5B0     		sub	sp, sp, #276
 1096              	.LCFI36:
 1097              		.cfi_def_cfa_offset 288
 1098 0004 0446     		mov	r4, r0
 629:Core/Src/main.c ****     {
 1099              		.loc 1 629 5 is_stmt 1 view .LVU170
 629:Core/Src/main.c ****     {
 1100              		.loc 1 629 9 is_stmt 0 view .LVU171
 1101 0006 0322     		movs	r2, #3
 1102 0008 A349     		ldr	r1, .L147
 1103 000a FFF7FEFF 		bl	strncmp
 1104              	.LVL75:
 629:Core/Src/main.c ****     {
 1105              		.loc 1 629 8 discriminator 1 view .LVU172
 1106 000e 0028     		cmp	r0, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 39


 1107 0010 00F09C80 		beq	.L120
 675:Core/Src/main.c ****     {
 1108              		.loc 1 675 10 is_stmt 1 view .LVU173
 675:Core/Src/main.c ****     {
 1109              		.loc 1 675 14 is_stmt 0 view .LVU174
 1110 0014 0622     		movs	r2, #6
 1111 0016 A149     		ldr	r1, .L147+4
 1112 0018 2046     		mov	r0, r4
 1113 001a FFF7FEFF 		bl	strncmp
 1114              	.LVL76:
 675:Core/Src/main.c ****     {
 1115              		.loc 1 675 13 discriminator 1 view .LVU175
 1116 001e 0028     		cmp	r0, #0
 1117 0020 00F0F480 		beq	.L121
 696:Core/Src/main.c ****     {
 1118              		.loc 1 696 10 is_stmt 1 view .LVU176
 696:Core/Src/main.c ****     {
 1119              		.loc 1 696 14 is_stmt 0 view .LVU177
 1120 0024 0622     		movs	r2, #6
 1121 0026 9E49     		ldr	r1, .L147+8
 1122 0028 2046     		mov	r0, r4
 1123 002a FFF7FEFF 		bl	strncmp
 1124              	.LVL77:
 696:Core/Src/main.c ****     {
 1125              		.loc 1 696 13 discriminator 1 view .LVU178
 1126 002e 0028     		cmp	r0, #0
 1127 0030 00F00381 		beq	.L122
 717:Core/Src/main.c ****     {
 1128              		.loc 1 717 10 is_stmt 1 view .LVU179
 717:Core/Src/main.c ****     {
 1129              		.loc 1 717 14 is_stmt 0 view .LVU180
 1130 0034 0622     		movs	r2, #6
 1131 0036 9B49     		ldr	r1, .L147+12
 1132 0038 2046     		mov	r0, r4
 1133 003a FFF7FEFF 		bl	strncmp
 1134              	.LVL78:
 717:Core/Src/main.c ****     {
 1135              		.loc 1 717 13 discriminator 1 view .LVU181
 1136 003e 0028     		cmp	r0, #0
 1137 0040 00F01281 		beq	.L123
 738:Core/Src/main.c ****     {
 1138              		.loc 1 738 10 is_stmt 1 view .LVU182
 738:Core/Src/main.c ****     {
 1139              		.loc 1 738 14 is_stmt 0 view .LVU183
 1140 0044 0622     		movs	r2, #6
 1141 0046 9849     		ldr	r1, .L147+16
 1142 0048 2046     		mov	r0, r4
 1143 004a FFF7FEFF 		bl	strncmp
 1144              	.LVL79:
 738:Core/Src/main.c ****     {
 1145              		.loc 1 738 13 discriminator 1 view .LVU184
 1146 004e 0028     		cmp	r0, #0
 1147 0050 00F07281 		beq	.L124
 759:Core/Src/main.c ****     {
 1148              		.loc 1 759 10 is_stmt 1 view .LVU185
 759:Core/Src/main.c ****     {
 1149              		.loc 1 759 14 is_stmt 0 view .LVU186
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 40


 1150 0054 0622     		movs	r2, #6
 1151 0056 9549     		ldr	r1, .L147+20
 1152 0058 2046     		mov	r0, r4
 1153 005a FFF7FEFF 		bl	strncmp
 1154              	.LVL80:
 759:Core/Src/main.c ****     {
 1155              		.loc 1 759 13 discriminator 1 view .LVU187
 1156 005e 0028     		cmp	r0, #0
 1157 0060 00F08181 		beq	.L125
 780:Core/Src/main.c ****     {
 1158              		.loc 1 780 10 is_stmt 1 view .LVU188
 780:Core/Src/main.c ****     {
 1159              		.loc 1 780 14 is_stmt 0 view .LVU189
 1160 0064 0822     		movs	r2, #8
 1161 0066 9249     		ldr	r1, .L147+24
 1162 0068 2046     		mov	r0, r4
 1163 006a FFF7FEFF 		bl	strncmp
 1164              	.LVL81:
 780:Core/Src/main.c ****     {
 1165              		.loc 1 780 13 discriminator 1 view .LVU190
 1166 006e 0028     		cmp	r0, #0
 1167 0070 00F09081 		beq	.L126
 800:Core/Src/main.c ****     {
 1168              		.loc 1 800 10 is_stmt 1 view .LVU191
 800:Core/Src/main.c ****     {
 1169              		.loc 1 800 14 is_stmt 0 view .LVU192
 1170 0074 0622     		movs	r2, #6
 1171 0076 8F49     		ldr	r1, .L147+28
 1172 0078 2046     		mov	r0, r4
 1173 007a FFF7FEFF 		bl	strncmp
 1174              	.LVL82:
 800:Core/Src/main.c ****     {
 1175              		.loc 1 800 13 discriminator 1 view .LVU193
 1176 007e 0546     		mov	r5, r0
 1177 0080 0028     		cmp	r0, #0
 1178 0082 00F09C81 		beq	.L127
 805:Core/Src/main.c ****     {
 1179              		.loc 1 805 10 is_stmt 1 view .LVU194
 805:Core/Src/main.c ****     {
 1180              		.loc 1 805 14 is_stmt 0 view .LVU195
 1181 0086 0622     		movs	r2, #6
 1182 0088 8B49     		ldr	r1, .L147+32
 1183 008a 2046     		mov	r0, r4
 1184 008c FFF7FEFF 		bl	strncmp
 1185              	.LVL83:
 805:Core/Src/main.c ****     {
 1186              		.loc 1 805 13 discriminator 1 view .LVU196
 1187 0090 0546     		mov	r5, r0
 1188 0092 0028     		cmp	r0, #0
 1189 0094 00F09E81 		beq	.L128
 810:Core/Src/main.c ****     {
 1190              		.loc 1 810 10 is_stmt 1 view .LVU197
 810:Core/Src/main.c ****     {
 1191              		.loc 1 810 14 is_stmt 0 view .LVU198
 1192 0098 0622     		movs	r2, #6
 1193 009a 8849     		ldr	r1, .L147+36
 1194 009c 2046     		mov	r0, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 41


 1195 009e FFF7FEFF 		bl	strncmp
 1196              	.LVL84:
 810:Core/Src/main.c ****     {
 1197              		.loc 1 810 13 discriminator 1 view .LVU199
 1198 00a2 0546     		mov	r5, r0
 1199 00a4 0028     		cmp	r0, #0
 1200 00a6 00F0A081 		beq	.L129
 815:Core/Src/main.c ****       {
 1201              		.loc 1 815 12 is_stmt 1 view .LVU200
 815:Core/Src/main.c ****       {
 1202              		.loc 1 815 16 is_stmt 0 view .LVU201
 1203 00aa 0622     		movs	r2, #6
 1204 00ac 8449     		ldr	r1, .L147+40
 1205 00ae 2046     		mov	r0, r4
 1206 00b0 FFF7FEFF 		bl	strncmp
 1207              	.LVL85:
 815:Core/Src/main.c ****       {
 1208              		.loc 1 815 15 discriminator 1 view .LVU202
 1209 00b4 0546     		mov	r5, r0
 1210 00b6 0028     		cmp	r0, #0
 1211 00b8 00F0A281 		beq	.L130
 820:Core/Src/main.c ****       {
 1212              		.loc 1 820 12 is_stmt 1 view .LVU203
 820:Core/Src/main.c ****       {
 1213              		.loc 1 820 16 is_stmt 0 view .LVU204
 1214 00bc 0622     		movs	r2, #6
 1215 00be 8149     		ldr	r1, .L147+44
 1216 00c0 2046     		mov	r0, r4
 1217 00c2 FFF7FEFF 		bl	strncmp
 1218              	.LVL86:
 820:Core/Src/main.c ****       {
 1219              		.loc 1 820 15 discriminator 1 view .LVU205
 1220 00c6 0546     		mov	r5, r0
 1221 00c8 0028     		cmp	r0, #0
 1222 00ca 00F0A481 		beq	.L131
 825:Core/Src/main.c ****       {
 1223              		.loc 1 825 12 is_stmt 1 view .LVU206
 825:Core/Src/main.c ****       {
 1224              		.loc 1 825 16 is_stmt 0 view .LVU207
 1225 00ce 0522     		movs	r2, #5
 1226 00d0 7D49     		ldr	r1, .L147+48
 1227 00d2 2046     		mov	r0, r4
 1228 00d4 FFF7FEFF 		bl	strncmp
 1229              	.LVL87:
 825:Core/Src/main.c ****       {
 1230              		.loc 1 825 15 discriminator 1 view .LVU208
 1231 00d8 0028     		cmp	r0, #0
 1232 00da 4AD0     		beq	.L77
 832:Core/Src/main.c ****     {
 1233              		.loc 1 832 10 is_stmt 1 view .LVU209
 832:Core/Src/main.c ****     {
 1234              		.loc 1 832 14 is_stmt 0 view .LVU210
 1235 00dc 0422     		movs	r2, #4
 1236 00de 7B49     		ldr	r1, .L147+52
 1237 00e0 2046     		mov	r0, r4
 1238 00e2 FFF7FEFF 		bl	strncmp
 1239              	.LVL88:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 42


 832:Core/Src/main.c ****     {
 1240              		.loc 1 832 13 discriminator 1 view .LVU211
 1241 00e6 0028     		cmp	r0, #0
 1242 00e8 00F0A081 		beq	.L132
 842:Core/Src/main.c ****     {
 1243              		.loc 1 842 10 is_stmt 1 view .LVU212
 842:Core/Src/main.c ****     {
 1244              		.loc 1 842 14 is_stmt 0 view .LVU213
 1245 00ec 0522     		movs	r2, #5
 1246 00ee 7849     		ldr	r1, .L147+56
 1247 00f0 2046     		mov	r0, r4
 1248 00f2 FFF7FEFF 		bl	strncmp
 1249              	.LVL89:
 842:Core/Src/main.c ****     {
 1250              		.loc 1 842 13 discriminator 1 view .LVU214
 1251 00f6 0028     		cmp	r0, #0
 1252 00f8 00F09E81 		beq	.L133
 852:Core/Src/main.c ****     {
 1253              		.loc 1 852 10 is_stmt 1 view .LVU215
 852:Core/Src/main.c ****     {
 1254              		.loc 1 852 14 is_stmt 0 view .LVU216
 1255 00fc 0522     		movs	r2, #5
 1256 00fe 7549     		ldr	r1, .L147+60
 1257 0100 2046     		mov	r0, r4
 1258 0102 FFF7FEFF 		bl	strncmp
 1259              	.LVL90:
 852:Core/Src/main.c ****     {
 1260              		.loc 1 852 13 discriminator 1 view .LVU217
 1261 0106 0028     		cmp	r0, #0
 1262 0108 00F0A081 		beq	.L134
 862:Core/Src/main.c ****     {
 1263              		.loc 1 862 10 is_stmt 1 view .LVU218
 862:Core/Src/main.c ****     {
 1264              		.loc 1 862 14 is_stmt 0 view .LVU219
 1265 010c 0622     		movs	r2, #6
 1266 010e 7249     		ldr	r1, .L147+64
 1267 0110 2046     		mov	r0, r4
 1268 0112 FFF7FEFF 		bl	strncmp
 1269              	.LVL91:
 862:Core/Src/main.c ****     {
 1270              		.loc 1 862 13 discriminator 1 view .LVU220
 1271 0116 0028     		cmp	r0, #0
 1272 0118 00F0B781 		beq	.L135
 869:Core/Src/main.c ****     {
 1273              		.loc 1 869 10 is_stmt 1 view .LVU221
 869:Core/Src/main.c ****     {
 1274              		.loc 1 869 14 is_stmt 0 view .LVU222
 1275 011c 0722     		movs	r2, #7
 1276 011e 6F49     		ldr	r1, .L147+68
 1277 0120 2046     		mov	r0, r4
 1278 0122 FFF7FEFF 		bl	strncmp
 1279              	.LVL92:
 869:Core/Src/main.c ****     {
 1280              		.loc 1 869 13 discriminator 1 view .LVU223
 1281 0126 0028     		cmp	r0, #0
 1282 0128 00F0B881 		beq	.L136
 876:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 43


 1283              		.loc 1 876 10 is_stmt 1 view .LVU224
 876:Core/Src/main.c ****     {
 1284              		.loc 1 876 14 is_stmt 0 view .LVU225
 1285 012c 0422     		movs	r2, #4
 1286 012e 6C49     		ldr	r1, .L147+72
 1287 0130 2046     		mov	r0, r4
 1288 0132 FFF7FEFF 		bl	strncmp
 1289              	.LVL93:
 876:Core/Src/main.c ****     {
 1290              		.loc 1 876 13 discriminator 1 view .LVU226
 1291 0136 0028     		cmp	r0, #0
 1292 0138 40F0B981 		bne	.L118
 878:Core/Src/main.c ****         inject(STOP);
 1293              		.loc 1 878 9 is_stmt 1 view .LVU227
 878:Core/Src/main.c ****         inject(STOP);
 1294              		.loc 1 878 20 is_stmt 0 view .LVU228
 1295 013c 694B     		ldr	r3, .L147+76
 1296 013e 1860     		str	r0, [r3]
 879:Core/Src/main.c ****         printf("stopped.\r\n"); 
 1297              		.loc 1 879 9 is_stmt 1 view .LVU229
 1298 0140 FFF7FEFF 		bl	inject
 1299              	.LVL94:
 880:Core/Src/main.c ****     }
 1300              		.loc 1 880 9 view .LVU230
 1301 0144 6848     		ldr	r0, .L147+80
 1302 0146 FFF7FEFF 		bl	puts
 1303              	.LVL95:
 1304 014a 12E0     		b	.L77
 1305              	.L120:
 632:Core/Src/main.c **** 
 1306              		.loc 1 632 9 view .LVU231
 1307              	.LVL96:
 635:Core/Src/main.c ****         {
 1308              		.loc 1 635 9 view .LVU232
 635:Core/Src/main.c ****         {
 1309              		.loc 1 635 13 is_stmt 0 view .LVU233
 1310 014c 674B     		ldr	r3, .L147+84
 1311 014e 0393     		str	r3, [sp, #12]
 1312 0150 674B     		ldr	r3, .L147+88
 1313 0152 0293     		str	r3, [sp, #8]
 1314 0154 674B     		ldr	r3, .L147+92
 1315 0156 0193     		str	r3, [sp, #4]
 1316 0158 674B     		ldr	r3, .L147+96
 1317 015a 0093     		str	r3, [sp]
 1318 015c 674B     		ldr	r3, .L147+100
 1319 015e 684A     		ldr	r2, .L147+104
 1320 0160 6849     		ldr	r1, .L147+108
 1321 0162 201D     		adds	r0, r4, #4
 1322              	.LVL97:
 635:Core/Src/main.c ****         {
 1323              		.loc 1 635 13 view .LVU234
 1324 0164 FFF7FEFF 		bl	sscanf
 1325              	.LVL98:
 635:Core/Src/main.c ****         {
 1326              		.loc 1 635 12 discriminator 1 view .LVU235
 1327 0168 0628     		cmp	r0, #6
 1328 016a 04D0     		beq	.L137
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 44


 671:Core/Src/main.c ****         }
 1329              		.loc 1 671 13 is_stmt 1 view .LVU236
 1330 016c 6648     		ldr	r0, .L147+112
 1331 016e FFF7FEFF 		bl	puts
 1332              	.LVL99:
 1333              	.L77:
 888:Core/Src/main.c **** 
 1334              		.loc 1 888 1 is_stmt 0 view .LVU237
 1335 0172 45B0     		add	sp, sp, #276
 1336              	.LCFI37:
 1337              		.cfi_remember_state
 1338              		.cfi_def_cfa_offset 12
 1339              		@ sp needed
 1340 0174 30BD     		pop	{r4, r5, pc}
 1341              	.LVL100:
 1342              	.L137:
 1343              	.LCFI38:
 1344              		.cfi_restore_state
 638:Core/Src/main.c **** 
 1345              		.loc 1 638 13 is_stmt 1 view .LVU238
 1346 0176 624C     		ldr	r4, .L147+104
 1347              	.LVL101:
 638:Core/Src/main.c **** 
 1348              		.loc 1 638 13 is_stmt 0 view .LVU239
 1349 0178 5C4B     		ldr	r3, .L147+84
 1350 017a 1B68     		ldr	r3, [r3]
 1351 017c 0293     		str	r3, [sp, #8]
 1352 017e 5C4B     		ldr	r3, .L147+88
 1353 0180 1B68     		ldr	r3, [r3]
 1354 0182 0193     		str	r3, [sp, #4]
 1355 0184 5B4B     		ldr	r3, .L147+92
 1356 0186 1B68     		ldr	r3, [r3]
 1357 0188 0093     		str	r3, [sp]
 1358 018a 5B4B     		ldr	r3, .L147+96
 1359 018c 1B68     		ldr	r3, [r3]
 1360 018e 5B4A     		ldr	r2, .L147+100
 1361 0190 1268     		ldr	r2, [r2]
 1362 0192 2168     		ldr	r1, [r4]
 1363 0194 5D48     		ldr	r0, .L147+116
 1364 0196 FFF7FEFF 		bl	printf
 1365              	.LVL102:
 641:Core/Src/main.c ****                 // send to joint
 1366              		.loc 1 641 13 is_stmt 1 view .LVU240
 641:Core/Src/main.c ****                 // send to joint
 1367              		.loc 1 641 24 is_stmt 0 view .LVU241
 1368 019a 2068     		ldr	r0, [r4]
 1369 019c 5C4B     		ldr	r3, .L147+120
 1370 019e 1B68     		ldr	r3, [r3]
 641:Core/Src/main.c ****                 // send to joint
 1371              		.loc 1 641 16 view .LVU242
 1372 01a0 9842     		cmp	r0, r3
 1373 01a2 24D1     		bne	.L138
 1374              	.L80:
 646:Core/Src/main.c ****                 // send to joint
 1375              		.loc 1 646 13 is_stmt 1 view .LVU243
 646:Core/Src/main.c ****                 // send to joint
 1376              		.loc 1 646 24 is_stmt 0 view .LVU244
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 45


 1377 01a4 554B     		ldr	r3, .L147+100
 1378 01a6 1868     		ldr	r0, [r3]
 1379 01a8 5A4B     		ldr	r3, .L147+124
 1380 01aa 1B68     		ldr	r3, [r3]
 646:Core/Src/main.c ****                 // send to joint
 1381              		.loc 1 646 16 view .LVU245
 1382 01ac 9842     		cmp	r0, r3
 1383 01ae 23D1     		bne	.L139
 1384              	.L81:
 651:Core/Src/main.c ****                 // send to joint
 1385              		.loc 1 651 13 is_stmt 1 view .LVU246
 651:Core/Src/main.c ****                 // send to joint
 1386              		.loc 1 651 24 is_stmt 0 view .LVU247
 1387 01b0 514B     		ldr	r3, .L147+96
 1388 01b2 1868     		ldr	r0, [r3]
 1389 01b4 584B     		ldr	r3, .L147+128
 1390 01b6 1B68     		ldr	r3, [r3]
 651:Core/Src/main.c ****                 // send to joint
 1391              		.loc 1 651 16 view .LVU248
 1392 01b8 9842     		cmp	r0, r3
 1393 01ba 22D1     		bne	.L140
 1394              	.L82:
 656:Core/Src/main.c ****                 // send to joint
 1395              		.loc 1 656 13 is_stmt 1 view .LVU249
 656:Core/Src/main.c ****                 // send to joint
 1396              		.loc 1 656 24 is_stmt 0 view .LVU250
 1397 01bc 4D4B     		ldr	r3, .L147+92
 1398 01be 1B68     		ldr	r3, [r3]
 1399 01c0 564A     		ldr	r2, .L147+132
 1400 01c2 1268     		ldr	r2, [r2]
 656:Core/Src/main.c ****                 // send to joint
 1401              		.loc 1 656 16 view .LVU251
 1402 01c4 9342     		cmp	r3, r2
 1403 01c6 01D0     		beq	.L83
 658:Core/Src/main.c ****             }
 1404              		.loc 1 658 17 is_stmt 1 view .LVU252
 658:Core/Src/main.c ****             }
 1405              		.loc 1 658 29 is_stmt 0 view .LVU253
 1406 01c8 544A     		ldr	r2, .L147+132
 1407 01ca 1360     		str	r3, [r2]
 1408              	.L83:
 660:Core/Src/main.c ****                 // send to joint
 1409              		.loc 1 660 13 is_stmt 1 view .LVU254
 660:Core/Src/main.c ****                 // send to joint
 1410              		.loc 1 660 24 is_stmt 0 view .LVU255
 1411 01cc 484B     		ldr	r3, .L147+88
 1412 01ce 1B68     		ldr	r3, [r3]
 1413 01d0 534A     		ldr	r2, .L147+136
 1414 01d2 1268     		ldr	r2, [r2]
 660:Core/Src/main.c ****                 // send to joint
 1415              		.loc 1 660 16 view .LVU256
 1416 01d4 9342     		cmp	r3, r2
 1417 01d6 01D0     		beq	.L84
 662:Core/Src/main.c ****             }
 1418              		.loc 1 662 17 is_stmt 1 view .LVU257
 662:Core/Src/main.c ****             }
 1419              		.loc 1 662 29 is_stmt 0 view .LVU258
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 46


 1420 01d8 514A     		ldr	r2, .L147+136
 1421 01da 1360     		str	r3, [r2]
 1422              	.L84:
 664:Core/Src/main.c ****                 // send to actuator
 1423              		.loc 1 664 13 is_stmt 1 view .LVU259
 664:Core/Src/main.c ****                 // send to actuator
 1424              		.loc 1 664 26 is_stmt 0 view .LVU260
 1425 01dc 434B     		ldr	r3, .L147+84
 1426 01de 1B68     		ldr	r3, [r3]
 1427 01e0 504A     		ldr	r2, .L147+140
 1428 01e2 1268     		ldr	r2, [r2]
 664:Core/Src/main.c ****                 // send to actuator
 1429              		.loc 1 664 16 view .LVU261
 1430 01e4 9342     		cmp	r3, r2
 1431 01e6 C4D0     		beq	.L77
 666:Core/Src/main.c ****             }
 1432              		.loc 1 666 17 is_stmt 1 view .LVU262
 666:Core/Src/main.c ****             }
 1433              		.loc 1 666 31 is_stmt 0 view .LVU263
 1434 01e8 4E4A     		ldr	r2, .L147+140
 1435 01ea 1360     		str	r3, [r2]
 1436 01ec C1E7     		b	.L77
 1437              	.L138:
 643:Core/Src/main.c ****                 Joint1Set(joint1);
 1438              		.loc 1 643 17 is_stmt 1 view .LVU264
 643:Core/Src/main.c ****                 Joint1Set(joint1);
 1439              		.loc 1 643 29 is_stmt 0 view .LVU265
 1440 01ee 484B     		ldr	r3, .L147+120
 1441 01f0 1860     		str	r0, [r3]
 644:Core/Src/main.c ****             }
 1442              		.loc 1 644 17 is_stmt 1 view .LVU266
 1443 01f2 FFF7FEFF 		bl	Joint1Set
 1444              	.LVL103:
 1445 01f6 D5E7     		b	.L80
 1446              	.L139:
 648:Core/Src/main.c ****                 Joint2Set(joint2);
 1447              		.loc 1 648 17 view .LVU267
 648:Core/Src/main.c ****                 Joint2Set(joint2);
 1448              		.loc 1 648 29 is_stmt 0 view .LVU268
 1449 01f8 464B     		ldr	r3, .L147+124
 1450 01fa 1860     		str	r0, [r3]
 649:Core/Src/main.c ****             }
 1451              		.loc 1 649 17 is_stmt 1 view .LVU269
 1452 01fc FFF7FEFF 		bl	Joint2Set
 1453              	.LVL104:
 1454 0200 D6E7     		b	.L81
 1455              	.L140:
 653:Core/Src/main.c ****                 Joint3Set(joint3);
 1456              		.loc 1 653 17 view .LVU270
 653:Core/Src/main.c ****                 Joint3Set(joint3);
 1457              		.loc 1 653 29 is_stmt 0 view .LVU271
 1458 0202 454B     		ldr	r3, .L147+128
 1459 0204 1860     		str	r0, [r3]
 654:Core/Src/main.c ****             }
 1460              		.loc 1 654 17 is_stmt 1 view .LVU272
 1461 0206 FFF7FEFF 		bl	Joint3Set
 1462              	.LVL105:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 47


 1463 020a D7E7     		b	.L82
 1464              	.LVL106:
 1465              	.L121:
 677:Core/Src/main.c **** 
 1466              		.loc 1 677 9 view .LVU273
 679:Core/Src/main.c ****         {
 1467              		.loc 1 679 9 view .LVU274
 679:Core/Src/main.c ****         {
 1468              		.loc 1 679 13 is_stmt 0 view .LVU275
 1469 020c 3C4A     		ldr	r2, .L147+104
 1470 020e 4649     		ldr	r1, .L147+144
 1471 0210 E01D     		adds	r0, r4, #7
 1472              	.LVL107:
 679:Core/Src/main.c ****         {
 1473              		.loc 1 679 13 view .LVU276
 1474 0212 FFF7FEFF 		bl	sscanf
 1475              	.LVL108:
 679:Core/Src/main.c ****         {
 1476              		.loc 1 679 12 discriminator 1 view .LVU277
 1477 0216 0128     		cmp	r0, #1
 1478 0218 03D0     		beq	.L141
 691:Core/Src/main.c ****         }
 1479              		.loc 1 691 13 is_stmt 1 view .LVU278
 1480 021a 3B48     		ldr	r0, .L147+112
 1481 021c FFF7FEFF 		bl	puts
 1482              	.LVL109:
 1483 0220 A7E7     		b	.L77
 1484              	.L141:
 682:Core/Src/main.c **** 
 1485              		.loc 1 682 13 view .LVU279
 1486 0222 374C     		ldr	r4, .L147+104
 1487              	.LVL110:
 682:Core/Src/main.c **** 
 1488              		.loc 1 682 13 is_stmt 0 view .LVU280
 1489 0224 2168     		ldr	r1, [r4]
 1490 0226 4148     		ldr	r0, .L147+148
 1491 0228 FFF7FEFF 		bl	printf
 1492              	.LVL111:
 685:Core/Src/main.c ****                 prev_joint1 = joint1;
 1493              		.loc 1 685 17 is_stmt 1 view .LVU281
 1494 022c 2068     		ldr	r0, [r4]
 1495 022e FFF7FEFF 		bl	Joint1Set
 1496              	.LVL112:
 686:Core/Src/main.c ****             //}
 1497              		.loc 1 686 17 view .LVU282
 686:Core/Src/main.c ****             //}
 1498              		.loc 1 686 29 is_stmt 0 view .LVU283
 1499 0232 2268     		ldr	r2, [r4]
 1500 0234 364B     		ldr	r3, .L147+120
 1501 0236 1A60     		str	r2, [r3]
 1502 0238 9BE7     		b	.L77
 1503              	.LVL113:
 1504              	.L122:
 698:Core/Src/main.c **** 
 1505              		.loc 1 698 9 is_stmt 1 view .LVU284
 700:Core/Src/main.c ****         {
 1506              		.loc 1 700 9 view .LVU285
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 48


 700:Core/Src/main.c ****         {
 1507              		.loc 1 700 13 is_stmt 0 view .LVU286
 1508 023a 304A     		ldr	r2, .L147+100
 1509 023c 3A49     		ldr	r1, .L147+144
 1510 023e E01D     		adds	r0, r4, #7
 1511              	.LVL114:
 700:Core/Src/main.c ****         {
 1512              		.loc 1 700 13 view .LVU287
 1513 0240 FFF7FEFF 		bl	sscanf
 1514              	.LVL115:
 700:Core/Src/main.c ****         {
 1515              		.loc 1 700 12 discriminator 1 view .LVU288
 1516 0244 0128     		cmp	r0, #1
 1517 0246 03D0     		beq	.L142
 712:Core/Src/main.c ****         }
 1518              		.loc 1 712 13 is_stmt 1 view .LVU289
 1519 0248 2F48     		ldr	r0, .L147+112
 1520 024a FFF7FEFF 		bl	puts
 1521              	.LVL116:
 1522 024e 90E7     		b	.L77
 1523              	.L142:
 703:Core/Src/main.c **** 
 1524              		.loc 1 703 13 view .LVU290
 1525 0250 2A4C     		ldr	r4, .L147+100
 1526              	.LVL117:
 703:Core/Src/main.c **** 
 1527              		.loc 1 703 13 is_stmt 0 view .LVU291
 1528 0252 2168     		ldr	r1, [r4]
 1529 0254 3648     		ldr	r0, .L147+152
 1530 0256 FFF7FEFF 		bl	printf
 1531              	.LVL118:
 706:Core/Src/main.c ****                 prev_joint2 = joint2;
 1532              		.loc 1 706 17 is_stmt 1 view .LVU292
 1533 025a 2068     		ldr	r0, [r4]
 1534 025c FFF7FEFF 		bl	Joint2Set
 1535              	.LVL119:
 707:Core/Src/main.c ****             //}
 1536              		.loc 1 707 17 view .LVU293
 707:Core/Src/main.c ****             //}
 1537              		.loc 1 707 29 is_stmt 0 view .LVU294
 1538 0260 2268     		ldr	r2, [r4]
 1539 0262 2C4B     		ldr	r3, .L147+124
 1540 0264 1A60     		str	r2, [r3]
 1541 0266 84E7     		b	.L77
 1542              	.LVL120:
 1543              	.L123:
 719:Core/Src/main.c **** 
 1544              		.loc 1 719 9 is_stmt 1 view .LVU295
 721:Core/Src/main.c ****         {
 1545              		.loc 1 721 9 view .LVU296
 721:Core/Src/main.c ****         {
 1546              		.loc 1 721 13 is_stmt 0 view .LVU297
 1547 0268 234A     		ldr	r2, .L147+96
 1548 026a 2F49     		ldr	r1, .L147+144
 1549 026c E01D     		adds	r0, r4, #7
 1550              	.LVL121:
 721:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 49


 1551              		.loc 1 721 13 view .LVU298
 1552 026e FFF7FEFF 		bl	sscanf
 1553              	.LVL122:
 721:Core/Src/main.c ****         {
 1554              		.loc 1 721 12 discriminator 1 view .LVU299
 1555 0272 0128     		cmp	r0, #1
 1556 0274 03D0     		beq	.L143
 733:Core/Src/main.c ****         }
 1557              		.loc 1 733 13 is_stmt 1 view .LVU300
 1558 0276 2448     		ldr	r0, .L147+112
 1559 0278 FFF7FEFF 		bl	puts
 1560              	.LVL123:
 1561 027c 79E7     		b	.L77
 1562              	.L143:
 724:Core/Src/main.c **** 
 1563              		.loc 1 724 13 view .LVU301
 1564 027e 1E4C     		ldr	r4, .L147+96
 1565              	.LVL124:
 724:Core/Src/main.c **** 
 1566              		.loc 1 724 13 is_stmt 0 view .LVU302
 1567 0280 2168     		ldr	r1, [r4]
 1568 0282 2C48     		ldr	r0, .L147+156
 1569 0284 FFF7FEFF 		bl	printf
 1570              	.LVL125:
 727:Core/Src/main.c ****                 prev_joint3 = joint3;
 1571              		.loc 1 727 17 is_stmt 1 view .LVU303
 1572 0288 2068     		ldr	r0, [r4]
 1573 028a FFF7FEFF 		bl	Joint3Set
 1574              	.LVL126:
 728:Core/Src/main.c ****             //}
 1575              		.loc 1 728 17 view .LVU304
 728:Core/Src/main.c ****             //}
 1576              		.loc 1 728 29 is_stmt 0 view .LVU305
 1577 028e 2268     		ldr	r2, [r4]
 1578 0290 214B     		ldr	r3, .L147+128
 1579 0292 1A60     		str	r2, [r3]
 1580 0294 6DE7     		b	.L77
 1581              	.L148:
 1582 0296 00BF     		.align	2
 1583              	.L147:
 1584 0298 00000000 		.word	.LC2
 1585 029c 58000000 		.word	.LC6
 1586 02a0 78000000 		.word	.LC9
 1587 02a4 94000000 		.word	.LC11
 1588 02a8 B0000000 		.word	.LC13
 1589 02ac CC000000 		.word	.LC15
 1590 02b0 E8000000 		.word	.LC17
 1591 02b4 08010000 		.word	.LC19
 1592 02b8 10010000 		.word	.LC20
 1593 02bc 18010000 		.word	.LC21
 1594 02c0 20010000 		.word	.LC22
 1595 02c4 28010000 		.word	.LC23
 1596 02c8 30010000 		.word	.LC24
 1597 02cc 38010000 		.word	.LC25
 1598 02d0 58010000 		.word	.LC27
 1599 02d4 70010000 		.word	.LC29
 1600 02d8 D8010000 		.word	.LC36
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 50


 1601 02dc F0010000 		.word	.LC38
 1602 02e0 08020000 		.word	.LC40
 1603 02e4 00000000 		.word	injectFlag
 1604 02e8 10020000 		.word	.LC41
 1605 02ec 00000000 		.word	actuator
 1606 02f0 00000000 		.word	joint5
 1607 02f4 00000000 		.word	joint4
 1608 02f8 00000000 		.word	joint3
 1609 02fc 00000000 		.word	joint2
 1610 0300 00000000 		.word	joint1
 1611 0304 04000000 		.word	.LC3
 1612 0308 44000000 		.word	.LC5
 1613 030c 1C000000 		.word	.LC4
 1614 0310 00000000 		.word	prev_joint1
 1615 0314 00000000 		.word	prev_joint2
 1616 0318 00000000 		.word	prev_joint3
 1617 031c 00000000 		.word	prev_joint4
 1618 0320 00000000 		.word	prev_joint5
 1619 0324 00000000 		.word	prev_actuator
 1620 0328 60000000 		.word	.LC7
 1621 032c 64000000 		.word	.LC8
 1622 0330 80000000 		.word	.LC10
 1623 0334 9C000000 		.word	.LC12
 1624              	.LVL127:
 1625              	.L124:
 740:Core/Src/main.c **** 
 1626              		.loc 1 740 9 is_stmt 1 view .LVU306
 742:Core/Src/main.c ****         {
 1627              		.loc 1 742 9 view .LVU307
 742:Core/Src/main.c ****         {
 1628              		.loc 1 742 13 is_stmt 0 view .LVU308
 1629 0338 5F4A     		ldr	r2, .L149
 1630 033a 6049     		ldr	r1, .L149+4
 1631 033c E01D     		adds	r0, r4, #7
 1632              	.LVL128:
 742:Core/Src/main.c ****         {
 1633              		.loc 1 742 13 view .LVU309
 1634 033e FFF7FEFF 		bl	sscanf
 1635              	.LVL129:
 742:Core/Src/main.c ****         {
 1636              		.loc 1 742 12 discriminator 1 view .LVU310
 1637 0342 0128     		cmp	r0, #1
 1638 0344 03D0     		beq	.L144
 754:Core/Src/main.c ****         }
 1639              		.loc 1 754 13 is_stmt 1 view .LVU311
 1640 0346 5E48     		ldr	r0, .L149+8
 1641 0348 FFF7FEFF 		bl	puts
 1642              	.LVL130:
 1643 034c 11E7     		b	.L77
 1644              	.L144:
 745:Core/Src/main.c **** 
 1645              		.loc 1 745 13 view .LVU312
 1646 034e 5A4C     		ldr	r4, .L149
 1647              	.LVL131:
 745:Core/Src/main.c **** 
 1648              		.loc 1 745 13 is_stmt 0 view .LVU313
 1649 0350 2168     		ldr	r1, [r4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 51


 1650 0352 5C48     		ldr	r0, .L149+12
 1651 0354 FFF7FEFF 		bl	printf
 1652              	.LVL132:
 748:Core/Src/main.c ****                 prev_joint4 = joint4;
 1653              		.loc 1 748 17 is_stmt 1 view .LVU314
 1654 0358 2068     		ldr	r0, [r4]
 1655 035a FFF7FEFF 		bl	Joint4Set
 1656              	.LVL133:
 749:Core/Src/main.c ****             //}
 1657              		.loc 1 749 17 view .LVU315
 749:Core/Src/main.c ****             //}
 1658              		.loc 1 749 29 is_stmt 0 view .LVU316
 1659 035e 2268     		ldr	r2, [r4]
 1660 0360 594B     		ldr	r3, .L149+16
 1661 0362 1A60     		str	r2, [r3]
 1662 0364 05E7     		b	.L77
 1663              	.LVL134:
 1664              	.L125:
 761:Core/Src/main.c **** 
 1665              		.loc 1 761 9 is_stmt 1 view .LVU317
 763:Core/Src/main.c ****         {
 1666              		.loc 1 763 9 view .LVU318
 763:Core/Src/main.c ****         {
 1667              		.loc 1 763 13 is_stmt 0 view .LVU319
 1668 0366 594A     		ldr	r2, .L149+20
 1669 0368 5449     		ldr	r1, .L149+4
 1670 036a E01D     		adds	r0, r4, #7
 1671              	.LVL135:
 763:Core/Src/main.c ****         {
 1672              		.loc 1 763 13 view .LVU320
 1673 036c FFF7FEFF 		bl	sscanf
 1674              	.LVL136:
 763:Core/Src/main.c ****         {
 1675              		.loc 1 763 12 discriminator 1 view .LVU321
 1676 0370 0128     		cmp	r0, #1
 1677 0372 03D0     		beq	.L145
 775:Core/Src/main.c ****         }
 1678              		.loc 1 775 13 is_stmt 1 view .LVU322
 1679 0374 5248     		ldr	r0, .L149+8
 1680 0376 FFF7FEFF 		bl	puts
 1681              	.LVL137:
 1682 037a FAE6     		b	.L77
 1683              	.L145:
 766:Core/Src/main.c **** 
 1684              		.loc 1 766 13 view .LVU323
 1685 037c 534C     		ldr	r4, .L149+20
 1686              	.LVL138:
 766:Core/Src/main.c **** 
 1687              		.loc 1 766 13 is_stmt 0 view .LVU324
 1688 037e 2168     		ldr	r1, [r4]
 1689 0380 5348     		ldr	r0, .L149+24
 1690 0382 FFF7FEFF 		bl	printf
 1691              	.LVL139:
 769:Core/Src/main.c ****                 prev_joint5 = joint5;
 1692              		.loc 1 769 17 is_stmt 1 view .LVU325
 1693 0386 2068     		ldr	r0, [r4]
 1694 0388 FFF7FEFF 		bl	Joint5Set
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 52


 1695              	.LVL140:
 770:Core/Src/main.c ****             //}
 1696              		.loc 1 770 17 view .LVU326
 770:Core/Src/main.c ****             //}
 1697              		.loc 1 770 29 is_stmt 0 view .LVU327
 1698 038c 2268     		ldr	r2, [r4]
 1699 038e 514B     		ldr	r3, .L149+28
 1700 0390 1A60     		str	r2, [r3]
 1701 0392 EEE6     		b	.L77
 1702              	.LVL141:
 1703              	.L126:
 782:Core/Src/main.c **** 
 1704              		.loc 1 782 9 is_stmt 1 view .LVU328
 784:Core/Src/main.c ****         {
 1705              		.loc 1 784 9 view .LVU329
 784:Core/Src/main.c ****         {
 1706              		.loc 1 784 13 is_stmt 0 view .LVU330
 1707 0394 504A     		ldr	r2, .L149+32
 1708 0396 4949     		ldr	r1, .L149+4
 1709 0398 04F10900 		add	r0, r4, #9
 1710              	.LVL142:
 784:Core/Src/main.c ****         {
 1711              		.loc 1 784 13 view .LVU331
 1712 039c FFF7FEFF 		bl	sscanf
 1713              	.LVL143:
 784:Core/Src/main.c ****         {
 1714              		.loc 1 784 12 discriminator 1 view .LVU332
 1715 03a0 0128     		cmp	r0, #1
 1716 03a2 03D0     		beq	.L146
 796:Core/Src/main.c ****         }
 1717              		.loc 1 796 13 is_stmt 1 view .LVU333
 1718 03a4 4648     		ldr	r0, .L149+8
 1719 03a6 FFF7FEFF 		bl	puts
 1720              	.LVL144:
 1721 03aa E2E6     		b	.L77
 1722              	.L146:
 787:Core/Src/main.c **** 
 1723              		.loc 1 787 13 view .LVU334
 1724 03ac 4A4C     		ldr	r4, .L149+32
 1725              	.LVL145:
 787:Core/Src/main.c **** 
 1726              		.loc 1 787 13 is_stmt 0 view .LVU335
 1727 03ae 2168     		ldr	r1, [r4]
 1728 03b0 4A48     		ldr	r0, .L149+36
 1729 03b2 FFF7FEFF 		bl	printf
 1730              	.LVL146:
 790:Core/Src/main.c ****                 prev_actuator = actuator;
 1731              		.loc 1 790 17 is_stmt 1 view .LVU336
 1732 03b6 2268     		ldr	r2, [r4]
 791:Core/Src/main.c ****             //}
 1733              		.loc 1 791 17 view .LVU337
 791:Core/Src/main.c ****             //}
 1734              		.loc 1 791 31 is_stmt 0 view .LVU338
 1735 03b8 494B     		ldr	r3, .L149+40
 1736 03ba 1A60     		str	r2, [r3]
 1737 03bc D9E6     		b	.L77
 1738              	.LVL147:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 53


 1739              	.L127:
 802:Core/Src/main.c ****     }
 1740              		.loc 1 802 9 is_stmt 1 view .LVU339
 1741              	.LBB14:
 802:Core/Src/main.c ****     }
 1742              		.loc 1 802 9 view .LVU340
 802:Core/Src/main.c ****     }
 1743              		.loc 1 802 9 view .LVU341
 1744 03be 494B     		ldr	r3, .L149+44
 1745 03c0 0493     		str	r3, [sp, #16]
 1746              	.LVL148:
 802:Core/Src/main.c ****     }
 1747              		.loc 1 802 9 discriminator 1 view .LVU342
 1748              	.LBB15:
 802:Core/Src/main.c ****     }
 1749              		.loc 1 802 9 discriminator 1 view .LVU343
 802:Core/Src/main.c ****     }
 1750              		.loc 1 802 9 is_stmt 0 view .LVU344
 1751 03c2 04E0     		b	.L99
 1752              	.LVL149:
 1753              	.L100:
 802:Core/Src/main.c ****     }
 1754              		.loc 1 802 9 is_stmt 1 discriminator 3 view .LVU345
 1755 03c4 04AB     		add	r3, sp, #16
 1756 03c6 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1757 03c8 FFF7FEFF 		bl	__io_putchar_usart6
 1758              	.LVL150:
 802:Core/Src/main.c ****     }
 1759              		.loc 1 802 9 discriminator 3 view .LVU346
 1760 03cc 0135     		adds	r5, r5, #1
 1761              	.LVL151:
 1762              	.L99:
 802:Core/Src/main.c ****     }
 1763              		.loc 1 802 9 discriminator 2 view .LVU347
 1764 03ce 022D     		cmp	r5, #2
 1765 03d0 F8DD     		ble	.L100
 1766 03d2 CEE6     		b	.L77
 1767              	.LVL152:
 1768              	.L128:
 802:Core/Src/main.c ****     }
 1769              		.loc 1 802 9 is_stmt 0 discriminator 2 view .LVU348
 1770              	.LBE15:
 1771              	.LBE14:
 807:Core/Src/main.c ****     }
 1772              		.loc 1 807 9 is_stmt 1 view .LVU349
 1773              	.LBB16:
 807:Core/Src/main.c ****     }
 1774              		.loc 1 807 9 view .LVU350
 807:Core/Src/main.c ****     }
 1775              		.loc 1 807 9 view .LVU351
 1776 03d4 434B     		ldr	r3, .L149+44
 1777 03d6 0493     		str	r3, [sp, #16]
 1778              	.LVL153:
 807:Core/Src/main.c ****     }
 1779              		.loc 1 807 9 discriminator 1 view .LVU352
 1780              	.LBB17:
 807:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 54


 1781              		.loc 1 807 9 discriminator 1 view .LVU353
 807:Core/Src/main.c ****     }
 1782              		.loc 1 807 9 is_stmt 0 view .LVU354
 1783 03d8 04E0     		b	.L102
 1784              	.LVL154:
 1785              	.L103:
 807:Core/Src/main.c ****     }
 1786              		.loc 1 807 9 is_stmt 1 discriminator 3 view .LVU355
 1787 03da 04AB     		add	r3, sp, #16
 1788 03dc 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1789 03de FFF7FEFF 		bl	__io_putchar_usart2
 1790              	.LVL155:
 807:Core/Src/main.c ****     }
 1791              		.loc 1 807 9 discriminator 3 view .LVU356
 1792 03e2 0135     		adds	r5, r5, #1
 1793              	.LVL156:
 1794              	.L102:
 807:Core/Src/main.c ****     }
 1795              		.loc 1 807 9 discriminator 2 view .LVU357
 1796 03e4 022D     		cmp	r5, #2
 1797 03e6 F8DD     		ble	.L103
 1798 03e8 C3E6     		b	.L77
 1799              	.LVL157:
 1800              	.L129:
 807:Core/Src/main.c ****     }
 1801              		.loc 1 807 9 is_stmt 0 discriminator 2 view .LVU358
 1802              	.LBE17:
 1803              	.LBE16:
 812:Core/Src/main.c ****     }
 1804              		.loc 1 812 9 is_stmt 1 view .LVU359
 1805              	.LBB18:
 812:Core/Src/main.c ****     }
 1806              		.loc 1 812 9 view .LVU360
 812:Core/Src/main.c ****     }
 1807              		.loc 1 812 9 view .LVU361
 1808 03ea 3E4B     		ldr	r3, .L149+44
 1809 03ec 0493     		str	r3, [sp, #16]
 1810              	.LVL158:
 812:Core/Src/main.c ****     }
 1811              		.loc 1 812 9 discriminator 1 view .LVU362
 1812              	.LBB19:
 812:Core/Src/main.c ****     }
 1813              		.loc 1 812 9 discriminator 1 view .LVU363
 812:Core/Src/main.c ****     }
 1814              		.loc 1 812 9 is_stmt 0 view .LVU364
 1815 03ee 04E0     		b	.L105
 1816              	.LVL159:
 1817              	.L106:
 812:Core/Src/main.c ****     }
 1818              		.loc 1 812 9 is_stmt 1 discriminator 3 view .LVU365
 1819 03f0 04AB     		add	r3, sp, #16
 1820 03f2 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1821 03f4 FFF7FEFF 		bl	__io_putchar_usart3
 1822              	.LVL160:
 812:Core/Src/main.c ****     }
 1823              		.loc 1 812 9 discriminator 3 view .LVU366
 1824 03f8 0135     		adds	r5, r5, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 55


 1825              	.LVL161:
 1826              	.L105:
 812:Core/Src/main.c ****     }
 1827              		.loc 1 812 9 discriminator 2 view .LVU367
 1828 03fa 022D     		cmp	r5, #2
 1829 03fc F8DD     		ble	.L106
 1830 03fe B8E6     		b	.L77
 1831              	.LVL162:
 1832              	.L130:
 812:Core/Src/main.c ****     }
 1833              		.loc 1 812 9 is_stmt 0 discriminator 2 view .LVU368
 1834              	.LBE19:
 1835              	.LBE18:
 817:Core/Src/main.c ****       }
 1836              		.loc 1 817 11 is_stmt 1 view .LVU369
 1837              	.LBB20:
 817:Core/Src/main.c ****       }
 1838              		.loc 1 817 11 view .LVU370
 817:Core/Src/main.c ****       }
 1839              		.loc 1 817 11 view .LVU371
 1840 0400 384B     		ldr	r3, .L149+44
 1841 0402 0493     		str	r3, [sp, #16]
 1842              	.LVL163:
 817:Core/Src/main.c ****       }
 1843              		.loc 1 817 11 discriminator 1 view .LVU372
 1844              	.LBB21:
 817:Core/Src/main.c ****       }
 1845              		.loc 1 817 11 discriminator 1 view .LVU373
 817:Core/Src/main.c ****       }
 1846              		.loc 1 817 11 is_stmt 0 view .LVU374
 1847 0404 04E0     		b	.L108
 1848              	.LVL164:
 1849              	.L109:
 817:Core/Src/main.c ****       }
 1850              		.loc 1 817 11 is_stmt 1 discriminator 3 view .LVU375
 1851 0406 04AB     		add	r3, sp, #16
 1852 0408 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1853 040a FFF7FEFF 		bl	__io_putchar_uart4
 1854              	.LVL165:
 817:Core/Src/main.c ****       }
 1855              		.loc 1 817 11 discriminator 3 view .LVU376
 1856 040e 0135     		adds	r5, r5, #1
 1857              	.LVL166:
 1858              	.L108:
 817:Core/Src/main.c ****       }
 1859              		.loc 1 817 11 discriminator 2 view .LVU377
 1860 0410 022D     		cmp	r5, #2
 1861 0412 F8DD     		ble	.L109
 1862 0414 ADE6     		b	.L77
 1863              	.LVL167:
 1864              	.L131:
 817:Core/Src/main.c ****       }
 1865              		.loc 1 817 11 is_stmt 0 discriminator 2 view .LVU378
 1866              	.LBE21:
 1867              	.LBE20:
 822:Core/Src/main.c ****       }
 1868              		.loc 1 822 11 is_stmt 1 view .LVU379
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 56


 1869              	.LBB22:
 822:Core/Src/main.c ****       }
 1870              		.loc 1 822 11 view .LVU380
 822:Core/Src/main.c ****       }
 1871              		.loc 1 822 11 view .LVU381
 1872 0416 334B     		ldr	r3, .L149+44
 1873 0418 0493     		str	r3, [sp, #16]
 1874              	.LVL168:
 822:Core/Src/main.c ****       }
 1875              		.loc 1 822 11 discriminator 1 view .LVU382
 1876              	.LBB23:
 822:Core/Src/main.c ****       }
 1877              		.loc 1 822 11 discriminator 1 view .LVU383
 822:Core/Src/main.c ****       }
 1878              		.loc 1 822 11 is_stmt 0 view .LVU384
 1879 041a 04E0     		b	.L111
 1880              	.LVL169:
 1881              	.L112:
 822:Core/Src/main.c ****       }
 1882              		.loc 1 822 11 is_stmt 1 discriminator 3 view .LVU385
 1883 041c 04AB     		add	r3, sp, #16
 1884 041e 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1885 0420 FFF7FEFF 		bl	__io_putchar_uart5
 1886              	.LVL170:
 822:Core/Src/main.c ****       }
 1887              		.loc 1 822 11 discriminator 3 view .LVU386
 1888 0424 0135     		adds	r5, r5, #1
 1889              	.LVL171:
 1890              	.L111:
 822:Core/Src/main.c ****       }
 1891              		.loc 1 822 11 discriminator 2 view .LVU387
 1892 0426 022D     		cmp	r5, #2
 1893 0428 F8DD     		ble	.L112
 1894 042a A2E6     		b	.L77
 1895              	.LVL172:
 1896              	.L132:
 822:Core/Src/main.c ****       }
 1897              		.loc 1 822 11 is_stmt 0 discriminator 2 view .LVU388
 1898              	.LBE23:
 1899              	.LBE22:
 1900              	.LBB24:
 834:Core/Src/main.c ****         
 1901              		.loc 1 834 9 is_stmt 1 view .LVU389
 836:Core/Src/main.c ****         
 1902              		.loc 1 836 9 view .LVU390
 1903 042c FFF7FEFF 		bl	HomeSet
 1904              	.LVL173:
 838:Core/Src/main.c **** 
 1905              		.loc 1 838 9 view .LVU391
 1906 0430 2D48     		ldr	r0, .L149+48
 1907 0432 FFF7FEFF 		bl	puts
 1908              	.LVL174:
 1909              	.LBE24:
 1910 0436 9CE6     		b	.L77
 1911              	.LVL175:
 1912              	.L133:
 844:Core/Src/main.c ****         ledFlag = !ledFlag;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 57


 1913              		.loc 1 844 9 view .LVU392
 845:Core/Src/main.c ****         
 1914              		.loc 1 845 9 view .LVU393
 845:Core/Src/main.c ****         
 1915              		.loc 1 845 19 is_stmt 0 view .LVU394
 1916 0438 2C4A     		ldr	r2, .L149+52
 1917 043a 1368     		ldr	r3, [r2]
 1918 043c B3FA83F3 		clz	r3, r3
 1919 0440 5B09     		lsrs	r3, r3, #5
 845:Core/Src/main.c ****         
 1920              		.loc 1 845 17 view .LVU395
 1921 0442 1360     		str	r3, [r2]
 847:Core/Src/main.c **** 
 1922              		.loc 1 847 9 is_stmt 1 view .LVU396
 1923 0444 2A48     		ldr	r0, .L149+56
 1924 0446 FFF7FEFF 		bl	puts
 1925              	.LVL176:
 1926 044a 92E6     		b	.L77
 1927              	.LVL177:
 1928              	.L134:
 854:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 1929              		.loc 1 854 8 view .LVU397
 1930 044c 294B     		ldr	r3, .L149+60
 1931 044e 1968     		ldr	r1, [r3]
 1932 0450 2948     		ldr	r0, .L149+64
 1933 0452 FFF7FEFF 		bl	printf
 1934              	.LVL178:
 855:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 1935              		.loc 1 855 8 view .LVU398
 1936 0456 294B     		ldr	r3, .L149+68
 1937 0458 1968     		ldr	r1, [r3]
 1938 045a 2948     		ldr	r0, .L149+72
 1939 045c FFF7FEFF 		bl	printf
 1940              	.LVL179:
 856:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 1941              		.loc 1 856 8 view .LVU399
 1942 0460 284B     		ldr	r3, .L149+76
 1943 0462 1968     		ldr	r1, [r3]
 1944 0464 2848     		ldr	r0, .L149+80
 1945 0466 FFF7FEFF 		bl	printf
 1946              	.LVL180:
 857:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 1947              		.loc 1 857 8 view .LVU400
 1948 046a 134B     		ldr	r3, .L149
 1949 046c 1968     		ldr	r1, [r3]
 1950 046e 2748     		ldr	r0, .L149+84
 1951 0470 FFF7FEFF 		bl	printf
 1952              	.LVL181:
 858:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 1953              		.loc 1 858 8 view .LVU401
 1954 0474 154B     		ldr	r3, .L149+20
 1955 0476 1968     		ldr	r1, [r3]
 1956 0478 2548     		ldr	r0, .L149+88
 1957 047a FFF7FEFF 		bl	printf
 1958              	.LVL182:
 859:Core/Src/main.c ****     }
 1959              		.loc 1 859 8 view .LVU402
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 58


 1960 047e 164B     		ldr	r3, .L149+32
 1961 0480 1968     		ldr	r1, [r3]
 1962 0482 2448     		ldr	r0, .L149+92
 1963 0484 FFF7FEFF 		bl	printf
 1964              	.LVL183:
 1965 0488 73E6     		b	.L77
 1966              	.L135:
 864:Core/Src/main.c ****         inject(INJECT);
 1967              		.loc 1 864 9 view .LVU403
 864:Core/Src/main.c ****         inject(INJECT);
 1968              		.loc 1 864 20 is_stmt 0 view .LVU404
 1969 048a 0120     		movs	r0, #1
 1970 048c 224B     		ldr	r3, .L149+96
 1971 048e 1860     		str	r0, [r3]
 865:Core/Src/main.c ****         printf("injecting...\r\n");
 1972              		.loc 1 865 9 is_stmt 1 view .LVU405
 1973 0490 FFF7FEFF 		bl	inject
 1974              	.LVL184:
 866:Core/Src/main.c ****     }
 1975              		.loc 1 866 9 view .LVU406
 1976 0494 2148     		ldr	r0, .L149+100
 1977 0496 FFF7FEFF 		bl	puts
 1978              	.LVL185:
 1979 049a 6AE6     		b	.L77
 1980              	.L136:
 871:Core/Src/main.c ****         inject(RETRACT);
 1981              		.loc 1 871 9 view .LVU407
 871:Core/Src/main.c ****         inject(RETRACT);
 1982              		.loc 1 871 20 is_stmt 0 view .LVU408
 1983 049c 0220     		movs	r0, #2
 1984 049e 1E4B     		ldr	r3, .L149+96
 1985 04a0 1860     		str	r0, [r3]
 872:Core/Src/main.c ****         printf("retracting...\r\n");
 1986              		.loc 1 872 9 is_stmt 1 view .LVU409
 1987 04a2 FFF7FEFF 		bl	inject
 1988              	.LVL186:
 873:Core/Src/main.c ****     }
 1989              		.loc 1 873 9 view .LVU410
 1990 04a6 1E48     		ldr	r0, .L149+104
 1991 04a8 FFF7FEFF 		bl	puts
 1992              	.LVL187:
 1993 04ac 61E6     		b	.L77
 1994              	.L118:
 886:Core/Src/main.c ****     }
 1995              		.loc 1 886 9 view .LVU411
 1996 04ae 2146     		mov	r1, r4
 1997 04b0 1C48     		ldr	r0, .L149+108
 1998 04b2 FFF7FEFF 		bl	printf
 1999              	.LVL188:
 888:Core/Src/main.c **** 
 2000              		.loc 1 888 1 is_stmt 0 view .LVU412
 2001 04b6 5CE6     		b	.L77
 2002              	.L150:
 2003              		.align	2
 2004              	.L149:
 2005 04b8 00000000 		.word	joint4
 2006 04bc 60000000 		.word	.LC7
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 59


 2007 04c0 44000000 		.word	.LC5
 2008 04c4 B8000000 		.word	.LC14
 2009 04c8 00000000 		.word	prev_joint4
 2010 04cc 00000000 		.word	joint5
 2011 04d0 D4000000 		.word	.LC16
 2012 04d4 00000000 		.word	prev_joint5
 2013 04d8 00000000 		.word	actuator
 2014 04dc F4000000 		.word	.LC18
 2015 04e0 00000000 		.word	prev_actuator
 2016 04e4 720D0A00 		.word	658802
 2017 04e8 40010000 		.word	.LC26
 2018 04ec 00000000 		.word	ledFlag
 2019 04f0 60010000 		.word	.LC28
 2020 04f4 00000000 		.word	joint1
 2021 04f8 78010000 		.word	.LC30
 2022 04fc 00000000 		.word	joint2
 2023 0500 88010000 		.word	.LC31
 2024 0504 00000000 		.word	joint3
 2025 0508 98010000 		.word	.LC32
 2026 050c A8010000 		.word	.LC33
 2027 0510 B8010000 		.word	.LC34
 2028 0514 C8010000 		.word	.LC35
 2029 0518 00000000 		.word	injectFlag
 2030 051c E0010000 		.word	.LC37
 2031 0520 F8010000 		.word	.LC39
 2032 0524 1C020000 		.word	.LC42
 2033              		.cfi_endproc
 2034              	.LFE251:
 2036              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 2037              		.align	2
 2038              	.LC43:
 2039 0000 42756666 		.ascii	"Buffer overflow\015\000"
 2039      6572206F 
 2039      76657266 
 2039      6C6F770D 
 2039      00
 2040              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2041              		.align	1
 2042              		.global	HAL_UART_RxCpltCallback
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2047              	HAL_UART_RxCpltCallback:
 2048              	.LVL189:
 2049              	.LFB250:
 396:Core/Src/main.c **** 
 2050              		.loc 1 396 1 is_stmt 1 view -0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 396:Core/Src/main.c **** 
 2054              		.loc 1 396 1 is_stmt 0 view .LVU414
 2055 0000 10B5     		push	{r4, lr}
 2056              	.LCFI39:
 2057              		.cfi_def_cfa_offset 8
 2058              		.cfi_offset 4, -8
 2059              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 60


 398:Core/Src/main.c **** 
 2060              		.loc 1 398 5 is_stmt 1 view .LVU415
 398:Core/Src/main.c **** 
 2061              		.loc 1 398 14 is_stmt 0 view .LVU416
 2062 0002 0368     		ldr	r3, [r0]
 398:Core/Src/main.c **** 
 2063              		.loc 1 398 8 view .LVU417
 2064 0004 9C4A     		ldr	r2, .L192
 2065 0006 9342     		cmp	r3, r2
 2066 0008 2DD0     		beq	.L176
 431:Core/Src/main.c ****         // Store received byte in buffer
 2067              		.loc 1 431 10 is_stmt 1 view .LVU418
 431:Core/Src/main.c ****         // Store received byte in buffer
 2068              		.loc 1 431 12 is_stmt 0 view .LVU419
 2069 000a 9C4A     		ldr	r2, .L192+4
 2070 000c 9342     		cmp	r3, r2
 2071 000e 5AD0     		beq	.L177
 469:Core/Src/main.c ****         // Store received byte in buffer
 2072              		.loc 1 469 10 is_stmt 1 view .LVU420
 469:Core/Src/main.c ****         // Store received byte in buffer
 2073              		.loc 1 469 12 is_stmt 0 view .LVU421
 2074 0010 9B4A     		ldr	r2, .L192+8
 2075 0012 9342     		cmp	r3, r2
 2076 0014 00F09F80 		beq	.L178
 506:Core/Src/main.c ****         // Store received byte in buffer
 2077              		.loc 1 506 12 is_stmt 1 view .LVU422
 506:Core/Src/main.c ****         // Store received byte in buffer
 2078              		.loc 1 506 14 is_stmt 0 view .LVU423
 2079 0018 9A4A     		ldr	r2, .L192+12
 2080 001a 9342     		cmp	r3, r2
 2081 001c 00F0E380 		beq	.L179
 543:Core/Src/main.c ****         // Store received byte in buffer
 2082              		.loc 1 543 12 is_stmt 1 view .LVU424
 543:Core/Src/main.c ****         // Store received byte in buffer
 2083              		.loc 1 543 14 is_stmt 0 view .LVU425
 2084 0020 994A     		ldr	r2, .L192+16
 2085 0022 9342     		cmp	r3, r2
 2086 0024 00F05481 		beq	.L180
 580:Core/Src/main.c ****         // Store received byte in buffer
 2087              		.loc 1 580 12 is_stmt 1 view .LVU426
 580:Core/Src/main.c ****         // Store received byte in buffer
 2088              		.loc 1 580 14 is_stmt 0 view .LVU427
 2089 0028 984A     		ldr	r2, .L192+20
 2090 002a 9342     		cmp	r3, r2
 2091 002c 34D1     		bne	.L151
 582:Core/Src/main.c ****         {
 2092              		.loc 1 582 9 is_stmt 1 view .LVU428
 582:Core/Src/main.c ****         {
 2093              		.loc 1 582 26 is_stmt 0 view .LVU429
 2094 002e 984B     		ldr	r3, .L192+24
 2095 0030 1B88     		ldrh	r3, [r3]
 2096 0032 9BB2     		uxth	r3, r3
 582:Core/Src/main.c ****         {
 2097              		.loc 1 582 12 view .LVU430
 2098 0034 FE2B     		cmp	r3, #254
 2099 0036 00F2BB81 		bhi	.L172
 584:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 61


 2100              		.loc 1 584 13 is_stmt 1 view .LVU431
 584:Core/Src/main.c **** 
 2101              		.loc 1 584 37 is_stmt 0 view .LVU432
 2102 003a 9549     		ldr	r1, .L192+24
 2103 003c 0B88     		ldrh	r3, [r1]
 2104 003e 9BB2     		uxth	r3, r3
 2105 0040 5A1C     		adds	r2, r3, #1
 2106 0042 92B2     		uxth	r2, r2
 2107 0044 0A80     		strh	r2, [r1]	@ movhi
 584:Core/Src/main.c **** 
 2108              		.loc 1 584 41 view .LVU433
 2109 0046 9349     		ldr	r1, .L192+28
 2110 0048 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2111 004a D2B2     		uxtb	r2, r2
 2112 004c 9248     		ldr	r0, .L192+32
 2113              	.LVL190:
 584:Core/Src/main.c **** 
 2114              		.loc 1 584 41 view .LVU434
 2115 004e C254     		strb	r2, [r0, r3]
 587:Core/Src/main.c ****             {
 2116              		.loc 1 587 13 is_stmt 1 view .LVU435
 587:Core/Src/main.c ****             {
 2117              		.loc 1 587 26 is_stmt 0 view .LVU436
 2118 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2119 0052 DBB2     		uxtb	r3, r3
 587:Core/Src/main.c ****             {
 2120              		.loc 1 587 16 view .LVU437
 2121 0054 0A2B     		cmp	r3, #10
 2122 0056 00F08381 		beq	.L181
 2123              	.L173:
 613:Core/Src/main.c **** 
 2124              		.loc 1 613 9 is_stmt 1 view .LVU438
 2125 005a 0122     		movs	r2, #1
 2126 005c 8D49     		ldr	r1, .L192+28
 2127 005e 8F48     		ldr	r0, .L192+36
 2128 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2129              	.LVL191:
 617:Core/Src/main.c **** 
 2130              		.loc 1 617 1 is_stmt 0 view .LVU439
 2131 0064 18E0     		b	.L151
 2132              	.LVL192:
 2133              	.L176:
 402:Core/Src/main.c ****         {
 2134              		.loc 1 402 9 is_stmt 1 view .LVU440
 402:Core/Src/main.c ****         {
 2135              		.loc 1 402 26 is_stmt 0 view .LVU441
 2136 0066 8A4B     		ldr	r3, .L192+24
 2137 0068 1B88     		ldrh	r3, [r3]
 2138 006a 9BB2     		uxth	r3, r3
 402:Core/Src/main.c ****         {
 2139              		.loc 1 402 12 view .LVU442
 2140 006c FE2B     		cmp	r3, #254
 2141 006e 23D8     		bhi	.L153
 404:Core/Src/main.c **** 
 2142              		.loc 1 404 13 is_stmt 1 view .LVU443
 404:Core/Src/main.c **** 
 2143              		.loc 1 404 37 is_stmt 0 view .LVU444
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 62


 2144 0070 8749     		ldr	r1, .L192+24
 2145 0072 0B88     		ldrh	r3, [r1]
 2146 0074 9BB2     		uxth	r3, r3
 2147 0076 5A1C     		adds	r2, r3, #1
 2148 0078 92B2     		uxth	r2, r2
 2149 007a 0A80     		strh	r2, [r1]	@ movhi
 404:Core/Src/main.c **** 
 2150              		.loc 1 404 41 view .LVU445
 2151 007c 8849     		ldr	r1, .L192+40
 2152 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2153 0080 D2B2     		uxtb	r2, r2
 2154 0082 8548     		ldr	r0, .L192+32
 2155              	.LVL193:
 404:Core/Src/main.c **** 
 2156              		.loc 1 404 41 view .LVU446
 2157 0084 C254     		strb	r2, [r0, r3]
 407:Core/Src/main.c ****             {
 2158              		.loc 1 407 13 is_stmt 1 view .LVU447
 407:Core/Src/main.c ****             {
 2159              		.loc 1 407 25 is_stmt 0 view .LVU448
 2160 0086 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2161 0088 DBB2     		uxtb	r3, r3
 407:Core/Src/main.c ****             {
 2162              		.loc 1 407 16 view .LVU449
 2163 008a 0A2B     		cmp	r3, #10
 2164 008c 05D0     		beq	.L182
 2165              	.L154:
 428:Core/Src/main.c ****     }
 2166              		.loc 1 428 9 is_stmt 1 view .LVU450
 2167 008e 0122     		movs	r2, #1
 2168 0090 8349     		ldr	r1, .L192+40
 2169 0092 8448     		ldr	r0, .L192+44
 2170 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2171              	.LVL194:
 2172              	.L151:
 617:Core/Src/main.c **** 
 2173              		.loc 1 617 1 is_stmt 0 view .LVU451
 2174 0098 10BD     		pop	{r4, pc}
 2175              	.L182:
 2176              	.LBB25:
 409:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2177              		.loc 1 409 17 is_stmt 1 view .LVU452
 409:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2178              		.loc 1 409 28 is_stmt 0 view .LVU453
 2179 009a 7D4A     		ldr	r2, .L192+24
 2180 009c 1388     		ldrh	r3, [r2]
 2181 009e 9BB2     		uxth	r3, r3
 409:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2182              		.loc 1 409 43 view .LVU454
 2183 00a0 0146     		mov	r1, r0
 2184 00a2 0020     		movs	r0, #0
 2185 00a4 C854     		strb	r0, [r1, r3]
 410:Core/Src/main.c **** 
 2186              		.loc 1 410 17 is_stmt 1 view .LVU455
 410:Core/Src/main.c **** 
 2187              		.loc 1 410 30 is_stmt 0 view .LVU456
 2188 00a6 1080     		strh	r0, [r2]	@ movhi
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 63


 413:Core/Src/main.c **** 
 2189              		.loc 1 413 17 is_stmt 1 view .LVU457
 2190 00a8 7F4C     		ldr	r4, .L192+48
 2191 00aa 2046     		mov	r0, r4
 2192 00ac FFF7FEFF 		bl	strcpy
 2193              	.LVL195:
 415:Core/Src/main.c **** 
 2194              		.loc 1 415 17 view .LVU458
 2195 00b0 2046     		mov	r0, r4
 2196 00b2 FFF7FEFF 		bl	ProcessReceivedString
 2197              	.LVL196:
 2198 00b6 EAE7     		b	.L154
 2199              	.LVL197:
 2200              	.L153:
 415:Core/Src/main.c **** 
 2201              		.loc 1 415 17 is_stmt 0 view .LVU459
 2202              	.LBE25:
 423:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2203              		.loc 1 423 13 is_stmt 1 view .LVU460
 423:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2204              		.loc 1 423 26 is_stmt 0 view .LVU461
 2205 00b8 754B     		ldr	r3, .L192+24
 2206 00ba 0022     		movs	r2, #0
 2207 00bc 1A80     		strh	r2, [r3]	@ movhi
 424:Core/Src/main.c ****         }
 2208              		.loc 1 424 13 is_stmt 1 view .LVU462
 2209 00be 7B48     		ldr	r0, .L192+52
 2210              	.LVL198:
 424:Core/Src/main.c ****         }
 2211              		.loc 1 424 13 is_stmt 0 view .LVU463
 2212 00c0 FFF7FEFF 		bl	puts
 2213              	.LVL199:
 2214 00c4 E3E7     		b	.L154
 2215              	.LVL200:
 2216              	.L177:
 433:Core/Src/main.c ****         {
 2217              		.loc 1 433 9 is_stmt 1 view .LVU464
 433:Core/Src/main.c ****         {
 2218              		.loc 1 433 26 is_stmt 0 view .LVU465
 2219 00c6 724B     		ldr	r3, .L192+24
 2220 00c8 1B88     		ldrh	r3, [r3]
 2221 00ca 9BB2     		uxth	r3, r3
 433:Core/Src/main.c ****         {
 2222              		.loc 1 433 12 view .LVU466
 2223 00cc FE2B     		cmp	r3, #254
 2224 00ce 3BD8     		bhi	.L157
 435:Core/Src/main.c **** 
 2225              		.loc 1 435 13 is_stmt 1 view .LVU467
 435:Core/Src/main.c **** 
 2226              		.loc 1 435 37 is_stmt 0 view .LVU468
 2227 00d0 6F49     		ldr	r1, .L192+24
 2228 00d2 0B88     		ldrh	r3, [r1]
 2229 00d4 9BB2     		uxth	r3, r3
 2230 00d6 5A1C     		adds	r2, r3, #1
 2231 00d8 92B2     		uxth	r2, r2
 2232 00da 0A80     		strh	r2, [r1]	@ movhi
 435:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 64


 2233              		.loc 1 435 41 view .LVU469
 2234 00dc 7449     		ldr	r1, .L192+56
 2235 00de 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2236 00e0 D2B2     		uxtb	r2, r2
 2237 00e2 6D48     		ldr	r0, .L192+32
 2238              	.LVL201:
 435:Core/Src/main.c **** 
 2239              		.loc 1 435 41 view .LVU470
 2240 00e4 C254     		strb	r2, [r0, r3]
 438:Core/Src/main.c ****             {
 2241              		.loc 1 438 13 is_stmt 1 view .LVU471
 438:Core/Src/main.c ****             {
 2242              		.loc 1 438 26 is_stmt 0 view .LVU472
 2243 00e6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2244 00e8 DBB2     		uxtb	r3, r3
 438:Core/Src/main.c ****             {
 2245              		.loc 1 438 16 view .LVU473
 2246 00ea 0A2B     		cmp	r3, #10
 2247 00ec 05D0     		beq	.L183
 2248              	.L158:
 466:Core/Src/main.c ****     }
 2249              		.loc 1 466 9 is_stmt 1 view .LVU474
 2250 00ee 0122     		movs	r2, #1
 2251 00f0 6F49     		ldr	r1, .L192+56
 2252 00f2 7048     		ldr	r0, .L192+60
 2253 00f4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2254              	.LVL202:
 2255 00f8 CEE7     		b	.L151
 2256              	.L183:
 440:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2257              		.loc 1 440 17 view .LVU475
 440:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2258              		.loc 1 440 28 is_stmt 0 view .LVU476
 2259 00fa 654A     		ldr	r2, .L192+24
 2260 00fc 1388     		ldrh	r3, [r2]
 2261 00fe 9BB2     		uxth	r3, r3
 440:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2262              		.loc 1 440 43 view .LVU477
 2263 0100 0146     		mov	r1, r0
 2264 0102 0020     		movs	r0, #0
 2265 0104 C854     		strb	r0, [r1, r3]
 441:Core/Src/main.c **** 
 2266              		.loc 1 441 17 is_stmt 1 view .LVU478
 441:Core/Src/main.c **** 
 2267              		.loc 1 441 30 is_stmt 0 view .LVU479
 2268 0106 1080     		strh	r0, [r2]	@ movhi
 444:Core/Src/main.c **** 
 2269              		.loc 1 444 17 is_stmt 1 view .LVU480
 2270 0108 674C     		ldr	r4, .L192+48
 2271 010a 2046     		mov	r0, r4
 2272 010c FFF7FEFF 		bl	strcpy
 2273              	.LVL203:
 446:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2274              		.loc 1 446 17 view .LVU481
 446:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2275              		.loc 1 446 20 is_stmt 0 view .LVU482
 2276 0110 2146     		mov	r1, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 65


 2277 0112 6948     		ldr	r0, .L192+64
 2278 0114 FFF7FEFF 		bl	strcmp
 2279              	.LVL204:
 446:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2280              		.loc 1 446 19 discriminator 1 view .LVU483
 2281 0118 70B9     		cbnz	r0, .L184
 450:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2282              		.loc 1 450 22 is_stmt 1 view .LVU484
 450:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2283              		.loc 1 450 25 is_stmt 0 view .LVU485
 2284 011a 6849     		ldr	r1, .L192+68
 2285 011c 6248     		ldr	r0, .L192+48
 2286 011e FFF7FEFF 		bl	strcmp
 2287              	.LVL205:
 450:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2288              		.loc 1 450 24 discriminator 1 view .LVU486
 2289 0122 0028     		cmp	r0, #0
 2290 0124 E3D0     		beq	.L158
 2291              	.LBB26:
 451:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2292              		.loc 1 451 19 is_stmt 1 view .LVU487
 2293 0126 604C     		ldr	r4, .L192+48
 2294 0128 2046     		mov	r0, r4
 2295 012a FFF7FEFF 		bl	ProcessReceivedString
 2296              	.LVL206:
 452:Core/Src/main.c ****                 }
 2297              		.loc 1 452 19 view .LVU488
 2298 012e 2146     		mov	r1, r4
 2299 0130 6248     		ldr	r0, .L192+68
 2300 0132 FFF7FEFF 		bl	strcpy
 2301              	.LVL207:
 2302 0136 DAE7     		b	.L158
 2303              	.L184:
 2304              	.LBE26:
 2305              	.LBB27:
 447:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2306              		.loc 1 447 19 view .LVU489
 2307 0138 2046     		mov	r0, r4
 2308 013a FFF7FEFF 		bl	ProcessReceivedString
 2309              	.LVL208:
 448:Core/Src/main.c ****                 }
 2310              		.loc 1 448 19 view .LVU490
 2311 013e 2146     		mov	r1, r4
 2312 0140 5E48     		ldr	r0, .L192+68
 2313 0142 FFF7FEFF 		bl	strcpy
 2314              	.LVL209:
 2315              	.LBE27:
 2316 0146 D2E7     		b	.L158
 2317              	.LVL210:
 2318              	.L157:
 461:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2319              		.loc 1 461 13 view .LVU491
 461:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2320              		.loc 1 461 26 is_stmt 0 view .LVU492
 2321 0148 514B     		ldr	r3, .L192+24
 2322 014a 0022     		movs	r2, #0
 2323 014c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 66


 462:Core/Src/main.c ****         }
 2324              		.loc 1 462 13 is_stmt 1 view .LVU493
 2325 014e 5748     		ldr	r0, .L192+52
 2326              	.LVL211:
 462:Core/Src/main.c ****         }
 2327              		.loc 1 462 13 is_stmt 0 view .LVU494
 2328 0150 FFF7FEFF 		bl	puts
 2329              	.LVL212:
 2330 0154 CBE7     		b	.L158
 2331              	.LVL213:
 2332              	.L178:
 471:Core/Src/main.c ****         {
 2333              		.loc 1 471 9 is_stmt 1 view .LVU495
 471:Core/Src/main.c ****         {
 2334              		.loc 1 471 26 is_stmt 0 view .LVU496
 2335 0156 4E4B     		ldr	r3, .L192+24
 2336 0158 1B88     		ldrh	r3, [r3]
 2337 015a 9BB2     		uxth	r3, r3
 471:Core/Src/main.c ****         {
 2338              		.loc 1 471 12 view .LVU497
 2339 015c FE2B     		cmp	r3, #254
 2340 015e 3BD8     		bhi	.L161
 473:Core/Src/main.c **** 
 2341              		.loc 1 473 13 is_stmt 1 view .LVU498
 473:Core/Src/main.c **** 
 2342              		.loc 1 473 37 is_stmt 0 view .LVU499
 2343 0160 4B49     		ldr	r1, .L192+24
 2344 0162 0B88     		ldrh	r3, [r1]
 2345 0164 9BB2     		uxth	r3, r3
 2346 0166 5A1C     		adds	r2, r3, #1
 2347 0168 92B2     		uxth	r2, r2
 2348 016a 0A80     		strh	r2, [r1]	@ movhi
 473:Core/Src/main.c **** 
 2349              		.loc 1 473 41 view .LVU500
 2350 016c 5449     		ldr	r1, .L192+72
 2351 016e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2352 0170 D2B2     		uxtb	r2, r2
 2353 0172 4948     		ldr	r0, .L192+32
 2354              	.LVL214:
 473:Core/Src/main.c **** 
 2355              		.loc 1 473 41 view .LVU501
 2356 0174 C254     		strb	r2, [r0, r3]
 476:Core/Src/main.c ****             {
 2357              		.loc 1 476 13 is_stmt 1 view .LVU502
 476:Core/Src/main.c ****             {
 2358              		.loc 1 476 26 is_stmt 0 view .LVU503
 2359 0176 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2360 0178 DBB2     		uxtb	r3, r3
 476:Core/Src/main.c ****             {
 2361              		.loc 1 476 16 view .LVU504
 2362 017a 0A2B     		cmp	r3, #10
 2363 017c 05D0     		beq	.L185
 2364              	.L162:
 502:Core/Src/main.c **** 
 2365              		.loc 1 502 9 is_stmt 1 view .LVU505
 2366 017e 0122     		movs	r2, #1
 2367 0180 4F49     		ldr	r1, .L192+72
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 67


 2368 0182 5048     		ldr	r0, .L192+76
 2369 0184 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2370              	.LVL215:
 2371 0188 86E7     		b	.L151
 2372              	.L185:
 478:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2373              		.loc 1 478 17 view .LVU506
 478:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2374              		.loc 1 478 28 is_stmt 0 view .LVU507
 2375 018a 414A     		ldr	r2, .L192+24
 2376 018c 1388     		ldrh	r3, [r2]
 2377 018e 9BB2     		uxth	r3, r3
 478:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2378              		.loc 1 478 43 view .LVU508
 2379 0190 0146     		mov	r1, r0
 2380 0192 0020     		movs	r0, #0
 2381 0194 C854     		strb	r0, [r1, r3]
 479:Core/Src/main.c **** 
 2382              		.loc 1 479 17 is_stmt 1 view .LVU509
 479:Core/Src/main.c **** 
 2383              		.loc 1 479 30 is_stmt 0 view .LVU510
 2384 0196 1080     		strh	r0, [r2]	@ movhi
 482:Core/Src/main.c **** 
 2385              		.loc 1 482 17 is_stmt 1 view .LVU511
 2386 0198 434C     		ldr	r4, .L192+48
 2387 019a 2046     		mov	r0, r4
 2388 019c FFF7FEFF 		bl	strcpy
 2389              	.LVL216:
 484:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2390              		.loc 1 484 17 view .LVU512
 484:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2391              		.loc 1 484 20 is_stmt 0 view .LVU513
 2392 01a0 2146     		mov	r1, r4
 2393 01a2 4548     		ldr	r0, .L192+64
 2394 01a4 FFF7FEFF 		bl	strcmp
 2395              	.LVL217:
 484:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2396              		.loc 1 484 19 discriminator 1 view .LVU514
 2397 01a8 70B9     		cbnz	r0, .L186
 488:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2398              		.loc 1 488 22 is_stmt 1 view .LVU515
 488:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2399              		.loc 1 488 25 is_stmt 0 view .LVU516
 2400 01aa 4449     		ldr	r1, .L192+68
 2401 01ac 3E48     		ldr	r0, .L192+48
 2402 01ae FFF7FEFF 		bl	strcmp
 2403              	.LVL218:
 488:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2404              		.loc 1 488 24 discriminator 1 view .LVU517
 2405 01b2 0028     		cmp	r0, #0
 2406 01b4 E3D0     		beq	.L162
 2407              	.LBB28:
 489:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2408              		.loc 1 489 19 is_stmt 1 view .LVU518
 2409 01b6 3C4C     		ldr	r4, .L192+48
 2410 01b8 2046     		mov	r0, r4
 2411 01ba FFF7FEFF 		bl	ProcessReceivedString
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 68


 2412              	.LVL219:
 490:Core/Src/main.c ****                 }
 2413              		.loc 1 490 19 view .LVU519
 2414 01be 2146     		mov	r1, r4
 2415 01c0 3E48     		ldr	r0, .L192+68
 2416 01c2 FFF7FEFF 		bl	strcpy
 2417              	.LVL220:
 2418 01c6 DAE7     		b	.L162
 2419              	.L186:
 2420              	.LBE28:
 2421              	.LBB29:
 485:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2422              		.loc 1 485 19 view .LVU520
 2423 01c8 2046     		mov	r0, r4
 2424 01ca FFF7FEFF 		bl	ProcessReceivedString
 2425              	.LVL221:
 486:Core/Src/main.c ****                 }
 2426              		.loc 1 486 19 view .LVU521
 2427 01ce 2146     		mov	r1, r4
 2428 01d0 3A48     		ldr	r0, .L192+68
 2429 01d2 FFF7FEFF 		bl	strcpy
 2430              	.LVL222:
 2431              	.LBE29:
 2432 01d6 D2E7     		b	.L162
 2433              	.LVL223:
 2434              	.L161:
 499:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2435              		.loc 1 499 13 view .LVU522
 499:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2436              		.loc 1 499 26 is_stmt 0 view .LVU523
 2437 01d8 2D4B     		ldr	r3, .L192+24
 2438 01da 0022     		movs	r2, #0
 2439 01dc 1A80     		strh	r2, [r3]	@ movhi
 500:Core/Src/main.c ****         }
 2440              		.loc 1 500 13 is_stmt 1 view .LVU524
 2441 01de 3348     		ldr	r0, .L192+52
 2442              	.LVL224:
 500:Core/Src/main.c ****         }
 2443              		.loc 1 500 13 is_stmt 0 view .LVU525
 2444 01e0 FFF7FEFF 		bl	puts
 2445              	.LVL225:
 2446 01e4 CBE7     		b	.L162
 2447              	.LVL226:
 2448              	.L179:
 508:Core/Src/main.c ****         {
 2449              		.loc 1 508 9 is_stmt 1 view .LVU526
 508:Core/Src/main.c ****         {
 2450              		.loc 1 508 26 is_stmt 0 view .LVU527
 2451 01e6 2A4B     		ldr	r3, .L192+24
 2452 01e8 1B88     		ldrh	r3, [r3]
 2453 01ea 9BB2     		uxth	r3, r3
 508:Core/Src/main.c ****         {
 2454              		.loc 1 508 12 view .LVU528
 2455 01ec FE2B     		cmp	r3, #254
 2456 01ee 3BD8     		bhi	.L165
 510:Core/Src/main.c **** 
 2457              		.loc 1 510 13 is_stmt 1 view .LVU529
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 69


 510:Core/Src/main.c **** 
 2458              		.loc 1 510 37 is_stmt 0 view .LVU530
 2459 01f0 2749     		ldr	r1, .L192+24
 2460 01f2 0B88     		ldrh	r3, [r1]
 2461 01f4 9BB2     		uxth	r3, r3
 2462 01f6 5A1C     		adds	r2, r3, #1
 2463 01f8 92B2     		uxth	r2, r2
 2464 01fa 0A80     		strh	r2, [r1]	@ movhi
 510:Core/Src/main.c **** 
 2465              		.loc 1 510 41 view .LVU531
 2466 01fc 3249     		ldr	r1, .L192+80
 2467 01fe 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2468 0200 D2B2     		uxtb	r2, r2
 2469 0202 2548     		ldr	r0, .L192+32
 2470              	.LVL227:
 510:Core/Src/main.c **** 
 2471              		.loc 1 510 41 view .LVU532
 2472 0204 C254     		strb	r2, [r0, r3]
 513:Core/Src/main.c ****             {
 2473              		.loc 1 513 13 is_stmt 1 view .LVU533
 513:Core/Src/main.c ****             {
 2474              		.loc 1 513 26 is_stmt 0 view .LVU534
 2475 0206 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2476 0208 DBB2     		uxtb	r3, r3
 513:Core/Src/main.c ****             {
 2477              		.loc 1 513 16 view .LVU535
 2478 020a 0A2B     		cmp	r3, #10
 2479 020c 05D0     		beq	.L187
 2480              	.L166:
 539:Core/Src/main.c **** 
 2481              		.loc 1 539 9 is_stmt 1 view .LVU536
 2482 020e 0122     		movs	r2, #1
 2483 0210 2D49     		ldr	r1, .L192+80
 2484 0212 2E48     		ldr	r0, .L192+84
 2485 0214 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2486              	.LVL228:
 2487 0218 3EE7     		b	.L151
 2488              	.L187:
 515:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2489              		.loc 1 515 17 view .LVU537
 515:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2490              		.loc 1 515 28 is_stmt 0 view .LVU538
 2491 021a 1D4A     		ldr	r2, .L192+24
 2492 021c 1388     		ldrh	r3, [r2]
 2493 021e 9BB2     		uxth	r3, r3
 515:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2494              		.loc 1 515 43 view .LVU539
 2495 0220 0146     		mov	r1, r0
 2496 0222 0020     		movs	r0, #0
 2497 0224 C854     		strb	r0, [r1, r3]
 516:Core/Src/main.c **** 
 2498              		.loc 1 516 17 is_stmt 1 view .LVU540
 516:Core/Src/main.c **** 
 2499              		.loc 1 516 30 is_stmt 0 view .LVU541
 2500 0226 1080     		strh	r0, [r2]	@ movhi
 519:Core/Src/main.c **** 
 2501              		.loc 1 519 17 is_stmt 1 view .LVU542
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 70


 2502 0228 1F4C     		ldr	r4, .L192+48
 2503 022a 2046     		mov	r0, r4
 2504 022c FFF7FEFF 		bl	strcpy
 2505              	.LVL229:
 521:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2506              		.loc 1 521 17 view .LVU543
 521:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2507              		.loc 1 521 20 is_stmt 0 view .LVU544
 2508 0230 2146     		mov	r1, r4
 2509 0232 2148     		ldr	r0, .L192+64
 2510 0234 FFF7FEFF 		bl	strcmp
 2511              	.LVL230:
 521:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2512              		.loc 1 521 19 discriminator 1 view .LVU545
 2513 0238 70B9     		cbnz	r0, .L188
 525:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2514              		.loc 1 525 22 is_stmt 1 view .LVU546
 525:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2515              		.loc 1 525 25 is_stmt 0 view .LVU547
 2516 023a 2049     		ldr	r1, .L192+68
 2517 023c 1A48     		ldr	r0, .L192+48
 2518 023e FFF7FEFF 		bl	strcmp
 2519              	.LVL231:
 525:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2520              		.loc 1 525 24 discriminator 1 view .LVU548
 2521 0242 0028     		cmp	r0, #0
 2522 0244 E3D0     		beq	.L166
 2523              	.LBB30:
 526:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2524              		.loc 1 526 19 is_stmt 1 view .LVU549
 2525 0246 184C     		ldr	r4, .L192+48
 2526 0248 2046     		mov	r0, r4
 2527 024a FFF7FEFF 		bl	ProcessReceivedString
 2528              	.LVL232:
 527:Core/Src/main.c ****                 }
 2529              		.loc 1 527 19 view .LVU550
 2530 024e 2146     		mov	r1, r4
 2531 0250 1A48     		ldr	r0, .L192+68
 2532 0252 FFF7FEFF 		bl	strcpy
 2533              	.LVL233:
 2534 0256 DAE7     		b	.L166
 2535              	.L188:
 2536              	.LBE30:
 2537              	.LBB31:
 522:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2538              		.loc 1 522 19 view .LVU551
 2539 0258 2046     		mov	r0, r4
 2540 025a FFF7FEFF 		bl	ProcessReceivedString
 2541              	.LVL234:
 523:Core/Src/main.c ****                 }
 2542              		.loc 1 523 19 view .LVU552
 2543 025e 2146     		mov	r1, r4
 2544 0260 1648     		ldr	r0, .L192+68
 2545 0262 FFF7FEFF 		bl	strcpy
 2546              	.LVL235:
 2547              	.LBE31:
 2548 0266 D2E7     		b	.L166
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 71


 2549              	.LVL236:
 2550              	.L165:
 536:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2551              		.loc 1 536 13 view .LVU553
 536:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2552              		.loc 1 536 26 is_stmt 0 view .LVU554
 2553 0268 094B     		ldr	r3, .L192+24
 2554 026a 0022     		movs	r2, #0
 2555 026c 1A80     		strh	r2, [r3]	@ movhi
 537:Core/Src/main.c ****         }
 2556              		.loc 1 537 13 is_stmt 1 view .LVU555
 2557 026e 0F48     		ldr	r0, .L192+52
 2558              	.LVL237:
 537:Core/Src/main.c ****         }
 2559              		.loc 1 537 13 is_stmt 0 view .LVU556
 2560 0270 FFF7FEFF 		bl	puts
 2561              	.LVL238:
 2562 0274 CBE7     		b	.L166
 2563              	.L193:
 2564 0276 00BF     		.align	2
 2565              	.L192:
 2566 0278 00100140 		.word	1073811456
 2567 027c 00140140 		.word	1073812480
 2568 0280 00440040 		.word	1073759232
 2569 0284 00480040 		.word	1073760256
 2570 0288 004C0040 		.word	1073761280
 2571 028c 00500040 		.word	1073762304
 2572 0290 00000000 		.word	buffer_index
 2573 0294 00000000 		.word	rx_byte5
 2574 0298 00000000 		.word	uart_buffer
 2575 029c 00000000 		.word	huart5
 2576 02a0 00000000 		.word	rx_byte
 2577 02a4 00000000 		.word	huart1
 2578 02a8 00000000 		.word	received_string
 2579 02ac 00000000 		.word	.LC43
 2580 02b0 00000000 		.word	rx_byte1
 2581 02b4 00000000 		.word	huart6
 2582 02b8 70010000 		.word	.LC29
 2583 02bc 00000000 		.word	previous_string
 2584 02c0 00000000 		.word	rx_byte2
 2585 02c4 00000000 		.word	huart2
 2586 02c8 00000000 		.word	rx_byte3
 2587 02cc 00000000 		.word	huart3
 2588              	.LVL239:
 2589              	.L180:
 545:Core/Src/main.c ****         {
 2590              		.loc 1 545 9 is_stmt 1 view .LVU557
 545:Core/Src/main.c ****         {
 2591              		.loc 1 545 26 is_stmt 0 view .LVU558
 2592 02d0 3B4B     		ldr	r3, .L194
 2593 02d2 1B88     		ldrh	r3, [r3]
 2594 02d4 9BB2     		uxth	r3, r3
 545:Core/Src/main.c ****         {
 2595              		.loc 1 545 12 view .LVU559
 2596 02d6 FE2B     		cmp	r3, #254
 2597 02d8 3BD8     		bhi	.L169
 547:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 72


 2598              		.loc 1 547 13 is_stmt 1 view .LVU560
 547:Core/Src/main.c **** 
 2599              		.loc 1 547 37 is_stmt 0 view .LVU561
 2600 02da 3949     		ldr	r1, .L194
 2601 02dc 0B88     		ldrh	r3, [r1]
 2602 02de 9BB2     		uxth	r3, r3
 2603 02e0 5A1C     		adds	r2, r3, #1
 2604 02e2 92B2     		uxth	r2, r2
 2605 02e4 0A80     		strh	r2, [r1]	@ movhi
 547:Core/Src/main.c **** 
 2606              		.loc 1 547 41 view .LVU562
 2607 02e6 3749     		ldr	r1, .L194+4
 2608 02e8 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2609 02ea D2B2     		uxtb	r2, r2
 2610 02ec 3648     		ldr	r0, .L194+8
 2611              	.LVL240:
 547:Core/Src/main.c **** 
 2612              		.loc 1 547 41 view .LVU563
 2613 02ee C254     		strb	r2, [r0, r3]
 550:Core/Src/main.c ****             {
 2614              		.loc 1 550 13 is_stmt 1 view .LVU564
 550:Core/Src/main.c ****             {
 2615              		.loc 1 550 26 is_stmt 0 view .LVU565
 2616 02f0 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2617 02f2 DBB2     		uxtb	r3, r3
 550:Core/Src/main.c ****             {
 2618              		.loc 1 550 16 view .LVU566
 2619 02f4 0A2B     		cmp	r3, #10
 2620 02f6 05D0     		beq	.L189
 2621              	.L170:
 576:Core/Src/main.c **** 
 2622              		.loc 1 576 9 is_stmt 1 view .LVU567
 2623 02f8 0122     		movs	r2, #1
 2624 02fa 3249     		ldr	r1, .L194+4
 2625 02fc 3348     		ldr	r0, .L194+12
 2626 02fe FFF7FEFF 		bl	HAL_UART_Receive_IT
 2627              	.LVL241:
 2628 0302 C9E6     		b	.L151
 2629              	.L189:
 552:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2630              		.loc 1 552 17 view .LVU568
 552:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2631              		.loc 1 552 28 is_stmt 0 view .LVU569
 2632 0304 2E4A     		ldr	r2, .L194
 2633 0306 1388     		ldrh	r3, [r2]
 2634 0308 9BB2     		uxth	r3, r3
 552:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2635              		.loc 1 552 43 view .LVU570
 2636 030a 0146     		mov	r1, r0
 2637 030c 0020     		movs	r0, #0
 2638 030e C854     		strb	r0, [r1, r3]
 553:Core/Src/main.c **** 
 2639              		.loc 1 553 17 is_stmt 1 view .LVU571
 553:Core/Src/main.c **** 
 2640              		.loc 1 553 30 is_stmt 0 view .LVU572
 2641 0310 1080     		strh	r0, [r2]	@ movhi
 556:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 73


 2642              		.loc 1 556 17 is_stmt 1 view .LVU573
 2643 0312 2F4C     		ldr	r4, .L194+16
 2644 0314 2046     		mov	r0, r4
 2645 0316 FFF7FEFF 		bl	strcpy
 2646              	.LVL242:
 558:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2647              		.loc 1 558 17 view .LVU574
 558:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2648              		.loc 1 558 20 is_stmt 0 view .LVU575
 2649 031a 2146     		mov	r1, r4
 2650 031c 2D48     		ldr	r0, .L194+20
 2651 031e FFF7FEFF 		bl	strcmp
 2652              	.LVL243:
 558:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2653              		.loc 1 558 19 discriminator 1 view .LVU576
 2654 0322 70B9     		cbnz	r0, .L190
 562:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2655              		.loc 1 562 22 is_stmt 1 view .LVU577
 562:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2656              		.loc 1 562 25 is_stmt 0 view .LVU578
 2657 0324 2C49     		ldr	r1, .L194+24
 2658 0326 2A48     		ldr	r0, .L194+16
 2659 0328 FFF7FEFF 		bl	strcmp
 2660              	.LVL244:
 562:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2661              		.loc 1 562 24 discriminator 1 view .LVU579
 2662 032c 0028     		cmp	r0, #0
 2663 032e E3D0     		beq	.L170
 2664              	.LBB32:
 563:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2665              		.loc 1 563 19 is_stmt 1 view .LVU580
 2666 0330 274C     		ldr	r4, .L194+16
 2667 0332 2046     		mov	r0, r4
 2668 0334 FFF7FEFF 		bl	ProcessReceivedString
 2669              	.LVL245:
 564:Core/Src/main.c ****                 }
 2670              		.loc 1 564 19 view .LVU581
 2671 0338 2146     		mov	r1, r4
 2672 033a 2748     		ldr	r0, .L194+24
 2673 033c FFF7FEFF 		bl	strcpy
 2674              	.LVL246:
 2675 0340 DAE7     		b	.L170
 2676              	.L190:
 2677              	.LBE32:
 2678              	.LBB33:
 559:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2679              		.loc 1 559 19 view .LVU582
 2680 0342 2046     		mov	r0, r4
 2681 0344 FFF7FEFF 		bl	ProcessReceivedString
 2682              	.LVL247:
 560:Core/Src/main.c ****                 }
 2683              		.loc 1 560 19 view .LVU583
 2684 0348 2146     		mov	r1, r4
 2685 034a 2348     		ldr	r0, .L194+24
 2686 034c FFF7FEFF 		bl	strcpy
 2687              	.LVL248:
 2688              	.LBE33:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 74


 2689 0350 D2E7     		b	.L170
 2690              	.LVL249:
 2691              	.L169:
 573:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2692              		.loc 1 573 13 view .LVU584
 573:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2693              		.loc 1 573 26 is_stmt 0 view .LVU585
 2694 0352 1B4B     		ldr	r3, .L194
 2695 0354 0022     		movs	r2, #0
 2696 0356 1A80     		strh	r2, [r3]	@ movhi
 574:Core/Src/main.c ****         }
 2697              		.loc 1 574 13 is_stmt 1 view .LVU586
 2698 0358 2048     		ldr	r0, .L194+28
 2699              	.LVL250:
 574:Core/Src/main.c ****         }
 2700              		.loc 1 574 13 is_stmt 0 view .LVU587
 2701 035a FFF7FEFF 		bl	puts
 2702              	.LVL251:
 2703 035e CBE7     		b	.L170
 2704              	.L181:
 589:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2705              		.loc 1 589 17 is_stmt 1 view .LVU588
 589:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2706              		.loc 1 589 28 is_stmt 0 view .LVU589
 2707 0360 174A     		ldr	r2, .L194
 2708 0362 1388     		ldrh	r3, [r2]
 2709 0364 9BB2     		uxth	r3, r3
 589:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2710              		.loc 1 589 43 view .LVU590
 2711 0366 0146     		mov	r1, r0
 2712 0368 0020     		movs	r0, #0
 2713 036a C854     		strb	r0, [r1, r3]
 590:Core/Src/main.c **** 
 2714              		.loc 1 590 17 is_stmt 1 view .LVU591
 590:Core/Src/main.c **** 
 2715              		.loc 1 590 30 is_stmt 0 view .LVU592
 2716 036c 1080     		strh	r0, [r2]	@ movhi
 593:Core/Src/main.c **** 
 2717              		.loc 1 593 17 is_stmt 1 view .LVU593
 2718 036e 184C     		ldr	r4, .L194+16
 2719 0370 2046     		mov	r0, r4
 2720 0372 FFF7FEFF 		bl	strcpy
 2721              	.LVL252:
 595:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2722              		.loc 1 595 17 view .LVU594
 595:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2723              		.loc 1 595 20 is_stmt 0 view .LVU595
 2724 0376 2146     		mov	r1, r4
 2725 0378 1648     		ldr	r0, .L194+20
 2726 037a FFF7FEFF 		bl	strcmp
 2727              	.LVL253:
 595:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2728              		.loc 1 595 19 discriminator 1 view .LVU596
 2729 037e 78B9     		cbnz	r0, .L191
 599:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2730              		.loc 1 599 22 is_stmt 1 view .LVU597
 599:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 75


 2731              		.loc 1 599 25 is_stmt 0 view .LVU598
 2732 0380 1549     		ldr	r1, .L194+24
 2733 0382 1348     		ldr	r0, .L194+16
 2734 0384 FFF7FEFF 		bl	strcmp
 2735              	.LVL254:
 599:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2736              		.loc 1 599 24 discriminator 1 view .LVU599
 2737 0388 0028     		cmp	r0, #0
 2738 038a 3FF466AE 		beq	.L173
 2739              	.LBB34:
 600:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2740              		.loc 1 600 19 is_stmt 1 view .LVU600
 2741 038e 104C     		ldr	r4, .L194+16
 2742 0390 2046     		mov	r0, r4
 2743 0392 FFF7FEFF 		bl	ProcessReceivedString
 2744              	.LVL255:
 601:Core/Src/main.c ****                 }
 2745              		.loc 1 601 19 view .LVU601
 2746 0396 2146     		mov	r1, r4
 2747 0398 0F48     		ldr	r0, .L194+24
 2748 039a FFF7FEFF 		bl	strcpy
 2749              	.LVL256:
 2750 039e 5CE6     		b	.L173
 2751              	.L191:
 2752              	.LBE34:
 2753              	.LBB35:
 596:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2754              		.loc 1 596 19 view .LVU602
 2755 03a0 2046     		mov	r0, r4
 2756 03a2 FFF7FEFF 		bl	ProcessReceivedString
 2757              	.LVL257:
 597:Core/Src/main.c ****                 }
 2758              		.loc 1 597 19 view .LVU603
 2759 03a6 2146     		mov	r1, r4
 2760 03a8 0B48     		ldr	r0, .L194+24
 2761 03aa FFF7FEFF 		bl	strcpy
 2762              	.LVL258:
 2763              	.LBE35:
 2764 03ae 54E6     		b	.L173
 2765              	.LVL259:
 2766              	.L172:
 610:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2767              		.loc 1 610 13 view .LVU604
 610:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2768              		.loc 1 610 26 is_stmt 0 view .LVU605
 2769 03b0 034B     		ldr	r3, .L194
 2770 03b2 0022     		movs	r2, #0
 2771 03b4 1A80     		strh	r2, [r3]	@ movhi
 611:Core/Src/main.c ****         }
 2772              		.loc 1 611 13 is_stmt 1 view .LVU606
 2773 03b6 0948     		ldr	r0, .L194+28
 2774              	.LVL260:
 611:Core/Src/main.c ****         }
 2775              		.loc 1 611 13 is_stmt 0 view .LVU607
 2776 03b8 FFF7FEFF 		bl	puts
 2777              	.LVL261:
 2778 03bc 4DE6     		b	.L173
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 76


 2779              	.L195:
 2780 03be 00BF     		.align	2
 2781              	.L194:
 2782 03c0 00000000 		.word	buffer_index
 2783 03c4 00000000 		.word	rx_byte4
 2784 03c8 00000000 		.word	uart_buffer
 2785 03cc 00000000 		.word	huart4
 2786 03d0 00000000 		.word	received_string
 2787 03d4 70010000 		.word	.LC29
 2788 03d8 00000000 		.word	previous_string
 2789 03dc 00000000 		.word	.LC43
 2790              		.cfi_endproc
 2791              	.LFE250:
 2793              		.section	.text.Error_Handler,"ax",%progbits
 2794              		.align	1
 2795              		.global	Error_Handler
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2800              	Error_Handler:
 2801              	.LFB263:
 973:Core/Src/main.c **** 
 974:Core/Src/main.c **** /* USER CODE END 4 */
 975:Core/Src/main.c **** 
 976:Core/Src/main.c **** /**
 977:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 978:Core/Src/main.c ****   * @retval None
 979:Core/Src/main.c ****   */
 980:Core/Src/main.c **** void Error_Handler(void)
 981:Core/Src/main.c **** {
 2802              		.loc 1 981 1 is_stmt 1 view -0
 2803              		.cfi_startproc
 2804              		@ Volatile: function does not return.
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 2807              		@ link register save eliminated.
 982:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 983:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 984:Core/Src/main.c ****   __disable_irq();
 2808              		.loc 1 984 3 view .LVU609
 2809              	.LBB36:
 2810              	.LBI36:
 2811              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 77


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 78


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 79


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 80


 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 81


 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 82


 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 83


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 84


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 85


 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 86


 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 87


 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 88


 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 89


 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 90


 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 91


 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 92


 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 93


 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2812              		.loc 2 960 27 view .LVU610
 2813              	.LBB37:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2814              		.loc 2 962 3 view .LVU611
 2815              		.syntax unified
 2816              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2817 0000 72B6     		cpsid i
 2818              	@ 0 "" 2
 2819              		.thumb
 2820              		.syntax unified
 2821              	.L197:
 2822              	.LBE37:
 2823              	.LBE36:
 985:Core/Src/main.c ****   while (1)
 2824              		.loc 1 985 3 view .LVU612
 986:Core/Src/main.c ****   {
 987:Core/Src/main.c ****   }
 2825              		.loc 1 987 3 view .LVU613
 985:Core/Src/main.c ****   while (1)
 2826              		.loc 1 985 9 view .LVU614
 2827 0002 FEE7     		b	.L197
 2828              		.cfi_endproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 94


 2829              	.LFE263:
 2831              		.section	.text.SystemClock_Config,"ax",%progbits
 2832              		.align	1
 2833              		.global	SystemClock_Config
 2834              		.syntax unified
 2835              		.thumb
 2836              		.thumb_func
 2838              	SystemClock_Config:
 2839              	.LFB243:
 298:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2840              		.loc 1 298 1 view -0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 80
 2843              		@ frame_needed = 0, uses_anonymous_args = 0
 2844 0000 00B5     		push	{lr}
 2845              	.LCFI40:
 2846              		.cfi_def_cfa_offset 4
 2847              		.cfi_offset 14, -4
 2848 0002 95B0     		sub	sp, sp, #84
 2849              	.LCFI41:
 2850              		.cfi_def_cfa_offset 88
 299:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2851              		.loc 1 299 3 view .LVU616
 299:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2852              		.loc 1 299 22 is_stmt 0 view .LVU617
 2853 0004 3022     		movs	r2, #48
 2854 0006 0021     		movs	r1, #0
 2855 0008 08A8     		add	r0, sp, #32
 2856 000a FFF7FEFF 		bl	memset
 2857              	.LVL262:
 300:Core/Src/main.c **** 
 2858              		.loc 1 300 3 is_stmt 1 view .LVU618
 300:Core/Src/main.c **** 
 2859              		.loc 1 300 22 is_stmt 0 view .LVU619
 2860 000e 0023     		movs	r3, #0
 2861 0010 0393     		str	r3, [sp, #12]
 2862 0012 0493     		str	r3, [sp, #16]
 2863 0014 0593     		str	r3, [sp, #20]
 2864 0016 0693     		str	r3, [sp, #24]
 2865 0018 0793     		str	r3, [sp, #28]
 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2866              		.loc 1 304 3 is_stmt 1 view .LVU620
 2867              	.LBB38:
 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2868              		.loc 1 304 3 view .LVU621
 2869 001a 0193     		str	r3, [sp, #4]
 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2870              		.loc 1 304 3 view .LVU622
 2871 001c 204A     		ldr	r2, .L204
 2872 001e 116C     		ldr	r1, [r2, #64]
 2873 0020 41F08051 		orr	r1, r1, #268435456
 2874 0024 1164     		str	r1, [r2, #64]
 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2875              		.loc 1 304 3 view .LVU623
 2876 0026 126C     		ldr	r2, [r2, #64]
 2877 0028 02F08052 		and	r2, r2, #268435456
 2878 002c 0192     		str	r2, [sp, #4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 95


 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2879              		.loc 1 304 3 view .LVU624
 2880 002e 019A     		ldr	r2, [sp, #4]
 2881              	.LBE38:
 304:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2882              		.loc 1 304 3 view .LVU625
 305:Core/Src/main.c **** 
 2883              		.loc 1 305 3 view .LVU626
 2884              	.LBB39:
 305:Core/Src/main.c **** 
 2885              		.loc 1 305 3 view .LVU627
 2886 0030 0293     		str	r3, [sp, #8]
 305:Core/Src/main.c **** 
 2887              		.loc 1 305 3 view .LVU628
 2888 0032 1C4B     		ldr	r3, .L204+4
 2889 0034 1A68     		ldr	r2, [r3]
 2890 0036 42F48042 		orr	r2, r2, #16384
 2891 003a 1A60     		str	r2, [r3]
 305:Core/Src/main.c **** 
 2892              		.loc 1 305 3 view .LVU629
 2893 003c 1B68     		ldr	r3, [r3]
 2894 003e 03F48043 		and	r3, r3, #16384
 2895 0042 0293     		str	r3, [sp, #8]
 305:Core/Src/main.c **** 
 2896              		.loc 1 305 3 view .LVU630
 2897 0044 029B     		ldr	r3, [sp, #8]
 2898              	.LBE39:
 305:Core/Src/main.c **** 
 2899              		.loc 1 305 3 view .LVU631
 310:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2900              		.loc 1 310 3 view .LVU632
 310:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2901              		.loc 1 310 36 is_stmt 0 view .LVU633
 2902 0046 0123     		movs	r3, #1
 2903 0048 0893     		str	r3, [sp, #32]
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2904              		.loc 1 311 3 is_stmt 1 view .LVU634
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2905              		.loc 1 311 30 is_stmt 0 view .LVU635
 2906 004a 4FF48033 		mov	r3, #65536
 2907 004e 0993     		str	r3, [sp, #36]
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2908              		.loc 1 312 3 is_stmt 1 view .LVU636
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2909              		.loc 1 312 34 is_stmt 0 view .LVU637
 2910 0050 0223     		movs	r3, #2
 2911 0052 0E93     		str	r3, [sp, #56]
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2912              		.loc 1 313 3 is_stmt 1 view .LVU638
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2913              		.loc 1 313 35 is_stmt 0 view .LVU639
 2914 0054 4FF48002 		mov	r2, #4194304
 2915 0058 0F92     		str	r2, [sp, #60]
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 2916              		.loc 1 314 3 is_stmt 1 view .LVU640
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 2917              		.loc 1 314 30 is_stmt 0 view .LVU641
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 96


 2918 005a 0422     		movs	r2, #4
 2919 005c 1092     		str	r2, [sp, #64]
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2920              		.loc 1 315 3 is_stmt 1 view .LVU642
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2921              		.loc 1 315 30 is_stmt 0 view .LVU643
 2922 005e A822     		movs	r2, #168
 2923 0060 1192     		str	r2, [sp, #68]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 2924              		.loc 1 316 3 is_stmt 1 view .LVU644
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 2925              		.loc 1 316 30 is_stmt 0 view .LVU645
 2926 0062 1293     		str	r3, [sp, #72]
 317:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2927              		.loc 1 317 3 is_stmt 1 view .LVU646
 317:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2928              		.loc 1 317 30 is_stmt 0 view .LVU647
 2929 0064 0723     		movs	r3, #7
 2930 0066 1393     		str	r3, [sp, #76]
 318:Core/Src/main.c ****   {
 2931              		.loc 1 318 3 is_stmt 1 view .LVU648
 318:Core/Src/main.c ****   {
 2932              		.loc 1 318 7 is_stmt 0 view .LVU649
 2933 0068 08A8     		add	r0, sp, #32
 2934 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 2935              	.LVL263:
 318:Core/Src/main.c ****   {
 2936              		.loc 1 318 6 discriminator 1 view .LVU650
 2937 006e 98B9     		cbnz	r0, .L202
 325:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2938              		.loc 1 325 3 is_stmt 1 view .LVU651
 325:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2939              		.loc 1 325 31 is_stmt 0 view .LVU652
 2940 0070 0F23     		movs	r3, #15
 2941 0072 0393     		str	r3, [sp, #12]
 327:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2942              		.loc 1 327 3 is_stmt 1 view .LVU653
 327:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2943              		.loc 1 327 34 is_stmt 0 view .LVU654
 2944 0074 0223     		movs	r3, #2
 2945 0076 0493     		str	r3, [sp, #16]
 328:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 2946              		.loc 1 328 3 is_stmt 1 view .LVU655
 328:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 2947              		.loc 1 328 35 is_stmt 0 view .LVU656
 2948 0078 0023     		movs	r3, #0
 2949 007a 0593     		str	r3, [sp, #20]
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2950              		.loc 1 329 3 is_stmt 1 view .LVU657
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2951              		.loc 1 329 36 is_stmt 0 view .LVU658
 2952 007c 4FF4A053 		mov	r3, #5120
 2953 0080 0693     		str	r3, [sp, #24]
 330:Core/Src/main.c **** 
 2954              		.loc 1 330 3 is_stmt 1 view .LVU659
 330:Core/Src/main.c **** 
 2955              		.loc 1 330 36 is_stmt 0 view .LVU660
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 97


 2956 0082 4FF48053 		mov	r3, #4096
 2957 0086 0793     		str	r3, [sp, #28]
 332:Core/Src/main.c ****   {
 2958              		.loc 1 332 3 is_stmt 1 view .LVU661
 332:Core/Src/main.c ****   {
 2959              		.loc 1 332 7 is_stmt 0 view .LVU662
 2960 0088 0521     		movs	r1, #5
 2961 008a 03A8     		add	r0, sp, #12
 2962 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2963              	.LVL264:
 332:Core/Src/main.c ****   {
 2964              		.loc 1 332 6 discriminator 1 view .LVU663
 2965 0090 20B9     		cbnz	r0, .L203
 336:Core/Src/main.c **** 
 2966              		.loc 1 336 1 view .LVU664
 2967 0092 15B0     		add	sp, sp, #84
 2968              	.LCFI42:
 2969              		.cfi_remember_state
 2970              		.cfi_def_cfa_offset 4
 2971              		@ sp needed
 2972 0094 5DF804FB 		ldr	pc, [sp], #4
 2973              	.L202:
 2974              	.LCFI43:
 2975              		.cfi_restore_state
 320:Core/Src/main.c ****   }
 2976              		.loc 1 320 5 is_stmt 1 view .LVU665
 2977 0098 FFF7FEFF 		bl	Error_Handler
 2978              	.LVL265:
 2979              	.L203:
 334:Core/Src/main.c ****   }
 2980              		.loc 1 334 5 view .LVU666
 2981 009c FFF7FEFF 		bl	Error_Handler
 2982              	.LVL266:
 2983              	.L205:
 2984              		.align	2
 2985              	.L204:
 2986 00a0 00380240 		.word	1073887232
 2987 00a4 00700040 		.word	1073770496
 2988              		.cfi_endproc
 2989              	.LFE243:
 2991              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2992              		.align	2
 2993              	.LC44:
 2994 0000 53797374 		.ascii	"System Initialized\015\000"
 2994      656D2049 
 2994      6E697469 
 2994      616C697A 
 2994      65640D00 
 2995              		.section	.text.main,"ax",%progbits
 2996              		.align	1
 2997              		.global	main
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3002              	main:
 3003              	.LFB242:
 194:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 98


 3004              		.loc 1 194 1 view -0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008 0000 10B5     		push	{r4, lr}
 3009              	.LCFI44:
 3010              		.cfi_def_cfa_offset 8
 3011              		.cfi_offset 4, -8
 3012              		.cfi_offset 14, -4
 203:Core/Src/main.c **** 
 3013              		.loc 1 203 3 view .LVU668
 3014 0002 FFF7FEFF 		bl	HAL_Init
 3015              	.LVL267:
 210:Core/Src/main.c **** 
 3016              		.loc 1 210 3 view .LVU669
 3017 0006 FFF7FEFF 		bl	SystemClock_Config
 3018              	.LVL268:
 217:Core/Src/main.c ****   MX_ADC1_Init();
 3019              		.loc 1 217 3 view .LVU670
 3020 000a FFF7FEFF 		bl	MX_GPIO_Init
 3021              	.LVL269:
 218:Core/Src/main.c ****   MX_I2C1_Init();
 3022              		.loc 1 218 3 view .LVU671
 3023 000e FFF7FEFF 		bl	MX_ADC1_Init
 3024              	.LVL270:
 219:Core/Src/main.c ****   MX_TIM1_Init();
 3025              		.loc 1 219 3 view .LVU672
 3026 0012 FFF7FEFF 		bl	MX_I2C1_Init
 3027              	.LVL271:
 220:Core/Src/main.c ****   MX_TIM2_Init();
 3028              		.loc 1 220 3 view .LVU673
 3029 0016 FFF7FEFF 		bl	MX_TIM1_Init
 3030              	.LVL272:
 221:Core/Src/main.c ****   MX_UART4_Init();
 3031              		.loc 1 221 3 view .LVU674
 3032 001a FFF7FEFF 		bl	MX_TIM2_Init
 3033              	.LVL273:
 222:Core/Src/main.c ****   MX_UART5_Init();
 3034              		.loc 1 222 3 view .LVU675
 3035 001e FFF7FEFF 		bl	MX_UART4_Init
 3036              	.LVL274:
 223:Core/Src/main.c ****   MX_USART1_UART_Init();
 3037              		.loc 1 223 3 view .LVU676
 3038 0022 FFF7FEFF 		bl	MX_UART5_Init
 3039              	.LVL275:
 224:Core/Src/main.c ****   MX_USART2_UART_Init();
 3040              		.loc 1 224 3 view .LVU677
 3041 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 3042              	.LVL276:
 225:Core/Src/main.c ****   MX_USART3_UART_Init();
 3043              		.loc 1 225 3 view .LVU678
 3044 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 3045              	.LVL277:
 226:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 3046              		.loc 1 226 3 view .LVU679
 3047 002e FFF7FEFF 		bl	MX_USART3_UART_Init
 3048              	.LVL278:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 99


 227:Core/Src/main.c ****   MX_TIM4_Init();
 3049              		.loc 1 227 3 view .LVU680
 3050 0032 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 3051              	.LVL279:
 228:Core/Src/main.c ****   MX_TIM3_Init();
 3052              		.loc 1 228 3 view .LVU681
 3053 0036 FFF7FEFF 		bl	MX_TIM4_Init
 3054              	.LVL280:
 229:Core/Src/main.c ****   MX_USART6_UART_Init();
 3055              		.loc 1 229 3 view .LVU682
 3056 003a FFF7FEFF 		bl	MX_TIM3_Init
 3057              	.LVL281:
 230:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3058              		.loc 1 230 3 view .LVU683
 3059 003e FFF7FEFF 		bl	MX_USART6_UART_Init
 3060              	.LVL282:
 234:Core/Src/main.c **** 
 3061              		.loc 1 234 3 view .LVU684
 3062 0042 2E48     		ldr	r0, .L214
 3063 0044 FFF7FEFF 		bl	puts
 3064              	.LVL283:
 236:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 3065              		.loc 1 236 3 view .LVU685
 3066 0048 2D4C     		ldr	r4, .L214+4
 3067 004a 0021     		movs	r1, #0
 3068 004c 2046     		mov	r0, r4
 3069 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3070              	.LVL284:
 237:Core/Src/main.c **** 
 3071              		.loc 1 237 3 view .LVU686
 3072 0052 0421     		movs	r1, #4
 3073 0054 2046     		mov	r0, r4
 3074 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3075              	.LVL285:
 239:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 3076              		.loc 1 239 3 view .LVU687
 3077 005a 2368     		ldr	r3, [r4]
 3078 005c 0022     		movs	r2, #0
 3079 005e 5A63     		str	r2, [r3, #52]
 240:Core/Src/main.c **** 
 3080              		.loc 1 240 3 view .LVU688
 3081 0060 9A63     		str	r2, [r3, #56]
 242:Core/Src/main.c **** 
 3082              		.loc 1 242 3 view .LVU689
 3083 0062 FFF7FEFF 		bl	HomeSet
 3084              	.LVL286:
 244:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 3085              		.loc 1 244 3 view .LVU690
 3086 0066 0122     		movs	r2, #1
 3087 0068 2649     		ldr	r1, .L214+8
 3088 006a 2748     		ldr	r0, .L214+12
 3089 006c FFF7FEFF 		bl	HAL_UART_Receive_IT
 3090              	.LVL287:
 245:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 3091              		.loc 1 245 3 view .LVU691
 3092 0070 0122     		movs	r2, #1
 3093 0072 2649     		ldr	r1, .L214+16
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 100


 3094 0074 2648     		ldr	r0, .L214+20
 3095 0076 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3096              	.LVL288:
 246:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 3097              		.loc 1 246 3 view .LVU692
 3098 007a 0122     		movs	r2, #1
 3099 007c 2549     		ldr	r1, .L214+24
 3100 007e 2648     		ldr	r0, .L214+28
 3101 0080 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3102              	.LVL289:
 247:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 3103              		.loc 1 247 3 view .LVU693
 3104 0084 0122     		movs	r2, #1
 3105 0086 2549     		ldr	r1, .L214+32
 3106 0088 2548     		ldr	r0, .L214+36
 3107 008a FFF7FEFF 		bl	HAL_UART_Receive_IT
 3108              	.LVL290:
 248:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 3109              		.loc 1 248 3 view .LVU694
 3110 008e 0122     		movs	r2, #1
 3111 0090 2449     		ldr	r1, .L214+40
 3112 0092 2548     		ldr	r0, .L214+44
 3113 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3114              	.LVL291:
 249:Core/Src/main.c **** 
 3115              		.loc 1 249 3 view .LVU695
 3116 0098 0122     		movs	r2, #1
 3117 009a 2449     		ldr	r1, .L214+48
 3118 009c 2448     		ldr	r0, .L214+52
 3119 009e FFF7FEFF 		bl	HAL_UART_Receive_IT
 3120              	.LVL292:
 3121 00a2 10E0     		b	.L207
 3122              	.L212:
 3123              	.LBB40:
 264:Core/Src/main.c ****       buttonState = 0; 
 3124              		.loc 1 264 7 view .LVU696
 3125 00a4 1C20     		movs	r0, #28
 3126 00a6 FFF7FEFF 		bl	Joint4Set
 3127              	.LVL293:
 265:Core/Src/main.c ****     }
 3128              		.loc 1 265 7 view .LVU697
 265:Core/Src/main.c ****     }
 3129              		.loc 1 265 19 is_stmt 0 view .LVU698
 3130 00aa 224B     		ldr	r3, .L214+56
 3131 00ac 0022     		movs	r2, #0
 3132 00ae 1A70     		strb	r2, [r3]
 3133 00b0 0DE0     		b	.L208
 3134              	.LVL294:
 3135              	.L213:
 276:Core/Src/main.c ****         inject(STOP);
 3136              		.loc 1 276 7 is_stmt 1 view .LVU699
 276:Core/Src/main.c ****         inject(STOP);
 3137              		.loc 1 276 9 is_stmt 0 view .LVU700
 3138 00b2 40F6D763 		movw	r3, #3799
 3139 00b6 9C42     		cmp	r4, r3
 3140 00b8 05D9     		bls	.L207
 277:Core/Src/main.c ****         injectFlag = STOP; 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 101


 3141              		.loc 1 277 9 is_stmt 1 view .LVU701
 3142 00ba 0020     		movs	r0, #0
 3143 00bc FFF7FEFF 		bl	inject
 3144              	.LVL295:
 278:Core/Src/main.c ****       } 
 3145              		.loc 1 278 9 view .LVU702
 278:Core/Src/main.c ****       } 
 3146              		.loc 1 278 20 is_stmt 0 view .LVU703
 3147 00c0 1D4B     		ldr	r3, .L214+60
 3148 00c2 0022     		movs	r2, #0
 3149 00c4 1A60     		str	r2, [r3]
 3150              	.LVL296:
 3151              	.L207:
 278:Core/Src/main.c ****       } 
 3152              		.loc 1 278 20 view .LVU704
 3153              	.LBE40:
 256:Core/Src/main.c ****   {
 3154              		.loc 1 256 3 is_stmt 1 view .LVU705
 3155              	.LBB41:
 263:Core/Src/main.c ****       Joint4Set(28);
 3156              		.loc 1 263 5 view .LVU706
 263:Core/Src/main.c ****       Joint4Set(28);
 3157              		.loc 1 263 8 is_stmt 0 view .LVU707
 3158 00c6 1B4B     		ldr	r3, .L214+56
 3159 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263:Core/Src/main.c ****       Joint4Set(28);
 3160              		.loc 1 263 7 view .LVU708
 3161 00ca 002B     		cmp	r3, #0
 3162 00cc EAD1     		bne	.L212
 3163              	.L208:
 273:Core/Src/main.c ****     HAL_Delay(1);
 3164              		.loc 1 273 5 is_stmt 1 view .LVU709
 273:Core/Src/main.c ****     HAL_Delay(1);
 3165              		.loc 1 273 25 is_stmt 0 view .LVU710
 3166 00ce FFF7FEFF 		bl	Read_ADC_PA0
 3167              	.LVL297:
 3168 00d2 0446     		mov	r4, r0
 3169              	.LVL298:
 274:Core/Src/main.c ****     if(injectFlag == RETRACT){
 3170              		.loc 1 274 5 is_stmt 1 view .LVU711
 3171 00d4 0120     		movs	r0, #1
 3172 00d6 FFF7FEFF 		bl	HAL_Delay
 3173              	.LVL299:
 275:Core/Src/main.c ****       if(adcValue>=RETRACTION_LIMIT){
 3174              		.loc 1 275 5 view .LVU712
 275:Core/Src/main.c ****       if(adcValue>=RETRACTION_LIMIT){
 3175              		.loc 1 275 19 is_stmt 0 view .LVU713
 3176 00da 174B     		ldr	r3, .L214+60
 3177 00dc 1B68     		ldr	r3, [r3]
 275:Core/Src/main.c ****       if(adcValue>=RETRACTION_LIMIT){
 3178              		.loc 1 275 7 view .LVU714
 3179 00de 022B     		cmp	r3, #2
 3180 00e0 E7D0     		beq	.L213
 281:Core/Src/main.c ****       if(adcValue<INJECTION_LIMIT){
 3181              		.loc 1 281 10 is_stmt 1 view .LVU715
 281:Core/Src/main.c ****       if(adcValue<INJECTION_LIMIT){
 3182              		.loc 1 281 12 is_stmt 0 view .LVU716
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 102


 3183 00e2 012B     		cmp	r3, #1
 3184 00e4 EFD1     		bne	.L207
 282:Core/Src/main.c ****         inject(STOP);
 3185              		.loc 1 282 7 is_stmt 1 view .LVU717
 282:Core/Src/main.c ****         inject(STOP);
 3186              		.loc 1 282 9 is_stmt 0 view .LVU718
 3187 00e6 B4F5966F 		cmp	r4, #1200
 3188 00ea ECD2     		bcs	.L207
 283:Core/Src/main.c ****         injectFlag = STOP; 
 3189              		.loc 1 283 9 is_stmt 1 view .LVU719
 3190 00ec 0020     		movs	r0, #0
 3191 00ee FFF7FEFF 		bl	inject
 3192              	.LVL300:
 284:Core/Src/main.c ****       }
 3193              		.loc 1 284 9 view .LVU720
 284:Core/Src/main.c ****       }
 3194              		.loc 1 284 20 is_stmt 0 view .LVU721
 3195 00f2 114B     		ldr	r3, .L214+60
 3196 00f4 0022     		movs	r2, #0
 3197 00f6 1A60     		str	r2, [r3]
 3198 00f8 E5E7     		b	.L207
 3199              	.L215:
 3200 00fa 00BF     		.align	2
 3201              	.L214:
 3202 00fc 00000000 		.word	.LC44
 3203 0100 00000000 		.word	htim4
 3204 0104 00000000 		.word	rx_byte
 3205 0108 00000000 		.word	huart1
 3206 010c 00000000 		.word	rx_byte1
 3207 0110 00000000 		.word	huart6
 3208 0114 00000000 		.word	rx_byte2
 3209 0118 00000000 		.word	huart2
 3210 011c 00000000 		.word	rx_byte3
 3211 0120 00000000 		.word	huart3
 3212 0124 00000000 		.word	rx_byte4
 3213 0128 00000000 		.word	huart4
 3214 012c 00000000 		.word	rx_byte5
 3215 0130 00000000 		.word	huart5
 3216 0134 00000000 		.word	buttonState
 3217 0138 00000000 		.word	injectFlag
 3218              	.LBE41:
 3219              		.cfi_endproc
 3220              	.LFE242:
 3222              		.global	prev_actuator
 3223              		.section	.bss.prev_actuator,"aw",%nobits
 3224              		.align	2
 3227              	prev_actuator:
 3228 0000 00000000 		.space	4
 3229              		.global	prev_joint5
 3230              		.section	.bss.prev_joint5,"aw",%nobits
 3231              		.align	2
 3234              	prev_joint5:
 3235 0000 00000000 		.space	4
 3236              		.global	prev_joint4
 3237              		.section	.bss.prev_joint4,"aw",%nobits
 3238              		.align	2
 3241              	prev_joint4:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 103


 3242 0000 00000000 		.space	4
 3243              		.global	prev_joint3
 3244              		.section	.bss.prev_joint3,"aw",%nobits
 3245              		.align	2
 3248              	prev_joint3:
 3249 0000 00000000 		.space	4
 3250              		.global	prev_joint2
 3251              		.section	.bss.prev_joint2,"aw",%nobits
 3252              		.align	2
 3255              	prev_joint2:
 3256 0000 00000000 		.space	4
 3257              		.global	prev_joint1
 3258              		.section	.bss.prev_joint1,"aw",%nobits
 3259              		.align	2
 3262              	prev_joint1:
 3263 0000 00000000 		.space	4
 3264              		.global	buttonState
 3265              		.section	.bss.buttonState,"aw",%nobits
 3268              	buttonState:
 3269 0000 00       		.space	1
 3270              		.global	injectFlag
 3271              		.section	.data.injectFlag,"aw"
 3272              		.align	2
 3275              	injectFlag:
 3276 0000 02000000 		.word	2
 3277              		.global	ledFlag
 3278              		.section	.bss.ledFlag,"aw",%nobits
 3279              		.align	2
 3282              	ledFlag:
 3283 0000 00000000 		.space	4
 3284              		.global	actuator
 3285              		.section	.bss.actuator,"aw",%nobits
 3286              		.align	2
 3289              	actuator:
 3290 0000 00000000 		.space	4
 3291              		.global	joint5
 3292              		.section	.data.joint5,"aw"
 3293              		.align	2
 3296              	joint5:
 3297 0000 0F000000 		.word	15
 3298              		.global	joint4
 3299              		.section	.bss.joint4,"aw",%nobits
 3300              		.align	2
 3303              	joint4:
 3304 0000 00000000 		.space	4
 3305              		.global	joint3
 3306              		.section	.data.joint3,"aw"
 3307              		.align	2
 3310              	joint3:
 3311 0000 87000000 		.word	135
 3312              		.global	joint2
 3313              		.section	.data.joint2,"aw"
 3314              		.align	2
 3317              	joint2:
 3318 0000 5A000000 		.word	90
 3319              		.global	joint1
 3320              		.section	.bss.joint1,"aw",%nobits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 104


 3321              		.align	2
 3324              	joint1:
 3325 0000 00000000 		.space	4
 3326              		.global	previous_string
 3327              		.section	.bss.previous_string,"aw",%nobits
 3328              		.align	2
 3331              	previous_string:
 3332 0000 00000000 		.space	256
 3332      00000000 
 3332      00000000 
 3332      00000000 
 3332      00000000 
 3333              		.global	received_string
 3334              		.section	.bss.received_string,"aw",%nobits
 3335              		.align	2
 3338              	received_string:
 3339 0000 00000000 		.space	256
 3339      00000000 
 3339      00000000 
 3339      00000000 
 3339      00000000 
 3340              		.global	uart_received
 3341              		.section	.bss.uart_received,"aw",%nobits
 3344              	uart_received:
 3345 0000 00       		.space	1
 3346              		.global	buffer_index
 3347              		.section	.bss.buffer_index,"aw",%nobits
 3348              		.align	1
 3351              	buffer_index:
 3352 0000 0000     		.space	2
 3353              		.global	uart_buffer
 3354              		.section	.bss.uart_buffer,"aw",%nobits
 3355              		.align	2
 3358              	uart_buffer:
 3359 0000 00000000 		.space	256
 3359      00000000 
 3359      00000000 
 3359      00000000 
 3359      00000000 
 3360              		.global	rx_byte5
 3361              		.section	.bss.rx_byte5,"aw",%nobits
 3364              	rx_byte5:
 3365 0000 00       		.space	1
 3366              		.global	rx_byte4
 3367              		.section	.bss.rx_byte4,"aw",%nobits
 3370              	rx_byte4:
 3371 0000 00       		.space	1
 3372              		.global	rx_byte3
 3373              		.section	.bss.rx_byte3,"aw",%nobits
 3376              	rx_byte3:
 3377 0000 00       		.space	1
 3378              		.global	rx_byte2
 3379              		.section	.bss.rx_byte2,"aw",%nobits
 3382              	rx_byte2:
 3383 0000 00       		.space	1
 3384              		.global	rx_byte1
 3385              		.section	.bss.rx_byte1,"aw",%nobits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 105


 3388              	rx_byte1:
 3389 0000 00       		.space	1
 3390              		.global	rx_byte
 3391              		.section	.bss.rx_byte,"aw",%nobits
 3394              	rx_byte:
 3395 0000 00       		.space	1
 3396              		.text
 3397              	.Letext0:
 3398              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 3399              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3400              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3401              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3402              		.file 7 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 3403              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3404              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3405              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3406              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3407              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3408              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3409              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3410              		.file 15 "Core/Inc/adc.h"
 3411              		.file 16 "Core/Inc/tim.h"
 3412              		.file 17 "Core/Inc/usart.h"
 3413              		.file 18 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 3414              		.file 19 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 3415              		.file 20 "Core/Inc/usb_otg.h"
 3416              		.file 21 "Core/Inc/i2c.h"
 3417              		.file 22 "Core/Inc/gpio.h"
 3418              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3419              		.file 24 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 106


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:68     .text.__io_putchar_usart2:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:74     .text.__io_putchar_usart2:00000000 __io_putchar_usart2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:110    .text.__io_putchar_usart2:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:115    .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:121    .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:157    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:162    .text.__io_putchar_uart4:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:168    .text.__io_putchar_uart4:00000000 __io_putchar_uart4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:204    .text.__io_putchar_uart4:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:209    .text.__io_putchar_uart5:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:215    .text.__io_putchar_uart5:00000000 __io_putchar_uart5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:251    .text.__io_putchar_uart5:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:256    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:262    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:298    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:303    .text.ProcessReceivedJoint:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:309    .text.ProcessReceivedJoint:00000000 ProcessReceivedJoint
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:323    .rodata.Joint1Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:327    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:333    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:398    .text.Joint1Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:403    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:407    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:413    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:478    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:483    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:489    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:554    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:559    .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:565    .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:630    .text.Joint4Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:635    .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:641    .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:706    .text.Joint5Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:711    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:717    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:774    .text.HomeSet:00000038 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3324   .bss.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3317   .data.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3310   .data.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3303   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3296   .data.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:783    .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:789    .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:803    .text.ActuatorStatus:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:809    .text.ActuatorStatus:00000000 ActuatorStatus
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:824    .text.Read_ADC_PA0:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:830    .text.Read_ADC_PA0:00000000 Read_ADC_PA0
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:883    .text.Read_ADC_PA0:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:888    .text.inject:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:894    .text.inject:00000000 inject
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:946    .text.inject:00000038 $d
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 107


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:951    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:1075   .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:1081   .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:1584   .text.ProcessReceivedString:00000298 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3275   .data.injectFlag:00000000 injectFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3289   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3262   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3255   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3248   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3241   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3234   .bss.prev_joint5:00000000 prev_joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3227   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:1629   .text.ProcessReceivedString:00000338 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2005   .text.ProcessReceivedString:000004b8 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3282   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2037   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2041   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2047   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2566   .text.HAL_UART_RxCpltCallback:00000278 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3351   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3364   .bss.rx_byte5:00000000 rx_byte5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3358   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3394   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3338   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3388   .bss.rx_byte1:00000000 rx_byte1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3331   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3382   .bss.rx_byte2:00000000 rx_byte2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3376   .bss.rx_byte3:00000000 rx_byte3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2592   .text.HAL_UART_RxCpltCallback:000002d0 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2782   .text.HAL_UART_RxCpltCallback:000003c0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3370   .bss.rx_byte4:00000000 rx_byte4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2794   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2800   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2832   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2838   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2986   .text.SystemClock_Config:000000a0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2992   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:2996   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3002   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3202   .text.main:000000fc $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3268   .bss.buttonState:00000000 buttonState
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3224   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3231   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3238   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3245   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3252   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3259   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3269   .bss.buttonState:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3272   .data.injectFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3279   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3286   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3293   .data.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3300   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3307   .data.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3314   .data.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3321   .bss.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3328   .bss.previous_string:00000000 $d
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s 			page 108


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3335   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3344   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3345   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3348   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3355   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3365   .bss.rx_byte5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3371   .bss.rx_byte4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3377   .bss.rx_byte3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3383   .bss.rx_byte2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3389   .bss.rx_byte1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cc1ElwuD.s:3395   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
huart3
huart4
huart5
huart6
snprintf
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
hadc1
htim4
strncmp
puts
sscanf
printf
HAL_UART_Receive_IT
strcpy
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_UART4_Init
MX_UART5_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM4_Init
MX_TIM3_Init
MX_USART6_UART_Init
HAL_TIM_PWM_Start
HAL_Delay
