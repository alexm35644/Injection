ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB244:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 0
  44:Core/Src/main.c **** #define JOINT2_HOME 90
  45:Core/Src/main.c **** #define JOINT3_HOME 180
  46:Core/Src/main.c **** #define JOINT4_HOME 0
  47:Core/Src/main.c **** #define JOINT5_HOME 40
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** #define INJECT 1
  50:Core/Src/main.c **** #define STOP 0
  51:Core/Src/main.c **** #define RETRACT 2
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** #define MAIN_UART &huart1
  55:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART1
  56:Core/Src/main.c **** #define JOINT1_UART &huart6
  57:Core/Src/main.c **** #define JOINT1_UART_INSTANCE USART6
  58:Core/Src/main.c **** #define JOINT2_UART &huart2
  59:Core/Src/main.c **** #define JOINT2_UART_INSTANCE USART2
  60:Core/Src/main.c **** #define JOINT3_UART &huart3
  61:Core/Src/main.c **** #define JOINT3_UART_INSTANCE USART3
  62:Core/Src/main.c **** #define JOINT4_UART &huart4
  63:Core/Src/main.c **** #define JOINT4_UART_INSTANCE UART4
  64:Core/Src/main.c **** #define JOINT5_UART &huart5
  65:Core/Src/main.c **** #define JOINT5_UART_INSTANCE UART5
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PD */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN PM */
  72:Core/Src/main.c **** #define DEBUG
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** #ifdef DEBUG
  75:Core/Src/main.c ****   #define DEBUG_PRINT(x) Serial.print(x)
  76:Core/Src/main.c ****   #define DEBUG_PRINTLN(x) Serial.println(x)
  77:Core/Src/main.c ****   #define DEBUG_DELAY(x) delay(x)
  78:Core/Src/main.c **** #else
  79:Core/Src/main.c ****   #define DEBUG_PRINT(x)
  80:Core/Src/main.c ****   #define DEBUG_PRINTLN(x)
  81:Core/Src/main.c ****   #define DEBUG_DELAY(x)
  82:Core/Src/main.c **** #endif
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PM */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE BEGIN PV */
  89:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  90:Core/Src/main.c **** volatile uint8_t rx_byte;                         // Main UART
  91:Core/Src/main.c **** volatile uint8_t rx_byte1;                        // Joint 1
  92:Core/Src/main.c **** volatile uint8_t rx_byte2;                        // Joint 2
  93:Core/Src/main.c **** volatile uint8_t rx_byte3;                        // Joint 3
  94:Core/Src/main.c **** volatile uint8_t rx_byte4;                        // Joint 4
  95:Core/Src/main.c **** volatile uint8_t rx_byte5;                        // Joint 5
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  98:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
 101:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
 102:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** int joint1 = JOINT1_HOME;
 105:Core/Src/main.c **** int joint2 = JOINT2_HOME;
 106:Core/Src/main.c **** int joint3 = JOINT3_HOME;
 107:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
 108:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
 109:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
 110:Core/Src/main.c **** int ledFlag = 0; 
 111:Core/Src/main.c **** int injectFlag = RETRACT; 
 112:Core/Src/main.c **** volatile uint8_t buttonState = 0; // Global variable to track the button state
 113:Core/Src/main.c **** volatile uint8_t footPedalFlag = 0;   // Global footpedal flag 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** int injectionLimit = 2600;
 116:Core/Src/main.c **** int retractionLimit = 4050;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** uint32_t buttonPressTime = 0;
 122:Core/Src/main.c **** int buttonHeld = 0;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* USER CODE END PV */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 128:Core/Src/main.c **** void SystemClock_Config(void);
 129:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 130:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART2 int __io_putchar_usart2(int ch)
 133:Core/Src/main.c **** #define printf_joint2(...) do { \
 134:Core/Src/main.c ****     char buffer[256]; \
 135:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 136:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 137:Core/Src/main.c ****         __io_putchar_usart2(buffer[i]); \
 138:Core/Src/main.c ****     } \
 139:Core/Src/main.c **** } while (0)
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
 142:Core/Src/main.c **** #define printf_joint3(...) do { \
 143:Core/Src/main.c ****     char buffer[256]; \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 4


 144:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 145:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 146:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
 147:Core/Src/main.c ****     } \
 148:Core/Src/main.c **** } while (0)
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART4 int __io_putchar_uart4(int ch)
 151:Core/Src/main.c **** #define printf_joint4(...) do { \
 152:Core/Src/main.c ****     char buffer[256]; \
 153:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 154:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 155:Core/Src/main.c ****         __io_putchar_uart4(buffer[i]); \
 156:Core/Src/main.c ****     } \
 157:Core/Src/main.c **** } while (0)
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART5 int __io_putchar_uart5(int ch)
 160:Core/Src/main.c **** #define printf_joint5(...) do { \
 161:Core/Src/main.c ****     char buffer[256]; \
 162:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 163:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 164:Core/Src/main.c ****         __io_putchar_uart5(buffer[i]); \
 165:Core/Src/main.c ****     } \
 166:Core/Src/main.c **** } while (0)
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
 169:Core/Src/main.c **** #define printf_joint1(...) do { \
 170:Core/Src/main.c ****     char buffer[256]; \
 171:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 172:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 173:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 174:Core/Src/main.c ****     } \
 175:Core/Src/main.c **** } while (0)
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** void Joint1Set(int theta);
 178:Core/Src/main.c **** void Joint2Set(int theta);
 179:Core/Src/main.c **** void Joint3Set(int theta);
 180:Core/Src/main.c **** void Joint4Set(int theta);
 181:Core/Src/main.c **** void Joint5Set(int theta);
 182:Core/Src/main.c **** void ActuatorSet(int theta);
 183:Core/Src/main.c **** int ActuatorStatus();
 184:Core/Src/main.c **** void homeSet(); 
 185:Core/Src/main.c **** uint16_t Read_ADC_PA0();
 186:Core/Src/main.c **** void inject(int direction, int adc);
 187:Core/Src/main.c **** void HomeSetUser();
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /* USER CODE END PFP */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 192:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /* USER CODE END 0 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /**
 197:Core/Src/main.c ****   * @brief  The application entry point.
 198:Core/Src/main.c ****   * @retval int
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** int main(void)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 5


 201:Core/Src/main.c **** {
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END 1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 210:Core/Src/main.c ****   HAL_Init();
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END Init */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* Configure the system clock */
 217:Core/Src/main.c ****   SystemClock_Config();
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END SysInit */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* Initialize all configured peripherals */
 224:Core/Src/main.c ****   MX_GPIO_Init();
 225:Core/Src/main.c ****   MX_ADC1_Init();
 226:Core/Src/main.c ****   MX_I2C1_Init();
 227:Core/Src/main.c ****   MX_TIM1_Init();
 228:Core/Src/main.c ****   MX_TIM2_Init();
 229:Core/Src/main.c ****   MX_UART4_Init();
 230:Core/Src/main.c ****   MX_UART5_Init();
 231:Core/Src/main.c ****   MX_USART1_UART_Init();
 232:Core/Src/main.c ****   MX_USART2_UART_Init();
 233:Core/Src/main.c ****   MX_USART3_UART_Init();
 234:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 235:Core/Src/main.c ****   MX_TIM4_Init();
 236:Core/Src/main.c ****   MX_TIM3_Init();
 237:Core/Src/main.c ****   MX_USART6_UART_Init();
 238:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 239:Core/Src/main.c ****   
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   printf("System Initialized\r\n");
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1); // Start PWM on PD12
 244:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);  // 50% duty cycle on PD12
 247:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   uint16_t adcValue = Read_ADC_PA0();
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 254:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 255:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 256:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 257:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 6


 258:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END 2 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* Infinite loop */
 264:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 265:Core/Src/main.c ****   while (1) {
 266:Core/Src/main.c ****     /* USER CODE END WHILE */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 269:Core/Src/main.c ****     uint16_t adcValue = Read_ADC_PA0();
 270:Core/Src/main.c ****     HAL_Delay(1);
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     // Foot pedal or button press logic
 273:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(USER2_GPIO_Port, USER2_Pin)) { 
 274:Core/Src/main.c ****         injectSequence();
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****         if (!buttonHeld) { 
 277:Core/Src/main.c ****             buttonHeld = 1; 
 278:Core/Src/main.c ****             buttonPressTime = HAL_GetTick(); // Record the press time
 279:Core/Src/main.c ****             injectFlag = RETRACT; 
 280:Core/Src/main.c ****             inject(RETRACT, adcValue);
 281:Core/Src/main.c ****         } 
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****         if (HAL_GetTick() - buttonPressTime >= 4500) { // Check if held for 1 second
 284:Core/Src/main.c ****             injectFlag = INJECT; 
 285:Core/Src/main.c ****             inject(INJECT, adcValue);
 286:Core/Src/main.c ****         }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     } else {
 289:Core/Src/main.c ****         buttonHeld = 0;
 290:Core/Src/main.c ****         buttonPressTime = 0; // Reset timer
 291:Core/Src/main.c ****         uint32_t lastMillis = HAL_GetTick(); // Start the delay timer
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****         // Home set logic
 294:Core/Src/main.c ****         joint1 = JOINT1_HOME;
 295:Core/Src/main.c ****         Joint1Set(joint1);
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****         joint2 = JOINT2_HOME;
 298:Core/Src/main.c ****         Joint2Set(joint2);
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****         // Wait for 1 second after setting joint2
 301:Core/Src/main.c ****         while (HAL_GetTick() - lastMillis < 1000) {
 302:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 303:Core/Src/main.c ****         }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****         // Set the remaining joints after the delay
 306:Core/Src/main.c ****         joint3 = JOINT3_HOME;
 307:Core/Src/main.c ****         Joint3Set(joint3);
 308:Core/Src/main.c ****         joint4 = JOINT4_HOME;
 309:Core/Src/main.c ****         Joint4Set(joint4);
 310:Core/Src/main.c ****         joint5 = JOINT5_HOME;
 311:Core/Src/main.c ****         Joint5Set(joint5);
 312:Core/Src/main.c ****         
 313:Core/Src/main.c ****         injectFlag = RETRACT;  // Set the inject flag
 314:Core/Src/main.c ****         inject(RETRACT, adcValue);  // Retract command
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 7


 315:Core/Src/main.c ****         
 316:Core/Src/main.c ****     }
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     /* USER CODE END 3 */
 319:Core/Src/main.c **** }
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /**
 323:Core/Src/main.c ****   * @brief System Clock Configuration
 324:Core/Src/main.c ****   * @retval None
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c **** void SystemClock_Config(void)
 327:Core/Src/main.c **** {
 328:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 329:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 337:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 347:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 348:Core/Src/main.c ****   {
 349:Core/Src/main.c ****     Error_Handler();
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 355:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 356:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 357:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 358:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 359:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 362:Core/Src/main.c ****   {
 363:Core/Src/main.c ****     Error_Handler();
 364:Core/Src/main.c ****   }
 365:Core/Src/main.c **** }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 371:Core/Src/main.c ****   * @retval None
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 8


 372:Core/Src/main.c ****   */
 373:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 374:Core/Src/main.c ****  {
  30              		.loc 1 374 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 374 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 375:Core/Src/main.c ****    /* Place your implementation of fputc here */
 376:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 377:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 377 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 377 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 378:Core/Src/main.c ****  
 379:Core/Src/main.c ****    return ch;
  52              		.loc 1 379 4 is_stmt 1 view .LVU4
 380:Core/Src/main.c ****  }
  53              		.loc 1 380 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE244:
  67              		.section	.text.__io_putchar_usart2,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart2
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart2:
  75              	.LVL3:
  76              	.LFB245:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART2{
  77              		.loc 1 382 26 is_stmt 1 view -0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 9


  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 382 26 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 383:Core/Src/main.c ****     HAL_UART_Transmit(JOINT2_UART, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 383 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 383 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****       return ch;
  99              		.loc 1 385 7 is_stmt 1 view .LVU10
 386:Core/Src/main.c ****  }
 100              		.loc 1 386 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart2
 111              		.cfi_endproc
 112              	.LFE245:
 114              		.section	.text.__io_putchar_usart3,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart3:
 122              	.LVL6:
 123              	.LFB246:
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 389:Core/Src/main.c ****  {
 124              		.loc 1 389 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 389 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 10


 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 390:Core/Src/main.c ****     /* Place your implementation of fputc here */
 391:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 392:Core/Src/main.c ****     HAL_UART_Transmit(JOINT3_UART, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 392 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 392 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****     return ch;
 146              		.loc 1 394 5 is_stmt 1 view .LVU16
 395:Core/Src/main.c ****  }
 147              		.loc 1 395 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 001c 00000000 		.word	huart3
 158              		.cfi_endproc
 159              	.LFE246:
 161              		.section	.text.__io_putchar_uart4,"ax",%progbits
 162              		.align	1
 163              		.global	__io_putchar_uart4
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	__io_putchar_uart4:
 169              	.LVL9:
 170              	.LFB247:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART4
 398:Core/Src/main.c ****  {
 171              		.loc 1 398 2 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 398 2 is_stmt 0 view .LVU19
 176 0000 00B5     		push	{lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 11


 180 0002 83B0     		sub	sp, sp, #12
 181              	.LCFI10:
 182              		.cfi_def_cfa_offset 16
 183 0004 0190     		str	r0, [sp, #4]
 399:Core/Src/main.c ****     /* Place your implementation of fputc here */
 400:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 401:Core/Src/main.c ****     HAL_UART_Transmit(JOINT4_UART, (uint8_t *)&ch, 1, 0xFFFF);
 184              		.loc 1 401 5 is_stmt 1 view .LVU20
 185 0006 4FF6FF73 		movw	r3, #65535
 186 000a 0122     		movs	r2, #1
 187 000c 01A9     		add	r1, sp, #4
 188 000e 0348     		ldr	r0, .L15
 189              	.LVL10:
 190              		.loc 1 401 5 is_stmt 0 view .LVU21
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 192              	.LVL11:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****     return ch;
 193              		.loc 1 403 5 is_stmt 1 view .LVU22
 404:Core/Src/main.c ****  }
 194              		.loc 1 404 2 is_stmt 0 view .LVU23
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              		.align	2
 203              	.L15:
 204 001c 00000000 		.word	huart4
 205              		.cfi_endproc
 206              	.LFE247:
 208              		.section	.text.__io_putchar_uart5,"ax",%progbits
 209              		.align	1
 210              		.global	__io_putchar_uart5
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	__io_putchar_uart5:
 216              	.LVL12:
 217              	.LFB248:
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART5
 407:Core/Src/main.c ****  {
 218              		.loc 1 407 2 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 407 2 is_stmt 0 view .LVU25
 223 0000 00B5     		push	{lr}
 224              	.LCFI12:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI13:
 229              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 12


 230 0004 0190     		str	r0, [sp, #4]
 408:Core/Src/main.c ****     /* Place your implementation of fputc here */
 409:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 410:Core/Src/main.c ****     HAL_UART_Transmit(JOINT5_UART, (uint8_t *)&ch, 1, 0xFFFF);
 231              		.loc 1 410 5 is_stmt 1 view .LVU26
 232 0006 4FF6FF73 		movw	r3, #65535
 233 000a 0122     		movs	r2, #1
 234 000c 01A9     		add	r1, sp, #4
 235 000e 0348     		ldr	r0, .L19
 236              	.LVL13:
 237              		.loc 1 410 5 is_stmt 0 view .LVU27
 238 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 239              	.LVL14:
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****     return ch;
 240              		.loc 1 412 5 is_stmt 1 view .LVU28
 413:Core/Src/main.c ****  }
 241              		.loc 1 413 2 is_stmt 0 view .LVU29
 242 0014 0198     		ldr	r0, [sp, #4]
 243 0016 03B0     		add	sp, sp, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0018 5DF804FB 		ldr	pc, [sp], #4
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 001c 00000000 		.word	huart5
 252              		.cfi_endproc
 253              	.LFE248:
 255              		.section	.text.__io_putchar_usart6,"ax",%progbits
 256              		.align	1
 257              		.global	__io_putchar_usart6
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	__io_putchar_usart6:
 263              	.LVL15:
 264              	.LFB249:
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 416:Core/Src/main.c ****  {
 265              		.loc 1 416 2 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 416 2 is_stmt 0 view .LVU31
 270 0000 00B5     		push	{lr}
 271              	.LCFI15:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 14, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 16
 277 0004 0190     		str	r0, [sp, #4]
 417:Core/Src/main.c ****     /* Place your implementation of fputc here */
 418:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 13


 419:Core/Src/main.c ****     HAL_UART_Transmit(JOINT1_UART, (uint8_t *)&ch, 1, 0xFFFF);
 278              		.loc 1 419 5 is_stmt 1 view .LVU32
 279 0006 4FF6FF73 		movw	r3, #65535
 280 000a 0122     		movs	r2, #1
 281 000c 01A9     		add	r1, sp, #4
 282 000e 0348     		ldr	r0, .L23
 283              	.LVL16:
 284              		.loc 1 419 5 is_stmt 0 view .LVU33
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL17:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****     return ch;
 287              		.loc 1 421 5 is_stmt 1 view .LVU34
 422:Core/Src/main.c ****  }
 288              		.loc 1 422 2 is_stmt 0 view .LVU35
 289 0014 0198     		ldr	r0, [sp, #4]
 290 0016 03B0     		add	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 4
 293              		@ sp needed
 294 0018 5DF804FB 		ldr	pc, [sp], #4
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 001c 00000000 		.word	huart6
 299              		.cfi_endproc
 300              	.LFE249:
 302              		.section	.text.ProcessReceivedJoint,"ax",%progbits
 303              		.align	1
 304              		.global	ProcessReceivedJoint
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	ProcessReceivedJoint:
 310              	.LVL18:
 311              	.LFB252:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 425:Core/Src/main.c **** {
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     {
 430:Core/Src/main.c ****         // Store received byte in buffer
 431:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 432:Core/Src/main.c ****         {
 433:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****             // Check for newline or carriage return
 436:Core/Src/main.c ****             if (rx_byte == '\n') 
 437:Core/Src/main.c ****             {
 438:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 439:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 442:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 443:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 14


 444:Core/Src/main.c ****                 ProcessReceivedString(received_string);
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****                 
 447:Core/Src/main.c ****             }
 448:Core/Src/main.c ****         }
 449:Core/Src/main.c ****         else 
 450:Core/Src/main.c ****         {
 451:Core/Src/main.c ****             // Buffer overflow, reset index
 452:Core/Src/main.c ****             buffer_index = 0;
 453:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 454:Core/Src/main.c ****         }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****         // Restart UART reception for the next byte
 457:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 458:Core/Src/main.c ****     }
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****     else if(huart -> Instance == JOINT1_UART_INSTANCE){
 461:Core/Src/main.c ****         // Store received byte in buffer
 462:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 463:Core/Src/main.c ****         {
 464:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte1;
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****             // Check for newline or carriage return
 467:Core/Src/main.c ****             if (rx_byte1 == '\n') 
 468:Core/Src/main.c ****             {
 469:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 470:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 473:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 476:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 477:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 478:Core/Src/main.c ****                 }
 479:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 480:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 481:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 482:Core/Src/main.c ****                 }
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****                 
 485:Core/Src/main.c ****             }
 486:Core/Src/main.c ****         }
 487:Core/Src/main.c ****         else 
 488:Core/Src/main.c ****         {
 489:Core/Src/main.c ****             // Buffer overflow, reset index
 490:Core/Src/main.c ****             buffer_index = 0;
 491:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 492:Core/Src/main.c ****         }
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****         // Restart UART reception for the next byte
 495:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1);
 496:Core/Src/main.c ****     }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****     else if(huart -> Instance == JOINT2_UART_INSTANCE){
 499:Core/Src/main.c ****         // Store received byte in buffer
 500:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 15


 501:Core/Src/main.c ****         {
 502:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte2;
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****             // Check for newline or carriage return
 505:Core/Src/main.c ****             if (rx_byte2 == '\n') 
 506:Core/Src/main.c ****             {
 507:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 508:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 511:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 514:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 515:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 516:Core/Src/main.c ****                 }
 517:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 518:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 519:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 520:Core/Src/main.c ****                 }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****                 
 523:Core/Src/main.c ****             }
 524:Core/Src/main.c ****         }
 525:Core/Src/main.c ****         else 
 526:Core/Src/main.c ****         {
 527:Core/Src/main.c ****             // Buffer overflow
 528:Core/Src/main.c ****             buffer_index = 0;
 529:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 530:Core/Src/main.c ****         }
 531:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1);
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****       }
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****       else if(huart -> Instance == JOINT3_UART_INSTANCE){
 536:Core/Src/main.c ****         // Store received byte in buffer
 537:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 538:Core/Src/main.c ****         {
 539:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte3;
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****             // Check for newline or carriage return
 542:Core/Src/main.c ****             if (rx_byte3 == '\n') 
 543:Core/Src/main.c ****             {
 544:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 545:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 548:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 551:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 552:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 553:Core/Src/main.c ****                 }
 554:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 555:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 556:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 557:Core/Src/main.c ****                 }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 16


 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****                 
 560:Core/Src/main.c ****             }
 561:Core/Src/main.c ****         }
 562:Core/Src/main.c ****         else 
 563:Core/Src/main.c ****         {
 564:Core/Src/main.c ****             // Buffer overflow
 565:Core/Src/main.c ****             buffer_index = 0;
 566:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 567:Core/Src/main.c ****         }
 568:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1);
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****       }
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****       else if(huart -> Instance == JOINT4_UART_INSTANCE){
 573:Core/Src/main.c ****         // Store received byte in buffer
 574:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 575:Core/Src/main.c ****         {
 576:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte4;
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****             // Check for newline or carriage return
 579:Core/Src/main.c ****             if (rx_byte4 == '\n') 
 580:Core/Src/main.c ****             {
 581:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 582:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 585:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 588:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 589:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 590:Core/Src/main.c ****                 }
 591:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 592:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 593:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 594:Core/Src/main.c ****                 }
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****                 
 597:Core/Src/main.c ****             }
 598:Core/Src/main.c ****         }
 599:Core/Src/main.c ****         else 
 600:Core/Src/main.c ****         {
 601:Core/Src/main.c ****             // Buffer overflow
 602:Core/Src/main.c ****             buffer_index = 0;
 603:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 604:Core/Src/main.c ****         }
 605:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1);
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****       }
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****       else if(huart -> Instance == JOINT5_UART_INSTANCE){
 610:Core/Src/main.c ****         // Store received byte in buffer
 611:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 612:Core/Src/main.c ****         {
 613:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte5;
 614:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 17


 615:Core/Src/main.c ****             // Check for newline or carriage return
 616:Core/Src/main.c ****             if (rx_byte5 == '\n') 
 617:Core/Src/main.c ****             {
 618:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 619:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 622:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 625:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 626:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 627:Core/Src/main.c ****                 }
 628:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 629:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 630:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 631:Core/Src/main.c ****                 }
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****                 
 634:Core/Src/main.c ****             }
 635:Core/Src/main.c ****         }
 636:Core/Src/main.c ****         else 
 637:Core/Src/main.c ****         {
 638:Core/Src/main.c ****             // Buffer overflow
 639:Core/Src/main.c ****             buffer_index = 0;
 640:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 641:Core/Src/main.c ****         }
 642:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1);
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****       }
 645:Core/Src/main.c **** 
 646:Core/Src/main.c **** }
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****  
 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****  
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** // Function to process the received string
 655:Core/Src/main.c **** void ProcessReceivedString(char *str)
 656:Core/Src/main.c **** {
 657:Core/Src/main.c ****     // Check if the string starts with "set"
 658:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 659:Core/Src/main.c ****     {
 660:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 661:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 664:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 665:Core/Src/main.c ****         {
 666:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 667:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 670:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 671:Core/Src/main.c ****                 // send to joint
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 18


 672:Core/Src/main.c ****                 prev_joint1 = joint1;
 673:Core/Src/main.c ****                 Joint1Set(joint1);
 674:Core/Src/main.c ****             }
 675:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 676:Core/Src/main.c ****                 // send to joint
 677:Core/Src/main.c ****                 prev_joint2 = joint2;
 678:Core/Src/main.c ****                 Joint2Set(joint2);
 679:Core/Src/main.c ****             }
 680:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 681:Core/Src/main.c ****                 // send to joint
 682:Core/Src/main.c ****                 prev_joint3 = joint3;
 683:Core/Src/main.c ****                 Joint3Set(joint3);
 684:Core/Src/main.c ****             }
 685:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 686:Core/Src/main.c ****                 // send to joint
 687:Core/Src/main.c ****                 prev_joint4 = joint4;
 688:Core/Src/main.c ****             }
 689:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 690:Core/Src/main.c ****                 // send to joint
 691:Core/Src/main.c ****                 prev_joint5 = joint5;
 692:Core/Src/main.c ****             }
 693:Core/Src/main.c ****             if (actuator != prev_actuator) {
 694:Core/Src/main.c ****                 // send to actuator
 695:Core/Src/main.c ****                 prev_actuator = actuator;
 696:Core/Src/main.c ****             }
 697:Core/Src/main.c ****         }
 698:Core/Src/main.c ****         else
 699:Core/Src/main.c ****         {
 700:Core/Src/main.c ****             printf("Invalid format!\r\n");
 701:Core/Src/main.c ****         }
 702:Core/Src/main.c ****     }
 703:Core/Src/main.c ****     // Just setting joint1 
 704:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 705:Core/Src/main.c ****     {
 706:Core/Src/main.c ****         str += 7;
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 709:Core/Src/main.c ****         {
 710:Core/Src/main.c ****             // Successfully parsed joint1
 711:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 712:Core/Src/main.c **** 
 713:Core/Src/main.c ****             //if (joint1 != prev_joint1) {
 714:Core/Src/main.c ****                 Joint1Set(joint1);
 715:Core/Src/main.c ****                 prev_joint1 = joint1;
 716:Core/Src/main.c ****             //}
 717:Core/Src/main.c ****         }
 718:Core/Src/main.c ****         else
 719:Core/Src/main.c ****         {
 720:Core/Src/main.c ****             printf("Invalid format!\r\n");
 721:Core/Src/main.c ****         }
 722:Core/Src/main.c ****     }
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****     // Just setting joint2
 725:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 726:Core/Src/main.c ****     {
 727:Core/Src/main.c ****         str += 7;
 728:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 19


 729:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 730:Core/Src/main.c ****         {
 731:Core/Src/main.c ****             // Successfully parsed joint2
 732:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****             //if (joint2 != prev_joint2) {
 735:Core/Src/main.c ****                 Joint2Set(joint2);
 736:Core/Src/main.c ****                 prev_joint2 = joint2;
 737:Core/Src/main.c ****             //}
 738:Core/Src/main.c ****         }
 739:Core/Src/main.c ****         else
 740:Core/Src/main.c ****         {
 741:Core/Src/main.c ****             printf("Invalid format!\r\n");
 742:Core/Src/main.c ****         }
 743:Core/Src/main.c ****     }
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****     // Just setting joint3
 746:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 747:Core/Src/main.c ****     {
 748:Core/Src/main.c ****         str += 7;
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 751:Core/Src/main.c ****         {
 752:Core/Src/main.c ****             // Successfully parsed joint3
 753:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****             //if (joint3 != prev_joint3) {
 756:Core/Src/main.c ****                 Joint3Set(joint3);
 757:Core/Src/main.c ****                 prev_joint3 = joint3;
 758:Core/Src/main.c ****             //}
 759:Core/Src/main.c ****         }
 760:Core/Src/main.c ****         else
 761:Core/Src/main.c ****         {
 762:Core/Src/main.c ****             printf("Invalid format!\r\n");
 763:Core/Src/main.c ****         }
 764:Core/Src/main.c ****     }
 765:Core/Src/main.c **** 
 766:Core/Src/main.c ****     // Just setting joint4
 767:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 768:Core/Src/main.c ****     {
 769:Core/Src/main.c ****         str += 7;
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 772:Core/Src/main.c ****         {
 773:Core/Src/main.c ****             // Successfully parsed joint4
 774:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 775:Core/Src/main.c **** 
 776:Core/Src/main.c ****             //if (joint4 != prev_joint4) {
 777:Core/Src/main.c ****                 Joint4Set(joint4);
 778:Core/Src/main.c ****                 prev_joint4 = joint4;
 779:Core/Src/main.c ****             //}
 780:Core/Src/main.c ****         }
 781:Core/Src/main.c ****         else
 782:Core/Src/main.c ****         {
 783:Core/Src/main.c ****             printf("Invalid format!\r\n");
 784:Core/Src/main.c ****         }
 785:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 20


 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****     // Just setting joint5
 788:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 789:Core/Src/main.c ****     {
 790:Core/Src/main.c ****         str += 7;
 791:Core/Src/main.c **** 
 792:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 793:Core/Src/main.c ****         {
 794:Core/Src/main.c ****             // Successfully parsed joint5
 795:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 796:Core/Src/main.c **** 
 797:Core/Src/main.c ****             //if (joint5 != prev_joint5) {
 798:Core/Src/main.c ****                 Joint5Set(joint5);
 799:Core/Src/main.c ****                 prev_joint5 = joint5;
 800:Core/Src/main.c ****             //}
 801:Core/Src/main.c ****         }
 802:Core/Src/main.c ****         else
 803:Core/Src/main.c ****         {
 804:Core/Src/main.c ****             printf("Invalid format!\r\n");
 805:Core/Src/main.c ****         }
 806:Core/Src/main.c ****     }
 807:Core/Src/main.c **** 
 808:Core/Src/main.c ****     // Just setting actuator
 809:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 810:Core/Src/main.c ****     {
 811:Core/Src/main.c ****         str += 9;
 812:Core/Src/main.c **** 
 813:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 814:Core/Src/main.c ****         {
 815:Core/Src/main.c ****             // Successfully parsed joint5
 816:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 817:Core/Src/main.c **** 
 818:Core/Src/main.c ****             //if (actuator != actuator) {
 819:Core/Src/main.c ****                 ActuatorSet(actuator);
 820:Core/Src/main.c ****                 prev_actuator = actuator;
 821:Core/Src/main.c ****             //}
 822:Core/Src/main.c ****         }
 823:Core/Src/main.c ****         else
 824:Core/Src/main.c ****         {
 825:Core/Src/main.c ****             printf("Invalid format!\r\n");
 826:Core/Src/main.c ****         }
 827:Core/Src/main.c ****     }
 828:Core/Src/main.c **** 
 829:Core/Src/main.c ****     else if (strncmp(str, "j1read", 6) == 0)
 830:Core/Src/main.c ****     {
 831:Core/Src/main.c ****         printf_joint1("r\r\n");
 832:Core/Src/main.c ****     }
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****     else if (strncmp(str, "j2read", 6) == 0)
 835:Core/Src/main.c ****     {
 836:Core/Src/main.c ****         printf_joint2("r\r\n");
 837:Core/Src/main.c ****     }
 838:Core/Src/main.c **** 
 839:Core/Src/main.c ****     else if (strncmp(str, "j3read", 6) == 0)
 840:Core/Src/main.c ****     {
 841:Core/Src/main.c ****         printf_joint3("r\r\n");
 842:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 21


 843:Core/Src/main.c ****       
 844:Core/Src/main.c ****       else if (strncmp(str, "j4read", 6) == 0)
 845:Core/Src/main.c ****       {
 846:Core/Src/main.c ****           printf_joint4("r\r\n");
 847:Core/Src/main.c ****       }
 848:Core/Src/main.c ****   
 849:Core/Src/main.c ****       else if (strncmp(str, "j5read", 6) == 0)
 850:Core/Src/main.c ****       {
 851:Core/Src/main.c ****           printf_joint5("r\r\n");
 852:Core/Src/main.c ****       }
 853:Core/Src/main.c ****   
 854:Core/Src/main.c ****       else if (strncmp(str, "aread", 5) == 0)
 855:Core/Src/main.c ****       {
 856:Core/Src/main.c ****           // Print acutator position or status
 857:Core/Src/main.c ****       }
 858:Core/Src/main.c **** 
 859:Core/Src/main.c **** 
 860:Core/Src/main.c ****     // Set Home 
 861:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 862:Core/Src/main.c ****     {
 863:Core/Src/main.c ****         str += 5;
 864:Core/Src/main.c ****         
 865:Core/Src/main.c ****         HomeSet();
 866:Core/Src/main.c ****         
 867:Core/Src/main.c ****         printf("Set all joints home\r\n");
 868:Core/Src/main.c **** 
 869:Core/Src/main.c ****     }
 870:Core/Src/main.c **** 
 871:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 872:Core/Src/main.c ****     {
 873:Core/Src/main.c ****         str += 6;
 874:Core/Src/main.c ****         ledFlag = !ledFlag;
 875:Core/Src/main.c ****         
 876:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 877:Core/Src/main.c **** 
 878:Core/Src/main.c ****     }
 879:Core/Src/main.c **** 
 880:Core/Src/main.c ****     // Prints all joints
 881:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 882:Core/Src/main.c ****     {
 883:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 884:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 885:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 886:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 887:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 888:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 889:Core/Src/main.c ****     }
 890:Core/Src/main.c **** 
 891:Core/Src/main.c ****     else if (strncmp(str, "inject", 6)== 0)
 892:Core/Src/main.c ****     {
 893:Core/Src/main.c ****         injectFlag = INJECT; 
 894:Core/Src/main.c ****         printf("injecting...\r\n");
 895:Core/Src/main.c ****     }
 896:Core/Src/main.c **** 
 897:Core/Src/main.c ****     else if (strncmp(str, "retract", 7)== 0)
 898:Core/Src/main.c ****     {
 899:Core/Src/main.c ****         injectFlag = RETRACT; 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 22


 900:Core/Src/main.c ****         printf("retracting...\r\n");
 901:Core/Src/main.c ****     }
 902:Core/Src/main.c ****     
 903:Core/Src/main.c ****     else if (strncmp(str, "stop", 4) == 0)
 904:Core/Src/main.c ****     {
 905:Core/Src/main.c ****         injectFlag = STOP; 
 906:Core/Src/main.c ****         printf("stopped.\r\n"); 
 907:Core/Src/main.c ****     }
 908:Core/Src/main.c ****     else if (strncmp(str, "sequence", 8) == 0)
 909:Core/Src/main.c ****     {
 910:Core/Src/main.c ****         printf("inject sequence.../r/n");
 911:Core/Src/main.c ****         injectSequence(); 
 912:Core/Src/main.c ****         
 913:Core/Src/main.c ****     }
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****     // Echoes string if no keywords are sent
 916:Core/Src/main.c ****     else
 917:Core/Src/main.c ****     {
 918:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 919:Core/Src/main.c ****     }
 920:Core/Src/main.c **** }
 921:Core/Src/main.c **** 
 922:Core/Src/main.c **** void ProcessReceivedJoint(char *str){
 312              		.loc 1 922 37 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 923:Core/Src/main.c **** 
 924:Core/Src/main.c **** }
 317              		.loc 1 924 1 view .LVU37
 318 0000 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE252:
 322              		.section	.rodata.Joint1Set.str1.4,"aMS",%progbits,1
 323              		.align	2
 324              	.LC0:
 325 0000 25640D0A 		.ascii	"%d\015\012\000"
 325      00
 326              		.section	.text.Joint1Set,"ax",%progbits
 327              		.align	1
 328              		.global	Joint1Set
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	Joint1Set:
 334              	.LVL19:
 335              	.LFB255:
 925:Core/Src/main.c **** void HomeSet(){
 926:Core/Src/main.c ****   //Set all joints to home
 927:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 928:Core/Src/main.c ****   Joint1Set(joint1);
 929:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 930:Core/Src/main.c ****   Joint2Set(joint2);
 931:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 932:Core/Src/main.c ****   Joint3Set(joint3);
 933:Core/Src/main.c ****   joint4 = JOINT4_HOME;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 23


 934:Core/Src/main.c ****   Joint4Set(joint4);
 935:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 936:Core/Src/main.c ****   Joint5Set(joint5);
 937:Core/Src/main.c ****   injectFlag = RETRACT; 
 938:Core/Src/main.c **** 
 939:Core/Src/main.c **** 
 940:Core/Src/main.c ****   
 941:Core/Src/main.c **** }
 942:Core/Src/main.c **** void HomeSetUser() {
 943:Core/Src/main.c ****   static uint32_t lastMillis = 0;
 944:Core/Src/main.c ****   static uint8_t step = 0;  // To track which part of the process we are at.
 945:Core/Src/main.c **** 
 946:Core/Src/main.c ****   if (step == 0) {
 947:Core/Src/main.c ****       // Set Joint 1
 948:Core/Src/main.c ****       joint1 = JOINT1_HOME;
 949:Core/Src/main.c ****       Joint1Set(joint1);
 950:Core/Src/main.c ****       step = 1;  // Move to the next step
 951:Core/Src/main.c ****   } else if (step == 1) {
 952:Core/Src/main.c ****       // Set Joint 2 and start a delay
 953:Core/Src/main.c ****       joint2 = JOINT2_HOME;
 954:Core/Src/main.c ****       Joint2Set(joint2);
 955:Core/Src/main.c ****       lastMillis = HAL_GetTick();  // Start the 1-second delay
 956:Core/Src/main.c ****       step = 2;  // Move to the next step
 957:Core/Src/main.c ****   } else if (step == 2) {
 958:Core/Src/main.c ****       // Wait for 1 second before proceeding
 959:Core/Src/main.c ****       if (HAL_GetTick() - lastMillis >= 1000) {
 960:Core/Src/main.c ****           // Once 1 second has passed, set the remaining joints
 961:Core/Src/main.c ****           joint3 = JOINT3_HOME;
 962:Core/Src/main.c ****           Joint3Set(joint3);
 963:Core/Src/main.c ****           joint4 = JOINT4_HOME;
 964:Core/Src/main.c ****           Joint4Set(joint4);
 965:Core/Src/main.c ****           joint5 = JOINT5_HOME;
 966:Core/Src/main.c ****           Joint5Set(joint5);
 967:Core/Src/main.c ****           injectFlag = RETRACT;  // Set the inject flag
 968:Core/Src/main.c **** 
 969:Core/Src/main.c ****           step = 0;  // Reset for the next time HomeSetUser() is called
 970:Core/Src/main.c ****       }
 971:Core/Src/main.c ****   }
 972:Core/Src/main.c **** }
 973:Core/Src/main.c **** 
 974:Core/Src/main.c **** 
 975:Core/Src/main.c **** 
 976:Core/Src/main.c **** void Joint1Set(int theta){
 336              		.loc 1 976 26 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 256
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 976 26 is_stmt 0 view .LVU39
 341 0000 30B5     		push	{r4, r5, lr}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347 0002 C1B0     		sub	sp, sp, #260
 348              	.LCFI19:
 349              		.cfi_def_cfa_offset 272
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 24


 350 0004 0346     		mov	r3, r0
 977:Core/Src/main.c ****   printf_joint1("%d\r\n", theta);
 351              		.loc 1 977 3 is_stmt 1 view .LVU40
 352              	.LBB4:
 353              		.loc 1 977 3 view .LVU41
 354              		.loc 1 977 3 view .LVU42
 355 0006 094A     		ldr	r2, .L30
 356 0008 4FF48071 		mov	r1, #256
 357 000c 6846     		mov	r0, sp
 358              	.LVL20:
 359              		.loc 1 977 3 is_stmt 0 view .LVU43
 360 000e FFF7FEFF 		bl	snprintf
 361              	.LVL21:
 362              		.loc 1 977 3 view .LVU44
 363 0012 0546     		mov	r5, r0
 364              	.LVL22:
 365              		.loc 1 977 3 is_stmt 1 discriminator 1 view .LVU45
 366              	.LBB5:
 367              		.loc 1 977 3 discriminator 1 view .LVU46
 368              		.loc 1 977 3 is_stmt 0 discriminator 1 view .LVU47
 369 0014 0024     		movs	r4, #0
 370              		.loc 1 977 3 view .LVU48
 371 0016 04E0     		b	.L27
 372              	.LVL23:
 373              	.L28:
 374              		.loc 1 977 3 is_stmt 1 discriminator 3 view .LVU49
 375 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 376 001c FFF7FEFF 		bl	__io_putchar_usart6
 377              	.LVL24:
 378              		.loc 1 977 3 discriminator 3 view .LVU50
 379 0020 0134     		adds	r4, r4, #1
 380              	.LVL25:
 381              	.L27:
 382              		.loc 1 977 3 discriminator 2 view .LVU51
 383 0022 AC42     		cmp	r4, r5
 384 0024 F8DB     		blt	.L28
 385              	.LBE5:
 386              	.LBE4:
 978:Core/Src/main.c **** 
 979:Core/Src/main.c **** }
 387              		.loc 1 979 1 is_stmt 0 view .LVU52
 388 0026 41B0     		add	sp, sp, #260
 389              	.LCFI20:
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
 392 0028 30BD     		pop	{r4, r5, pc}
 393              	.LVL26:
 394              	.L31:
 395              		.loc 1 979 1 view .LVU53
 396 002a 00BF     		.align	2
 397              	.L30:
 398 002c 00000000 		.word	.LC0
 399              		.cfi_endproc
 400              	.LFE255:
 402              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 403              		.align	2
 404              	.LC1:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 25


 405 0000 25640A00 		.ascii	"%d\012\000"
 406              		.section	.text.Joint2Set,"ax",%progbits
 407              		.align	1
 408              		.global	Joint2Set
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	Joint2Set:
 414              	.LVL27:
 415              	.LFB256:
 980:Core/Src/main.c **** 
 981:Core/Src/main.c **** void Joint2Set(int theta){
 416              		.loc 1 981 26 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 256
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 981 26 is_stmt 0 view .LVU55
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 C1B0     		sub	sp, sp, #260
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 272
 430 0004 0346     		mov	r3, r0
 982:Core/Src/main.c ****   printf_joint2("%d\n", theta);
 431              		.loc 1 982 3 is_stmt 1 view .LVU56
 432              	.LBB6:
 433              		.loc 1 982 3 view .LVU57
 434              		.loc 1 982 3 view .LVU58
 435 0006 094A     		ldr	r2, .L36
 436 0008 4FF48071 		mov	r1, #256
 437 000c 6846     		mov	r0, sp
 438              	.LVL28:
 439              		.loc 1 982 3 is_stmt 0 view .LVU59
 440 000e FFF7FEFF 		bl	snprintf
 441              	.LVL29:
 442              		.loc 1 982 3 view .LVU60
 443 0012 0546     		mov	r5, r0
 444              	.LVL30:
 445              		.loc 1 982 3 is_stmt 1 discriminator 1 view .LVU61
 446              	.LBB7:
 447              		.loc 1 982 3 discriminator 1 view .LVU62
 448              		.loc 1 982 3 is_stmt 0 discriminator 1 view .LVU63
 449 0014 0024     		movs	r4, #0
 450              		.loc 1 982 3 view .LVU64
 451 0016 04E0     		b	.L33
 452              	.LVL31:
 453              	.L34:
 454              		.loc 1 982 3 is_stmt 1 discriminator 3 view .LVU65
 455 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 456 001c FFF7FEFF 		bl	__io_putchar_usart2
 457              	.LVL32:
 458              		.loc 1 982 3 discriminator 3 view .LVU66
 459 0020 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 26


 460              	.LVL33:
 461              	.L33:
 462              		.loc 1 982 3 discriminator 2 view .LVU67
 463 0022 AC42     		cmp	r4, r5
 464 0024 F8DB     		blt	.L34
 465              	.LBE7:
 466              	.LBE6:
 983:Core/Src/main.c **** 
 984:Core/Src/main.c **** }
 467              		.loc 1 984 1 is_stmt 0 view .LVU68
 468 0026 41B0     		add	sp, sp, #260
 469              	.LCFI23:
 470              		.cfi_def_cfa_offset 12
 471              		@ sp needed
 472 0028 30BD     		pop	{r4, r5, pc}
 473              	.LVL34:
 474              	.L37:
 475              		.loc 1 984 1 view .LVU69
 476 002a 00BF     		.align	2
 477              	.L36:
 478 002c 00000000 		.word	.LC1
 479              		.cfi_endproc
 480              	.LFE256:
 482              		.section	.text.Joint3Set,"ax",%progbits
 483              		.align	1
 484              		.global	Joint3Set
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	Joint3Set:
 490              	.LVL35:
 491              	.LFB257:
 985:Core/Src/main.c **** 
 986:Core/Src/main.c **** void Joint3Set(int theta){
 492              		.loc 1 986 26 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 256
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 986 26 is_stmt 0 view .LVU71
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 C1B0     		sub	sp, sp, #260
 504              	.LCFI25:
 505              		.cfi_def_cfa_offset 272
 506 0004 0346     		mov	r3, r0
 987:Core/Src/main.c ****   printf_joint3("%d\r\n", theta);
 507              		.loc 1 987 3 is_stmt 1 view .LVU72
 508              	.LBB8:
 509              		.loc 1 987 3 view .LVU73
 510              		.loc 1 987 3 view .LVU74
 511 0006 094A     		ldr	r2, .L42
 512 0008 4FF48071 		mov	r1, #256
 513 000c 6846     		mov	r0, sp
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 27


 514              	.LVL36:
 515              		.loc 1 987 3 is_stmt 0 view .LVU75
 516 000e FFF7FEFF 		bl	snprintf
 517              	.LVL37:
 518              		.loc 1 987 3 view .LVU76
 519 0012 0546     		mov	r5, r0
 520              	.LVL38:
 521              		.loc 1 987 3 is_stmt 1 discriminator 1 view .LVU77
 522              	.LBB9:
 523              		.loc 1 987 3 discriminator 1 view .LVU78
 524              		.loc 1 987 3 is_stmt 0 discriminator 1 view .LVU79
 525 0014 0024     		movs	r4, #0
 526              		.loc 1 987 3 view .LVU80
 527 0016 04E0     		b	.L39
 528              	.LVL39:
 529              	.L40:
 530              		.loc 1 987 3 is_stmt 1 discriminator 3 view .LVU81
 531 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 532 001c FFF7FEFF 		bl	__io_putchar_usart3
 533              	.LVL40:
 534              		.loc 1 987 3 discriminator 3 view .LVU82
 535 0020 0134     		adds	r4, r4, #1
 536              	.LVL41:
 537              	.L39:
 538              		.loc 1 987 3 discriminator 2 view .LVU83
 539 0022 AC42     		cmp	r4, r5
 540 0024 F8DB     		blt	.L40
 541              	.LBE9:
 542              	.LBE8:
 988:Core/Src/main.c **** 
 989:Core/Src/main.c **** }
 543              		.loc 1 989 1 is_stmt 0 view .LVU84
 544 0026 41B0     		add	sp, sp, #260
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 12
 547              		@ sp needed
 548 0028 30BD     		pop	{r4, r5, pc}
 549              	.LVL42:
 550              	.L43:
 551              		.loc 1 989 1 view .LVU85
 552 002a 00BF     		.align	2
 553              	.L42:
 554 002c 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE257:
 558              		.section	.text.Joint4Set,"ax",%progbits
 559              		.align	1
 560              		.global	Joint4Set
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	Joint4Set:
 566              	.LVL43:
 567              	.LFB258:
 990:Core/Src/main.c **** 
 991:Core/Src/main.c **** void Joint4Set(int theta){
 568              		.loc 1 991 26 is_stmt 1 view -0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 28


 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 256
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 991 26 is_stmt 0 view .LVU87
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI27:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 C1B0     		sub	sp, sp, #260
 580              	.LCFI28:
 581              		.cfi_def_cfa_offset 272
 582 0004 0346     		mov	r3, r0
 992:Core/Src/main.c ****   printf_joint4("%d\r\n", theta);
 583              		.loc 1 992 3 is_stmt 1 view .LVU88
 584              	.LBB10:
 585              		.loc 1 992 3 view .LVU89
 586              		.loc 1 992 3 view .LVU90
 587 0006 094A     		ldr	r2, .L48
 588 0008 4FF48071 		mov	r1, #256
 589 000c 6846     		mov	r0, sp
 590              	.LVL44:
 591              		.loc 1 992 3 is_stmt 0 view .LVU91
 592 000e FFF7FEFF 		bl	snprintf
 593              	.LVL45:
 594              		.loc 1 992 3 view .LVU92
 595 0012 0546     		mov	r5, r0
 596              	.LVL46:
 597              		.loc 1 992 3 is_stmt 1 discriminator 1 view .LVU93
 598              	.LBB11:
 599              		.loc 1 992 3 discriminator 1 view .LVU94
 600              		.loc 1 992 3 is_stmt 0 discriminator 1 view .LVU95
 601 0014 0024     		movs	r4, #0
 602              		.loc 1 992 3 view .LVU96
 603 0016 04E0     		b	.L45
 604              	.LVL47:
 605              	.L46:
 606              		.loc 1 992 3 is_stmt 1 discriminator 3 view .LVU97
 607 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 608 001c FFF7FEFF 		bl	__io_putchar_uart4
 609              	.LVL48:
 610              		.loc 1 992 3 discriminator 3 view .LVU98
 611 0020 0134     		adds	r4, r4, #1
 612              	.LVL49:
 613              	.L45:
 614              		.loc 1 992 3 discriminator 2 view .LVU99
 615 0022 AC42     		cmp	r4, r5
 616 0024 F8DB     		blt	.L46
 617              	.LBE11:
 618              	.LBE10:
 993:Core/Src/main.c **** 
 994:Core/Src/main.c **** }
 619              		.loc 1 994 1 is_stmt 0 view .LVU100
 620 0026 41B0     		add	sp, sp, #260
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 29


 623              		@ sp needed
 624 0028 30BD     		pop	{r4, r5, pc}
 625              	.LVL50:
 626              	.L49:
 627              		.loc 1 994 1 view .LVU101
 628 002a 00BF     		.align	2
 629              	.L48:
 630 002c 00000000 		.word	.LC0
 631              		.cfi_endproc
 632              	.LFE258:
 634              		.section	.text.Joint5Set,"ax",%progbits
 635              		.align	1
 636              		.global	Joint5Set
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	Joint5Set:
 642              	.LVL51:
 643              	.LFB259:
 995:Core/Src/main.c **** 
 996:Core/Src/main.c **** void Joint5Set(int theta){
 644              		.loc 1 996 26 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 256
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 996 26 is_stmt 0 view .LVU103
 649 0000 30B5     		push	{r4, r5, lr}
 650              	.LCFI30:
 651              		.cfi_def_cfa_offset 12
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
 655 0002 C1B0     		sub	sp, sp, #260
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 272
 658 0004 0346     		mov	r3, r0
 997:Core/Src/main.c ****   printf_joint5("%d\r\n", theta);
 659              		.loc 1 997 3 is_stmt 1 view .LVU104
 660              	.LBB12:
 661              		.loc 1 997 3 view .LVU105
 662              		.loc 1 997 3 view .LVU106
 663 0006 094A     		ldr	r2, .L54
 664 0008 4FF48071 		mov	r1, #256
 665 000c 6846     		mov	r0, sp
 666              	.LVL52:
 667              		.loc 1 997 3 is_stmt 0 view .LVU107
 668 000e FFF7FEFF 		bl	snprintf
 669              	.LVL53:
 670              		.loc 1 997 3 view .LVU108
 671 0012 0546     		mov	r5, r0
 672              	.LVL54:
 673              		.loc 1 997 3 is_stmt 1 discriminator 1 view .LVU109
 674              	.LBB13:
 675              		.loc 1 997 3 discriminator 1 view .LVU110
 676              		.loc 1 997 3 is_stmt 0 discriminator 1 view .LVU111
 677 0014 0024     		movs	r4, #0
 678              		.loc 1 997 3 view .LVU112
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 30


 679 0016 04E0     		b	.L51
 680              	.LVL55:
 681              	.L52:
 682              		.loc 1 997 3 is_stmt 1 discriminator 3 view .LVU113
 683 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 684 001c FFF7FEFF 		bl	__io_putchar_uart5
 685              	.LVL56:
 686              		.loc 1 997 3 discriminator 3 view .LVU114
 687 0020 0134     		adds	r4, r4, #1
 688              	.LVL57:
 689              	.L51:
 690              		.loc 1 997 3 discriminator 2 view .LVU115
 691 0022 AC42     		cmp	r4, r5
 692 0024 F8DB     		blt	.L52
 693              	.LBE13:
 694              	.LBE12:
 998:Core/Src/main.c **** 
 999:Core/Src/main.c **** }
 695              		.loc 1 999 1 is_stmt 0 view .LVU116
 696 0026 41B0     		add	sp, sp, #260
 697              	.LCFI32:
 698              		.cfi_def_cfa_offset 12
 699              		@ sp needed
 700 0028 30BD     		pop	{r4, r5, pc}
 701              	.LVL58:
 702              	.L55:
 703              		.loc 1 999 1 view .LVU117
 704 002a 00BF     		.align	2
 705              	.L54:
 706 002c 00000000 		.word	.LC0
 707              		.cfi_endproc
 708              	.LFE259:
 710              		.section	.text.HomeSet,"ax",%progbits
 711              		.align	1
 712              		.global	HomeSet
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HomeSet:
 718              	.LFB253:
 925:Core/Src/main.c ****   //Set all joints to home
 719              		.loc 1 925 15 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI33:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 927:Core/Src/main.c ****   Joint1Set(joint1);
 728              		.loc 1 927 3 view .LVU119
 927:Core/Src/main.c ****   Joint1Set(joint1);
 729              		.loc 1 927 10 is_stmt 0 view .LVU120
 730 0002 0024     		movs	r4, #0
 731 0004 0E4B     		ldr	r3, .L58
 732 0006 1C60     		str	r4, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 31


 928:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 733              		.loc 1 928 3 is_stmt 1 view .LVU121
 734 0008 2046     		mov	r0, r4
 735 000a FFF7FEFF 		bl	Joint1Set
 736              	.LVL59:
 929:Core/Src/main.c ****   Joint2Set(joint2);
 737              		.loc 1 929 3 view .LVU122
 929:Core/Src/main.c ****   Joint2Set(joint2);
 738              		.loc 1 929 10 is_stmt 0 view .LVU123
 739 000e 5A20     		movs	r0, #90
 740 0010 0C4B     		ldr	r3, .L58+4
 741 0012 1860     		str	r0, [r3]
 930:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 742              		.loc 1 930 3 is_stmt 1 view .LVU124
 743 0014 FFF7FEFF 		bl	Joint2Set
 744              	.LVL60:
 931:Core/Src/main.c ****   Joint3Set(joint3);
 745              		.loc 1 931 3 view .LVU125
 931:Core/Src/main.c ****   Joint3Set(joint3);
 746              		.loc 1 931 10 is_stmt 0 view .LVU126
 747 0018 B420     		movs	r0, #180
 748 001a 0B4B     		ldr	r3, .L58+8
 749 001c 1860     		str	r0, [r3]
 932:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 750              		.loc 1 932 3 is_stmt 1 view .LVU127
 751 001e FFF7FEFF 		bl	Joint3Set
 752              	.LVL61:
 933:Core/Src/main.c ****   Joint4Set(joint4);
 753              		.loc 1 933 3 view .LVU128
 933:Core/Src/main.c ****   Joint4Set(joint4);
 754              		.loc 1 933 10 is_stmt 0 view .LVU129
 755 0022 0A4B     		ldr	r3, .L58+12
 756 0024 1C60     		str	r4, [r3]
 934:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 757              		.loc 1 934 3 is_stmt 1 view .LVU130
 758 0026 2046     		mov	r0, r4
 759 0028 FFF7FEFF 		bl	Joint4Set
 760              	.LVL62:
 935:Core/Src/main.c ****   Joint5Set(joint5);
 761              		.loc 1 935 3 view .LVU131
 935:Core/Src/main.c ****   Joint5Set(joint5);
 762              		.loc 1 935 10 is_stmt 0 view .LVU132
 763 002c 2820     		movs	r0, #40
 764 002e 084B     		ldr	r3, .L58+16
 765 0030 1860     		str	r0, [r3]
 936:Core/Src/main.c ****   injectFlag = RETRACT; 
 766              		.loc 1 936 3 is_stmt 1 view .LVU133
 767 0032 FFF7FEFF 		bl	Joint5Set
 768              	.LVL63:
 937:Core/Src/main.c **** 
 769              		.loc 1 937 3 view .LVU134
 937:Core/Src/main.c **** 
 770              		.loc 1 937 14 is_stmt 0 view .LVU135
 771 0036 074B     		ldr	r3, .L58+20
 772 0038 0222     		movs	r2, #2
 773 003a 1A60     		str	r2, [r3]
 941:Core/Src/main.c **** void HomeSetUser() {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 32


 774              		.loc 1 941 1 view .LVU136
 775 003c 10BD     		pop	{r4, pc}
 776              	.L59:
 777 003e 00BF     		.align	2
 778              	.L58:
 779 0040 00000000 		.word	joint1
 780 0044 00000000 		.word	joint2
 781 0048 00000000 		.word	joint3
 782 004c 00000000 		.word	joint4
 783 0050 00000000 		.word	joint5
 784 0054 00000000 		.word	injectFlag
 785              		.cfi_endproc
 786              	.LFE253:
 788              		.section	.text.HomeSetUser,"ax",%progbits
 789              		.align	1
 790              		.global	HomeSetUser
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	HomeSetUser:
 796              	.LFB254:
 942:Core/Src/main.c ****   static uint32_t lastMillis = 0;
 797              		.loc 1 942 20 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 10B5     		push	{r4, lr}
 802              	.LCFI34:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 4, -8
 805              		.cfi_offset 14, -4
 943:Core/Src/main.c ****   static uint8_t step = 0;  // To track which part of the process we are at.
 806              		.loc 1 943 3 view .LVU138
 944:Core/Src/main.c **** 
 807              		.loc 1 944 3 view .LVU139
 946:Core/Src/main.c ****       // Set Joint 1
 808              		.loc 1 946 3 view .LVU140
 946:Core/Src/main.c ****       // Set Joint 1
 809              		.loc 1 946 12 is_stmt 0 view .LVU141
 810 0002 1E4B     		ldr	r3, .L68
 811 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946:Core/Src/main.c ****       // Set Joint 1
 812              		.loc 1 946 6 view .LVU142
 813 0006 23B1     		cbz	r3, .L65
 951:Core/Src/main.c ****       // Set Joint 2 and start a delay
 814              		.loc 1 951 10 is_stmt 1 view .LVU143
 951:Core/Src/main.c ****       // Set Joint 2 and start a delay
 815              		.loc 1 951 13 is_stmt 0 view .LVU144
 816 0008 012B     		cmp	r3, #1
 817 000a 0BD0     		beq	.L66
 957:Core/Src/main.c ****       // Wait for 1 second before proceeding
 818              		.loc 1 957 10 is_stmt 1 view .LVU145
 957:Core/Src/main.c ****       // Wait for 1 second before proceeding
 819              		.loc 1 957 13 is_stmt 0 view .LVU146
 820 000c 022B     		cmp	r3, #2
 821 000e 16D0     		beq	.L67
 822              	.L60:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 33


 972:Core/Src/main.c **** 
 823              		.loc 1 972 1 view .LVU147
 824 0010 10BD     		pop	{r4, pc}
 825              	.L65:
 948:Core/Src/main.c ****       Joint1Set(joint1);
 826              		.loc 1 948 7 is_stmt 1 view .LVU148
 948:Core/Src/main.c ****       Joint1Set(joint1);
 827              		.loc 1 948 14 is_stmt 0 view .LVU149
 828 0012 0020     		movs	r0, #0
 829 0014 1A4B     		ldr	r3, .L68+4
 830 0016 1860     		str	r0, [r3]
 949:Core/Src/main.c ****       step = 1;  // Move to the next step
 831              		.loc 1 949 7 is_stmt 1 view .LVU150
 832 0018 FFF7FEFF 		bl	Joint1Set
 833              	.LVL64:
 950:Core/Src/main.c ****   } else if (step == 1) {
 834              		.loc 1 950 7 view .LVU151
 950:Core/Src/main.c ****   } else if (step == 1) {
 835              		.loc 1 950 12 is_stmt 0 view .LVU152
 836 001c 174B     		ldr	r3, .L68
 837 001e 0122     		movs	r2, #1
 838 0020 1A70     		strb	r2, [r3]
 839 0022 F5E7     		b	.L60
 840              	.L66:
 953:Core/Src/main.c ****       Joint2Set(joint2);
 841              		.loc 1 953 7 is_stmt 1 view .LVU153
 953:Core/Src/main.c ****       Joint2Set(joint2);
 842              		.loc 1 953 14 is_stmt 0 view .LVU154
 843 0024 5A20     		movs	r0, #90
 844 0026 174B     		ldr	r3, .L68+8
 845 0028 1860     		str	r0, [r3]
 954:Core/Src/main.c ****       lastMillis = HAL_GetTick();  // Start the 1-second delay
 846              		.loc 1 954 7 is_stmt 1 view .LVU155
 847 002a FFF7FEFF 		bl	Joint2Set
 848              	.LVL65:
 955:Core/Src/main.c ****       step = 2;  // Move to the next step
 849              		.loc 1 955 7 view .LVU156
 955:Core/Src/main.c ****       step = 2;  // Move to the next step
 850              		.loc 1 955 20 is_stmt 0 view .LVU157
 851 002e FFF7FEFF 		bl	HAL_GetTick
 852              	.LVL66:
 955:Core/Src/main.c ****       step = 2;  // Move to the next step
 853              		.loc 1 955 18 discriminator 1 view .LVU158
 854 0032 154B     		ldr	r3, .L68+12
 855 0034 1860     		str	r0, [r3]
 956:Core/Src/main.c ****   } else if (step == 2) {
 856              		.loc 1 956 7 is_stmt 1 view .LVU159
 956:Core/Src/main.c ****   } else if (step == 2) {
 857              		.loc 1 956 12 is_stmt 0 view .LVU160
 858 0036 114B     		ldr	r3, .L68
 859 0038 0222     		movs	r2, #2
 860 003a 1A70     		strb	r2, [r3]
 861 003c E8E7     		b	.L60
 862              	.L67:
 959:Core/Src/main.c ****           // Once 1 second has passed, set the remaining joints
 863              		.loc 1 959 7 is_stmt 1 view .LVU161
 959:Core/Src/main.c ****           // Once 1 second has passed, set the remaining joints
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 34


 864              		.loc 1 959 11 is_stmt 0 view .LVU162
 865 003e FFF7FEFF 		bl	HAL_GetTick
 866              	.LVL67:
 959:Core/Src/main.c ****           // Once 1 second has passed, set the remaining joints
 867              		.loc 1 959 25 discriminator 1 view .LVU163
 868 0042 114B     		ldr	r3, .L68+12
 869 0044 1B68     		ldr	r3, [r3]
 870 0046 C01A     		subs	r0, r0, r3
 959:Core/Src/main.c ****           // Once 1 second has passed, set the remaining joints
 871              		.loc 1 959 10 discriminator 1 view .LVU164
 872 0048 B0F57A7F 		cmp	r0, #1000
 873 004c E0D3     		bcc	.L60
 961:Core/Src/main.c ****           Joint3Set(joint3);
 874              		.loc 1 961 11 is_stmt 1 view .LVU165
 961:Core/Src/main.c ****           Joint3Set(joint3);
 875              		.loc 1 961 18 is_stmt 0 view .LVU166
 876 004e B420     		movs	r0, #180
 877 0050 0E4B     		ldr	r3, .L68+16
 878 0052 1860     		str	r0, [r3]
 962:Core/Src/main.c ****           joint4 = JOINT4_HOME;
 879              		.loc 1 962 11 is_stmt 1 view .LVU167
 880 0054 FFF7FEFF 		bl	Joint3Set
 881              	.LVL68:
 963:Core/Src/main.c ****           Joint4Set(joint4);
 882              		.loc 1 963 11 view .LVU168
 963:Core/Src/main.c ****           Joint4Set(joint4);
 883              		.loc 1 963 18 is_stmt 0 view .LVU169
 884 0058 0024     		movs	r4, #0
 885 005a 0D4B     		ldr	r3, .L68+20
 886 005c 1C60     		str	r4, [r3]
 964:Core/Src/main.c ****           joint5 = JOINT5_HOME;
 887              		.loc 1 964 11 is_stmt 1 view .LVU170
 888 005e 2046     		mov	r0, r4
 889 0060 FFF7FEFF 		bl	Joint4Set
 890              	.LVL69:
 965:Core/Src/main.c ****           Joint5Set(joint5);
 891              		.loc 1 965 11 view .LVU171
 965:Core/Src/main.c ****           Joint5Set(joint5);
 892              		.loc 1 965 18 is_stmt 0 view .LVU172
 893 0064 2820     		movs	r0, #40
 894 0066 0B4B     		ldr	r3, .L68+24
 895 0068 1860     		str	r0, [r3]
 966:Core/Src/main.c ****           injectFlag = RETRACT;  // Set the inject flag
 896              		.loc 1 966 11 is_stmt 1 view .LVU173
 897 006a FFF7FEFF 		bl	Joint5Set
 898              	.LVL70:
 967:Core/Src/main.c **** 
 899              		.loc 1 967 11 view .LVU174
 967:Core/Src/main.c **** 
 900              		.loc 1 967 22 is_stmt 0 view .LVU175
 901 006e 0A4B     		ldr	r3, .L68+28
 902 0070 0222     		movs	r2, #2
 903 0072 1A60     		str	r2, [r3]
 969:Core/Src/main.c ****       }
 904              		.loc 1 969 11 is_stmt 1 view .LVU176
 969:Core/Src/main.c ****       }
 905              		.loc 1 969 16 is_stmt 0 view .LVU177
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 35


 906 0074 014B     		ldr	r3, .L68
 907 0076 1C70     		strb	r4, [r3]
 972:Core/Src/main.c **** 
 908              		.loc 1 972 1 view .LVU178
 909 0078 CAE7     		b	.L60
 910              	.L69:
 911 007a 00BF     		.align	2
 912              	.L68:
 913 007c 00000000 		.word	step.1
 914 0080 00000000 		.word	joint1
 915 0084 00000000 		.word	joint2
 916 0088 00000000 		.word	lastMillis.0
 917 008c 00000000 		.word	joint3
 918 0090 00000000 		.word	joint4
 919 0094 00000000 		.word	joint5
 920 0098 00000000 		.word	injectFlag
 921              		.cfi_endproc
 922              	.LFE254:
 924              		.section	.text.ActuatorSet,"ax",%progbits
 925              		.align	1
 926              		.global	ActuatorSet
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 931              	ActuatorSet:
 932              	.LVL71:
 933              	.LFB260:
1000:Core/Src/main.c **** 
1001:Core/Src/main.c **** void ActuatorSet(int theta){
 934              		.loc 1 1001 28 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
1002:Core/Src/main.c ****   // Set joint. This is connected to the actuator motor controller. 
1003:Core/Src/main.c ****   // Make an actuator status function
1004:Core/Src/main.c **** 
1005:Core/Src/main.c **** }
 939              		.loc 1 1005 1 view .LVU180
 940 0000 7047     		bx	lr
 941              		.cfi_endproc
 942              	.LFE260:
 944              		.section	.text.ActuatorStatus,"ax",%progbits
 945              		.align	1
 946              		.global	ActuatorStatus
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 951              	ActuatorStatus:
 952              	.LFB261:
1006:Core/Src/main.c **** 
1007:Core/Src/main.c **** int ActuatorStatus(){
 953              		.loc 1 1007 21 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 36


1008:Core/Src/main.c ****   // Get actuator status
1009:Core/Src/main.c ****   return 0;
 958              		.loc 1 1009 3 view .LVU182
1010:Core/Src/main.c **** }
 959              		.loc 1 1010 1 is_stmt 0 view .LVU183
 960 0000 0020     		movs	r0, #0
 961 0002 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE261:
 965              		.section	.text.Read_ADC_PA0,"ax",%progbits
 966              		.align	1
 967              		.global	Read_ADC_PA0
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 972              	Read_ADC_PA0:
 973              	.LFB262:
1011:Core/Src/main.c **** 
1012:Core/Src/main.c **** uint16_t Read_ADC_PA0() {
 974              		.loc 1 1012 25 is_stmt 1 view -0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978 0000 10B5     		push	{r4, lr}
 979              	.LCFI35:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 4, -8
 982              		.cfi_offset 14, -4
1013:Core/Src/main.c ****   uint16_t adcValue = 0;
 983              		.loc 1 1013 3 view .LVU185
 984              	.LVL72:
1014:Core/Src/main.c **** 
1015:Core/Src/main.c ****   // Start ADC Conversion
1016:Core/Src/main.c ****   HAL_ADC_Start(&hadc1);
 985              		.loc 1 1016 3 view .LVU186
 986 0002 0A4C     		ldr	r4, .L77
 987 0004 2046     		mov	r0, r4
 988 0006 FFF7FEFF 		bl	HAL_ADC_Start
 989              	.LVL73:
1017:Core/Src/main.c **** 
1018:Core/Src/main.c ****   // Wait for conversion to complete
1019:Core/Src/main.c ****   if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 990              		.loc 1 1019 3 view .LVU187
 991              		.loc 1 1019 7 is_stmt 0 view .LVU188
 992 000a 4FF0FF31 		mov	r1, #-1
 993 000e 2046     		mov	r0, r4
 994 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 995              	.LVL74:
 996              		.loc 1 1019 6 discriminator 1 view .LVU189
 997 0014 28B1     		cbz	r0, .L76
1013:Core/Src/main.c **** 
 998              		.loc 1 1013 12 view .LVU190
 999 0016 0024     		movs	r4, #0
 1000              	.LVL75:
 1001              	.L73:
1020:Core/Src/main.c ****       // Read the ADC value
1021:Core/Src/main.c ****       adcValue = HAL_ADC_GetValue(&hadc1);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 37


1022:Core/Src/main.c ****   }
1023:Core/Src/main.c **** 
1024:Core/Src/main.c ****   // Stop ADC (optional)
1025:Core/Src/main.c ****   HAL_ADC_Stop(&hadc1);
 1002              		.loc 1 1025 3 is_stmt 1 view .LVU191
 1003 0018 0448     		ldr	r0, .L77
 1004 001a FFF7FEFF 		bl	HAL_ADC_Stop
 1005              	.LVL76:
1026:Core/Src/main.c **** 
1027:Core/Src/main.c ****   return adcValue;
 1006              		.loc 1 1027 3 view .LVU192
1028:Core/Src/main.c **** }
 1007              		.loc 1 1028 1 is_stmt 0 view .LVU193
 1008 001e 2046     		mov	r0, r4
 1009 0020 10BD     		pop	{r4, pc}
 1010              	.LVL77:
 1011              	.L76:
1021:Core/Src/main.c ****   }
 1012              		.loc 1 1021 7 is_stmt 1 view .LVU194
1021:Core/Src/main.c ****   }
 1013              		.loc 1 1021 18 is_stmt 0 view .LVU195
 1014 0022 2046     		mov	r0, r4
 1015 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 1016              	.LVL78:
1021:Core/Src/main.c ****   }
 1017              		.loc 1 1021 16 discriminator 1 view .LVU196
 1018 0028 84B2     		uxth	r4, r0
 1019              	.LVL79:
1021:Core/Src/main.c ****   }
 1020              		.loc 1 1021 16 discriminator 1 view .LVU197
 1021 002a F5E7     		b	.L73
 1022              	.L78:
 1023              		.align	2
 1024              	.L77:
 1025 002c 00000000 		.word	hadc1
 1026              		.cfi_endproc
 1027              	.LFE262:
 1029              		.section	.text.injectSequence,"ax",%progbits
 1030              		.align	1
 1031              		.global	injectSequence
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1036              	injectSequence:
 1037              	.LFB263:
1029:Core/Src/main.c **** 
1030:Core/Src/main.c **** void injectSequence(){
 1038              		.loc 1 1030 22 is_stmt 1 view -0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042 0000 08B5     		push	{r3, lr}
 1043              	.LCFI36:
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 3, -8
 1046              		.cfi_offset 14, -4
1031:Core/Src/main.c ****   Joint5Set(18);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 38


 1047              		.loc 1 1031 3 view .LVU199
 1048 0002 1220     		movs	r0, #18
 1049 0004 FFF7FEFF 		bl	Joint5Set
 1050              	.LVL80:
1032:Core/Src/main.c ****   //HAL_Delay(500);
1033:Core/Src/main.c ****   Joint4Set(28);
 1051              		.loc 1 1033 3 view .LVU200
 1052 0008 1C20     		movs	r0, #28
 1053 000a FFF7FEFF 		bl	Joint4Set
 1054              	.LVL81:
1034:Core/Src/main.c ****   //HAL_Delay(500);
1035:Core/Src/main.c ****   Joint3Set(70);
 1055              		.loc 1 1035 3 view .LVU201
 1056 000e 4620     		movs	r0, #70
 1057 0010 FFF7FEFF 		bl	Joint3Set
 1058              	.LVL82:
1036:Core/Src/main.c ****   //HAL_Delay(500);
1037:Core/Src/main.c ****   Joint2Set(4);
 1059              		.loc 1 1037 3 view .LVU202
 1060 0014 0420     		movs	r0, #4
 1061 0016 FFF7FEFF 		bl	Joint2Set
 1062              	.LVL83:
1038:Core/Src/main.c **** }
 1063              		.loc 1 1038 1 is_stmt 0 view .LVU203
 1064 001a 08BD     		pop	{r3, pc}
 1065              		.cfi_endproc
 1066              	.LFE263:
 1068              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 1069              		.align	2
 1070              	.LC2:
 1071 0000 73657400 		.ascii	"set\000"
 1072              		.align	2
 1073              	.LC3:
 1074 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 1074      2533642D 
 1074      2533642D 
 1074      2533642D 
 1074      2533642D 
 1075              		.align	2
 1076              	.LC4:
 1077 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 1077      69766564 
 1077      206E756D 
 1077      62657273 
 1077      3A202564 
 1078 0042 0000     		.align	2
 1079              	.LC5:
 1080 0044 496E7661 		.ascii	"Invalid format!\015\000"
 1080      6C696420 
 1080      666F726D 
 1080      6174210D 
 1080      00
 1081 0055 000000   		.align	2
 1082              	.LC6:
 1083 0058 6A6F696E 		.ascii	"joint1\000"
 1083      743100
 1084 005f 00       		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 39


 1085              	.LC7:
 1086 0060 25336400 		.ascii	"%3d\000"
 1087              		.align	2
 1088              	.LC8:
 1089 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 1089      74312073 
 1089      65743A20 
 1089      25640D0A 
 1089      00
 1090 0075 000000   		.align	2
 1091              	.LC9:
 1092 0078 6A6F696E 		.ascii	"joint2\000"
 1092      743200
 1093 007f 00       		.align	2
 1094              	.LC10:
 1095 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 1095      74322073 
 1095      65743A20 
 1095      25640D0A 
 1095      00
 1096 0091 000000   		.align	2
 1097              	.LC11:
 1098 0094 6A6F696E 		.ascii	"joint3\000"
 1098      743300
 1099 009b 00       		.align	2
 1100              	.LC12:
 1101 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 1101      74332073 
 1101      65743A20 
 1101      25640D0A 
 1101      00
 1102 00ad 000000   		.align	2
 1103              	.LC13:
 1104 00b0 6A6F696E 		.ascii	"joint4\000"
 1104      743400
 1105 00b7 00       		.align	2
 1106              	.LC14:
 1107 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 1107      74342073 
 1107      65743A20 
 1107      25640D0A 
 1107      00
 1108 00c9 000000   		.align	2
 1109              	.LC15:
 1110 00cc 6A6F696E 		.ascii	"joint5\000"
 1110      743500
 1111 00d3 00       		.align	2
 1112              	.LC16:
 1113 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 1113      74352073 
 1113      65743A20 
 1113      25640D0A 
 1113      00
 1114 00e5 000000   		.align	2
 1115              	.LC17:
 1116 00e8 61637475 		.ascii	"actuator\000"
 1116      61746F72 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 40


 1116      00
 1117 00f1 000000   		.align	2
 1118              	.LC18:
 1119 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 1119      61746F72 
 1119      20736574 
 1119      3A202564 
 1119      0D0A00
 1120 0107 00       		.align	2
 1121              	.LC19:
 1122 0108 6A317265 		.ascii	"j1read\000"
 1122      616400
 1123 010f 00       		.align	2
 1124              	.LC20:
 1125 0110 6A327265 		.ascii	"j2read\000"
 1125      616400
 1126 0117 00       		.align	2
 1127              	.LC21:
 1128 0118 6A337265 		.ascii	"j3read\000"
 1128      616400
 1129 011f 00       		.align	2
 1130              	.LC22:
 1131 0120 6A347265 		.ascii	"j4read\000"
 1131      616400
 1132 0127 00       		.align	2
 1133              	.LC23:
 1134 0128 6A357265 		.ascii	"j5read\000"
 1134      616400
 1135 012f 00       		.align	2
 1136              	.LC24:
 1137 0130 61726561 		.ascii	"aread\000"
 1137      6400
 1138 0136 0000     		.align	2
 1139              	.LC25:
 1140 0138 686F6D65 		.ascii	"home\000"
 1140      00
 1141 013d 000000   		.align	2
 1142              	.LC26:
 1143 0140 53657420 		.ascii	"Set all joints home\015\000"
 1143      616C6C20 
 1143      6A6F696E 
 1143      74732068 
 1143      6F6D650D 
 1144 0155 000000   		.align	2
 1145              	.LC27:
 1146 0158 666C6173 		.ascii	"flash\000"
 1146      6800
 1147 015e 0000     		.align	2
 1148              	.LC28:
 1149 0160 4C454473 		.ascii	"LEDs Toggled\015\000"
 1149      20546F67 
 1149      676C6564 
 1149      0D00
 1150 016e 0000     		.align	2
 1151              	.LC29:
 1152 0170 7072696E 		.ascii	"print\000"
 1152      7400
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 41


 1153 0176 0000     		.align	2
 1154              	.LC30:
 1155 0178 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 1155      74313A20 
 1155      25640D0A 
 1155      00
 1156 0185 000000   		.align	2
 1157              	.LC31:
 1158 0188 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 1158      74323A20 
 1158      25640D0A 
 1158      00
 1159 0195 000000   		.align	2
 1160              	.LC32:
 1161 0198 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 1161      74333A20 
 1161      25640D0A 
 1161      00
 1162 01a5 000000   		.align	2
 1163              	.LC33:
 1164 01a8 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 1164      74343A20 
 1164      25640D0A 
 1164      00
 1165 01b5 000000   		.align	2
 1166              	.LC34:
 1167 01b8 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 1167      74353A20 
 1167      25640D0A 
 1167      00
 1168 01c5 000000   		.align	2
 1169              	.LC35:
 1170 01c8 41637475 		.ascii	"Actuator: %d\015\012\000"
 1170      61746F72 
 1170      3A202564 
 1170      0D0A00
 1171 01d7 00       		.align	2
 1172              	.LC36:
 1173 01d8 696E6A65 		.ascii	"inject\000"
 1173      637400
 1174 01df 00       		.align	2
 1175              	.LC37:
 1176 01e0 696E6A65 		.ascii	"injecting...\015\000"
 1176      6374696E 
 1176      672E2E2E 
 1176      0D00
 1177 01ee 0000     		.align	2
 1178              	.LC38:
 1179 01f0 72657472 		.ascii	"retract\000"
 1179      61637400 
 1180              		.align	2
 1181              	.LC39:
 1182 01f8 72657472 		.ascii	"retracting...\015\000"
 1182      61637469 
 1182      6E672E2E 
 1182      2E0D00
 1183 0207 00       		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 42


 1184              	.LC40:
 1185 0208 73746F70 		.ascii	"stop\000"
 1185      00
 1186 020d 000000   		.align	2
 1187              	.LC41:
 1188 0210 73746F70 		.ascii	"stopped.\015\000"
 1188      7065642E 
 1188      0D00
 1189 021a 0000     		.align	2
 1190              	.LC42:
 1191 021c 73657175 		.ascii	"sequence\000"
 1191      656E6365 
 1191      00
 1192 0225 000000   		.align	2
 1193              	.LC43:
 1194 0228 696E6A65 		.ascii	"inject sequence.../r/n\000"
 1194      63742073 
 1194      65717565 
 1194      6E63652E 
 1194      2E2E2F72 
 1195 023f 00       		.align	2
 1196              	.LC44:
 1197 0240 52656365 		.ascii	"Received: %s\015\012\000"
 1197      69766564 
 1197      3A202573 
 1197      0D0A00
 1198              		.section	.text.ProcessReceivedString,"ax",%progbits
 1199              		.align	1
 1200              		.global	ProcessReceivedString
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1205              	ProcessReceivedString:
 1206              	.LVL84:
 1207              	.LFB251:
 656:Core/Src/main.c ****     // Check if the string starts with "set"
 1208              		.loc 1 656 1 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 256
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 656:Core/Src/main.c ****     // Check if the string starts with "set"
 1212              		.loc 1 656 1 is_stmt 0 view .LVU205
 1213 0000 30B5     		push	{r4, r5, lr}
 1214              	.LCFI37:
 1215              		.cfi_def_cfa_offset 12
 1216              		.cfi_offset 4, -12
 1217              		.cfi_offset 5, -8
 1218              		.cfi_offset 14, -4
 1219 0002 C5B0     		sub	sp, sp, #276
 1220              	.LCFI38:
 1221              		.cfi_def_cfa_offset 288
 1222 0004 0446     		mov	r4, r0
 658:Core/Src/main.c ****     {
 1223              		.loc 1 658 5 is_stmt 1 view .LVU206
 658:Core/Src/main.c ****     {
 1224              		.loc 1 658 9 is_stmt 0 view .LVU207
 1225 0006 0322     		movs	r2, #3
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 43


 1226 0008 A649     		ldr	r1, .L153
 1227 000a FFF7FEFF 		bl	strncmp
 1228              	.LVL85:
 658:Core/Src/main.c ****     {
 1229              		.loc 1 658 8 discriminator 1 view .LVU208
 1230 000e 0028     		cmp	r0, #0
 1231 0010 00F0A280 		beq	.L125
 704:Core/Src/main.c ****     {
 1232              		.loc 1 704 10 is_stmt 1 view .LVU209
 704:Core/Src/main.c ****     {
 1233              		.loc 1 704 14 is_stmt 0 view .LVU210
 1234 0014 0622     		movs	r2, #6
 1235 0016 A449     		ldr	r1, .L153+4
 1236 0018 2046     		mov	r0, r4
 1237 001a FFF7FEFF 		bl	strncmp
 1238              	.LVL86:
 704:Core/Src/main.c ****     {
 1239              		.loc 1 704 13 discriminator 1 view .LVU211
 1240 001e 0028     		cmp	r0, #0
 1241 0020 00F0FA80 		beq	.L126
 725:Core/Src/main.c ****     {
 1242              		.loc 1 725 10 is_stmt 1 view .LVU212
 725:Core/Src/main.c ****     {
 1243              		.loc 1 725 14 is_stmt 0 view .LVU213
 1244 0024 0622     		movs	r2, #6
 1245 0026 A149     		ldr	r1, .L153+8
 1246 0028 2046     		mov	r0, r4
 1247 002a FFF7FEFF 		bl	strncmp
 1248              	.LVL87:
 725:Core/Src/main.c ****     {
 1249              		.loc 1 725 13 discriminator 1 view .LVU214
 1250 002e 0028     		cmp	r0, #0
 1251 0030 00F00981 		beq	.L127
 746:Core/Src/main.c ****     {
 1252              		.loc 1 746 10 is_stmt 1 view .LVU215
 746:Core/Src/main.c ****     {
 1253              		.loc 1 746 14 is_stmt 0 view .LVU216
 1254 0034 0622     		movs	r2, #6
 1255 0036 9E49     		ldr	r1, .L153+12
 1256 0038 2046     		mov	r0, r4
 1257 003a FFF7FEFF 		bl	strncmp
 1258              	.LVL88:
 746:Core/Src/main.c ****     {
 1259              		.loc 1 746 13 discriminator 1 view .LVU217
 1260 003e 0028     		cmp	r0, #0
 1261 0040 00F01881 		beq	.L128
 767:Core/Src/main.c ****     {
 1262              		.loc 1 767 10 is_stmt 1 view .LVU218
 767:Core/Src/main.c ****     {
 1263              		.loc 1 767 14 is_stmt 0 view .LVU219
 1264 0044 0622     		movs	r2, #6
 1265 0046 9B49     		ldr	r1, .L153+16
 1266 0048 2046     		mov	r0, r4
 1267 004a FFF7FEFF 		bl	strncmp
 1268              	.LVL89:
 767:Core/Src/main.c ****     {
 1269              		.loc 1 767 13 discriminator 1 view .LVU220
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 44


 1270 004e 0028     		cmp	r0, #0
 1271 0050 00F07881 		beq	.L129
 788:Core/Src/main.c ****     {
 1272              		.loc 1 788 10 is_stmt 1 view .LVU221
 788:Core/Src/main.c ****     {
 1273              		.loc 1 788 14 is_stmt 0 view .LVU222
 1274 0054 0622     		movs	r2, #6
 1275 0056 9849     		ldr	r1, .L153+20
 1276 0058 2046     		mov	r0, r4
 1277 005a FFF7FEFF 		bl	strncmp
 1278              	.LVL90:
 788:Core/Src/main.c ****     {
 1279              		.loc 1 788 13 discriminator 1 view .LVU223
 1280 005e 0028     		cmp	r0, #0
 1281 0060 00F08781 		beq	.L130
 809:Core/Src/main.c ****     {
 1282              		.loc 1 809 10 is_stmt 1 view .LVU224
 809:Core/Src/main.c ****     {
 1283              		.loc 1 809 14 is_stmt 0 view .LVU225
 1284 0064 0822     		movs	r2, #8
 1285 0066 9549     		ldr	r1, .L153+24
 1286 0068 2046     		mov	r0, r4
 1287 006a FFF7FEFF 		bl	strncmp
 1288              	.LVL91:
 809:Core/Src/main.c ****     {
 1289              		.loc 1 809 13 discriminator 1 view .LVU226
 1290 006e 0028     		cmp	r0, #0
 1291 0070 00F09681 		beq	.L131
 829:Core/Src/main.c ****     {
 1292              		.loc 1 829 10 is_stmt 1 view .LVU227
 829:Core/Src/main.c ****     {
 1293              		.loc 1 829 14 is_stmt 0 view .LVU228
 1294 0074 0622     		movs	r2, #6
 1295 0076 9249     		ldr	r1, .L153+28
 1296 0078 2046     		mov	r0, r4
 1297 007a FFF7FEFF 		bl	strncmp
 1298              	.LVL92:
 829:Core/Src/main.c ****     {
 1299              		.loc 1 829 13 discriminator 1 view .LVU229
 1300 007e 0546     		mov	r5, r0
 1301 0080 0028     		cmp	r0, #0
 1302 0082 00F0A281 		beq	.L132
 834:Core/Src/main.c ****     {
 1303              		.loc 1 834 10 is_stmt 1 view .LVU230
 834:Core/Src/main.c ****     {
 1304              		.loc 1 834 14 is_stmt 0 view .LVU231
 1305 0086 0622     		movs	r2, #6
 1306 0088 8E49     		ldr	r1, .L153+32
 1307 008a 2046     		mov	r0, r4
 1308 008c FFF7FEFF 		bl	strncmp
 1309              	.LVL93:
 834:Core/Src/main.c ****     {
 1310              		.loc 1 834 13 discriminator 1 view .LVU232
 1311 0090 0546     		mov	r5, r0
 1312 0092 0028     		cmp	r0, #0
 1313 0094 00F0A481 		beq	.L133
 839:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 45


 1314              		.loc 1 839 10 is_stmt 1 view .LVU233
 839:Core/Src/main.c ****     {
 1315              		.loc 1 839 14 is_stmt 0 view .LVU234
 1316 0098 0622     		movs	r2, #6
 1317 009a 8B49     		ldr	r1, .L153+36
 1318 009c 2046     		mov	r0, r4
 1319 009e FFF7FEFF 		bl	strncmp
 1320              	.LVL94:
 839:Core/Src/main.c ****     {
 1321              		.loc 1 839 13 discriminator 1 view .LVU235
 1322 00a2 0546     		mov	r5, r0
 1323 00a4 0028     		cmp	r0, #0
 1324 00a6 00F0A681 		beq	.L134
 844:Core/Src/main.c ****       {
 1325              		.loc 1 844 12 is_stmt 1 view .LVU236
 844:Core/Src/main.c ****       {
 1326              		.loc 1 844 16 is_stmt 0 view .LVU237
 1327 00aa 0622     		movs	r2, #6
 1328 00ac 8749     		ldr	r1, .L153+40
 1329 00ae 2046     		mov	r0, r4
 1330 00b0 FFF7FEFF 		bl	strncmp
 1331              	.LVL95:
 844:Core/Src/main.c ****       {
 1332              		.loc 1 844 15 discriminator 1 view .LVU238
 1333 00b4 0546     		mov	r5, r0
 1334 00b6 0028     		cmp	r0, #0
 1335 00b8 00F0A881 		beq	.L135
 849:Core/Src/main.c ****       {
 1336              		.loc 1 849 12 is_stmt 1 view .LVU239
 849:Core/Src/main.c ****       {
 1337              		.loc 1 849 16 is_stmt 0 view .LVU240
 1338 00bc 0622     		movs	r2, #6
 1339 00be 8449     		ldr	r1, .L153+44
 1340 00c0 2046     		mov	r0, r4
 1341 00c2 FFF7FEFF 		bl	strncmp
 1342              	.LVL96:
 849:Core/Src/main.c ****       {
 1343              		.loc 1 849 15 discriminator 1 view .LVU241
 1344 00c6 0546     		mov	r5, r0
 1345 00c8 0028     		cmp	r0, #0
 1346 00ca 00F0AA81 		beq	.L136
 854:Core/Src/main.c ****       {
 1347              		.loc 1 854 12 is_stmt 1 view .LVU242
 854:Core/Src/main.c ****       {
 1348              		.loc 1 854 16 is_stmt 0 view .LVU243
 1349 00ce 0522     		movs	r2, #5
 1350 00d0 8049     		ldr	r1, .L153+48
 1351 00d2 2046     		mov	r0, r4
 1352 00d4 FFF7FEFF 		bl	strncmp
 1353              	.LVL97:
 854:Core/Src/main.c ****       {
 1354              		.loc 1 854 15 discriminator 1 view .LVU244
 1355 00d8 0028     		cmp	r0, #0
 1356 00da 50D0     		beq	.L81
 861:Core/Src/main.c ****     {
 1357              		.loc 1 861 10 is_stmt 1 view .LVU245
 861:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 46


 1358              		.loc 1 861 14 is_stmt 0 view .LVU246
 1359 00dc 0422     		movs	r2, #4
 1360 00de 7E49     		ldr	r1, .L153+52
 1361 00e0 2046     		mov	r0, r4
 1362 00e2 FFF7FEFF 		bl	strncmp
 1363              	.LVL98:
 861:Core/Src/main.c ****     {
 1364              		.loc 1 861 13 discriminator 1 view .LVU247
 1365 00e6 0028     		cmp	r0, #0
 1366 00e8 00F0A681 		beq	.L137
 871:Core/Src/main.c ****     {
 1367              		.loc 1 871 10 is_stmt 1 view .LVU248
 871:Core/Src/main.c ****     {
 1368              		.loc 1 871 14 is_stmt 0 view .LVU249
 1369 00ec 0522     		movs	r2, #5
 1370 00ee 7B49     		ldr	r1, .L153+56
 1371 00f0 2046     		mov	r0, r4
 1372 00f2 FFF7FEFF 		bl	strncmp
 1373              	.LVL99:
 871:Core/Src/main.c ****     {
 1374              		.loc 1 871 13 discriminator 1 view .LVU250
 1375 00f6 0028     		cmp	r0, #0
 1376 00f8 00F0A481 		beq	.L138
 881:Core/Src/main.c ****     {
 1377              		.loc 1 881 10 is_stmt 1 view .LVU251
 881:Core/Src/main.c ****     {
 1378              		.loc 1 881 14 is_stmt 0 view .LVU252
 1379 00fc 0522     		movs	r2, #5
 1380 00fe 7849     		ldr	r1, .L153+60
 1381 0100 2046     		mov	r0, r4
 1382 0102 FFF7FEFF 		bl	strncmp
 1383              	.LVL100:
 881:Core/Src/main.c ****     {
 1384              		.loc 1 881 13 discriminator 1 view .LVU253
 1385 0106 0028     		cmp	r0, #0
 1386 0108 00F0A681 		beq	.L139
 891:Core/Src/main.c ****     {
 1387              		.loc 1 891 10 is_stmt 1 view .LVU254
 891:Core/Src/main.c ****     {
 1388              		.loc 1 891 14 is_stmt 0 view .LVU255
 1389 010c 0622     		movs	r2, #6
 1390 010e 7549     		ldr	r1, .L153+64
 1391 0110 2046     		mov	r0, r4
 1392 0112 FFF7FEFF 		bl	strncmp
 1393              	.LVL101:
 891:Core/Src/main.c ****     {
 1394              		.loc 1 891 13 discriminator 1 view .LVU256
 1395 0116 0028     		cmp	r0, #0
 1396 0118 00F0BD81 		beq	.L140
 897:Core/Src/main.c ****     {
 1397              		.loc 1 897 10 is_stmt 1 view .LVU257
 897:Core/Src/main.c ****     {
 1398              		.loc 1 897 14 is_stmt 0 view .LVU258
 1399 011c 0722     		movs	r2, #7
 1400 011e 7249     		ldr	r1, .L153+68
 1401 0120 2046     		mov	r0, r4
 1402 0122 FFF7FEFF 		bl	strncmp
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 47


 1403              	.LVL102:
 897:Core/Src/main.c ****     {
 1404              		.loc 1 897 13 discriminator 1 view .LVU259
 1405 0126 0028     		cmp	r0, #0
 1406 0128 00F0BC81 		beq	.L141
 903:Core/Src/main.c ****     {
 1407              		.loc 1 903 10 is_stmt 1 view .LVU260
 903:Core/Src/main.c ****     {
 1408              		.loc 1 903 14 is_stmt 0 view .LVU261
 1409 012c 0422     		movs	r2, #4
 1410 012e 6F49     		ldr	r1, .L153+72
 1411 0130 2046     		mov	r0, r4
 1412 0132 FFF7FEFF 		bl	strncmp
 1413              	.LVL103:
 903:Core/Src/main.c ****     {
 1414              		.loc 1 903 13 discriminator 1 view .LVU262
 1415 0136 0028     		cmp	r0, #0
 1416 0138 00F0BB81 		beq	.L142
 908:Core/Src/main.c ****     {
 1417              		.loc 1 908 10 is_stmt 1 view .LVU263
 908:Core/Src/main.c ****     {
 1418              		.loc 1 908 14 is_stmt 0 view .LVU264
 1419 013c 0822     		movs	r2, #8
 1420 013e 6C49     		ldr	r1, .L153+76
 1421 0140 2046     		mov	r0, r4
 1422 0142 FFF7FEFF 		bl	strncmp
 1423              	.LVL104:
 908:Core/Src/main.c ****     {
 1424              		.loc 1 908 13 discriminator 1 view .LVU265
 1425 0146 0028     		cmp	r0, #0
 1426 0148 40F0BA81 		bne	.L123
 1427              	.LBB14:
 910:Core/Src/main.c ****         injectSequence(); 
 1428              		.loc 1 910 9 is_stmt 1 view .LVU266
 1429 014c 6948     		ldr	r0, .L153+80
 1430 014e FFF7FEFF 		bl	printf
 1431              	.LVL105:
 911:Core/Src/main.c ****         
 1432              		.loc 1 911 9 view .LVU267
 1433 0152 FFF7FEFF 		bl	injectSequence
 1434              	.LVL106:
 1435              	.LBE14:
 1436 0156 12E0     		b	.L81
 1437              	.L125:
 661:Core/Src/main.c **** 
 1438              		.loc 1 661 9 view .LVU268
 1439              	.LVL107:
 664:Core/Src/main.c ****         {
 1440              		.loc 1 664 9 view .LVU269
 664:Core/Src/main.c ****         {
 1441              		.loc 1 664 13 is_stmt 0 view .LVU270
 1442 0158 674B     		ldr	r3, .L153+84
 1443 015a 0393     		str	r3, [sp, #12]
 1444 015c 674B     		ldr	r3, .L153+88
 1445 015e 0293     		str	r3, [sp, #8]
 1446 0160 674B     		ldr	r3, .L153+92
 1447 0162 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 48


 1448 0164 674B     		ldr	r3, .L153+96
 1449 0166 0093     		str	r3, [sp]
 1450 0168 674B     		ldr	r3, .L153+100
 1451 016a 684A     		ldr	r2, .L153+104
 1452 016c 6849     		ldr	r1, .L153+108
 1453 016e 201D     		adds	r0, r4, #4
 1454              	.LVL108:
 664:Core/Src/main.c ****         {
 1455              		.loc 1 664 13 view .LVU271
 1456 0170 FFF7FEFF 		bl	sscanf
 1457              	.LVL109:
 664:Core/Src/main.c ****         {
 1458              		.loc 1 664 12 discriminator 1 view .LVU272
 1459 0174 0628     		cmp	r0, #6
 1460 0176 04D0     		beq	.L143
 700:Core/Src/main.c ****         }
 1461              		.loc 1 700 13 is_stmt 1 view .LVU273
 1462 0178 6648     		ldr	r0, .L153+112
 1463 017a FFF7FEFF 		bl	puts
 1464              	.LVL110:
 1465              	.L81:
 920:Core/Src/main.c **** 
 1466              		.loc 1 920 1 is_stmt 0 view .LVU274
 1467 017e 45B0     		add	sp, sp, #276
 1468              	.LCFI39:
 1469              		.cfi_remember_state
 1470              		.cfi_def_cfa_offset 12
 1471              		@ sp needed
 1472 0180 30BD     		pop	{r4, r5, pc}
 1473              	.LVL111:
 1474              	.L143:
 1475              	.LCFI40:
 1476              		.cfi_restore_state
 667:Core/Src/main.c **** 
 1477              		.loc 1 667 13 is_stmt 1 view .LVU275
 1478 0182 624C     		ldr	r4, .L153+104
 1479              	.LVL112:
 667:Core/Src/main.c **** 
 1480              		.loc 1 667 13 is_stmt 0 view .LVU276
 1481 0184 5C4B     		ldr	r3, .L153+84
 1482 0186 1B68     		ldr	r3, [r3]
 1483 0188 0293     		str	r3, [sp, #8]
 1484 018a 5C4B     		ldr	r3, .L153+88
 1485 018c 1B68     		ldr	r3, [r3]
 1486 018e 0193     		str	r3, [sp, #4]
 1487 0190 5B4B     		ldr	r3, .L153+92
 1488 0192 1B68     		ldr	r3, [r3]
 1489 0194 0093     		str	r3, [sp]
 1490 0196 5B4B     		ldr	r3, .L153+96
 1491 0198 1B68     		ldr	r3, [r3]
 1492 019a 5B4A     		ldr	r2, .L153+100
 1493 019c 1268     		ldr	r2, [r2]
 1494 019e 2168     		ldr	r1, [r4]
 1495 01a0 5D48     		ldr	r0, .L153+116
 1496 01a2 FFF7FEFF 		bl	printf
 1497              	.LVL113:
 670:Core/Src/main.c ****                 // send to joint
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 49


 1498              		.loc 1 670 13 is_stmt 1 view .LVU277
 670:Core/Src/main.c ****                 // send to joint
 1499              		.loc 1 670 24 is_stmt 0 view .LVU278
 1500 01a6 2068     		ldr	r0, [r4]
 1501 01a8 5C4B     		ldr	r3, .L153+120
 1502 01aa 1B68     		ldr	r3, [r3]
 670:Core/Src/main.c ****                 // send to joint
 1503              		.loc 1 670 16 view .LVU279
 1504 01ac 9842     		cmp	r0, r3
 1505 01ae 24D1     		bne	.L144
 1506              	.L84:
 675:Core/Src/main.c ****                 // send to joint
 1507              		.loc 1 675 13 is_stmt 1 view .LVU280
 675:Core/Src/main.c ****                 // send to joint
 1508              		.loc 1 675 24 is_stmt 0 view .LVU281
 1509 01b0 554B     		ldr	r3, .L153+100
 1510 01b2 1868     		ldr	r0, [r3]
 1511 01b4 5A4B     		ldr	r3, .L153+124
 1512 01b6 1B68     		ldr	r3, [r3]
 675:Core/Src/main.c ****                 // send to joint
 1513              		.loc 1 675 16 view .LVU282
 1514 01b8 9842     		cmp	r0, r3
 1515 01ba 23D1     		bne	.L145
 1516              	.L85:
 680:Core/Src/main.c ****                 // send to joint
 1517              		.loc 1 680 13 is_stmt 1 view .LVU283
 680:Core/Src/main.c ****                 // send to joint
 1518              		.loc 1 680 24 is_stmt 0 view .LVU284
 1519 01bc 514B     		ldr	r3, .L153+96
 1520 01be 1868     		ldr	r0, [r3]
 1521 01c0 584B     		ldr	r3, .L153+128
 1522 01c2 1B68     		ldr	r3, [r3]
 680:Core/Src/main.c ****                 // send to joint
 1523              		.loc 1 680 16 view .LVU285
 1524 01c4 9842     		cmp	r0, r3
 1525 01c6 22D1     		bne	.L146
 1526              	.L86:
 685:Core/Src/main.c ****                 // send to joint
 1527              		.loc 1 685 13 is_stmt 1 view .LVU286
 685:Core/Src/main.c ****                 // send to joint
 1528              		.loc 1 685 24 is_stmt 0 view .LVU287
 1529 01c8 4D4B     		ldr	r3, .L153+92
 1530 01ca 1B68     		ldr	r3, [r3]
 1531 01cc 564A     		ldr	r2, .L153+132
 1532 01ce 1268     		ldr	r2, [r2]
 685:Core/Src/main.c ****                 // send to joint
 1533              		.loc 1 685 16 view .LVU288
 1534 01d0 9342     		cmp	r3, r2
 1535 01d2 01D0     		beq	.L87
 687:Core/Src/main.c ****             }
 1536              		.loc 1 687 17 is_stmt 1 view .LVU289
 687:Core/Src/main.c ****             }
 1537              		.loc 1 687 29 is_stmt 0 view .LVU290
 1538 01d4 544A     		ldr	r2, .L153+132
 1539 01d6 1360     		str	r3, [r2]
 1540              	.L87:
 689:Core/Src/main.c ****                 // send to joint
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 50


 1541              		.loc 1 689 13 is_stmt 1 view .LVU291
 689:Core/Src/main.c ****                 // send to joint
 1542              		.loc 1 689 24 is_stmt 0 view .LVU292
 1543 01d8 484B     		ldr	r3, .L153+88
 1544 01da 1B68     		ldr	r3, [r3]
 1545 01dc 534A     		ldr	r2, .L153+136
 1546 01de 1268     		ldr	r2, [r2]
 689:Core/Src/main.c ****                 // send to joint
 1547              		.loc 1 689 16 view .LVU293
 1548 01e0 9342     		cmp	r3, r2
 1549 01e2 01D0     		beq	.L88
 691:Core/Src/main.c ****             }
 1550              		.loc 1 691 17 is_stmt 1 view .LVU294
 691:Core/Src/main.c ****             }
 1551              		.loc 1 691 29 is_stmt 0 view .LVU295
 1552 01e4 514A     		ldr	r2, .L153+136
 1553 01e6 1360     		str	r3, [r2]
 1554              	.L88:
 693:Core/Src/main.c ****                 // send to actuator
 1555              		.loc 1 693 13 is_stmt 1 view .LVU296
 693:Core/Src/main.c ****                 // send to actuator
 1556              		.loc 1 693 26 is_stmt 0 view .LVU297
 1557 01e8 434B     		ldr	r3, .L153+84
 1558 01ea 1B68     		ldr	r3, [r3]
 1559 01ec 504A     		ldr	r2, .L153+140
 1560 01ee 1268     		ldr	r2, [r2]
 693:Core/Src/main.c ****                 // send to actuator
 1561              		.loc 1 693 16 view .LVU298
 1562 01f0 9342     		cmp	r3, r2
 1563 01f2 C4D0     		beq	.L81
 695:Core/Src/main.c ****             }
 1564              		.loc 1 695 17 is_stmt 1 view .LVU299
 695:Core/Src/main.c ****             }
 1565              		.loc 1 695 31 is_stmt 0 view .LVU300
 1566 01f4 4E4A     		ldr	r2, .L153+140
 1567 01f6 1360     		str	r3, [r2]
 1568 01f8 C1E7     		b	.L81
 1569              	.L144:
 672:Core/Src/main.c ****                 Joint1Set(joint1);
 1570              		.loc 1 672 17 is_stmt 1 view .LVU301
 672:Core/Src/main.c ****                 Joint1Set(joint1);
 1571              		.loc 1 672 29 is_stmt 0 view .LVU302
 1572 01fa 484B     		ldr	r3, .L153+120
 1573 01fc 1860     		str	r0, [r3]
 673:Core/Src/main.c ****             }
 1574              		.loc 1 673 17 is_stmt 1 view .LVU303
 1575 01fe FFF7FEFF 		bl	Joint1Set
 1576              	.LVL114:
 1577 0202 D5E7     		b	.L84
 1578              	.L145:
 677:Core/Src/main.c ****                 Joint2Set(joint2);
 1579              		.loc 1 677 17 view .LVU304
 677:Core/Src/main.c ****                 Joint2Set(joint2);
 1580              		.loc 1 677 29 is_stmt 0 view .LVU305
 1581 0204 464B     		ldr	r3, .L153+124
 1582 0206 1860     		str	r0, [r3]
 678:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 51


 1583              		.loc 1 678 17 is_stmt 1 view .LVU306
 1584 0208 FFF7FEFF 		bl	Joint2Set
 1585              	.LVL115:
 1586 020c D6E7     		b	.L85
 1587              	.L146:
 682:Core/Src/main.c ****                 Joint3Set(joint3);
 1588              		.loc 1 682 17 view .LVU307
 682:Core/Src/main.c ****                 Joint3Set(joint3);
 1589              		.loc 1 682 29 is_stmt 0 view .LVU308
 1590 020e 454B     		ldr	r3, .L153+128
 1591 0210 1860     		str	r0, [r3]
 683:Core/Src/main.c ****             }
 1592              		.loc 1 683 17 is_stmt 1 view .LVU309
 1593 0212 FFF7FEFF 		bl	Joint3Set
 1594              	.LVL116:
 1595 0216 D7E7     		b	.L86
 1596              	.LVL117:
 1597              	.L126:
 706:Core/Src/main.c **** 
 1598              		.loc 1 706 9 view .LVU310
 708:Core/Src/main.c ****         {
 1599              		.loc 1 708 9 view .LVU311
 708:Core/Src/main.c ****         {
 1600              		.loc 1 708 13 is_stmt 0 view .LVU312
 1601 0218 3C4A     		ldr	r2, .L153+104
 1602 021a 4649     		ldr	r1, .L153+144
 1603 021c E01D     		adds	r0, r4, #7
 1604              	.LVL118:
 708:Core/Src/main.c ****         {
 1605              		.loc 1 708 13 view .LVU313
 1606 021e FFF7FEFF 		bl	sscanf
 1607              	.LVL119:
 708:Core/Src/main.c ****         {
 1608              		.loc 1 708 12 discriminator 1 view .LVU314
 1609 0222 0128     		cmp	r0, #1
 1610 0224 03D0     		beq	.L147
 720:Core/Src/main.c ****         }
 1611              		.loc 1 720 13 is_stmt 1 view .LVU315
 1612 0226 3B48     		ldr	r0, .L153+112
 1613 0228 FFF7FEFF 		bl	puts
 1614              	.LVL120:
 1615 022c A7E7     		b	.L81
 1616              	.L147:
 711:Core/Src/main.c **** 
 1617              		.loc 1 711 13 view .LVU316
 1618 022e 374C     		ldr	r4, .L153+104
 1619              	.LVL121:
 711:Core/Src/main.c **** 
 1620              		.loc 1 711 13 is_stmt 0 view .LVU317
 1621 0230 2168     		ldr	r1, [r4]
 1622 0232 4148     		ldr	r0, .L153+148
 1623 0234 FFF7FEFF 		bl	printf
 1624              	.LVL122:
 714:Core/Src/main.c ****                 prev_joint1 = joint1;
 1625              		.loc 1 714 17 is_stmt 1 view .LVU318
 1626 0238 2068     		ldr	r0, [r4]
 1627 023a FFF7FEFF 		bl	Joint1Set
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 52


 1628              	.LVL123:
 715:Core/Src/main.c ****             //}
 1629              		.loc 1 715 17 view .LVU319
 715:Core/Src/main.c ****             //}
 1630              		.loc 1 715 29 is_stmt 0 view .LVU320
 1631 023e 2268     		ldr	r2, [r4]
 1632 0240 364B     		ldr	r3, .L153+120
 1633 0242 1A60     		str	r2, [r3]
 1634 0244 9BE7     		b	.L81
 1635              	.LVL124:
 1636              	.L127:
 727:Core/Src/main.c **** 
 1637              		.loc 1 727 9 is_stmt 1 view .LVU321
 729:Core/Src/main.c ****         {
 1638              		.loc 1 729 9 view .LVU322
 729:Core/Src/main.c ****         {
 1639              		.loc 1 729 13 is_stmt 0 view .LVU323
 1640 0246 304A     		ldr	r2, .L153+100
 1641 0248 3A49     		ldr	r1, .L153+144
 1642 024a E01D     		adds	r0, r4, #7
 1643              	.LVL125:
 729:Core/Src/main.c ****         {
 1644              		.loc 1 729 13 view .LVU324
 1645 024c FFF7FEFF 		bl	sscanf
 1646              	.LVL126:
 729:Core/Src/main.c ****         {
 1647              		.loc 1 729 12 discriminator 1 view .LVU325
 1648 0250 0128     		cmp	r0, #1
 1649 0252 03D0     		beq	.L148
 741:Core/Src/main.c ****         }
 1650              		.loc 1 741 13 is_stmt 1 view .LVU326
 1651 0254 2F48     		ldr	r0, .L153+112
 1652 0256 FFF7FEFF 		bl	puts
 1653              	.LVL127:
 1654 025a 90E7     		b	.L81
 1655              	.L148:
 732:Core/Src/main.c **** 
 1656              		.loc 1 732 13 view .LVU327
 1657 025c 2A4C     		ldr	r4, .L153+100
 1658              	.LVL128:
 732:Core/Src/main.c **** 
 1659              		.loc 1 732 13 is_stmt 0 view .LVU328
 1660 025e 2168     		ldr	r1, [r4]
 1661 0260 3648     		ldr	r0, .L153+152
 1662 0262 FFF7FEFF 		bl	printf
 1663              	.LVL129:
 735:Core/Src/main.c ****                 prev_joint2 = joint2;
 1664              		.loc 1 735 17 is_stmt 1 view .LVU329
 1665 0266 2068     		ldr	r0, [r4]
 1666 0268 FFF7FEFF 		bl	Joint2Set
 1667              	.LVL130:
 736:Core/Src/main.c ****             //}
 1668              		.loc 1 736 17 view .LVU330
 736:Core/Src/main.c ****             //}
 1669              		.loc 1 736 29 is_stmt 0 view .LVU331
 1670 026c 2268     		ldr	r2, [r4]
 1671 026e 2C4B     		ldr	r3, .L153+124
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 53


 1672 0270 1A60     		str	r2, [r3]
 1673 0272 84E7     		b	.L81
 1674              	.LVL131:
 1675              	.L128:
 748:Core/Src/main.c **** 
 1676              		.loc 1 748 9 is_stmt 1 view .LVU332
 750:Core/Src/main.c ****         {
 1677              		.loc 1 750 9 view .LVU333
 750:Core/Src/main.c ****         {
 1678              		.loc 1 750 13 is_stmt 0 view .LVU334
 1679 0274 234A     		ldr	r2, .L153+96
 1680 0276 2F49     		ldr	r1, .L153+144
 1681 0278 E01D     		adds	r0, r4, #7
 1682              	.LVL132:
 750:Core/Src/main.c ****         {
 1683              		.loc 1 750 13 view .LVU335
 1684 027a FFF7FEFF 		bl	sscanf
 1685              	.LVL133:
 750:Core/Src/main.c ****         {
 1686              		.loc 1 750 12 discriminator 1 view .LVU336
 1687 027e 0128     		cmp	r0, #1
 1688 0280 03D0     		beq	.L149
 762:Core/Src/main.c ****         }
 1689              		.loc 1 762 13 is_stmt 1 view .LVU337
 1690 0282 2448     		ldr	r0, .L153+112
 1691 0284 FFF7FEFF 		bl	puts
 1692              	.LVL134:
 1693 0288 79E7     		b	.L81
 1694              	.L149:
 753:Core/Src/main.c **** 
 1695              		.loc 1 753 13 view .LVU338
 1696 028a 1E4C     		ldr	r4, .L153+96
 1697              	.LVL135:
 753:Core/Src/main.c **** 
 1698              		.loc 1 753 13 is_stmt 0 view .LVU339
 1699 028c 2168     		ldr	r1, [r4]
 1700 028e 2C48     		ldr	r0, .L153+156
 1701 0290 FFF7FEFF 		bl	printf
 1702              	.LVL136:
 756:Core/Src/main.c ****                 prev_joint3 = joint3;
 1703              		.loc 1 756 17 is_stmt 1 view .LVU340
 1704 0294 2068     		ldr	r0, [r4]
 1705 0296 FFF7FEFF 		bl	Joint3Set
 1706              	.LVL137:
 757:Core/Src/main.c ****             //}
 1707              		.loc 1 757 17 view .LVU341
 757:Core/Src/main.c ****             //}
 1708              		.loc 1 757 29 is_stmt 0 view .LVU342
 1709 029a 2268     		ldr	r2, [r4]
 1710 029c 214B     		ldr	r3, .L153+128
 1711 029e 1A60     		str	r2, [r3]
 1712 02a0 6DE7     		b	.L81
 1713              	.L154:
 1714 02a2 00BF     		.align	2
 1715              	.L153:
 1716 02a4 00000000 		.word	.LC2
 1717 02a8 58000000 		.word	.LC6
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 54


 1718 02ac 78000000 		.word	.LC9
 1719 02b0 94000000 		.word	.LC11
 1720 02b4 B0000000 		.word	.LC13
 1721 02b8 CC000000 		.word	.LC15
 1722 02bc E8000000 		.word	.LC17
 1723 02c0 08010000 		.word	.LC19
 1724 02c4 10010000 		.word	.LC20
 1725 02c8 18010000 		.word	.LC21
 1726 02cc 20010000 		.word	.LC22
 1727 02d0 28010000 		.word	.LC23
 1728 02d4 30010000 		.word	.LC24
 1729 02d8 38010000 		.word	.LC25
 1730 02dc 58010000 		.word	.LC27
 1731 02e0 70010000 		.word	.LC29
 1732 02e4 D8010000 		.word	.LC36
 1733 02e8 F0010000 		.word	.LC38
 1734 02ec 08020000 		.word	.LC40
 1735 02f0 1C020000 		.word	.LC42
 1736 02f4 28020000 		.word	.LC43
 1737 02f8 00000000 		.word	actuator
 1738 02fc 00000000 		.word	joint5
 1739 0300 00000000 		.word	joint4
 1740 0304 00000000 		.word	joint3
 1741 0308 00000000 		.word	joint2
 1742 030c 00000000 		.word	joint1
 1743 0310 04000000 		.word	.LC3
 1744 0314 44000000 		.word	.LC5
 1745 0318 1C000000 		.word	.LC4
 1746 031c 00000000 		.word	prev_joint1
 1747 0320 00000000 		.word	prev_joint2
 1748 0324 00000000 		.word	prev_joint3
 1749 0328 00000000 		.word	prev_joint4
 1750 032c 00000000 		.word	prev_joint5
 1751 0330 00000000 		.word	prev_actuator
 1752 0334 60000000 		.word	.LC7
 1753 0338 64000000 		.word	.LC8
 1754 033c 80000000 		.word	.LC10
 1755 0340 9C000000 		.word	.LC12
 1756              	.LVL138:
 1757              	.L129:
 769:Core/Src/main.c **** 
 1758              		.loc 1 769 9 is_stmt 1 view .LVU343
 771:Core/Src/main.c ****         {
 1759              		.loc 1 771 9 view .LVU344
 771:Core/Src/main.c ****         {
 1760              		.loc 1 771 13 is_stmt 0 view .LVU345
 1761 0344 614A     		ldr	r2, .L155
 1762 0346 6249     		ldr	r1, .L155+4
 1763 0348 E01D     		adds	r0, r4, #7
 1764              	.LVL139:
 771:Core/Src/main.c ****         {
 1765              		.loc 1 771 13 view .LVU346
 1766 034a FFF7FEFF 		bl	sscanf
 1767              	.LVL140:
 771:Core/Src/main.c ****         {
 1768              		.loc 1 771 12 discriminator 1 view .LVU347
 1769 034e 0128     		cmp	r0, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 55


 1770 0350 03D0     		beq	.L150
 783:Core/Src/main.c ****         }
 1771              		.loc 1 783 13 is_stmt 1 view .LVU348
 1772 0352 6048     		ldr	r0, .L155+8
 1773 0354 FFF7FEFF 		bl	puts
 1774              	.LVL141:
 1775 0358 11E7     		b	.L81
 1776              	.L150:
 774:Core/Src/main.c **** 
 1777              		.loc 1 774 13 view .LVU349
 1778 035a 5C4C     		ldr	r4, .L155
 1779              	.LVL142:
 774:Core/Src/main.c **** 
 1780              		.loc 1 774 13 is_stmt 0 view .LVU350
 1781 035c 2168     		ldr	r1, [r4]
 1782 035e 5E48     		ldr	r0, .L155+12
 1783 0360 FFF7FEFF 		bl	printf
 1784              	.LVL143:
 777:Core/Src/main.c ****                 prev_joint4 = joint4;
 1785              		.loc 1 777 17 is_stmt 1 view .LVU351
 1786 0364 2068     		ldr	r0, [r4]
 1787 0366 FFF7FEFF 		bl	Joint4Set
 1788              	.LVL144:
 778:Core/Src/main.c ****             //}
 1789              		.loc 1 778 17 view .LVU352
 778:Core/Src/main.c ****             //}
 1790              		.loc 1 778 29 is_stmt 0 view .LVU353
 1791 036a 2268     		ldr	r2, [r4]
 1792 036c 5B4B     		ldr	r3, .L155+16
 1793 036e 1A60     		str	r2, [r3]
 1794 0370 05E7     		b	.L81
 1795              	.LVL145:
 1796              	.L130:
 790:Core/Src/main.c **** 
 1797              		.loc 1 790 9 is_stmt 1 view .LVU354
 792:Core/Src/main.c ****         {
 1798              		.loc 1 792 9 view .LVU355
 792:Core/Src/main.c ****         {
 1799              		.loc 1 792 13 is_stmt 0 view .LVU356
 1800 0372 5B4A     		ldr	r2, .L155+20
 1801 0374 5649     		ldr	r1, .L155+4
 1802 0376 E01D     		adds	r0, r4, #7
 1803              	.LVL146:
 792:Core/Src/main.c ****         {
 1804              		.loc 1 792 13 view .LVU357
 1805 0378 FFF7FEFF 		bl	sscanf
 1806              	.LVL147:
 792:Core/Src/main.c ****         {
 1807              		.loc 1 792 12 discriminator 1 view .LVU358
 1808 037c 0128     		cmp	r0, #1
 1809 037e 03D0     		beq	.L151
 804:Core/Src/main.c ****         }
 1810              		.loc 1 804 13 is_stmt 1 view .LVU359
 1811 0380 5448     		ldr	r0, .L155+8
 1812 0382 FFF7FEFF 		bl	puts
 1813              	.LVL148:
 1814 0386 FAE6     		b	.L81
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 56


 1815              	.L151:
 795:Core/Src/main.c **** 
 1816              		.loc 1 795 13 view .LVU360
 1817 0388 554C     		ldr	r4, .L155+20
 1818              	.LVL149:
 795:Core/Src/main.c **** 
 1819              		.loc 1 795 13 is_stmt 0 view .LVU361
 1820 038a 2168     		ldr	r1, [r4]
 1821 038c 5548     		ldr	r0, .L155+24
 1822 038e FFF7FEFF 		bl	printf
 1823              	.LVL150:
 798:Core/Src/main.c ****                 prev_joint5 = joint5;
 1824              		.loc 1 798 17 is_stmt 1 view .LVU362
 1825 0392 2068     		ldr	r0, [r4]
 1826 0394 FFF7FEFF 		bl	Joint5Set
 1827              	.LVL151:
 799:Core/Src/main.c ****             //}
 1828              		.loc 1 799 17 view .LVU363
 799:Core/Src/main.c ****             //}
 1829              		.loc 1 799 29 is_stmt 0 view .LVU364
 1830 0398 2268     		ldr	r2, [r4]
 1831 039a 534B     		ldr	r3, .L155+28
 1832 039c 1A60     		str	r2, [r3]
 1833 039e EEE6     		b	.L81
 1834              	.LVL152:
 1835              	.L131:
 811:Core/Src/main.c **** 
 1836              		.loc 1 811 9 is_stmt 1 view .LVU365
 813:Core/Src/main.c ****         {
 1837              		.loc 1 813 9 view .LVU366
 813:Core/Src/main.c ****         {
 1838              		.loc 1 813 13 is_stmt 0 view .LVU367
 1839 03a0 524A     		ldr	r2, .L155+32
 1840 03a2 4B49     		ldr	r1, .L155+4
 1841 03a4 04F10900 		add	r0, r4, #9
 1842              	.LVL153:
 813:Core/Src/main.c ****         {
 1843              		.loc 1 813 13 view .LVU368
 1844 03a8 FFF7FEFF 		bl	sscanf
 1845              	.LVL154:
 813:Core/Src/main.c ****         {
 1846              		.loc 1 813 12 discriminator 1 view .LVU369
 1847 03ac 0128     		cmp	r0, #1
 1848 03ae 03D0     		beq	.L152
 825:Core/Src/main.c ****         }
 1849              		.loc 1 825 13 is_stmt 1 view .LVU370
 1850 03b0 4848     		ldr	r0, .L155+8
 1851 03b2 FFF7FEFF 		bl	puts
 1852              	.LVL155:
 1853 03b6 E2E6     		b	.L81
 1854              	.L152:
 816:Core/Src/main.c **** 
 1855              		.loc 1 816 13 view .LVU371
 1856 03b8 4C4C     		ldr	r4, .L155+32
 1857              	.LVL156:
 816:Core/Src/main.c **** 
 1858              		.loc 1 816 13 is_stmt 0 view .LVU372
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 57


 1859 03ba 2168     		ldr	r1, [r4]
 1860 03bc 4C48     		ldr	r0, .L155+36
 1861 03be FFF7FEFF 		bl	printf
 1862              	.LVL157:
 819:Core/Src/main.c ****                 prev_actuator = actuator;
 1863              		.loc 1 819 17 is_stmt 1 view .LVU373
 1864 03c2 2268     		ldr	r2, [r4]
 820:Core/Src/main.c ****             //}
 1865              		.loc 1 820 17 view .LVU374
 820:Core/Src/main.c ****             //}
 1866              		.loc 1 820 31 is_stmt 0 view .LVU375
 1867 03c4 4B4B     		ldr	r3, .L155+40
 1868 03c6 1A60     		str	r2, [r3]
 1869 03c8 D9E6     		b	.L81
 1870              	.LVL158:
 1871              	.L132:
 831:Core/Src/main.c ****     }
 1872              		.loc 1 831 9 is_stmt 1 view .LVU376
 1873              	.LBB15:
 831:Core/Src/main.c ****     }
 1874              		.loc 1 831 9 view .LVU377
 831:Core/Src/main.c ****     }
 1875              		.loc 1 831 9 view .LVU378
 1876 03ca 4B4B     		ldr	r3, .L155+44
 1877 03cc 0493     		str	r3, [sp, #16]
 1878              	.LVL159:
 831:Core/Src/main.c ****     }
 1879              		.loc 1 831 9 discriminator 1 view .LVU379
 1880              	.LBB16:
 831:Core/Src/main.c ****     }
 1881              		.loc 1 831 9 discriminator 1 view .LVU380
 831:Core/Src/main.c ****     }
 1882              		.loc 1 831 9 is_stmt 0 view .LVU381
 1883 03ce 04E0     		b	.L103
 1884              	.LVL160:
 1885              	.L104:
 831:Core/Src/main.c ****     }
 1886              		.loc 1 831 9 is_stmt 1 discriminator 3 view .LVU382
 1887 03d0 04AB     		add	r3, sp, #16
 1888 03d2 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1889 03d4 FFF7FEFF 		bl	__io_putchar_usart6
 1890              	.LVL161:
 831:Core/Src/main.c ****     }
 1891              		.loc 1 831 9 discriminator 3 view .LVU383
 1892 03d8 0135     		adds	r5, r5, #1
 1893              	.LVL162:
 1894              	.L103:
 831:Core/Src/main.c ****     }
 1895              		.loc 1 831 9 discriminator 2 view .LVU384
 1896 03da 022D     		cmp	r5, #2
 1897 03dc F8DD     		ble	.L104
 1898 03de CEE6     		b	.L81
 1899              	.LVL163:
 1900              	.L133:
 831:Core/Src/main.c ****     }
 1901              		.loc 1 831 9 is_stmt 0 discriminator 2 view .LVU385
 1902              	.LBE16:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 58


 1903              	.LBE15:
 836:Core/Src/main.c ****     }
 1904              		.loc 1 836 9 is_stmt 1 view .LVU386
 1905              	.LBB17:
 836:Core/Src/main.c ****     }
 1906              		.loc 1 836 9 view .LVU387
 836:Core/Src/main.c ****     }
 1907              		.loc 1 836 9 view .LVU388
 1908 03e0 454B     		ldr	r3, .L155+44
 1909 03e2 0493     		str	r3, [sp, #16]
 1910              	.LVL164:
 836:Core/Src/main.c ****     }
 1911              		.loc 1 836 9 discriminator 1 view .LVU389
 1912              	.LBB18:
 836:Core/Src/main.c ****     }
 1913              		.loc 1 836 9 discriminator 1 view .LVU390
 836:Core/Src/main.c ****     }
 1914              		.loc 1 836 9 is_stmt 0 view .LVU391
 1915 03e4 04E0     		b	.L106
 1916              	.LVL165:
 1917              	.L107:
 836:Core/Src/main.c ****     }
 1918              		.loc 1 836 9 is_stmt 1 discriminator 3 view .LVU392
 1919 03e6 04AB     		add	r3, sp, #16
 1920 03e8 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1921 03ea FFF7FEFF 		bl	__io_putchar_usart2
 1922              	.LVL166:
 836:Core/Src/main.c ****     }
 1923              		.loc 1 836 9 discriminator 3 view .LVU393
 1924 03ee 0135     		adds	r5, r5, #1
 1925              	.LVL167:
 1926              	.L106:
 836:Core/Src/main.c ****     }
 1927              		.loc 1 836 9 discriminator 2 view .LVU394
 1928 03f0 022D     		cmp	r5, #2
 1929 03f2 F8DD     		ble	.L107
 1930 03f4 C3E6     		b	.L81
 1931              	.LVL168:
 1932              	.L134:
 836:Core/Src/main.c ****     }
 1933              		.loc 1 836 9 is_stmt 0 discriminator 2 view .LVU395
 1934              	.LBE18:
 1935              	.LBE17:
 841:Core/Src/main.c ****     }
 1936              		.loc 1 841 9 is_stmt 1 view .LVU396
 1937              	.LBB19:
 841:Core/Src/main.c ****     }
 1938              		.loc 1 841 9 view .LVU397
 841:Core/Src/main.c ****     }
 1939              		.loc 1 841 9 view .LVU398
 1940 03f6 404B     		ldr	r3, .L155+44
 1941 03f8 0493     		str	r3, [sp, #16]
 1942              	.LVL169:
 841:Core/Src/main.c ****     }
 1943              		.loc 1 841 9 discriminator 1 view .LVU399
 1944              	.LBB20:
 841:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 59


 1945              		.loc 1 841 9 discriminator 1 view .LVU400
 841:Core/Src/main.c ****     }
 1946              		.loc 1 841 9 is_stmt 0 view .LVU401
 1947 03fa 04E0     		b	.L109
 1948              	.LVL170:
 1949              	.L110:
 841:Core/Src/main.c ****     }
 1950              		.loc 1 841 9 is_stmt 1 discriminator 3 view .LVU402
 1951 03fc 04AB     		add	r3, sp, #16
 1952 03fe 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1953 0400 FFF7FEFF 		bl	__io_putchar_usart3
 1954              	.LVL171:
 841:Core/Src/main.c ****     }
 1955              		.loc 1 841 9 discriminator 3 view .LVU403
 1956 0404 0135     		adds	r5, r5, #1
 1957              	.LVL172:
 1958              	.L109:
 841:Core/Src/main.c ****     }
 1959              		.loc 1 841 9 discriminator 2 view .LVU404
 1960 0406 022D     		cmp	r5, #2
 1961 0408 F8DD     		ble	.L110
 1962 040a B8E6     		b	.L81
 1963              	.LVL173:
 1964              	.L135:
 841:Core/Src/main.c ****     }
 1965              		.loc 1 841 9 is_stmt 0 discriminator 2 view .LVU405
 1966              	.LBE20:
 1967              	.LBE19:
 846:Core/Src/main.c ****       }
 1968              		.loc 1 846 11 is_stmt 1 view .LVU406
 1969              	.LBB21:
 846:Core/Src/main.c ****       }
 1970              		.loc 1 846 11 view .LVU407
 846:Core/Src/main.c ****       }
 1971              		.loc 1 846 11 view .LVU408
 1972 040c 3A4B     		ldr	r3, .L155+44
 1973 040e 0493     		str	r3, [sp, #16]
 1974              	.LVL174:
 846:Core/Src/main.c ****       }
 1975              		.loc 1 846 11 discriminator 1 view .LVU409
 1976              	.LBB22:
 846:Core/Src/main.c ****       }
 1977              		.loc 1 846 11 discriminator 1 view .LVU410
 846:Core/Src/main.c ****       }
 1978              		.loc 1 846 11 is_stmt 0 view .LVU411
 1979 0410 04E0     		b	.L112
 1980              	.LVL175:
 1981              	.L113:
 846:Core/Src/main.c ****       }
 1982              		.loc 1 846 11 is_stmt 1 discriminator 3 view .LVU412
 1983 0412 04AB     		add	r3, sp, #16
 1984 0414 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1985 0416 FFF7FEFF 		bl	__io_putchar_uart4
 1986              	.LVL176:
 846:Core/Src/main.c ****       }
 1987              		.loc 1 846 11 discriminator 3 view .LVU413
 1988 041a 0135     		adds	r5, r5, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 60


 1989              	.LVL177:
 1990              	.L112:
 846:Core/Src/main.c ****       }
 1991              		.loc 1 846 11 discriminator 2 view .LVU414
 1992 041c 022D     		cmp	r5, #2
 1993 041e F8DD     		ble	.L113
 1994 0420 ADE6     		b	.L81
 1995              	.LVL178:
 1996              	.L136:
 846:Core/Src/main.c ****       }
 1997              		.loc 1 846 11 is_stmt 0 discriminator 2 view .LVU415
 1998              	.LBE22:
 1999              	.LBE21:
 851:Core/Src/main.c ****       }
 2000              		.loc 1 851 11 is_stmt 1 view .LVU416
 2001              	.LBB23:
 851:Core/Src/main.c ****       }
 2002              		.loc 1 851 11 view .LVU417
 851:Core/Src/main.c ****       }
 2003              		.loc 1 851 11 view .LVU418
 2004 0422 354B     		ldr	r3, .L155+44
 2005 0424 0493     		str	r3, [sp, #16]
 2006              	.LVL179:
 851:Core/Src/main.c ****       }
 2007              		.loc 1 851 11 discriminator 1 view .LVU419
 2008              	.LBB24:
 851:Core/Src/main.c ****       }
 2009              		.loc 1 851 11 discriminator 1 view .LVU420
 851:Core/Src/main.c ****       }
 2010              		.loc 1 851 11 is_stmt 0 view .LVU421
 2011 0426 04E0     		b	.L115
 2012              	.LVL180:
 2013              	.L116:
 851:Core/Src/main.c ****       }
 2014              		.loc 1 851 11 is_stmt 1 discriminator 3 view .LVU422
 2015 0428 04AB     		add	r3, sp, #16
 2016 042a 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 2017 042c FFF7FEFF 		bl	__io_putchar_uart5
 2018              	.LVL181:
 851:Core/Src/main.c ****       }
 2019              		.loc 1 851 11 discriminator 3 view .LVU423
 2020 0430 0135     		adds	r5, r5, #1
 2021              	.LVL182:
 2022              	.L115:
 851:Core/Src/main.c ****       }
 2023              		.loc 1 851 11 discriminator 2 view .LVU424
 2024 0432 022D     		cmp	r5, #2
 2025 0434 F8DD     		ble	.L116
 2026 0436 A2E6     		b	.L81
 2027              	.LVL183:
 2028              	.L137:
 851:Core/Src/main.c ****       }
 2029              		.loc 1 851 11 is_stmt 0 discriminator 2 view .LVU425
 2030              	.LBE24:
 2031              	.LBE23:
 2032              	.LBB25:
 863:Core/Src/main.c ****         
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 61


 2033              		.loc 1 863 9 is_stmt 1 view .LVU426
 865:Core/Src/main.c ****         
 2034              		.loc 1 865 9 view .LVU427
 2035 0438 FFF7FEFF 		bl	HomeSet
 2036              	.LVL184:
 867:Core/Src/main.c **** 
 2037              		.loc 1 867 9 view .LVU428
 2038 043c 2F48     		ldr	r0, .L155+48
 2039 043e FFF7FEFF 		bl	puts
 2040              	.LVL185:
 2041              	.LBE25:
 2042 0442 9CE6     		b	.L81
 2043              	.LVL186:
 2044              	.L138:
 873:Core/Src/main.c ****         ledFlag = !ledFlag;
 2045              		.loc 1 873 9 view .LVU429
 874:Core/Src/main.c ****         
 2046              		.loc 1 874 9 view .LVU430
 874:Core/Src/main.c ****         
 2047              		.loc 1 874 19 is_stmt 0 view .LVU431
 2048 0444 2E4A     		ldr	r2, .L155+52
 2049 0446 1368     		ldr	r3, [r2]
 2050 0448 B3FA83F3 		clz	r3, r3
 2051 044c 5B09     		lsrs	r3, r3, #5
 874:Core/Src/main.c ****         
 2052              		.loc 1 874 17 view .LVU432
 2053 044e 1360     		str	r3, [r2]
 876:Core/Src/main.c **** 
 2054              		.loc 1 876 9 is_stmt 1 view .LVU433
 2055 0450 2C48     		ldr	r0, .L155+56
 2056 0452 FFF7FEFF 		bl	puts
 2057              	.LVL187:
 2058 0456 92E6     		b	.L81
 2059              	.LVL188:
 2060              	.L139:
 883:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 2061              		.loc 1 883 8 view .LVU434
 2062 0458 2B4B     		ldr	r3, .L155+60
 2063 045a 1968     		ldr	r1, [r3]
 2064 045c 2B48     		ldr	r0, .L155+64
 2065 045e FFF7FEFF 		bl	printf
 2066              	.LVL189:
 884:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 2067              		.loc 1 884 8 view .LVU435
 2068 0462 2B4B     		ldr	r3, .L155+68
 2069 0464 1968     		ldr	r1, [r3]
 2070 0466 2B48     		ldr	r0, .L155+72
 2071 0468 FFF7FEFF 		bl	printf
 2072              	.LVL190:
 885:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 2073              		.loc 1 885 8 view .LVU436
 2074 046c 2A4B     		ldr	r3, .L155+76
 2075 046e 1968     		ldr	r1, [r3]
 2076 0470 2A48     		ldr	r0, .L155+80
 2077 0472 FFF7FEFF 		bl	printf
 2078              	.LVL191:
 886:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 62


 2079              		.loc 1 886 8 view .LVU437
 2080 0476 154B     		ldr	r3, .L155
 2081 0478 1968     		ldr	r1, [r3]
 2082 047a 2948     		ldr	r0, .L155+84
 2083 047c FFF7FEFF 		bl	printf
 2084              	.LVL192:
 887:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 2085              		.loc 1 887 8 view .LVU438
 2086 0480 174B     		ldr	r3, .L155+20
 2087 0482 1968     		ldr	r1, [r3]
 2088 0484 2748     		ldr	r0, .L155+88
 2089 0486 FFF7FEFF 		bl	printf
 2090              	.LVL193:
 888:Core/Src/main.c ****     }
 2091              		.loc 1 888 8 view .LVU439
 2092 048a 184B     		ldr	r3, .L155+32
 2093 048c 1968     		ldr	r1, [r3]
 2094 048e 2648     		ldr	r0, .L155+92
 2095 0490 FFF7FEFF 		bl	printf
 2096              	.LVL194:
 2097 0494 73E6     		b	.L81
 2098              	.L140:
 893:Core/Src/main.c ****         printf("injecting...\r\n");
 2099              		.loc 1 893 9 view .LVU440
 893:Core/Src/main.c ****         printf("injecting...\r\n");
 2100              		.loc 1 893 20 is_stmt 0 view .LVU441
 2101 0496 254B     		ldr	r3, .L155+96
 2102 0498 0122     		movs	r2, #1
 2103 049a 1A60     		str	r2, [r3]
 894:Core/Src/main.c ****     }
 2104              		.loc 1 894 9 is_stmt 1 view .LVU442
 2105 049c 2448     		ldr	r0, .L155+100
 2106 049e FFF7FEFF 		bl	puts
 2107              	.LVL195:
 2108 04a2 6CE6     		b	.L81
 2109              	.L141:
 899:Core/Src/main.c ****         printf("retracting...\r\n");
 2110              		.loc 1 899 9 view .LVU443
 899:Core/Src/main.c ****         printf("retracting...\r\n");
 2111              		.loc 1 899 20 is_stmt 0 view .LVU444
 2112 04a4 214B     		ldr	r3, .L155+96
 2113 04a6 0222     		movs	r2, #2
 2114 04a8 1A60     		str	r2, [r3]
 900:Core/Src/main.c ****     }
 2115              		.loc 1 900 9 is_stmt 1 view .LVU445
 2116 04aa 2248     		ldr	r0, .L155+104
 2117 04ac FFF7FEFF 		bl	puts
 2118              	.LVL196:
 2119 04b0 65E6     		b	.L81
 2120              	.L142:
 905:Core/Src/main.c ****         printf("stopped.\r\n"); 
 2121              		.loc 1 905 9 view .LVU446
 905:Core/Src/main.c ****         printf("stopped.\r\n"); 
 2122              		.loc 1 905 20 is_stmt 0 view .LVU447
 2123 04b2 1E4B     		ldr	r3, .L155+96
 2124 04b4 0022     		movs	r2, #0
 2125 04b6 1A60     		str	r2, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 63


 906:Core/Src/main.c ****     }
 2126              		.loc 1 906 9 is_stmt 1 view .LVU448
 2127 04b8 1F48     		ldr	r0, .L155+108
 2128 04ba FFF7FEFF 		bl	puts
 2129              	.LVL197:
 2130 04be 5EE6     		b	.L81
 2131              	.L123:
 918:Core/Src/main.c ****     }
 2132              		.loc 1 918 9 view .LVU449
 2133 04c0 2146     		mov	r1, r4
 2134 04c2 1E48     		ldr	r0, .L155+112
 2135 04c4 FFF7FEFF 		bl	printf
 2136              	.LVL198:
 920:Core/Src/main.c **** 
 2137              		.loc 1 920 1 is_stmt 0 view .LVU450
 2138 04c8 59E6     		b	.L81
 2139              	.L156:
 2140 04ca 00BF     		.align	2
 2141              	.L155:
 2142 04cc 00000000 		.word	joint4
 2143 04d0 60000000 		.word	.LC7
 2144 04d4 44000000 		.word	.LC5
 2145 04d8 B8000000 		.word	.LC14
 2146 04dc 00000000 		.word	prev_joint4
 2147 04e0 00000000 		.word	joint5
 2148 04e4 D4000000 		.word	.LC16
 2149 04e8 00000000 		.word	prev_joint5
 2150 04ec 00000000 		.word	actuator
 2151 04f0 F4000000 		.word	.LC18
 2152 04f4 00000000 		.word	prev_actuator
 2153 04f8 720D0A00 		.word	658802
 2154 04fc 40010000 		.word	.LC26
 2155 0500 00000000 		.word	ledFlag
 2156 0504 60010000 		.word	.LC28
 2157 0508 00000000 		.word	joint1
 2158 050c 78010000 		.word	.LC30
 2159 0510 00000000 		.word	joint2
 2160 0514 88010000 		.word	.LC31
 2161 0518 00000000 		.word	joint3
 2162 051c 98010000 		.word	.LC32
 2163 0520 A8010000 		.word	.LC33
 2164 0524 B8010000 		.word	.LC34
 2165 0528 C8010000 		.word	.LC35
 2166 052c 00000000 		.word	injectFlag
 2167 0530 E0010000 		.word	.LC37
 2168 0534 F8010000 		.word	.LC39
 2169 0538 10020000 		.word	.LC41
 2170 053c 40020000 		.word	.LC44
 2171              		.cfi_endproc
 2172              	.LFE251:
 2174              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 2175              		.align	2
 2176              	.LC45:
 2177 0000 42756666 		.ascii	"Buffer overflow\015\000"
 2177      6572206F 
 2177      76657266 
 2177      6C6F770D 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 64


 2177      00
 2178              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2179              		.align	1
 2180              		.global	HAL_UART_RxCpltCallback
 2181              		.syntax unified
 2182              		.thumb
 2183              		.thumb_func
 2185              	HAL_UART_RxCpltCallback:
 2186              	.LVL199:
 2187              	.LFB250:
 425:Core/Src/main.c **** 
 2188              		.loc 1 425 1 is_stmt 1 view -0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 425:Core/Src/main.c **** 
 2192              		.loc 1 425 1 is_stmt 0 view .LVU452
 2193 0000 10B5     		push	{r4, lr}
 2194              	.LCFI41:
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 4, -8
 2197              		.cfi_offset 14, -4
 427:Core/Src/main.c **** 
 2198              		.loc 1 427 5 is_stmt 1 view .LVU453
 427:Core/Src/main.c **** 
 2199              		.loc 1 427 14 is_stmt 0 view .LVU454
 2200 0002 0368     		ldr	r3, [r0]
 427:Core/Src/main.c **** 
 2201              		.loc 1 427 8 view .LVU455
 2202 0004 9C4A     		ldr	r2, .L198
 2203 0006 9342     		cmp	r3, r2
 2204 0008 2DD0     		beq	.L182
 460:Core/Src/main.c ****         // Store received byte in buffer
 2205              		.loc 1 460 10 is_stmt 1 view .LVU456
 460:Core/Src/main.c ****         // Store received byte in buffer
 2206              		.loc 1 460 12 is_stmt 0 view .LVU457
 2207 000a 9C4A     		ldr	r2, .L198+4
 2208 000c 9342     		cmp	r3, r2
 2209 000e 5AD0     		beq	.L183
 498:Core/Src/main.c ****         // Store received byte in buffer
 2210              		.loc 1 498 10 is_stmt 1 view .LVU458
 498:Core/Src/main.c ****         // Store received byte in buffer
 2211              		.loc 1 498 12 is_stmt 0 view .LVU459
 2212 0010 9B4A     		ldr	r2, .L198+8
 2213 0012 9342     		cmp	r3, r2
 2214 0014 00F09F80 		beq	.L184
 535:Core/Src/main.c ****         // Store received byte in buffer
 2215              		.loc 1 535 12 is_stmt 1 view .LVU460
 535:Core/Src/main.c ****         // Store received byte in buffer
 2216              		.loc 1 535 14 is_stmt 0 view .LVU461
 2217 0018 9A4A     		ldr	r2, .L198+12
 2218 001a 9342     		cmp	r3, r2
 2219 001c 00F0E380 		beq	.L185
 572:Core/Src/main.c ****         // Store received byte in buffer
 2220              		.loc 1 572 12 is_stmt 1 view .LVU462
 572:Core/Src/main.c ****         // Store received byte in buffer
 2221              		.loc 1 572 14 is_stmt 0 view .LVU463
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 65


 2222 0020 994A     		ldr	r2, .L198+16
 2223 0022 9342     		cmp	r3, r2
 2224 0024 00F05481 		beq	.L186
 609:Core/Src/main.c ****         // Store received byte in buffer
 2225              		.loc 1 609 12 is_stmt 1 view .LVU464
 609:Core/Src/main.c ****         // Store received byte in buffer
 2226              		.loc 1 609 14 is_stmt 0 view .LVU465
 2227 0028 984A     		ldr	r2, .L198+20
 2228 002a 9342     		cmp	r3, r2
 2229 002c 34D1     		bne	.L157
 611:Core/Src/main.c ****         {
 2230              		.loc 1 611 9 is_stmt 1 view .LVU466
 611:Core/Src/main.c ****         {
 2231              		.loc 1 611 26 is_stmt 0 view .LVU467
 2232 002e 984B     		ldr	r3, .L198+24
 2233 0030 1B88     		ldrh	r3, [r3]
 2234 0032 9BB2     		uxth	r3, r3
 611:Core/Src/main.c ****         {
 2235              		.loc 1 611 12 view .LVU468
 2236 0034 FE2B     		cmp	r3, #254
 2237 0036 00F2BB81 		bhi	.L178
 613:Core/Src/main.c **** 
 2238              		.loc 1 613 13 is_stmt 1 view .LVU469
 613:Core/Src/main.c **** 
 2239              		.loc 1 613 37 is_stmt 0 view .LVU470
 2240 003a 9549     		ldr	r1, .L198+24
 2241 003c 0B88     		ldrh	r3, [r1]
 2242 003e 9BB2     		uxth	r3, r3
 2243 0040 5A1C     		adds	r2, r3, #1
 2244 0042 92B2     		uxth	r2, r2
 2245 0044 0A80     		strh	r2, [r1]	@ movhi
 613:Core/Src/main.c **** 
 2246              		.loc 1 613 41 view .LVU471
 2247 0046 9349     		ldr	r1, .L198+28
 2248 0048 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2249 004a D2B2     		uxtb	r2, r2
 2250 004c 9248     		ldr	r0, .L198+32
 2251              	.LVL200:
 613:Core/Src/main.c **** 
 2252              		.loc 1 613 41 view .LVU472
 2253 004e C254     		strb	r2, [r0, r3]
 616:Core/Src/main.c ****             {
 2254              		.loc 1 616 13 is_stmt 1 view .LVU473
 616:Core/Src/main.c ****             {
 2255              		.loc 1 616 26 is_stmt 0 view .LVU474
 2256 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2257 0052 DBB2     		uxtb	r3, r3
 616:Core/Src/main.c ****             {
 2258              		.loc 1 616 16 view .LVU475
 2259 0054 0A2B     		cmp	r3, #10
 2260 0056 00F08381 		beq	.L187
 2261              	.L179:
 642:Core/Src/main.c **** 
 2262              		.loc 1 642 9 is_stmt 1 view .LVU476
 2263 005a 0122     		movs	r2, #1
 2264 005c 8D49     		ldr	r1, .L198+28
 2265 005e 8F48     		ldr	r0, .L198+36
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 66


 2266 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2267              	.LVL201:
 646:Core/Src/main.c **** 
 2268              		.loc 1 646 1 is_stmt 0 view .LVU477
 2269 0064 18E0     		b	.L157
 2270              	.LVL202:
 2271              	.L182:
 431:Core/Src/main.c ****         {
 2272              		.loc 1 431 9 is_stmt 1 view .LVU478
 431:Core/Src/main.c ****         {
 2273              		.loc 1 431 26 is_stmt 0 view .LVU479
 2274 0066 8A4B     		ldr	r3, .L198+24
 2275 0068 1B88     		ldrh	r3, [r3]
 2276 006a 9BB2     		uxth	r3, r3
 431:Core/Src/main.c ****         {
 2277              		.loc 1 431 12 view .LVU480
 2278 006c FE2B     		cmp	r3, #254
 2279 006e 23D8     		bhi	.L159
 433:Core/Src/main.c **** 
 2280              		.loc 1 433 13 is_stmt 1 view .LVU481
 433:Core/Src/main.c **** 
 2281              		.loc 1 433 37 is_stmt 0 view .LVU482
 2282 0070 8749     		ldr	r1, .L198+24
 2283 0072 0B88     		ldrh	r3, [r1]
 2284 0074 9BB2     		uxth	r3, r3
 2285 0076 5A1C     		adds	r2, r3, #1
 2286 0078 92B2     		uxth	r2, r2
 2287 007a 0A80     		strh	r2, [r1]	@ movhi
 433:Core/Src/main.c **** 
 2288              		.loc 1 433 41 view .LVU483
 2289 007c 8849     		ldr	r1, .L198+40
 2290 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2291 0080 D2B2     		uxtb	r2, r2
 2292 0082 8548     		ldr	r0, .L198+32
 2293              	.LVL203:
 433:Core/Src/main.c **** 
 2294              		.loc 1 433 41 view .LVU484
 2295 0084 C254     		strb	r2, [r0, r3]
 436:Core/Src/main.c ****             {
 2296              		.loc 1 436 13 is_stmt 1 view .LVU485
 436:Core/Src/main.c ****             {
 2297              		.loc 1 436 25 is_stmt 0 view .LVU486
 2298 0086 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2299 0088 DBB2     		uxtb	r3, r3
 436:Core/Src/main.c ****             {
 2300              		.loc 1 436 16 view .LVU487
 2301 008a 0A2B     		cmp	r3, #10
 2302 008c 05D0     		beq	.L188
 2303              	.L160:
 457:Core/Src/main.c ****     }
 2304              		.loc 1 457 9 is_stmt 1 view .LVU488
 2305 008e 0122     		movs	r2, #1
 2306 0090 8349     		ldr	r1, .L198+40
 2307 0092 8448     		ldr	r0, .L198+44
 2308 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2309              	.LVL204:
 2310              	.L157:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 67


 646:Core/Src/main.c **** 
 2311              		.loc 1 646 1 is_stmt 0 view .LVU489
 2312 0098 10BD     		pop	{r4, pc}
 2313              	.L188:
 2314              	.LBB26:
 438:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2315              		.loc 1 438 17 is_stmt 1 view .LVU490
 438:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2316              		.loc 1 438 28 is_stmt 0 view .LVU491
 2317 009a 7D4A     		ldr	r2, .L198+24
 2318 009c 1388     		ldrh	r3, [r2]
 2319 009e 9BB2     		uxth	r3, r3
 438:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2320              		.loc 1 438 43 view .LVU492
 2321 00a0 0146     		mov	r1, r0
 2322 00a2 0020     		movs	r0, #0
 2323 00a4 C854     		strb	r0, [r1, r3]
 439:Core/Src/main.c **** 
 2324              		.loc 1 439 17 is_stmt 1 view .LVU493
 439:Core/Src/main.c **** 
 2325              		.loc 1 439 30 is_stmt 0 view .LVU494
 2326 00a6 1080     		strh	r0, [r2]	@ movhi
 442:Core/Src/main.c **** 
 2327              		.loc 1 442 17 is_stmt 1 view .LVU495
 2328 00a8 7F4C     		ldr	r4, .L198+48
 2329 00aa 2046     		mov	r0, r4
 2330 00ac FFF7FEFF 		bl	strcpy
 2331              	.LVL205:
 444:Core/Src/main.c **** 
 2332              		.loc 1 444 17 view .LVU496
 2333 00b0 2046     		mov	r0, r4
 2334 00b2 FFF7FEFF 		bl	ProcessReceivedString
 2335              	.LVL206:
 2336 00b6 EAE7     		b	.L160
 2337              	.LVL207:
 2338              	.L159:
 444:Core/Src/main.c **** 
 2339              		.loc 1 444 17 is_stmt 0 view .LVU497
 2340              	.LBE26:
 452:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2341              		.loc 1 452 13 is_stmt 1 view .LVU498
 452:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2342              		.loc 1 452 26 is_stmt 0 view .LVU499
 2343 00b8 754B     		ldr	r3, .L198+24
 2344 00ba 0022     		movs	r2, #0
 2345 00bc 1A80     		strh	r2, [r3]	@ movhi
 453:Core/Src/main.c ****         }
 2346              		.loc 1 453 13 is_stmt 1 view .LVU500
 2347 00be 7B48     		ldr	r0, .L198+52
 2348              	.LVL208:
 453:Core/Src/main.c ****         }
 2349              		.loc 1 453 13 is_stmt 0 view .LVU501
 2350 00c0 FFF7FEFF 		bl	puts
 2351              	.LVL209:
 2352 00c4 E3E7     		b	.L160
 2353              	.LVL210:
 2354              	.L183:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 68


 462:Core/Src/main.c ****         {
 2355              		.loc 1 462 9 is_stmt 1 view .LVU502
 462:Core/Src/main.c ****         {
 2356              		.loc 1 462 26 is_stmt 0 view .LVU503
 2357 00c6 724B     		ldr	r3, .L198+24
 2358 00c8 1B88     		ldrh	r3, [r3]
 2359 00ca 9BB2     		uxth	r3, r3
 462:Core/Src/main.c ****         {
 2360              		.loc 1 462 12 view .LVU504
 2361 00cc FE2B     		cmp	r3, #254
 2362 00ce 3BD8     		bhi	.L163
 464:Core/Src/main.c **** 
 2363              		.loc 1 464 13 is_stmt 1 view .LVU505
 464:Core/Src/main.c **** 
 2364              		.loc 1 464 37 is_stmt 0 view .LVU506
 2365 00d0 6F49     		ldr	r1, .L198+24
 2366 00d2 0B88     		ldrh	r3, [r1]
 2367 00d4 9BB2     		uxth	r3, r3
 2368 00d6 5A1C     		adds	r2, r3, #1
 2369 00d8 92B2     		uxth	r2, r2
 2370 00da 0A80     		strh	r2, [r1]	@ movhi
 464:Core/Src/main.c **** 
 2371              		.loc 1 464 41 view .LVU507
 2372 00dc 7449     		ldr	r1, .L198+56
 2373 00de 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2374 00e0 D2B2     		uxtb	r2, r2
 2375 00e2 6D48     		ldr	r0, .L198+32
 2376              	.LVL211:
 464:Core/Src/main.c **** 
 2377              		.loc 1 464 41 view .LVU508
 2378 00e4 C254     		strb	r2, [r0, r3]
 467:Core/Src/main.c ****             {
 2379              		.loc 1 467 13 is_stmt 1 view .LVU509
 467:Core/Src/main.c ****             {
 2380              		.loc 1 467 26 is_stmt 0 view .LVU510
 2381 00e6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2382 00e8 DBB2     		uxtb	r3, r3
 467:Core/Src/main.c ****             {
 2383              		.loc 1 467 16 view .LVU511
 2384 00ea 0A2B     		cmp	r3, #10
 2385 00ec 05D0     		beq	.L189
 2386              	.L164:
 495:Core/Src/main.c ****     }
 2387              		.loc 1 495 9 is_stmt 1 view .LVU512
 2388 00ee 0122     		movs	r2, #1
 2389 00f0 6F49     		ldr	r1, .L198+56
 2390 00f2 7048     		ldr	r0, .L198+60
 2391 00f4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2392              	.LVL212:
 2393 00f8 CEE7     		b	.L157
 2394              	.L189:
 469:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2395              		.loc 1 469 17 view .LVU513
 469:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2396              		.loc 1 469 28 is_stmt 0 view .LVU514
 2397 00fa 654A     		ldr	r2, .L198+24
 2398 00fc 1388     		ldrh	r3, [r2]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 69


 2399 00fe 9BB2     		uxth	r3, r3
 469:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2400              		.loc 1 469 43 view .LVU515
 2401 0100 0146     		mov	r1, r0
 2402 0102 0020     		movs	r0, #0
 2403 0104 C854     		strb	r0, [r1, r3]
 470:Core/Src/main.c **** 
 2404              		.loc 1 470 17 is_stmt 1 view .LVU516
 470:Core/Src/main.c **** 
 2405              		.loc 1 470 30 is_stmt 0 view .LVU517
 2406 0106 1080     		strh	r0, [r2]	@ movhi
 473:Core/Src/main.c **** 
 2407              		.loc 1 473 17 is_stmt 1 view .LVU518
 2408 0108 674C     		ldr	r4, .L198+48
 2409 010a 2046     		mov	r0, r4
 2410 010c FFF7FEFF 		bl	strcpy
 2411              	.LVL213:
 475:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2412              		.loc 1 475 17 view .LVU519
 475:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2413              		.loc 1 475 20 is_stmt 0 view .LVU520
 2414 0110 2146     		mov	r1, r4
 2415 0112 6948     		ldr	r0, .L198+64
 2416 0114 FFF7FEFF 		bl	strcmp
 2417              	.LVL214:
 475:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2418              		.loc 1 475 19 discriminator 1 view .LVU521
 2419 0118 70B9     		cbnz	r0, .L190
 479:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2420              		.loc 1 479 22 is_stmt 1 view .LVU522
 479:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2421              		.loc 1 479 25 is_stmt 0 view .LVU523
 2422 011a 6849     		ldr	r1, .L198+68
 2423 011c 6248     		ldr	r0, .L198+48
 2424 011e FFF7FEFF 		bl	strcmp
 2425              	.LVL215:
 479:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2426              		.loc 1 479 24 discriminator 1 view .LVU524
 2427 0122 0028     		cmp	r0, #0
 2428 0124 E3D0     		beq	.L164
 2429              	.LBB27:
 480:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2430              		.loc 1 480 19 is_stmt 1 view .LVU525
 2431 0126 604C     		ldr	r4, .L198+48
 2432 0128 2046     		mov	r0, r4
 2433 012a FFF7FEFF 		bl	ProcessReceivedString
 2434              	.LVL216:
 481:Core/Src/main.c ****                 }
 2435              		.loc 1 481 19 view .LVU526
 2436 012e 2146     		mov	r1, r4
 2437 0130 6248     		ldr	r0, .L198+68
 2438 0132 FFF7FEFF 		bl	strcpy
 2439              	.LVL217:
 2440 0136 DAE7     		b	.L164
 2441              	.L190:
 2442              	.LBE27:
 2443              	.LBB28:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 70


 476:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2444              		.loc 1 476 19 view .LVU527
 2445 0138 2046     		mov	r0, r4
 2446 013a FFF7FEFF 		bl	ProcessReceivedString
 2447              	.LVL218:
 477:Core/Src/main.c ****                 }
 2448              		.loc 1 477 19 view .LVU528
 2449 013e 2146     		mov	r1, r4
 2450 0140 5E48     		ldr	r0, .L198+68
 2451 0142 FFF7FEFF 		bl	strcpy
 2452              	.LVL219:
 2453              	.LBE28:
 2454 0146 D2E7     		b	.L164
 2455              	.LVL220:
 2456              	.L163:
 490:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2457              		.loc 1 490 13 view .LVU529
 490:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2458              		.loc 1 490 26 is_stmt 0 view .LVU530
 2459 0148 514B     		ldr	r3, .L198+24
 2460 014a 0022     		movs	r2, #0
 2461 014c 1A80     		strh	r2, [r3]	@ movhi
 491:Core/Src/main.c ****         }
 2462              		.loc 1 491 13 is_stmt 1 view .LVU531
 2463 014e 5748     		ldr	r0, .L198+52
 2464              	.LVL221:
 491:Core/Src/main.c ****         }
 2465              		.loc 1 491 13 is_stmt 0 view .LVU532
 2466 0150 FFF7FEFF 		bl	puts
 2467              	.LVL222:
 2468 0154 CBE7     		b	.L164
 2469              	.LVL223:
 2470              	.L184:
 500:Core/Src/main.c ****         {
 2471              		.loc 1 500 9 is_stmt 1 view .LVU533
 500:Core/Src/main.c ****         {
 2472              		.loc 1 500 26 is_stmt 0 view .LVU534
 2473 0156 4E4B     		ldr	r3, .L198+24
 2474 0158 1B88     		ldrh	r3, [r3]
 2475 015a 9BB2     		uxth	r3, r3
 500:Core/Src/main.c ****         {
 2476              		.loc 1 500 12 view .LVU535
 2477 015c FE2B     		cmp	r3, #254
 2478 015e 3BD8     		bhi	.L167
 502:Core/Src/main.c **** 
 2479              		.loc 1 502 13 is_stmt 1 view .LVU536
 502:Core/Src/main.c **** 
 2480              		.loc 1 502 37 is_stmt 0 view .LVU537
 2481 0160 4B49     		ldr	r1, .L198+24
 2482 0162 0B88     		ldrh	r3, [r1]
 2483 0164 9BB2     		uxth	r3, r3
 2484 0166 5A1C     		adds	r2, r3, #1
 2485 0168 92B2     		uxth	r2, r2
 2486 016a 0A80     		strh	r2, [r1]	@ movhi
 502:Core/Src/main.c **** 
 2487              		.loc 1 502 41 view .LVU538
 2488 016c 5449     		ldr	r1, .L198+72
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 71


 2489 016e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2490 0170 D2B2     		uxtb	r2, r2
 2491 0172 4948     		ldr	r0, .L198+32
 2492              	.LVL224:
 502:Core/Src/main.c **** 
 2493              		.loc 1 502 41 view .LVU539
 2494 0174 C254     		strb	r2, [r0, r3]
 505:Core/Src/main.c ****             {
 2495              		.loc 1 505 13 is_stmt 1 view .LVU540
 505:Core/Src/main.c ****             {
 2496              		.loc 1 505 26 is_stmt 0 view .LVU541
 2497 0176 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2498 0178 DBB2     		uxtb	r3, r3
 505:Core/Src/main.c ****             {
 2499              		.loc 1 505 16 view .LVU542
 2500 017a 0A2B     		cmp	r3, #10
 2501 017c 05D0     		beq	.L191
 2502              	.L168:
 531:Core/Src/main.c **** 
 2503              		.loc 1 531 9 is_stmt 1 view .LVU543
 2504 017e 0122     		movs	r2, #1
 2505 0180 4F49     		ldr	r1, .L198+72
 2506 0182 5048     		ldr	r0, .L198+76
 2507 0184 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2508              	.LVL225:
 2509 0188 86E7     		b	.L157
 2510              	.L191:
 507:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2511              		.loc 1 507 17 view .LVU544
 507:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2512              		.loc 1 507 28 is_stmt 0 view .LVU545
 2513 018a 414A     		ldr	r2, .L198+24
 2514 018c 1388     		ldrh	r3, [r2]
 2515 018e 9BB2     		uxth	r3, r3
 507:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2516              		.loc 1 507 43 view .LVU546
 2517 0190 0146     		mov	r1, r0
 2518 0192 0020     		movs	r0, #0
 2519 0194 C854     		strb	r0, [r1, r3]
 508:Core/Src/main.c **** 
 2520              		.loc 1 508 17 is_stmt 1 view .LVU547
 508:Core/Src/main.c **** 
 2521              		.loc 1 508 30 is_stmt 0 view .LVU548
 2522 0196 1080     		strh	r0, [r2]	@ movhi
 511:Core/Src/main.c **** 
 2523              		.loc 1 511 17 is_stmt 1 view .LVU549
 2524 0198 434C     		ldr	r4, .L198+48
 2525 019a 2046     		mov	r0, r4
 2526 019c FFF7FEFF 		bl	strcpy
 2527              	.LVL226:
 513:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2528              		.loc 1 513 17 view .LVU550
 513:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2529              		.loc 1 513 20 is_stmt 0 view .LVU551
 2530 01a0 2146     		mov	r1, r4
 2531 01a2 4548     		ldr	r0, .L198+64
 2532 01a4 FFF7FEFF 		bl	strcmp
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 72


 2533              	.LVL227:
 513:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2534              		.loc 1 513 19 discriminator 1 view .LVU552
 2535 01a8 70B9     		cbnz	r0, .L192
 517:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2536              		.loc 1 517 22 is_stmt 1 view .LVU553
 517:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2537              		.loc 1 517 25 is_stmt 0 view .LVU554
 2538 01aa 4449     		ldr	r1, .L198+68
 2539 01ac 3E48     		ldr	r0, .L198+48
 2540 01ae FFF7FEFF 		bl	strcmp
 2541              	.LVL228:
 517:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2542              		.loc 1 517 24 discriminator 1 view .LVU555
 2543 01b2 0028     		cmp	r0, #0
 2544 01b4 E3D0     		beq	.L168
 2545              	.LBB29:
 518:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2546              		.loc 1 518 19 is_stmt 1 view .LVU556
 2547 01b6 3C4C     		ldr	r4, .L198+48
 2548 01b8 2046     		mov	r0, r4
 2549 01ba FFF7FEFF 		bl	ProcessReceivedString
 2550              	.LVL229:
 519:Core/Src/main.c ****                 }
 2551              		.loc 1 519 19 view .LVU557
 2552 01be 2146     		mov	r1, r4
 2553 01c0 3E48     		ldr	r0, .L198+68
 2554 01c2 FFF7FEFF 		bl	strcpy
 2555              	.LVL230:
 2556 01c6 DAE7     		b	.L168
 2557              	.L192:
 2558              	.LBE29:
 2559              	.LBB30:
 514:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2560              		.loc 1 514 19 view .LVU558
 2561 01c8 2046     		mov	r0, r4
 2562 01ca FFF7FEFF 		bl	ProcessReceivedString
 2563              	.LVL231:
 515:Core/Src/main.c ****                 }
 2564              		.loc 1 515 19 view .LVU559
 2565 01ce 2146     		mov	r1, r4
 2566 01d0 3A48     		ldr	r0, .L198+68
 2567 01d2 FFF7FEFF 		bl	strcpy
 2568              	.LVL232:
 2569              	.LBE30:
 2570 01d6 D2E7     		b	.L168
 2571              	.LVL233:
 2572              	.L167:
 528:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2573              		.loc 1 528 13 view .LVU560
 528:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2574              		.loc 1 528 26 is_stmt 0 view .LVU561
 2575 01d8 2D4B     		ldr	r3, .L198+24
 2576 01da 0022     		movs	r2, #0
 2577 01dc 1A80     		strh	r2, [r3]	@ movhi
 529:Core/Src/main.c ****         }
 2578              		.loc 1 529 13 is_stmt 1 view .LVU562
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 73


 2579 01de 3348     		ldr	r0, .L198+52
 2580              	.LVL234:
 529:Core/Src/main.c ****         }
 2581              		.loc 1 529 13 is_stmt 0 view .LVU563
 2582 01e0 FFF7FEFF 		bl	puts
 2583              	.LVL235:
 2584 01e4 CBE7     		b	.L168
 2585              	.LVL236:
 2586              	.L185:
 537:Core/Src/main.c ****         {
 2587              		.loc 1 537 9 is_stmt 1 view .LVU564
 537:Core/Src/main.c ****         {
 2588              		.loc 1 537 26 is_stmt 0 view .LVU565
 2589 01e6 2A4B     		ldr	r3, .L198+24
 2590 01e8 1B88     		ldrh	r3, [r3]
 2591 01ea 9BB2     		uxth	r3, r3
 537:Core/Src/main.c ****         {
 2592              		.loc 1 537 12 view .LVU566
 2593 01ec FE2B     		cmp	r3, #254
 2594 01ee 3BD8     		bhi	.L171
 539:Core/Src/main.c **** 
 2595              		.loc 1 539 13 is_stmt 1 view .LVU567
 539:Core/Src/main.c **** 
 2596              		.loc 1 539 37 is_stmt 0 view .LVU568
 2597 01f0 2749     		ldr	r1, .L198+24
 2598 01f2 0B88     		ldrh	r3, [r1]
 2599 01f4 9BB2     		uxth	r3, r3
 2600 01f6 5A1C     		adds	r2, r3, #1
 2601 01f8 92B2     		uxth	r2, r2
 2602 01fa 0A80     		strh	r2, [r1]	@ movhi
 539:Core/Src/main.c **** 
 2603              		.loc 1 539 41 view .LVU569
 2604 01fc 3249     		ldr	r1, .L198+80
 2605 01fe 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2606 0200 D2B2     		uxtb	r2, r2
 2607 0202 2548     		ldr	r0, .L198+32
 2608              	.LVL237:
 539:Core/Src/main.c **** 
 2609              		.loc 1 539 41 view .LVU570
 2610 0204 C254     		strb	r2, [r0, r3]
 542:Core/Src/main.c ****             {
 2611              		.loc 1 542 13 is_stmt 1 view .LVU571
 542:Core/Src/main.c ****             {
 2612              		.loc 1 542 26 is_stmt 0 view .LVU572
 2613 0206 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2614 0208 DBB2     		uxtb	r3, r3
 542:Core/Src/main.c ****             {
 2615              		.loc 1 542 16 view .LVU573
 2616 020a 0A2B     		cmp	r3, #10
 2617 020c 05D0     		beq	.L193
 2618              	.L172:
 568:Core/Src/main.c **** 
 2619              		.loc 1 568 9 is_stmt 1 view .LVU574
 2620 020e 0122     		movs	r2, #1
 2621 0210 2D49     		ldr	r1, .L198+80
 2622 0212 2E48     		ldr	r0, .L198+84
 2623 0214 FFF7FEFF 		bl	HAL_UART_Receive_IT
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 74


 2624              	.LVL238:
 2625 0218 3EE7     		b	.L157
 2626              	.L193:
 544:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2627              		.loc 1 544 17 view .LVU575
 544:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2628              		.loc 1 544 28 is_stmt 0 view .LVU576
 2629 021a 1D4A     		ldr	r2, .L198+24
 2630 021c 1388     		ldrh	r3, [r2]
 2631 021e 9BB2     		uxth	r3, r3
 544:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2632              		.loc 1 544 43 view .LVU577
 2633 0220 0146     		mov	r1, r0
 2634 0222 0020     		movs	r0, #0
 2635 0224 C854     		strb	r0, [r1, r3]
 545:Core/Src/main.c **** 
 2636              		.loc 1 545 17 is_stmt 1 view .LVU578
 545:Core/Src/main.c **** 
 2637              		.loc 1 545 30 is_stmt 0 view .LVU579
 2638 0226 1080     		strh	r0, [r2]	@ movhi
 548:Core/Src/main.c **** 
 2639              		.loc 1 548 17 is_stmt 1 view .LVU580
 2640 0228 1F4C     		ldr	r4, .L198+48
 2641 022a 2046     		mov	r0, r4
 2642 022c FFF7FEFF 		bl	strcpy
 2643              	.LVL239:
 550:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2644              		.loc 1 550 17 view .LVU581
 550:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2645              		.loc 1 550 20 is_stmt 0 view .LVU582
 2646 0230 2146     		mov	r1, r4
 2647 0232 2148     		ldr	r0, .L198+64
 2648 0234 FFF7FEFF 		bl	strcmp
 2649              	.LVL240:
 550:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2650              		.loc 1 550 19 discriminator 1 view .LVU583
 2651 0238 70B9     		cbnz	r0, .L194
 554:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2652              		.loc 1 554 22 is_stmt 1 view .LVU584
 554:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2653              		.loc 1 554 25 is_stmt 0 view .LVU585
 2654 023a 2049     		ldr	r1, .L198+68
 2655 023c 1A48     		ldr	r0, .L198+48
 2656 023e FFF7FEFF 		bl	strcmp
 2657              	.LVL241:
 554:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2658              		.loc 1 554 24 discriminator 1 view .LVU586
 2659 0242 0028     		cmp	r0, #0
 2660 0244 E3D0     		beq	.L172
 2661              	.LBB31:
 555:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2662              		.loc 1 555 19 is_stmt 1 view .LVU587
 2663 0246 184C     		ldr	r4, .L198+48
 2664 0248 2046     		mov	r0, r4
 2665 024a FFF7FEFF 		bl	ProcessReceivedString
 2666              	.LVL242:
 556:Core/Src/main.c ****                 }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 75


 2667              		.loc 1 556 19 view .LVU588
 2668 024e 2146     		mov	r1, r4
 2669 0250 1A48     		ldr	r0, .L198+68
 2670 0252 FFF7FEFF 		bl	strcpy
 2671              	.LVL243:
 2672 0256 DAE7     		b	.L172
 2673              	.L194:
 2674              	.LBE31:
 2675              	.LBB32:
 551:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2676              		.loc 1 551 19 view .LVU589
 2677 0258 2046     		mov	r0, r4
 2678 025a FFF7FEFF 		bl	ProcessReceivedString
 2679              	.LVL244:
 552:Core/Src/main.c ****                 }
 2680              		.loc 1 552 19 view .LVU590
 2681 025e 2146     		mov	r1, r4
 2682 0260 1648     		ldr	r0, .L198+68
 2683 0262 FFF7FEFF 		bl	strcpy
 2684              	.LVL245:
 2685              	.LBE32:
 2686 0266 D2E7     		b	.L172
 2687              	.LVL246:
 2688              	.L171:
 565:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2689              		.loc 1 565 13 view .LVU591
 565:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2690              		.loc 1 565 26 is_stmt 0 view .LVU592
 2691 0268 094B     		ldr	r3, .L198+24
 2692 026a 0022     		movs	r2, #0
 2693 026c 1A80     		strh	r2, [r3]	@ movhi
 566:Core/Src/main.c ****         }
 2694              		.loc 1 566 13 is_stmt 1 view .LVU593
 2695 026e 0F48     		ldr	r0, .L198+52
 2696              	.LVL247:
 566:Core/Src/main.c ****         }
 2697              		.loc 1 566 13 is_stmt 0 view .LVU594
 2698 0270 FFF7FEFF 		bl	puts
 2699              	.LVL248:
 2700 0274 CBE7     		b	.L172
 2701              	.L199:
 2702 0276 00BF     		.align	2
 2703              	.L198:
 2704 0278 00100140 		.word	1073811456
 2705 027c 00140140 		.word	1073812480
 2706 0280 00440040 		.word	1073759232
 2707 0284 00480040 		.word	1073760256
 2708 0288 004C0040 		.word	1073761280
 2709 028c 00500040 		.word	1073762304
 2710 0290 00000000 		.word	buffer_index
 2711 0294 00000000 		.word	rx_byte5
 2712 0298 00000000 		.word	uart_buffer
 2713 029c 00000000 		.word	huart5
 2714 02a0 00000000 		.word	rx_byte
 2715 02a4 00000000 		.word	huart1
 2716 02a8 00000000 		.word	received_string
 2717 02ac 00000000 		.word	.LC45
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 76


 2718 02b0 00000000 		.word	rx_byte1
 2719 02b4 00000000 		.word	huart6
 2720 02b8 70010000 		.word	.LC29
 2721 02bc 00000000 		.word	previous_string
 2722 02c0 00000000 		.word	rx_byte2
 2723 02c4 00000000 		.word	huart2
 2724 02c8 00000000 		.word	rx_byte3
 2725 02cc 00000000 		.word	huart3
 2726              	.LVL249:
 2727              	.L186:
 574:Core/Src/main.c ****         {
 2728              		.loc 1 574 9 is_stmt 1 view .LVU595
 574:Core/Src/main.c ****         {
 2729              		.loc 1 574 26 is_stmt 0 view .LVU596
 2730 02d0 3B4B     		ldr	r3, .L200
 2731 02d2 1B88     		ldrh	r3, [r3]
 2732 02d4 9BB2     		uxth	r3, r3
 574:Core/Src/main.c ****         {
 2733              		.loc 1 574 12 view .LVU597
 2734 02d6 FE2B     		cmp	r3, #254
 2735 02d8 3BD8     		bhi	.L175
 576:Core/Src/main.c **** 
 2736              		.loc 1 576 13 is_stmt 1 view .LVU598
 576:Core/Src/main.c **** 
 2737              		.loc 1 576 37 is_stmt 0 view .LVU599
 2738 02da 3949     		ldr	r1, .L200
 2739 02dc 0B88     		ldrh	r3, [r1]
 2740 02de 9BB2     		uxth	r3, r3
 2741 02e0 5A1C     		adds	r2, r3, #1
 2742 02e2 92B2     		uxth	r2, r2
 2743 02e4 0A80     		strh	r2, [r1]	@ movhi
 576:Core/Src/main.c **** 
 2744              		.loc 1 576 41 view .LVU600
 2745 02e6 3749     		ldr	r1, .L200+4
 2746 02e8 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2747 02ea D2B2     		uxtb	r2, r2
 2748 02ec 3648     		ldr	r0, .L200+8
 2749              	.LVL250:
 576:Core/Src/main.c **** 
 2750              		.loc 1 576 41 view .LVU601
 2751 02ee C254     		strb	r2, [r0, r3]
 579:Core/Src/main.c ****             {
 2752              		.loc 1 579 13 is_stmt 1 view .LVU602
 579:Core/Src/main.c ****             {
 2753              		.loc 1 579 26 is_stmt 0 view .LVU603
 2754 02f0 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2755 02f2 DBB2     		uxtb	r3, r3
 579:Core/Src/main.c ****             {
 2756              		.loc 1 579 16 view .LVU604
 2757 02f4 0A2B     		cmp	r3, #10
 2758 02f6 05D0     		beq	.L195
 2759              	.L176:
 605:Core/Src/main.c **** 
 2760              		.loc 1 605 9 is_stmt 1 view .LVU605
 2761 02f8 0122     		movs	r2, #1
 2762 02fa 3249     		ldr	r1, .L200+4
 2763 02fc 3348     		ldr	r0, .L200+12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 77


 2764 02fe FFF7FEFF 		bl	HAL_UART_Receive_IT
 2765              	.LVL251:
 2766 0302 C9E6     		b	.L157
 2767              	.L195:
 581:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2768              		.loc 1 581 17 view .LVU606
 581:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2769              		.loc 1 581 28 is_stmt 0 view .LVU607
 2770 0304 2E4A     		ldr	r2, .L200
 2771 0306 1388     		ldrh	r3, [r2]
 2772 0308 9BB2     		uxth	r3, r3
 581:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2773              		.loc 1 581 43 view .LVU608
 2774 030a 0146     		mov	r1, r0
 2775 030c 0020     		movs	r0, #0
 2776 030e C854     		strb	r0, [r1, r3]
 582:Core/Src/main.c **** 
 2777              		.loc 1 582 17 is_stmt 1 view .LVU609
 582:Core/Src/main.c **** 
 2778              		.loc 1 582 30 is_stmt 0 view .LVU610
 2779 0310 1080     		strh	r0, [r2]	@ movhi
 585:Core/Src/main.c **** 
 2780              		.loc 1 585 17 is_stmt 1 view .LVU611
 2781 0312 2F4C     		ldr	r4, .L200+16
 2782 0314 2046     		mov	r0, r4
 2783 0316 FFF7FEFF 		bl	strcpy
 2784              	.LVL252:
 587:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2785              		.loc 1 587 17 view .LVU612
 587:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2786              		.loc 1 587 20 is_stmt 0 view .LVU613
 2787 031a 2146     		mov	r1, r4
 2788 031c 2D48     		ldr	r0, .L200+20
 2789 031e FFF7FEFF 		bl	strcmp
 2790              	.LVL253:
 587:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2791              		.loc 1 587 19 discriminator 1 view .LVU614
 2792 0322 70B9     		cbnz	r0, .L196
 591:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2793              		.loc 1 591 22 is_stmt 1 view .LVU615
 591:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2794              		.loc 1 591 25 is_stmt 0 view .LVU616
 2795 0324 2C49     		ldr	r1, .L200+24
 2796 0326 2A48     		ldr	r0, .L200+16
 2797 0328 FFF7FEFF 		bl	strcmp
 2798              	.LVL254:
 591:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2799              		.loc 1 591 24 discriminator 1 view .LVU617
 2800 032c 0028     		cmp	r0, #0
 2801 032e E3D0     		beq	.L176
 2802              	.LBB33:
 592:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2803              		.loc 1 592 19 is_stmt 1 view .LVU618
 2804 0330 274C     		ldr	r4, .L200+16
 2805 0332 2046     		mov	r0, r4
 2806 0334 FFF7FEFF 		bl	ProcessReceivedString
 2807              	.LVL255:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 78


 593:Core/Src/main.c ****                 }
 2808              		.loc 1 593 19 view .LVU619
 2809 0338 2146     		mov	r1, r4
 2810 033a 2748     		ldr	r0, .L200+24
 2811 033c FFF7FEFF 		bl	strcpy
 2812              	.LVL256:
 2813 0340 DAE7     		b	.L176
 2814              	.L196:
 2815              	.LBE33:
 2816              	.LBB34:
 588:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2817              		.loc 1 588 19 view .LVU620
 2818 0342 2046     		mov	r0, r4
 2819 0344 FFF7FEFF 		bl	ProcessReceivedString
 2820              	.LVL257:
 589:Core/Src/main.c ****                 }
 2821              		.loc 1 589 19 view .LVU621
 2822 0348 2146     		mov	r1, r4
 2823 034a 2348     		ldr	r0, .L200+24
 2824 034c FFF7FEFF 		bl	strcpy
 2825              	.LVL258:
 2826              	.LBE34:
 2827 0350 D2E7     		b	.L176
 2828              	.LVL259:
 2829              	.L175:
 602:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2830              		.loc 1 602 13 view .LVU622
 602:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2831              		.loc 1 602 26 is_stmt 0 view .LVU623
 2832 0352 1B4B     		ldr	r3, .L200
 2833 0354 0022     		movs	r2, #0
 2834 0356 1A80     		strh	r2, [r3]	@ movhi
 603:Core/Src/main.c ****         }
 2835              		.loc 1 603 13 is_stmt 1 view .LVU624
 2836 0358 2048     		ldr	r0, .L200+28
 2837              	.LVL260:
 603:Core/Src/main.c ****         }
 2838              		.loc 1 603 13 is_stmt 0 view .LVU625
 2839 035a FFF7FEFF 		bl	puts
 2840              	.LVL261:
 2841 035e CBE7     		b	.L176
 2842              	.L187:
 618:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2843              		.loc 1 618 17 is_stmt 1 view .LVU626
 618:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2844              		.loc 1 618 28 is_stmt 0 view .LVU627
 2845 0360 174A     		ldr	r2, .L200
 2846 0362 1388     		ldrh	r3, [r2]
 2847 0364 9BB2     		uxth	r3, r3
 618:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2848              		.loc 1 618 43 view .LVU628
 2849 0366 0146     		mov	r1, r0
 2850 0368 0020     		movs	r0, #0
 2851 036a C854     		strb	r0, [r1, r3]
 619:Core/Src/main.c **** 
 2852              		.loc 1 619 17 is_stmt 1 view .LVU629
 619:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 79


 2853              		.loc 1 619 30 is_stmt 0 view .LVU630
 2854 036c 1080     		strh	r0, [r2]	@ movhi
 622:Core/Src/main.c **** 
 2855              		.loc 1 622 17 is_stmt 1 view .LVU631
 2856 036e 184C     		ldr	r4, .L200+16
 2857 0370 2046     		mov	r0, r4
 2858 0372 FFF7FEFF 		bl	strcpy
 2859              	.LVL262:
 624:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2860              		.loc 1 624 17 view .LVU632
 624:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2861              		.loc 1 624 20 is_stmt 0 view .LVU633
 2862 0376 2146     		mov	r1, r4
 2863 0378 1648     		ldr	r0, .L200+20
 2864 037a FFF7FEFF 		bl	strcmp
 2865              	.LVL263:
 624:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2866              		.loc 1 624 19 discriminator 1 view .LVU634
 2867 037e 78B9     		cbnz	r0, .L197
 628:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2868              		.loc 1 628 22 is_stmt 1 view .LVU635
 628:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2869              		.loc 1 628 25 is_stmt 0 view .LVU636
 2870 0380 1549     		ldr	r1, .L200+24
 2871 0382 1348     		ldr	r0, .L200+16
 2872 0384 FFF7FEFF 		bl	strcmp
 2873              	.LVL264:
 628:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2874              		.loc 1 628 24 discriminator 1 view .LVU637
 2875 0388 0028     		cmp	r0, #0
 2876 038a 3FF466AE 		beq	.L179
 2877              	.LBB35:
 629:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2878              		.loc 1 629 19 is_stmt 1 view .LVU638
 2879 038e 104C     		ldr	r4, .L200+16
 2880 0390 2046     		mov	r0, r4
 2881 0392 FFF7FEFF 		bl	ProcessReceivedString
 2882              	.LVL265:
 630:Core/Src/main.c ****                 }
 2883              		.loc 1 630 19 view .LVU639
 2884 0396 2146     		mov	r1, r4
 2885 0398 0F48     		ldr	r0, .L200+24
 2886 039a FFF7FEFF 		bl	strcpy
 2887              	.LVL266:
 2888 039e 5CE6     		b	.L179
 2889              	.L197:
 2890              	.LBE35:
 2891              	.LBB36:
 625:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2892              		.loc 1 625 19 view .LVU640
 2893 03a0 2046     		mov	r0, r4
 2894 03a2 FFF7FEFF 		bl	ProcessReceivedString
 2895              	.LVL267:
 626:Core/Src/main.c ****                 }
 2896              		.loc 1 626 19 view .LVU641
 2897 03a6 2146     		mov	r1, r4
 2898 03a8 0B48     		ldr	r0, .L200+24
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 80


 2899 03aa FFF7FEFF 		bl	strcpy
 2900              	.LVL268:
 2901              	.LBE36:
 2902 03ae 54E6     		b	.L179
 2903              	.LVL269:
 2904              	.L178:
 639:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2905              		.loc 1 639 13 view .LVU642
 639:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2906              		.loc 1 639 26 is_stmt 0 view .LVU643
 2907 03b0 034B     		ldr	r3, .L200
 2908 03b2 0022     		movs	r2, #0
 2909 03b4 1A80     		strh	r2, [r3]	@ movhi
 640:Core/Src/main.c ****         }
 2910              		.loc 1 640 13 is_stmt 1 view .LVU644
 2911 03b6 0948     		ldr	r0, .L200+28
 2912              	.LVL270:
 640:Core/Src/main.c ****         }
 2913              		.loc 1 640 13 is_stmt 0 view .LVU645
 2914 03b8 FFF7FEFF 		bl	puts
 2915              	.LVL271:
 2916 03bc 4DE6     		b	.L179
 2917              	.L201:
 2918 03be 00BF     		.align	2
 2919              	.L200:
 2920 03c0 00000000 		.word	buffer_index
 2921 03c4 00000000 		.word	rx_byte4
 2922 03c8 00000000 		.word	uart_buffer
 2923 03cc 00000000 		.word	huart4
 2924 03d0 00000000 		.word	received_string
 2925 03d4 70010000 		.word	.LC29
 2926 03d8 00000000 		.word	previous_string
 2927 03dc 00000000 		.word	.LC45
 2928              		.cfi_endproc
 2929              	.LFE250:
 2931              		.section	.text.inject,"ax",%progbits
 2932              		.align	1
 2933              		.global	inject
 2934              		.syntax unified
 2935              		.thumb
 2936              		.thumb_func
 2938              	inject:
 2939              	.LVL272:
 2940              	.LFB264:
1039:Core/Src/main.c **** 
1040:Core/Src/main.c **** void inject(int direction, int adc) {
 2941              		.loc 1 1040 37 is_stmt 1 view -0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              		@ link register save eliminated.
1041:Core/Src/main.c ****   if (direction == INJECT) {
 2946              		.loc 1 1041 3 view .LVU647
 2947              		.loc 1 1041 6 is_stmt 0 view .LVU648
 2948 0000 0128     		cmp	r0, #1
 2949 0002 08D0     		beq	.L208
1042:Core/Src/main.c ****       if (adc > injectionLimit) {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 81


1043:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
1044:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);   // 25% duty cycle
1045:Core/Src/main.c ****       } else {
1046:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
1047:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
1048:Core/Src/main.c ****           injectFlag = STOP;
1049:Core/Src/main.c ****       }
1050:Core/Src/main.c ****   } else if (direction == RETRACT) {
 2950              		.loc 1 1050 10 is_stmt 1 view .LVU649
 2951              		.loc 1 1050 13 is_stmt 0 view .LVU650
 2952 0004 0228     		cmp	r0, #2
 2953 0006 1AD0     		beq	.L209
1051:Core/Src/main.c ****       if (adc < retractionLimit) {
1052:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
1053:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);       // 0% duty cycle
1054:Core/Src/main.c ****       } else {
1055:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
1056:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
1057:Core/Src/main.c ****           injectFlag = STOP;
1058:Core/Src/main.c ****       }
1059:Core/Src/main.c ****   } else if (direction == STOP) {
 2954              		.loc 1 1059 10 is_stmt 1 view .LVU651
 2955              		.loc 1 1059 13 is_stmt 0 view .LVU652
 2956 0008 20B9     		cbnz	r0, .L202
1060:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
 2957              		.loc 1 1060 7 is_stmt 1 view .LVU653
 2958 000a 174B     		ldr	r3, .L210
 2959 000c 1B68     		ldr	r3, [r3]
 2960 000e 0022     		movs	r2, #0
 2961 0010 5A63     		str	r2, [r3, #52]
1061:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 2962              		.loc 1 1061 7 view .LVU654
 2963 0012 9A63     		str	r2, [r3, #56]
 2964              	.L202:
1062:Core/Src/main.c ****   }
1063:Core/Src/main.c **** }
 2965              		.loc 1 1063 1 is_stmt 0 view .LVU655
 2966 0014 7047     		bx	lr
 2967              	.L208:
1042:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2968              		.loc 1 1042 7 is_stmt 1 view .LVU656
1042:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2969              		.loc 1 1042 15 is_stmt 0 view .LVU657
 2970 0016 154B     		ldr	r3, .L210+4
 2971 0018 1B68     		ldr	r3, [r3]
1042:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2972              		.loc 1 1042 10 view .LVU658
 2973 001a 8B42     		cmp	r3, r1
 2974 001c 07DA     		bge	.L204
1043:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);   // 25% duty cycle
 2975              		.loc 1 1043 11 is_stmt 1 view .LVU659
 2976 001e 124B     		ldr	r3, .L210
 2977 0020 1B68     		ldr	r3, [r3]
 2978 0022 0022     		movs	r2, #0
 2979 0024 5A63     		str	r2, [r3, #52]
1044:Core/Src/main.c ****       } else {
 2980              		.loc 1 1044 11 view .LVU660
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 82


 2981 0026 4FF48042 		mov	r2, #16384
 2982 002a 9A63     		str	r2, [r3, #56]
 2983 002c 7047     		bx	lr
 2984              	.L204:
1046:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 2985              		.loc 1 1046 11 view .LVU661
 2986 002e 0E4B     		ldr	r3, .L210
 2987 0030 1A68     		ldr	r2, [r3]
 2988 0032 0023     		movs	r3, #0
 2989 0034 5363     		str	r3, [r2, #52]
1047:Core/Src/main.c ****           injectFlag = STOP;
 2990              		.loc 1 1047 11 view .LVU662
 2991 0036 9363     		str	r3, [r2, #56]
1048:Core/Src/main.c ****       }
 2992              		.loc 1 1048 11 view .LVU663
1048:Core/Src/main.c ****       }
 2993              		.loc 1 1048 22 is_stmt 0 view .LVU664
 2994 0038 0D4A     		ldr	r2, .L210+8
 2995 003a 1360     		str	r3, [r2]
 2996 003c 7047     		bx	lr
 2997              	.L209:
1051:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 2998              		.loc 1 1051 7 is_stmt 1 view .LVU665
1051:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 2999              		.loc 1 1051 15 is_stmt 0 view .LVU666
 3000 003e 0D4B     		ldr	r3, .L210+12
 3001 0040 1B68     		ldr	r3, [r3]
1051:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 3002              		.loc 1 1051 10 view .LVU667
 3003 0042 8B42     		cmp	r3, r1
 3004 0044 07DD     		ble	.L207
1052:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);       // 0% duty cycle
 3005              		.loc 1 1052 11 is_stmt 1 view .LVU668
 3006 0046 084B     		ldr	r3, .L210
 3007 0048 1B68     		ldr	r3, [r3]
 3008 004a 4FF48042 		mov	r2, #16384
 3009 004e 5A63     		str	r2, [r3, #52]
1053:Core/Src/main.c ****       } else {
 3010              		.loc 1 1053 11 view .LVU669
 3011 0050 0022     		movs	r2, #0
 3012 0052 9A63     		str	r2, [r3, #56]
 3013 0054 7047     		bx	lr
 3014              	.L207:
1055:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 3015              		.loc 1 1055 11 view .LVU670
 3016 0056 044B     		ldr	r3, .L210
 3017 0058 1A68     		ldr	r2, [r3]
 3018 005a 0023     		movs	r3, #0
 3019 005c 5363     		str	r3, [r2, #52]
1056:Core/Src/main.c ****           injectFlag = STOP;
 3020              		.loc 1 1056 11 view .LVU671
 3021 005e 9363     		str	r3, [r2, #56]
1057:Core/Src/main.c ****       }
 3022              		.loc 1 1057 11 view .LVU672
1057:Core/Src/main.c ****       }
 3023              		.loc 1 1057 22 is_stmt 0 view .LVU673
 3024 0060 034A     		ldr	r2, .L210+8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 83


 3025 0062 1360     		str	r3, [r2]
 3026 0064 7047     		bx	lr
 3027              	.L211:
 3028 0066 00BF     		.align	2
 3029              	.L210:
 3030 0068 00000000 		.word	htim4
 3031 006c 00000000 		.word	injectionLimit
 3032 0070 00000000 		.word	injectFlag
 3033 0074 00000000 		.word	retractionLimit
 3034              		.cfi_endproc
 3035              	.LFE264:
 3037              		.section	.text.Error_Handler,"ax",%progbits
 3038              		.align	1
 3039              		.global	Error_Handler
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3044              	Error_Handler:
 3045              	.LFB265:
1064:Core/Src/main.c **** 
1065:Core/Src/main.c **** 
1066:Core/Src/main.c **** /* USER CODE END 4 */
1067:Core/Src/main.c **** 
1068:Core/Src/main.c **** /**
1069:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1070:Core/Src/main.c ****   * @retval None
1071:Core/Src/main.c ****   */
1072:Core/Src/main.c **** void Error_Handler(void)
1073:Core/Src/main.c **** {
 3046              		.loc 1 1073 1 is_stmt 1 view -0
 3047              		.cfi_startproc
 3048              		@ Volatile: function does not return.
 3049              		@ args = 0, pretend = 0, frame = 0
 3050              		@ frame_needed = 0, uses_anonymous_args = 0
 3051              		@ link register save eliminated.
1074:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1075:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1076:Core/Src/main.c ****   __disable_irq();
 3052              		.loc 1 1076 3 view .LVU675
 3053              	.LBB37:
 3054              	.LBI37:
 3055              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 84


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 85


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 86


 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 87


 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 88


 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 89


 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 90


 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 91


 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 92


 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 93


 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 94


 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 95


 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 96


 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 97


 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 98


 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 99


 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 100


 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3056              		.loc 2 960 27 view .LVU676
 3057              	.LBB38:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3058              		.loc 2 962 3 view .LVU677
 3059              		.syntax unified
 3060              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3061 0000 72B6     		cpsid i
 3062              	@ 0 "" 2
 3063              		.thumb
 3064              		.syntax unified
 3065              	.L213:
 3066              	.LBE38:
 3067              	.LBE37:
1077:Core/Src/main.c ****   while (1)
 3068              		.loc 1 1077 3 view .LVU678
1078:Core/Src/main.c ****   {
1079:Core/Src/main.c ****   }
 3069              		.loc 1 1079 3 view .LVU679
1077:Core/Src/main.c ****   while (1)
 3070              		.loc 1 1077 9 view .LVU680
 3071 0002 FEE7     		b	.L213
 3072              		.cfi_endproc
 3073              	.LFE265:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 101


 3075              		.section	.text.SystemClock_Config,"ax",%progbits
 3076              		.align	1
 3077              		.global	SystemClock_Config
 3078              		.syntax unified
 3079              		.thumb
 3080              		.thumb_func
 3082              	SystemClock_Config:
 3083              	.LFB243:
 327:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3084              		.loc 1 327 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 80
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088 0000 00B5     		push	{lr}
 3089              	.LCFI42:
 3090              		.cfi_def_cfa_offset 4
 3091              		.cfi_offset 14, -4
 3092 0002 95B0     		sub	sp, sp, #84
 3093              	.LCFI43:
 3094              		.cfi_def_cfa_offset 88
 328:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3095              		.loc 1 328 3 view .LVU682
 328:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3096              		.loc 1 328 22 is_stmt 0 view .LVU683
 3097 0004 3022     		movs	r2, #48
 3098 0006 0021     		movs	r1, #0
 3099 0008 08A8     		add	r0, sp, #32
 3100 000a FFF7FEFF 		bl	memset
 3101              	.LVL273:
 329:Core/Src/main.c **** 
 3102              		.loc 1 329 3 is_stmt 1 view .LVU684
 329:Core/Src/main.c **** 
 3103              		.loc 1 329 22 is_stmt 0 view .LVU685
 3104 000e 0023     		movs	r3, #0
 3105 0010 0393     		str	r3, [sp, #12]
 3106 0012 0493     		str	r3, [sp, #16]
 3107 0014 0593     		str	r3, [sp, #20]
 3108 0016 0693     		str	r3, [sp, #24]
 3109 0018 0793     		str	r3, [sp, #28]
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3110              		.loc 1 333 3 is_stmt 1 view .LVU686
 3111              	.LBB39:
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3112              		.loc 1 333 3 view .LVU687
 3113 001a 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3114              		.loc 1 333 3 view .LVU688
 3115 001c 204A     		ldr	r2, .L220
 3116 001e 116C     		ldr	r1, [r2, #64]
 3117 0020 41F08051 		orr	r1, r1, #268435456
 3118 0024 1164     		str	r1, [r2, #64]
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3119              		.loc 1 333 3 view .LVU689
 3120 0026 126C     		ldr	r2, [r2, #64]
 3121 0028 02F08052 		and	r2, r2, #268435456
 3122 002c 0192     		str	r2, [sp, #4]
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 102


 3123              		.loc 1 333 3 view .LVU690
 3124 002e 019A     		ldr	r2, [sp, #4]
 3125              	.LBE39:
 333:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3126              		.loc 1 333 3 view .LVU691
 334:Core/Src/main.c **** 
 3127              		.loc 1 334 3 view .LVU692
 3128              	.LBB40:
 334:Core/Src/main.c **** 
 3129              		.loc 1 334 3 view .LVU693
 3130 0030 0293     		str	r3, [sp, #8]
 334:Core/Src/main.c **** 
 3131              		.loc 1 334 3 view .LVU694
 3132 0032 1C4B     		ldr	r3, .L220+4
 3133 0034 1A68     		ldr	r2, [r3]
 3134 0036 42F48042 		orr	r2, r2, #16384
 3135 003a 1A60     		str	r2, [r3]
 334:Core/Src/main.c **** 
 3136              		.loc 1 334 3 view .LVU695
 3137 003c 1B68     		ldr	r3, [r3]
 3138 003e 03F48043 		and	r3, r3, #16384
 3139 0042 0293     		str	r3, [sp, #8]
 334:Core/Src/main.c **** 
 3140              		.loc 1 334 3 view .LVU696
 3141 0044 029B     		ldr	r3, [sp, #8]
 3142              	.LBE40:
 334:Core/Src/main.c **** 
 3143              		.loc 1 334 3 view .LVU697
 339:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3144              		.loc 1 339 3 view .LVU698
 339:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3145              		.loc 1 339 36 is_stmt 0 view .LVU699
 3146 0046 0123     		movs	r3, #1
 3147 0048 0893     		str	r3, [sp, #32]
 340:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3148              		.loc 1 340 3 is_stmt 1 view .LVU700
 340:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3149              		.loc 1 340 30 is_stmt 0 view .LVU701
 3150 004a 4FF48033 		mov	r3, #65536
 3151 004e 0993     		str	r3, [sp, #36]
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3152              		.loc 1 341 3 is_stmt 1 view .LVU702
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3153              		.loc 1 341 34 is_stmt 0 view .LVU703
 3154 0050 0223     		movs	r3, #2
 3155 0052 0E93     		str	r3, [sp, #56]
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3156              		.loc 1 342 3 is_stmt 1 view .LVU704
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3157              		.loc 1 342 35 is_stmt 0 view .LVU705
 3158 0054 4FF48002 		mov	r2, #4194304
 3159 0058 0F92     		str	r2, [sp, #60]
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 3160              		.loc 1 343 3 is_stmt 1 view .LVU706
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 3161              		.loc 1 343 30 is_stmt 0 view .LVU707
 3162 005a 0422     		movs	r2, #4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 103


 3163 005c 1092     		str	r2, [sp, #64]
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3164              		.loc 1 344 3 is_stmt 1 view .LVU708
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3165              		.loc 1 344 30 is_stmt 0 view .LVU709
 3166 005e A822     		movs	r2, #168
 3167 0060 1192     		str	r2, [sp, #68]
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 3168              		.loc 1 345 3 is_stmt 1 view .LVU710
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 3169              		.loc 1 345 30 is_stmt 0 view .LVU711
 3170 0062 1293     		str	r3, [sp, #72]
 346:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3171              		.loc 1 346 3 is_stmt 1 view .LVU712
 346:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3172              		.loc 1 346 30 is_stmt 0 view .LVU713
 3173 0064 0723     		movs	r3, #7
 3174 0066 1393     		str	r3, [sp, #76]
 347:Core/Src/main.c ****   {
 3175              		.loc 1 347 3 is_stmt 1 view .LVU714
 347:Core/Src/main.c ****   {
 3176              		.loc 1 347 7 is_stmt 0 view .LVU715
 3177 0068 08A8     		add	r0, sp, #32
 3178 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 3179              	.LVL274:
 347:Core/Src/main.c ****   {
 3180              		.loc 1 347 6 discriminator 1 view .LVU716
 3181 006e 98B9     		cbnz	r0, .L218
 354:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3182              		.loc 1 354 3 is_stmt 1 view .LVU717
 354:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3183              		.loc 1 354 31 is_stmt 0 view .LVU718
 3184 0070 0F23     		movs	r3, #15
 3185 0072 0393     		str	r3, [sp, #12]
 356:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3186              		.loc 1 356 3 is_stmt 1 view .LVU719
 356:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3187              		.loc 1 356 34 is_stmt 0 view .LVU720
 3188 0074 0223     		movs	r3, #2
 3189 0076 0493     		str	r3, [sp, #16]
 357:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3190              		.loc 1 357 3 is_stmt 1 view .LVU721
 357:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3191              		.loc 1 357 35 is_stmt 0 view .LVU722
 3192 0078 0023     		movs	r3, #0
 3193 007a 0593     		str	r3, [sp, #20]
 358:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3194              		.loc 1 358 3 is_stmt 1 view .LVU723
 358:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3195              		.loc 1 358 36 is_stmt 0 view .LVU724
 3196 007c 4FF4A053 		mov	r3, #5120
 3197 0080 0693     		str	r3, [sp, #24]
 359:Core/Src/main.c **** 
 3198              		.loc 1 359 3 is_stmt 1 view .LVU725
 359:Core/Src/main.c **** 
 3199              		.loc 1 359 36 is_stmt 0 view .LVU726
 3200 0082 4FF48053 		mov	r3, #4096
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 104


 3201 0086 0793     		str	r3, [sp, #28]
 361:Core/Src/main.c ****   {
 3202              		.loc 1 361 3 is_stmt 1 view .LVU727
 361:Core/Src/main.c ****   {
 3203              		.loc 1 361 7 is_stmt 0 view .LVU728
 3204 0088 0521     		movs	r1, #5
 3205 008a 03A8     		add	r0, sp, #12
 3206 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3207              	.LVL275:
 361:Core/Src/main.c ****   {
 3208              		.loc 1 361 6 discriminator 1 view .LVU729
 3209 0090 20B9     		cbnz	r0, .L219
 365:Core/Src/main.c **** 
 3210              		.loc 1 365 1 view .LVU730
 3211 0092 15B0     		add	sp, sp, #84
 3212              	.LCFI44:
 3213              		.cfi_remember_state
 3214              		.cfi_def_cfa_offset 4
 3215              		@ sp needed
 3216 0094 5DF804FB 		ldr	pc, [sp], #4
 3217              	.L218:
 3218              	.LCFI45:
 3219              		.cfi_restore_state
 349:Core/Src/main.c ****   }
 3220              		.loc 1 349 5 is_stmt 1 view .LVU731
 3221 0098 FFF7FEFF 		bl	Error_Handler
 3222              	.LVL276:
 3223              	.L219:
 363:Core/Src/main.c ****   }
 3224              		.loc 1 363 5 view .LVU732
 3225 009c FFF7FEFF 		bl	Error_Handler
 3226              	.LVL277:
 3227              	.L221:
 3228              		.align	2
 3229              	.L220:
 3230 00a0 00380240 		.word	1073887232
 3231 00a4 00700040 		.word	1073770496
 3232              		.cfi_endproc
 3233              	.LFE243:
 3235              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3236              		.align	2
 3237              	.LC46:
 3238 0000 53797374 		.ascii	"System Initialized\015\000"
 3238      656D2049 
 3238      6E697469 
 3238      616C697A 
 3238      65640D00 
 3239              		.section	.text.main,"ax",%progbits
 3240              		.align	1
 3241              		.global	main
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3246              	main:
 3247              	.LFB242:
 201:Core/Src/main.c **** 
 3248              		.loc 1 201 1 view -0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 105


 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 0
 3251              		@ frame_needed = 0, uses_anonymous_args = 0
 3252 0000 70B5     		push	{r4, r5, r6, lr}
 3253              	.LCFI46:
 3254              		.cfi_def_cfa_offset 16
 3255              		.cfi_offset 4, -16
 3256              		.cfi_offset 5, -12
 3257              		.cfi_offset 6, -8
 3258              		.cfi_offset 14, -4
 210:Core/Src/main.c **** 
 3259              		.loc 1 210 3 view .LVU734
 3260 0002 FFF7FEFF 		bl	HAL_Init
 3261              	.LVL278:
 217:Core/Src/main.c **** 
 3262              		.loc 1 217 3 view .LVU735
 3263 0006 FFF7FEFF 		bl	SystemClock_Config
 3264              	.LVL279:
 224:Core/Src/main.c ****   MX_ADC1_Init();
 3265              		.loc 1 224 3 view .LVU736
 3266 000a FFF7FEFF 		bl	MX_GPIO_Init
 3267              	.LVL280:
 225:Core/Src/main.c ****   MX_I2C1_Init();
 3268              		.loc 1 225 3 view .LVU737
 3269 000e FFF7FEFF 		bl	MX_ADC1_Init
 3270              	.LVL281:
 226:Core/Src/main.c ****   MX_TIM1_Init();
 3271              		.loc 1 226 3 view .LVU738
 3272 0012 FFF7FEFF 		bl	MX_I2C1_Init
 3273              	.LVL282:
 227:Core/Src/main.c ****   MX_TIM2_Init();
 3274              		.loc 1 227 3 view .LVU739
 3275 0016 FFF7FEFF 		bl	MX_TIM1_Init
 3276              	.LVL283:
 228:Core/Src/main.c ****   MX_UART4_Init();
 3277              		.loc 1 228 3 view .LVU740
 3278 001a FFF7FEFF 		bl	MX_TIM2_Init
 3279              	.LVL284:
 229:Core/Src/main.c ****   MX_UART5_Init();
 3280              		.loc 1 229 3 view .LVU741
 3281 001e FFF7FEFF 		bl	MX_UART4_Init
 3282              	.LVL285:
 230:Core/Src/main.c ****   MX_USART1_UART_Init();
 3283              		.loc 1 230 3 view .LVU742
 3284 0022 FFF7FEFF 		bl	MX_UART5_Init
 3285              	.LVL286:
 231:Core/Src/main.c ****   MX_USART2_UART_Init();
 3286              		.loc 1 231 3 view .LVU743
 3287 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 3288              	.LVL287:
 232:Core/Src/main.c ****   MX_USART3_UART_Init();
 3289              		.loc 1 232 3 view .LVU744
 3290 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 3291              	.LVL288:
 233:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 3292              		.loc 1 233 3 view .LVU745
 3293 002e FFF7FEFF 		bl	MX_USART3_UART_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 106


 3294              	.LVL289:
 234:Core/Src/main.c ****   MX_TIM4_Init();
 3295              		.loc 1 234 3 view .LVU746
 3296 0032 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 3297              	.LVL290:
 235:Core/Src/main.c ****   MX_TIM3_Init();
 3298              		.loc 1 235 3 view .LVU747
 3299 0036 FFF7FEFF 		bl	MX_TIM4_Init
 3300              	.LVL291:
 236:Core/Src/main.c ****   MX_USART6_UART_Init();
 3301              		.loc 1 236 3 view .LVU748
 3302 003a FFF7FEFF 		bl	MX_TIM3_Init
 3303              	.LVL292:
 237:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3304              		.loc 1 237 3 view .LVU749
 3305 003e FFF7FEFF 		bl	MX_USART6_UART_Init
 3306              	.LVL293:
 241:Core/Src/main.c **** 
 3307              		.loc 1 241 3 view .LVU750
 3308 0042 4748     		ldr	r0, .L230
 3309 0044 FFF7FEFF 		bl	puts
 3310              	.LVL294:
 243:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 3311              		.loc 1 243 3 view .LVU751
 3312 0048 464C     		ldr	r4, .L230+4
 3313 004a 0021     		movs	r1, #0
 3314 004c 2046     		mov	r0, r4
 3315 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3316              	.LVL295:
 244:Core/Src/main.c **** 
 3317              		.loc 1 244 3 view .LVU752
 3318 0052 0421     		movs	r1, #4
 3319 0054 2046     		mov	r0, r4
 3320 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3321              	.LVL296:
 246:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 3322              		.loc 1 246 3 view .LVU753
 3323 005a 2368     		ldr	r3, [r4]
 3324 005c 0022     		movs	r2, #0
 3325 005e 5A63     		str	r2, [r3, #52]
 247:Core/Src/main.c **** 
 3326              		.loc 1 247 3 view .LVU754
 3327 0060 9A63     		str	r2, [r3, #56]
 249:Core/Src/main.c **** 
 3328              		.loc 1 249 3 view .LVU755
 249:Core/Src/main.c **** 
 3329              		.loc 1 249 23 is_stmt 0 view .LVU756
 3330 0062 FFF7FEFF 		bl	Read_ADC_PA0
 3331              	.LVL297:
 253:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 3332              		.loc 1 253 3 is_stmt 1 view .LVU757
 3333 0066 0122     		movs	r2, #1
 3334 0068 3F49     		ldr	r1, .L230+8
 3335 006a 4048     		ldr	r0, .L230+12
 3336 006c FFF7FEFF 		bl	HAL_UART_Receive_IT
 3337              	.LVL298:
 254:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 107


 3338              		.loc 1 254 3 view .LVU758
 3339 0070 0122     		movs	r2, #1
 3340 0072 3F49     		ldr	r1, .L230+16
 3341 0074 3F48     		ldr	r0, .L230+20
 3342 0076 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3343              	.LVL299:
 255:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 3344              		.loc 1 255 3 view .LVU759
 3345 007a 0122     		movs	r2, #1
 3346 007c 3E49     		ldr	r1, .L230+24
 3347 007e 3F48     		ldr	r0, .L230+28
 3348 0080 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3349              	.LVL300:
 256:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 3350              		.loc 1 256 3 view .LVU760
 3351 0084 0122     		movs	r2, #1
 3352 0086 3E49     		ldr	r1, .L230+32
 3353 0088 3E48     		ldr	r0, .L230+36
 3354 008a FFF7FEFF 		bl	HAL_UART_Receive_IT
 3355              	.LVL301:
 257:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 3356              		.loc 1 257 3 view .LVU761
 3357 008e 0122     		movs	r2, #1
 3358 0090 3D49     		ldr	r1, .L230+40
 3359 0092 3E48     		ldr	r0, .L230+44
 3360 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3361              	.LVL302:
 258:Core/Src/main.c **** 
 3362              		.loc 1 258 3 view .LVU762
 3363 0098 0122     		movs	r2, #1
 3364 009a 3D49     		ldr	r1, .L230+48
 3365 009c 3D48     		ldr	r0, .L230+52
 3366 009e FFF7FEFF 		bl	HAL_UART_Receive_IT
 3367              	.LVL303:
 3368 00a2 3AE0     		b	.L223
 3369              	.LVL304:
 3370              	.L229:
 3371              	.LBB41:
 3372              	.LBB42:
 277:Core/Src/main.c ****             buttonPressTime = HAL_GetTick(); // Record the press time
 3373              		.loc 1 277 13 view .LVU763
 277:Core/Src/main.c ****             buttonPressTime = HAL_GetTick(); // Record the press time
 3374              		.loc 1 277 24 is_stmt 0 view .LVU764
 3375 00a4 3C4B     		ldr	r3, .L230+56
 3376 00a6 0122     		movs	r2, #1
 3377 00a8 1A60     		str	r2, [r3]
 278:Core/Src/main.c ****             injectFlag = RETRACT; 
 3378              		.loc 1 278 13 is_stmt 1 view .LVU765
 278:Core/Src/main.c ****             injectFlag = RETRACT; 
 3379              		.loc 1 278 31 is_stmt 0 view .LVU766
 3380 00aa FFF7FEFF 		bl	HAL_GetTick
 3381              	.LVL305:
 278:Core/Src/main.c ****             injectFlag = RETRACT; 
 3382              		.loc 1 278 29 discriminator 1 view .LVU767
 3383 00ae 3B4B     		ldr	r3, .L230+60
 3384 00b0 1860     		str	r0, [r3]
 279:Core/Src/main.c ****             inject(RETRACT, adcValue);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 108


 3385              		.loc 1 279 13 is_stmt 1 view .LVU768
 279:Core/Src/main.c ****             inject(RETRACT, adcValue);
 3386              		.loc 1 279 24 is_stmt 0 view .LVU769
 3387 00b2 0220     		movs	r0, #2
 3388 00b4 3A4B     		ldr	r3, .L230+64
 3389 00b6 1860     		str	r0, [r3]
 280:Core/Src/main.c ****         } 
 3390              		.loc 1 280 13 is_stmt 1 view .LVU770
 3391 00b8 2146     		mov	r1, r4
 3392 00ba FFF7FEFF 		bl	inject
 3393              	.LVL306:
 3394 00be 3FE0     		b	.L225
 3395              	.L224:
 3396              	.LBE42:
 3397              	.LBB43:
 289:Core/Src/main.c ****         buttonPressTime = 0; // Reset timer
 3398              		.loc 1 289 9 view .LVU771
 289:Core/Src/main.c ****         buttonPressTime = 0; // Reset timer
 3399              		.loc 1 289 20 is_stmt 0 view .LVU772
 3400 00c0 0026     		movs	r6, #0
 3401 00c2 354B     		ldr	r3, .L230+56
 3402 00c4 1E60     		str	r6, [r3]
 290:Core/Src/main.c ****         uint32_t lastMillis = HAL_GetTick(); // Start the delay timer
 3403              		.loc 1 290 9 is_stmt 1 view .LVU773
 290:Core/Src/main.c ****         uint32_t lastMillis = HAL_GetTick(); // Start the delay timer
 3404              		.loc 1 290 25 is_stmt 0 view .LVU774
 3405 00c6 354B     		ldr	r3, .L230+60
 3406 00c8 1E60     		str	r6, [r3]
 291:Core/Src/main.c **** 
 3407              		.loc 1 291 9 is_stmt 1 view .LVU775
 291:Core/Src/main.c **** 
 3408              		.loc 1 291 31 is_stmt 0 view .LVU776
 3409 00ca FFF7FEFF 		bl	HAL_GetTick
 3410              	.LVL307:
 3411 00ce 0546     		mov	r5, r0
 3412              	.LVL308:
 294:Core/Src/main.c ****         Joint1Set(joint1);
 3413              		.loc 1 294 9 is_stmt 1 view .LVU777
 294:Core/Src/main.c ****         Joint1Set(joint1);
 3414              		.loc 1 294 16 is_stmt 0 view .LVU778
 3415 00d0 344B     		ldr	r3, .L230+68
 3416 00d2 1E60     		str	r6, [r3]
 295:Core/Src/main.c **** 
 3417              		.loc 1 295 9 is_stmt 1 view .LVU779
 3418 00d4 3046     		mov	r0, r6
 3419              	.LVL309:
 295:Core/Src/main.c **** 
 3420              		.loc 1 295 9 is_stmt 0 view .LVU780
 3421 00d6 FFF7FEFF 		bl	Joint1Set
 3422              	.LVL310:
 297:Core/Src/main.c ****         Joint2Set(joint2);
 3423              		.loc 1 297 9 is_stmt 1 view .LVU781
 297:Core/Src/main.c ****         Joint2Set(joint2);
 3424              		.loc 1 297 16 is_stmt 0 view .LVU782
 3425 00da 5A20     		movs	r0, #90
 3426 00dc 324B     		ldr	r3, .L230+72
 3427 00de 1860     		str	r0, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 109


 298:Core/Src/main.c **** 
 3428              		.loc 1 298 9 is_stmt 1 view .LVU783
 3429 00e0 FFF7FEFF 		bl	Joint2Set
 3430              	.LVL311:
 301:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 3431              		.loc 1 301 9 view .LVU784
 3432              	.L227:
 303:Core/Src/main.c **** 
 3433              		.loc 1 303 9 view .LVU785
 301:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 3434              		.loc 1 301 43 discriminator 1 view .LVU786
 301:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 3435              		.loc 1 301 16 is_stmt 0 discriminator 1 view .LVU787
 3436 00e4 FFF7FEFF 		bl	HAL_GetTick
 3437              	.LVL312:
 301:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 3438              		.loc 1 301 30 discriminator 1 view .LVU788
 3439 00e8 431B     		subs	r3, r0, r5
 301:Core/Src/main.c ****             // Loop here doing nothing but waiting for 1 second.
 3440              		.loc 1 301 43 discriminator 1 view .LVU789
 3441 00ea B3F57A7F 		cmp	r3, #1000
 3442 00ee F9D3     		bcc	.L227
 306:Core/Src/main.c ****         Joint3Set(joint3);
 3443              		.loc 1 306 9 is_stmt 1 view .LVU790
 306:Core/Src/main.c ****         Joint3Set(joint3);
 3444              		.loc 1 306 16 is_stmt 0 view .LVU791
 3445 00f0 B420     		movs	r0, #180
 3446 00f2 2E4B     		ldr	r3, .L230+76
 3447 00f4 1860     		str	r0, [r3]
 307:Core/Src/main.c ****         joint4 = JOINT4_HOME;
 3448              		.loc 1 307 9 is_stmt 1 view .LVU792
 3449 00f6 FFF7FEFF 		bl	Joint3Set
 3450              	.LVL313:
 308:Core/Src/main.c ****         Joint4Set(joint4);
 3451              		.loc 1 308 9 view .LVU793
 308:Core/Src/main.c ****         Joint4Set(joint4);
 3452              		.loc 1 308 16 is_stmt 0 view .LVU794
 3453 00fa 0020     		movs	r0, #0
 3454 00fc 2C4B     		ldr	r3, .L230+80
 3455 00fe 1860     		str	r0, [r3]
 309:Core/Src/main.c ****         joint5 = JOINT5_HOME;
 3456              		.loc 1 309 9 is_stmt 1 view .LVU795
 3457 0100 FFF7FEFF 		bl	Joint4Set
 3458              	.LVL314:
 310:Core/Src/main.c ****         Joint5Set(joint5);
 3459              		.loc 1 310 9 view .LVU796
 310:Core/Src/main.c ****         Joint5Set(joint5);
 3460              		.loc 1 310 16 is_stmt 0 view .LVU797
 3461 0104 2820     		movs	r0, #40
 3462 0106 2B4B     		ldr	r3, .L230+84
 3463 0108 1860     		str	r0, [r3]
 311:Core/Src/main.c ****         
 3464              		.loc 1 311 9 is_stmt 1 view .LVU798
 3465 010a FFF7FEFF 		bl	Joint5Set
 3466              	.LVL315:
 313:Core/Src/main.c ****         inject(RETRACT, adcValue);  // Retract command
 3467              		.loc 1 313 9 view .LVU799
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 110


 313:Core/Src/main.c ****         inject(RETRACT, adcValue);  // Retract command
 3468              		.loc 1 313 20 is_stmt 0 view .LVU800
 3469 010e 0220     		movs	r0, #2
 3470 0110 234B     		ldr	r3, .L230+64
 3471 0112 1860     		str	r0, [r3]
 314:Core/Src/main.c ****         
 3472              		.loc 1 314 9 is_stmt 1 view .LVU801
 3473 0114 2146     		mov	r1, r4
 3474 0116 FFF7FEFF 		bl	inject
 3475              	.LVL316:
 3476              	.L223:
 314:Core/Src/main.c ****         
 3477              		.loc 1 314 9 is_stmt 0 view .LVU802
 3478              	.LBE43:
 3479              	.LBE41:
 265:Core/Src/main.c ****     /* USER CODE END WHILE */
 3480              		.loc 1 265 3 is_stmt 1 view .LVU803
 3481              	.LBB45:
 269:Core/Src/main.c ****     HAL_Delay(1);
 3482              		.loc 1 269 5 view .LVU804
 269:Core/Src/main.c ****     HAL_Delay(1);
 3483              		.loc 1 269 25 is_stmt 0 view .LVU805
 3484 011a FFF7FEFF 		bl	Read_ADC_PA0
 3485              	.LVL317:
 3486 011e 0446     		mov	r4, r0
 3487              	.LVL318:
 270:Core/Src/main.c **** 
 3488              		.loc 1 270 5 is_stmt 1 view .LVU806
 3489 0120 0120     		movs	r0, #1
 3490 0122 FFF7FEFF 		bl	HAL_Delay
 3491              	.LVL319:
 273:Core/Src/main.c ****         injectSequence();
 3492              		.loc 1 273 5 view .LVU807
 273:Core/Src/main.c ****         injectSequence();
 3493              		.loc 1 273 10 is_stmt 0 view .LVU808
 3494 0126 4FF48051 		mov	r1, #4096
 3495 012a 2348     		ldr	r0, .L230+88
 3496 012c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3497              	.LVL320:
 273:Core/Src/main.c ****         injectSequence();
 3498              		.loc 1 273 8 discriminator 1 view .LVU809
 3499 0130 0028     		cmp	r0, #0
 3500 0132 C5D1     		bne	.L224
 3501              	.LBB44:
 274:Core/Src/main.c **** 
 3502              		.loc 1 274 9 is_stmt 1 view .LVU810
 3503 0134 FFF7FEFF 		bl	injectSequence
 3504              	.LVL321:
 276:Core/Src/main.c ****             buttonHeld = 1; 
 3505              		.loc 1 276 9 view .LVU811
 276:Core/Src/main.c ****             buttonHeld = 1; 
 3506              		.loc 1 276 13 is_stmt 0 view .LVU812
 3507 0138 174B     		ldr	r3, .L230+56
 3508 013a 1B68     		ldr	r3, [r3]
 276:Core/Src/main.c ****             buttonHeld = 1; 
 3509              		.loc 1 276 12 view .LVU813
 3510 013c 002B     		cmp	r3, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 111


 3511 013e B1D0     		beq	.L229
 3512              	.L225:
 283:Core/Src/main.c ****             injectFlag = INJECT; 
 3513              		.loc 1 283 9 is_stmt 1 view .LVU814
 283:Core/Src/main.c ****             injectFlag = INJECT; 
 3514              		.loc 1 283 13 is_stmt 0 view .LVU815
 3515 0140 FFF7FEFF 		bl	HAL_GetTick
 3516              	.LVL322:
 283:Core/Src/main.c ****             injectFlag = INJECT; 
 3517              		.loc 1 283 27 discriminator 1 view .LVU816
 3518 0144 154B     		ldr	r3, .L230+60
 3519 0146 1B68     		ldr	r3, [r3]
 3520 0148 C31A     		subs	r3, r0, r3
 283:Core/Src/main.c ****             injectFlag = INJECT; 
 3521              		.loc 1 283 12 discriminator 1 view .LVU817
 3522 014a 41F29312 		movw	r2, #4499
 3523 014e 9342     		cmp	r3, r2
 3524 0150 E3D9     		bls	.L223
 284:Core/Src/main.c ****             inject(INJECT, adcValue);
 3525              		.loc 1 284 13 is_stmt 1 view .LVU818
 284:Core/Src/main.c ****             inject(INJECT, adcValue);
 3526              		.loc 1 284 24 is_stmt 0 view .LVU819
 3527 0152 0120     		movs	r0, #1
 3528 0154 124B     		ldr	r3, .L230+64
 3529 0156 1860     		str	r0, [r3]
 285:Core/Src/main.c ****         }
 3530              		.loc 1 285 13 is_stmt 1 view .LVU820
 3531 0158 2146     		mov	r1, r4
 3532 015a FFF7FEFF 		bl	inject
 3533              	.LVL323:
 3534 015e DCE7     		b	.L223
 3535              	.L231:
 3536              		.align	2
 3537              	.L230:
 3538 0160 00000000 		.word	.LC46
 3539 0164 00000000 		.word	htim4
 3540 0168 00000000 		.word	rx_byte
 3541 016c 00000000 		.word	huart1
 3542 0170 00000000 		.word	rx_byte1
 3543 0174 00000000 		.word	huart6
 3544 0178 00000000 		.word	rx_byte2
 3545 017c 00000000 		.word	huart2
 3546 0180 00000000 		.word	rx_byte3
 3547 0184 00000000 		.word	huart3
 3548 0188 00000000 		.word	rx_byte4
 3549 018c 00000000 		.word	huart4
 3550 0190 00000000 		.word	rx_byte5
 3551 0194 00000000 		.word	huart5
 3552 0198 00000000 		.word	buttonHeld
 3553 019c 00000000 		.word	buttonPressTime
 3554 01a0 00000000 		.word	injectFlag
 3555 01a4 00000000 		.word	joint1
 3556 01a8 00000000 		.word	joint2
 3557 01ac 00000000 		.word	joint3
 3558 01b0 00000000 		.word	joint4
 3559 01b4 00000000 		.word	joint5
 3560 01b8 00040240 		.word	1073873920
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 112


 3561              	.LBE44:
 3562              	.LBE45:
 3563              		.cfi_endproc
 3564              	.LFE242:
 3566              		.section	.bss.lastMillis.0,"aw",%nobits
 3567              		.align	2
 3570              	lastMillis.0:
 3571 0000 00000000 		.space	4
 3572              		.section	.bss.step.1,"aw",%nobits
 3575              	step.1:
 3576 0000 00       		.space	1
 3577              		.global	buttonHeld
 3578              		.section	.bss.buttonHeld,"aw",%nobits
 3579              		.align	2
 3582              	buttonHeld:
 3583 0000 00000000 		.space	4
 3584              		.global	buttonPressTime
 3585              		.section	.bss.buttonPressTime,"aw",%nobits
 3586              		.align	2
 3589              	buttonPressTime:
 3590 0000 00000000 		.space	4
 3591              		.global	prev_actuator
 3592              		.section	.bss.prev_actuator,"aw",%nobits
 3593              		.align	2
 3596              	prev_actuator:
 3597 0000 00000000 		.space	4
 3598              		.global	prev_joint5
 3599              		.section	.bss.prev_joint5,"aw",%nobits
 3600              		.align	2
 3603              	prev_joint5:
 3604 0000 00000000 		.space	4
 3605              		.global	prev_joint4
 3606              		.section	.bss.prev_joint4,"aw",%nobits
 3607              		.align	2
 3610              	prev_joint4:
 3611 0000 00000000 		.space	4
 3612              		.global	prev_joint3
 3613              		.section	.bss.prev_joint3,"aw",%nobits
 3614              		.align	2
 3617              	prev_joint3:
 3618 0000 00000000 		.space	4
 3619              		.global	prev_joint2
 3620              		.section	.bss.prev_joint2,"aw",%nobits
 3621              		.align	2
 3624              	prev_joint2:
 3625 0000 00000000 		.space	4
 3626              		.global	prev_joint1
 3627              		.section	.bss.prev_joint1,"aw",%nobits
 3628              		.align	2
 3631              	prev_joint1:
 3632 0000 00000000 		.space	4
 3633              		.global	retractionLimit
 3634              		.section	.data.retractionLimit,"aw"
 3635              		.align	2
 3638              	retractionLimit:
 3639 0000 D20F0000 		.word	4050
 3640              		.global	injectionLimit
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 113


 3641              		.section	.data.injectionLimit,"aw"
 3642              		.align	2
 3645              	injectionLimit:
 3646 0000 280A0000 		.word	2600
 3647              		.global	footPedalFlag
 3648              		.section	.bss.footPedalFlag,"aw",%nobits
 3651              	footPedalFlag:
 3652 0000 00       		.space	1
 3653              		.global	buttonState
 3654              		.section	.bss.buttonState,"aw",%nobits
 3657              	buttonState:
 3658 0000 00       		.space	1
 3659              		.global	injectFlag
 3660              		.section	.data.injectFlag,"aw"
 3661              		.align	2
 3664              	injectFlag:
 3665 0000 02000000 		.word	2
 3666              		.global	ledFlag
 3667              		.section	.bss.ledFlag,"aw",%nobits
 3668              		.align	2
 3671              	ledFlag:
 3672 0000 00000000 		.space	4
 3673              		.global	actuator
 3674              		.section	.bss.actuator,"aw",%nobits
 3675              		.align	2
 3678              	actuator:
 3679 0000 00000000 		.space	4
 3680              		.global	joint5
 3681              		.section	.data.joint5,"aw"
 3682              		.align	2
 3685              	joint5:
 3686 0000 28000000 		.word	40
 3687              		.global	joint4
 3688              		.section	.bss.joint4,"aw",%nobits
 3689              		.align	2
 3692              	joint4:
 3693 0000 00000000 		.space	4
 3694              		.global	joint3
 3695              		.section	.data.joint3,"aw"
 3696              		.align	2
 3699              	joint3:
 3700 0000 B4000000 		.word	180
 3701              		.global	joint2
 3702              		.section	.data.joint2,"aw"
 3703              		.align	2
 3706              	joint2:
 3707 0000 5A000000 		.word	90
 3708              		.global	joint1
 3709              		.section	.bss.joint1,"aw",%nobits
 3710              		.align	2
 3713              	joint1:
 3714 0000 00000000 		.space	4
 3715              		.global	previous_string
 3716              		.section	.bss.previous_string,"aw",%nobits
 3717              		.align	2
 3720              	previous_string:
 3721 0000 00000000 		.space	256
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 114


 3721      00000000 
 3721      00000000 
 3721      00000000 
 3721      00000000 
 3722              		.global	received_string
 3723              		.section	.bss.received_string,"aw",%nobits
 3724              		.align	2
 3727              	received_string:
 3728 0000 00000000 		.space	256
 3728      00000000 
 3728      00000000 
 3728      00000000 
 3728      00000000 
 3729              		.global	uart_received
 3730              		.section	.bss.uart_received,"aw",%nobits
 3733              	uart_received:
 3734 0000 00       		.space	1
 3735              		.global	buffer_index
 3736              		.section	.bss.buffer_index,"aw",%nobits
 3737              		.align	1
 3740              	buffer_index:
 3741 0000 0000     		.space	2
 3742              		.global	uart_buffer
 3743              		.section	.bss.uart_buffer,"aw",%nobits
 3744              		.align	2
 3747              	uart_buffer:
 3748 0000 00000000 		.space	256
 3748      00000000 
 3748      00000000 
 3748      00000000 
 3748      00000000 
 3749              		.global	rx_byte5
 3750              		.section	.bss.rx_byte5,"aw",%nobits
 3753              	rx_byte5:
 3754 0000 00       		.space	1
 3755              		.global	rx_byte4
 3756              		.section	.bss.rx_byte4,"aw",%nobits
 3759              	rx_byte4:
 3760 0000 00       		.space	1
 3761              		.global	rx_byte3
 3762              		.section	.bss.rx_byte3,"aw",%nobits
 3765              	rx_byte3:
 3766 0000 00       		.space	1
 3767              		.global	rx_byte2
 3768              		.section	.bss.rx_byte2,"aw",%nobits
 3771              	rx_byte2:
 3772 0000 00       		.space	1
 3773              		.global	rx_byte1
 3774              		.section	.bss.rx_byte1,"aw",%nobits
 3777              	rx_byte1:
 3778 0000 00       		.space	1
 3779              		.global	rx_byte
 3780              		.section	.bss.rx_byte,"aw",%nobits
 3783              	rx_byte:
 3784 0000 00       		.space	1
 3785              		.text
 3786              	.Letext0:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 115


 3787              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 3788              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3789              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3790              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3791              		.file 7 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 3792              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3793              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3794              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3795              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3796              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3797              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3798              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3799              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3800              		.file 16 "Core/Inc/adc.h"
 3801              		.file 17 "Core/Inc/tim.h"
 3802              		.file 18 "Core/Inc/usart.h"
 3803              		.file 19 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 3804              		.file 20 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 3805              		.file 21 "Core/Inc/usb_otg.h"
 3806              		.file 22 "Core/Inc/i2c.h"
 3807              		.file 23 "Core/Inc/gpio.h"
 3808              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3809              		.file 25 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:68     .text.__io_putchar_usart2:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:74     .text.__io_putchar_usart2:00000000 __io_putchar_usart2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:110    .text.__io_putchar_usart2:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:115    .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:121    .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:157    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:162    .text.__io_putchar_uart4:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:168    .text.__io_putchar_uart4:00000000 __io_putchar_uart4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:204    .text.__io_putchar_uart4:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:209    .text.__io_putchar_uart5:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:215    .text.__io_putchar_uart5:00000000 __io_putchar_uart5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:251    .text.__io_putchar_uart5:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:256    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:262    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:298    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:303    .text.ProcessReceivedJoint:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:309    .text.ProcessReceivedJoint:00000000 ProcessReceivedJoint
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:323    .rodata.Joint1Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:327    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:333    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:398    .text.Joint1Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:403    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:407    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:413    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:478    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:483    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:489    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:554    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:559    .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:565    .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:630    .text.Joint4Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:635    .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:641    .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:706    .text.Joint5Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:711    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:717    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:779    .text.HomeSet:00000040 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3713   .bss.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3706   .data.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3699   .data.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3692   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3685   .data.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3664   .data.injectFlag:00000000 injectFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:789    .text.HomeSetUser:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:795    .text.HomeSetUser:00000000 HomeSetUser
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:913    .text.HomeSetUser:0000007c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3575   .bss.step.1:00000000 step.1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3570   .bss.lastMillis.0:00000000 lastMillis.0
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:925    .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:931    .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:945    .text.ActuatorStatus:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:951    .text.ActuatorStatus:00000000 ActuatorStatus
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 117


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:966    .text.Read_ADC_PA0:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:972    .text.Read_ADC_PA0:00000000 Read_ADC_PA0
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1025   .text.Read_ADC_PA0:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1030   .text.injectSequence:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1036   .text.injectSequence:00000000 injectSequence
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1069   .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1199   .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1205   .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1716   .text.ProcessReceivedString:000002a4 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3678   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3631   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3624   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3617   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3610   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3603   .bss.prev_joint5:00000000 prev_joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3596   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:1761   .text.ProcessReceivedString:00000344 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2142   .text.ProcessReceivedString:000004cc $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3671   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2175   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2179   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2185   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2704   .text.HAL_UART_RxCpltCallback:00000278 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3740   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3753   .bss.rx_byte5:00000000 rx_byte5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3747   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3783   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3727   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3777   .bss.rx_byte1:00000000 rx_byte1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3720   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3771   .bss.rx_byte2:00000000 rx_byte2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3765   .bss.rx_byte3:00000000 rx_byte3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2730   .text.HAL_UART_RxCpltCallback:000002d0 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2920   .text.HAL_UART_RxCpltCallback:000003c0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3759   .bss.rx_byte4:00000000 rx_byte4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2932   .text.inject:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:2938   .text.inject:00000000 inject
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3030   .text.inject:00000068 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3645   .data.injectionLimit:00000000 injectionLimit
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3638   .data.retractionLimit:00000000 retractionLimit
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3038   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3044   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3076   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3082   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3230   .text.SystemClock_Config:000000a0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3236   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3240   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3246   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3538   .text.main:00000160 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3582   .bss.buttonHeld:00000000 buttonHeld
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3589   .bss.buttonPressTime:00000000 buttonPressTime
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3567   .bss.lastMillis.0:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3576   .bss.step.1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3579   .bss.buttonHeld:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3586   .bss.buttonPressTime:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3593   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3600   .bss.prev_joint5:00000000 $d
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 118


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3607   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3614   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3621   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3628   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3635   .data.retractionLimit:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3642   .data.injectionLimit:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3651   .bss.footPedalFlag:00000000 footPedalFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3652   .bss.footPedalFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3657   .bss.buttonState:00000000 buttonState
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3658   .bss.buttonState:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3661   .data.injectFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3668   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3675   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3682   .data.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3689   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3696   .data.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3703   .data.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3710   .bss.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3717   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3724   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3733   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3734   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3737   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3744   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3754   .bss.rx_byte5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3760   .bss.rx_byte4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3766   .bss.rx_byte3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3772   .bss.rx_byte2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3778   .bss.rx_byte1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s:3784   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
huart3
huart4
huart5
huart6
snprintf
HAL_GetTick
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
hadc1
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
htim4
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccayHnv4.s 			page 119


HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_UART4_Init
MX_UART5_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM4_Init
MX_TIM3_Init
MX_USART6_UART_Init
HAL_TIM_PWM_Start
HAL_Delay
HAL_GPIO_ReadPin
