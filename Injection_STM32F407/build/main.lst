ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB244:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 90
  44:Core/Src/main.c **** #define JOINT2_HOME 90
  45:Core/Src/main.c **** #define JOINT3_HOME 90
  46:Core/Src/main.c **** #define JOINT4_HOME 90
  47:Core/Src/main.c **** #define JOINT5_HOME 90
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** #define MAIN_UART &huart1
  51:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART1
  52:Core/Src/main.c **** #define JOINT1_UART &huart6
  53:Core/Src/main.c **** #define JOINT1_UART_INSTANCE USART6
  54:Core/Src/main.c **** #define JOINT2_UART &huart2
  55:Core/Src/main.c **** #define JOINT2_UART_INSTANCE USART2
  56:Core/Src/main.c **** #define JOINT3_UART &huart3
  57:Core/Src/main.c **** #define JOINT3_UART_INSTANCE USART3
  58:Core/Src/main.c **** #define JOINT4_UART &huart4
  59:Core/Src/main.c **** #define JOINT4_UART_INSTANCE UART4
  60:Core/Src/main.c **** #define JOINT5_UART &huart5
  61:Core/Src/main.c **** #define JOINT5_UART_INSTANCE UART5
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PD */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN PM */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PV */
  74:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  75:Core/Src/main.c **** volatile uint8_t rx_byte;                         // Main UART
  76:Core/Src/main.c **** volatile uint8_t rx_byte1;                        // Joint 1
  77:Core/Src/main.c **** volatile uint8_t rx_byte2;                        // Joint 2
  78:Core/Src/main.c **** volatile uint8_t rx_byte3;                        // Joint 3
  79:Core/Src/main.c **** volatile uint8_t rx_byte4;                        // Joint 4
  80:Core/Src/main.c **** volatile uint8_t rx_byte5;                        // Joint 5
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  83:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
  86:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 3


  87:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** int joint1 = JOINT1_HOME;
  90:Core/Src/main.c **** int joint2 = JOINT2_HOME;
  91:Core/Src/main.c **** int joint3 = JOINT3_HOME;
  92:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
  93:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
  94:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
  95:Core/Src/main.c **** int ledFlag = 0; 
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
 104:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 105:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART2 int __io_putchar_usart2(int ch)
 108:Core/Src/main.c **** #define printf_joint2(...) do { \
 109:Core/Src/main.c ****     char buffer[256]; \
 110:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 111:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 112:Core/Src/main.c ****         __io_putchar_usart2(buffer[i]); \
 113:Core/Src/main.c ****     } \
 114:Core/Src/main.c **** } while (0)
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
 117:Core/Src/main.c **** #define printf_joint3(...) do { \
 118:Core/Src/main.c ****     char buffer[256]; \
 119:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 120:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 121:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
 122:Core/Src/main.c ****     } \
 123:Core/Src/main.c **** } while (0)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART4 int __io_putchar_uart4(int ch)
 126:Core/Src/main.c **** #define printf_joint4(...) do { \
 127:Core/Src/main.c ****     char buffer[256]; \
 128:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 129:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 130:Core/Src/main.c ****         __io_putchar_uart4(buffer[i]); \
 131:Core/Src/main.c ****     } \
 132:Core/Src/main.c **** } while (0)
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART5 int __io_putchar_uart5(int ch)
 135:Core/Src/main.c **** #define printf_joint5(...) do { \
 136:Core/Src/main.c ****     char buffer[256]; \
 137:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 138:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 139:Core/Src/main.c ****         __io_putchar_uart5(buffer[i]); \
 140:Core/Src/main.c ****     } \
 141:Core/Src/main.c **** } while (0)
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 4


 144:Core/Src/main.c **** #define printf_joint1(...) do { \
 145:Core/Src/main.c ****     char buffer[256]; \
 146:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 147:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 148:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 149:Core/Src/main.c ****     } \
 150:Core/Src/main.c **** } while (0)
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* USER CODE END PFP */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 155:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE END 0 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief  The application entry point.
 161:Core/Src/main.c ****   * @retval int
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** int main(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 173:Core/Src/main.c ****   HAL_Init();
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END Init */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Configure the system clock */
 180:Core/Src/main.c ****   SystemClock_Config();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END SysInit */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* Initialize all configured peripherals */
 187:Core/Src/main.c ****   MX_GPIO_Init();
 188:Core/Src/main.c ****   MX_ADC1_Init();
 189:Core/Src/main.c ****   MX_I2C1_Init();
 190:Core/Src/main.c ****   MX_TIM1_Init();
 191:Core/Src/main.c ****   MX_TIM2_Init();
 192:Core/Src/main.c ****   MX_UART4_Init();
 193:Core/Src/main.c ****   MX_UART5_Init();
 194:Core/Src/main.c ****   MX_USART1_UART_Init();
 195:Core/Src/main.c ****   MX_USART2_UART_Init();
 196:Core/Src/main.c ****   MX_USART3_UART_Init();
 197:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 198:Core/Src/main.c ****   MX_TIM4_Init();
 199:Core/Src/main.c ****   MX_TIM3_Init();
 200:Core/Src/main.c ****   MX_USART6_UART_Init();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 5


 201:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 202:Core/Src/main.c ****   
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   printf("System Initialized\r\n");
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   HomeSet();
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 209:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 210:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 211:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 212:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 213:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END 2 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* Infinite loop */
 219:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 220:Core/Src/main.c ****   while (1)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     /* USER CODE END WHILE */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c ****   /* USER CODE END 3 */
 231:Core/Src/main.c **** }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief System Clock Configuration
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** void SystemClock_Config(void)
 238:Core/Src/main.c **** {
 239:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 240:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 245:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 248:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 251:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 6


 258:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 266:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 267:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 268:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 270:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 285:Core/Src/main.c ****  {
  30              		.loc 1 285 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 285 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 286:Core/Src/main.c ****    /* Place your implementation of fputc here */
 287:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 288:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 288 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 288 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 289:Core/Src/main.c ****  
 290:Core/Src/main.c ****    return ch;
  52              		.loc 1 290 4 is_stmt 1 view .LVU4
 291:Core/Src/main.c ****  }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 7


  53              		.loc 1 291 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE244:
  67              		.section	.text.__io_putchar_usart2,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart2
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart2:
  75              	.LVL3:
  76              	.LFB245:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART2{
  77              		.loc 1 293 26 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 293 26 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 294:Core/Src/main.c ****     HAL_UART_Transmit(JOINT2_UART, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 294 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 294 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****       return ch;
  99              		.loc 1 296 7 is_stmt 1 view .LVU10
 297:Core/Src/main.c ****  }
 100              		.loc 1 297 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 8


 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart2
 111              		.cfi_endproc
 112              	.LFE245:
 114              		.section	.text.__io_putchar_usart3,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart3:
 122              	.LVL6:
 123              	.LFB246:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 300:Core/Src/main.c ****  {
 124              		.loc 1 300 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 300 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 301:Core/Src/main.c ****     /* Place your implementation of fputc here */
 302:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 303:Core/Src/main.c ****     HAL_UART_Transmit(JOINT3_UART, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 303 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 303 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     return ch;
 146              		.loc 1 305 5 is_stmt 1 view .LVU16
 306:Core/Src/main.c ****  }
 147              		.loc 1 306 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 9


 156              	.L11:
 157 001c 00000000 		.word	huart3
 158              		.cfi_endproc
 159              	.LFE246:
 161              		.section	.text.__io_putchar_uart4,"ax",%progbits
 162              		.align	1
 163              		.global	__io_putchar_uart4
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	__io_putchar_uart4:
 169              	.LVL9:
 170              	.LFB247:
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART4
 309:Core/Src/main.c ****  {
 171              		.loc 1 309 2 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 309 2 is_stmt 0 view .LVU19
 176 0000 00B5     		push	{lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              	.LCFI10:
 182              		.cfi_def_cfa_offset 16
 183 0004 0190     		str	r0, [sp, #4]
 310:Core/Src/main.c ****     /* Place your implementation of fputc here */
 311:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 312:Core/Src/main.c ****     HAL_UART_Transmit(JOINT4_UART, (uint8_t *)&ch, 1, 0xFFFF);
 184              		.loc 1 312 5 is_stmt 1 view .LVU20
 185 0006 4FF6FF73 		movw	r3, #65535
 186 000a 0122     		movs	r2, #1
 187 000c 01A9     		add	r1, sp, #4
 188 000e 0348     		ldr	r0, .L15
 189              	.LVL10:
 190              		.loc 1 312 5 is_stmt 0 view .LVU21
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 192              	.LVL11:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****     return ch;
 193              		.loc 1 314 5 is_stmt 1 view .LVU22
 315:Core/Src/main.c ****  }
 194              		.loc 1 315 2 is_stmt 0 view .LVU23
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              		.align	2
 203              	.L15:
 204 001c 00000000 		.word	huart4
 205              		.cfi_endproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 10


 206              	.LFE247:
 208              		.section	.text.__io_putchar_uart5,"ax",%progbits
 209              		.align	1
 210              		.global	__io_putchar_uart5
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	__io_putchar_uart5:
 216              	.LVL12:
 217              	.LFB248:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART5
 318:Core/Src/main.c ****  {
 218              		.loc 1 318 2 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 318 2 is_stmt 0 view .LVU25
 223 0000 00B5     		push	{lr}
 224              	.LCFI12:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI13:
 229              		.cfi_def_cfa_offset 16
 230 0004 0190     		str	r0, [sp, #4]
 319:Core/Src/main.c ****     /* Place your implementation of fputc here */
 320:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 321:Core/Src/main.c ****     HAL_UART_Transmit(JOINT5_UART, (uint8_t *)&ch, 1, 0xFFFF);
 231              		.loc 1 321 5 is_stmt 1 view .LVU26
 232 0006 4FF6FF73 		movw	r3, #65535
 233 000a 0122     		movs	r2, #1
 234 000c 01A9     		add	r1, sp, #4
 235 000e 0348     		ldr	r0, .L19
 236              	.LVL13:
 237              		.loc 1 321 5 is_stmt 0 view .LVU27
 238 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 239              	.LVL14:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****     return ch;
 240              		.loc 1 323 5 is_stmt 1 view .LVU28
 324:Core/Src/main.c ****  }
 241              		.loc 1 324 2 is_stmt 0 view .LVU29
 242 0014 0198     		ldr	r0, [sp, #4]
 243 0016 03B0     		add	sp, sp, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0018 5DF804FB 		ldr	pc, [sp], #4
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 001c 00000000 		.word	huart5
 252              		.cfi_endproc
 253              	.LFE248:
 255              		.section	.text.__io_putchar_usart6,"ax",%progbits
 256              		.align	1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 11


 257              		.global	__io_putchar_usart6
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	__io_putchar_usart6:
 263              	.LVL15:
 264              	.LFB249:
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 327:Core/Src/main.c ****  {
 265              		.loc 1 327 2 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 327 2 is_stmt 0 view .LVU31
 270 0000 00B5     		push	{lr}
 271              	.LCFI15:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 14, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 16
 277 0004 0190     		str	r0, [sp, #4]
 328:Core/Src/main.c ****     /* Place your implementation of fputc here */
 329:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 330:Core/Src/main.c ****     HAL_UART_Transmit(JOINT1_UART, (uint8_t *)&ch, 1, 0xFFFF);
 278              		.loc 1 330 5 is_stmt 1 view .LVU32
 279 0006 4FF6FF73 		movw	r3, #65535
 280 000a 0122     		movs	r2, #1
 281 000c 01A9     		add	r1, sp, #4
 282 000e 0348     		ldr	r0, .L23
 283              	.LVL16:
 284              		.loc 1 330 5 is_stmt 0 view .LVU33
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL17:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     return ch;
 287              		.loc 1 332 5 is_stmt 1 view .LVU34
 333:Core/Src/main.c ****  }
 288              		.loc 1 333 2 is_stmt 0 view .LVU35
 289 0014 0198     		ldr	r0, [sp, #4]
 290 0016 03B0     		add	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 4
 293              		@ sp needed
 294 0018 5DF804FB 		ldr	pc, [sp], #4
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 001c 00000000 		.word	huart6
 299              		.cfi_endproc
 300              	.LFE249:
 302              		.section	.text.ProcessReceivedJoint,"ax",%progbits
 303              		.align	1
 304              		.global	ProcessReceivedJoint
 305              		.syntax unified
 306              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 12


 307              		.thumb_func
 309              	ProcessReceivedJoint:
 310              	.LVL18:
 311              	.LFB252:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 336:Core/Src/main.c **** {
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****     {
 341:Core/Src/main.c ****         // Store received byte in buffer
 342:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 343:Core/Src/main.c ****         {
 344:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****             // Check for newline or carriage return
 347:Core/Src/main.c ****             if (rx_byte == '\n') 
 348:Core/Src/main.c ****             {
 349:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 350:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 353:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 356:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 357:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 358:Core/Src/main.c ****                 }
 359:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 360:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 361:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 362:Core/Src/main.c ****                 }
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****                 
 365:Core/Src/main.c ****             }
 366:Core/Src/main.c ****         }
 367:Core/Src/main.c ****         else 
 368:Core/Src/main.c ****         {
 369:Core/Src/main.c ****             // Buffer overflow, reset index
 370:Core/Src/main.c ****             buffer_index = 0;
 371:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 372:Core/Src/main.c ****         }
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****         // Restart UART reception for the next byte
 375:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 376:Core/Src/main.c ****     }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****     else if(huart -> Instance == JOINT1_UART_INSTANCE){
 379:Core/Src/main.c ****         // Store received byte in buffer
 380:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 381:Core/Src/main.c ****         {
 382:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte1;
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****             // Check for newline or carriage return
 385:Core/Src/main.c ****             if (rx_byte1 == '\n') 
 386:Core/Src/main.c ****             {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 13


 387:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 388:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 391:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 394:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 395:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 396:Core/Src/main.c ****                 }
 397:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 398:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 399:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 400:Core/Src/main.c ****                 }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****                 
 403:Core/Src/main.c ****             }
 404:Core/Src/main.c ****         }
 405:Core/Src/main.c ****         else 
 406:Core/Src/main.c ****         {
 407:Core/Src/main.c ****             // Buffer overflow, reset index
 408:Core/Src/main.c ****             buffer_index = 0;
 409:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 410:Core/Src/main.c ****         }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****         // Restart UART reception for the next byte
 413:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1);
 414:Core/Src/main.c ****     }
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****     else if(huart -> Instance == JOINT2_UART_INSTANCE){
 417:Core/Src/main.c ****         // Store received byte in buffer
 418:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 419:Core/Src/main.c ****         {
 420:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte2;
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****             // Check for newline or carriage return
 423:Core/Src/main.c ****             if (rx_byte2 == '\n') 
 424:Core/Src/main.c ****             {
 425:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 426:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 429:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 432:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 433:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 434:Core/Src/main.c ****                 }
 435:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 436:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 437:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 438:Core/Src/main.c ****                 }
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****                 
 441:Core/Src/main.c ****             }
 442:Core/Src/main.c ****         }
 443:Core/Src/main.c ****         else 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 14


 444:Core/Src/main.c ****         {
 445:Core/Src/main.c ****             // Buffer overflow
 446:Core/Src/main.c ****             buffer_index = 0;
 447:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 448:Core/Src/main.c ****         }
 449:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****       }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****       else if(huart -> Instance == JOINT3_UART_INSTANCE){
 454:Core/Src/main.c ****         // Store received byte in buffer
 455:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 456:Core/Src/main.c ****         {
 457:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte3;
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****             // Check for newline or carriage return
 460:Core/Src/main.c ****             if (rx_byte3 == '\n') 
 461:Core/Src/main.c ****             {
 462:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 463:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 466:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 469:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 470:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 471:Core/Src/main.c ****                 }
 472:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 473:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 474:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 475:Core/Src/main.c ****                 }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****                 
 478:Core/Src/main.c ****             }
 479:Core/Src/main.c ****         }
 480:Core/Src/main.c ****         else 
 481:Core/Src/main.c ****         {
 482:Core/Src/main.c ****             // Buffer overflow
 483:Core/Src/main.c ****             buffer_index = 0;
 484:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 485:Core/Src/main.c ****         }
 486:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1);
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****       }
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****       else if(huart -> Instance == JOINT4_UART_INSTANCE){
 491:Core/Src/main.c ****         // Store received byte in buffer
 492:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 493:Core/Src/main.c ****         {
 494:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte4;
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****             // Check for newline or carriage return
 497:Core/Src/main.c ****             if (rx_byte4 == '\n') 
 498:Core/Src/main.c ****             {
 499:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 500:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 15


 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 503:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 506:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 507:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 508:Core/Src/main.c ****                 }
 509:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 510:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 511:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 512:Core/Src/main.c ****                 }
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****                 
 515:Core/Src/main.c ****             }
 516:Core/Src/main.c ****         }
 517:Core/Src/main.c ****         else 
 518:Core/Src/main.c ****         {
 519:Core/Src/main.c ****             // Buffer overflow
 520:Core/Src/main.c ****             buffer_index = 0;
 521:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 522:Core/Src/main.c ****         }
 523:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1);
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****       }
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****       else if(huart -> Instance == JOINT5_UART_INSTANCE){
 528:Core/Src/main.c ****         // Store received byte in buffer
 529:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 530:Core/Src/main.c ****         {
 531:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte5;
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****             // Check for newline or carriage return
 534:Core/Src/main.c ****             if (rx_byte5 == '\n') 
 535:Core/Src/main.c ****             {
 536:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 537:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 540:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 543:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 544:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 545:Core/Src/main.c ****                 }
 546:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 547:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 548:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 549:Core/Src/main.c ****                 }
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****                 
 552:Core/Src/main.c ****             }
 553:Core/Src/main.c ****         }
 554:Core/Src/main.c ****         else 
 555:Core/Src/main.c ****         {
 556:Core/Src/main.c ****             // Buffer overflow
 557:Core/Src/main.c ****             buffer_index = 0;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 16


 558:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 559:Core/Src/main.c ****         }
 560:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1);
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****       }
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****  
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****  
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** // Function to process the received string
 573:Core/Src/main.c **** void ProcessReceivedString(char *str)
 574:Core/Src/main.c **** {
 575:Core/Src/main.c ****     // Check if the string starts with "set"
 576:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 577:Core/Src/main.c ****     {
 578:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 579:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 582:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 583:Core/Src/main.c ****         {
 584:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 585:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 588:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 589:Core/Src/main.c ****                 // send to joint
 590:Core/Src/main.c ****                 prev_joint1 = joint1;
 591:Core/Src/main.c ****                 Joint1Set(joint1);
 592:Core/Src/main.c ****             }
 593:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 594:Core/Src/main.c ****                 // send to joint
 595:Core/Src/main.c ****                 prev_joint2 = joint2;
 596:Core/Src/main.c ****                 Joint2Set(joint2);
 597:Core/Src/main.c ****             }
 598:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 599:Core/Src/main.c ****                 // send to joint
 600:Core/Src/main.c ****                 prev_joint3 = joint3;
 601:Core/Src/main.c ****                 Joint3Set(joint3);
 602:Core/Src/main.c ****             }
 603:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 604:Core/Src/main.c ****                 // send to joint
 605:Core/Src/main.c ****                 prev_joint4 = joint4;
 606:Core/Src/main.c ****             }
 607:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 608:Core/Src/main.c ****                 // send to joint
 609:Core/Src/main.c ****                 prev_joint5 = joint5;
 610:Core/Src/main.c ****             }
 611:Core/Src/main.c ****             if (actuator != prev_actuator) {
 612:Core/Src/main.c ****                 // send to actuator
 613:Core/Src/main.c ****                 prev_actuator = actuator;
 614:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 17


 615:Core/Src/main.c ****         }
 616:Core/Src/main.c ****         else
 617:Core/Src/main.c ****         {
 618:Core/Src/main.c ****             printf("Invalid format!\r\n");
 619:Core/Src/main.c ****         }
 620:Core/Src/main.c ****     }
 621:Core/Src/main.c ****     // Just setting joint1 
 622:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 623:Core/Src/main.c ****     {
 624:Core/Src/main.c ****         str += 7;
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 627:Core/Src/main.c ****         {
 628:Core/Src/main.c ****             // Successfully parsed joint1
 629:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 632:Core/Src/main.c ****                 Joint1Set(joint1);
 633:Core/Src/main.c ****                 prev_joint1 = joint1;
 634:Core/Src/main.c ****             }
 635:Core/Src/main.c ****         }
 636:Core/Src/main.c ****         else
 637:Core/Src/main.c ****         {
 638:Core/Src/main.c ****             printf("Invalid format!\r\n");
 639:Core/Src/main.c ****         }
 640:Core/Src/main.c ****     }
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****     // Just setting joint2
 643:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 644:Core/Src/main.c ****     {
 645:Core/Src/main.c ****         str += 7;
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 648:Core/Src/main.c ****         {
 649:Core/Src/main.c ****             // Successfully parsed joint2
 650:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 653:Core/Src/main.c ****                 Joint2Set(joint2);
 654:Core/Src/main.c ****                 prev_joint2 = joint2;
 655:Core/Src/main.c ****             }
 656:Core/Src/main.c ****         }
 657:Core/Src/main.c ****         else
 658:Core/Src/main.c ****         {
 659:Core/Src/main.c ****             printf("Invalid format!\r\n");
 660:Core/Src/main.c ****         }
 661:Core/Src/main.c ****     }
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****     // Just setting joint3
 664:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 665:Core/Src/main.c ****     {
 666:Core/Src/main.c ****         str += 7;
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 669:Core/Src/main.c ****         {
 670:Core/Src/main.c ****             // Successfully parsed joint3
 671:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 18


 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 674:Core/Src/main.c ****                 Joint3Set(joint3);
 675:Core/Src/main.c ****                 prev_joint3 = joint3;
 676:Core/Src/main.c ****             }
 677:Core/Src/main.c ****         }
 678:Core/Src/main.c ****         else
 679:Core/Src/main.c ****         {
 680:Core/Src/main.c ****             printf("Invalid format!\r\n");
 681:Core/Src/main.c ****         }
 682:Core/Src/main.c ****     }
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****     // Just setting joint4
 685:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 686:Core/Src/main.c ****     {
 687:Core/Src/main.c ****         str += 7;
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 690:Core/Src/main.c ****         {
 691:Core/Src/main.c ****             // Successfully parsed joint4
 692:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 693:Core/Src/main.c **** 
 694:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 695:Core/Src/main.c ****                 Joint4Set(joint4);
 696:Core/Src/main.c ****                 prev_joint4 = joint4;
 697:Core/Src/main.c ****             }
 698:Core/Src/main.c ****         }
 699:Core/Src/main.c ****         else
 700:Core/Src/main.c ****         {
 701:Core/Src/main.c ****             printf("Invalid format!\r\n");
 702:Core/Src/main.c ****         }
 703:Core/Src/main.c ****     }
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****     // Just setting joint5
 706:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 707:Core/Src/main.c ****     {
 708:Core/Src/main.c ****         str += 7;
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 711:Core/Src/main.c ****         {
 712:Core/Src/main.c ****             // Successfully parsed joint5
 713:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 716:Core/Src/main.c ****                 Joint5Set(joint5);
 717:Core/Src/main.c ****                 prev_joint5 = joint5;
 718:Core/Src/main.c ****             }
 719:Core/Src/main.c ****         }
 720:Core/Src/main.c ****         else
 721:Core/Src/main.c ****         {
 722:Core/Src/main.c ****             printf("Invalid format!\r\n");
 723:Core/Src/main.c ****         }
 724:Core/Src/main.c ****     }
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****     // Just setting actuator
 727:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 728:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 19


 729:Core/Src/main.c ****         str += 9;
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 732:Core/Src/main.c ****         {
 733:Core/Src/main.c ****             // Successfully parsed joint5
 734:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****             if (actuator != actuator) {
 737:Core/Src/main.c ****                 ActuatorSet(actuator);
 738:Core/Src/main.c ****                 prev_actuator = actuator;
 739:Core/Src/main.c ****             }
 740:Core/Src/main.c ****         }
 741:Core/Src/main.c ****         else
 742:Core/Src/main.c ****         {
 743:Core/Src/main.c ****             printf("Invalid format!\r\n");
 744:Core/Src/main.c ****         }
 745:Core/Src/main.c ****     }
 746:Core/Src/main.c **** 
 747:Core/Src/main.c ****     else if (strncmp(str, "j1read", 6) == 0)
 748:Core/Src/main.c ****     {
 749:Core/Src/main.c ****         printf_joint1("r\r\n");
 750:Core/Src/main.c ****     }
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****     else if (strncmp(str, "j2read", 6) == 0)
 753:Core/Src/main.c ****     {
 754:Core/Src/main.c ****         printf_joint2("r\r\n");
 755:Core/Src/main.c ****     }
 756:Core/Src/main.c **** 
 757:Core/Src/main.c ****     else if (strncmp(str, "j3read", 6) == 0)
 758:Core/Src/main.c ****     {
 759:Core/Src/main.c ****         printf_joint3("r\r\n");
 760:Core/Src/main.c ****     }
 761:Core/Src/main.c ****       
 762:Core/Src/main.c ****       else if (strncmp(str, "j4read", 6) == 0)
 763:Core/Src/main.c ****       {
 764:Core/Src/main.c ****           printf_joint4("r\r\n");
 765:Core/Src/main.c ****       }
 766:Core/Src/main.c ****   
 767:Core/Src/main.c ****       else if (strncmp(str, "j5read", 6) == 0)
 768:Core/Src/main.c ****       {
 769:Core/Src/main.c ****           printf_joint5("r\r\n");
 770:Core/Src/main.c ****       }
 771:Core/Src/main.c ****   
 772:Core/Src/main.c ****       else if (strncmp(str, "aread", 5) == 0)
 773:Core/Src/main.c ****       {
 774:Core/Src/main.c ****           // Print acutator position or status
 775:Core/Src/main.c ****       }
 776:Core/Src/main.c **** 
 777:Core/Src/main.c **** 
 778:Core/Src/main.c ****     // Set Home 
 779:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 780:Core/Src/main.c ****     {
 781:Core/Src/main.c ****         str += 5;
 782:Core/Src/main.c ****         
 783:Core/Src/main.c ****         HomeSet();
 784:Core/Src/main.c ****         
 785:Core/Src/main.c ****         printf("Set all joints home\r\n");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 20


 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****     }
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 790:Core/Src/main.c ****     {
 791:Core/Src/main.c ****         str += 6;
 792:Core/Src/main.c ****         ledFlag = !ledFlag;
 793:Core/Src/main.c ****         
 794:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****     }
 797:Core/Src/main.c **** 
 798:Core/Src/main.c ****     // Prints all joints
 799:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 800:Core/Src/main.c ****     {
 801:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 802:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 803:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 804:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 805:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 806:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 807:Core/Src/main.c ****     }
 808:Core/Src/main.c **** 
 809:Core/Src/main.c ****     // Echoes string if no keywords are sent
 810:Core/Src/main.c ****     else
 811:Core/Src/main.c ****     {
 812:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 813:Core/Src/main.c ****     }
 814:Core/Src/main.c **** }
 815:Core/Src/main.c **** 
 816:Core/Src/main.c **** void ProcessReceivedJoint(char *str){
 312              		.loc 1 816 37 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 817:Core/Src/main.c **** 
 818:Core/Src/main.c **** }
 317              		.loc 1 818 1 view .LVU37
 318 0000 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE252:
 322              		.section	.rodata.Joint1Set.str1.4,"aMS",%progbits,1
 323              		.align	2
 324              	.LC0:
 325 0000 25640D0A 		.ascii	"%d\015\012\000"
 325      00
 326              		.section	.text.Joint1Set,"ax",%progbits
 327              		.align	1
 328              		.global	Joint1Set
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	Joint1Set:
 334              	.LVL19:
 335              	.LFB254:
 819:Core/Src/main.c **** void HomeSet(){
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 21


 820:Core/Src/main.c ****   //Set all joints to home
 821:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 822:Core/Src/main.c ****   Joint1Set(joint1);
 823:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 824:Core/Src/main.c ****   Joint2Set(joint2);
 825:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 826:Core/Src/main.c ****   Joint3Set(joint3);
 827:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 828:Core/Src/main.c ****   Joint4Set(joint4);
 829:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 830:Core/Src/main.c ****   Joint5Set(joint5);
 831:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 832:Core/Src/main.c ****   ActuatorSet(actuator);
 833:Core/Src/main.c **** }
 834:Core/Src/main.c **** 
 835:Core/Src/main.c **** void Joint1Set(int theta){
 336              		.loc 1 835 26 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 256
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 835 26 is_stmt 0 view .LVU39
 341 0000 30B5     		push	{r4, r5, lr}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347 0002 C1B0     		sub	sp, sp, #260
 348              	.LCFI19:
 349              		.cfi_def_cfa_offset 272
 350 0004 0346     		mov	r3, r0
 836:Core/Src/main.c ****   printf_joint1("%d\r\n", theta);
 351              		.loc 1 836 3 is_stmt 1 view .LVU40
 352              	.LBB4:
 353              		.loc 1 836 3 view .LVU41
 354              		.loc 1 836 3 view .LVU42
 355 0006 094A     		ldr	r2, .L30
 356 0008 4FF48071 		mov	r1, #256
 357 000c 6846     		mov	r0, sp
 358              	.LVL20:
 359              		.loc 1 836 3 is_stmt 0 view .LVU43
 360 000e FFF7FEFF 		bl	snprintf
 361              	.LVL21:
 362              		.loc 1 836 3 view .LVU44
 363 0012 0546     		mov	r5, r0
 364              	.LVL22:
 365              		.loc 1 836 3 is_stmt 1 discriminator 1 view .LVU45
 366              	.LBB5:
 367              		.loc 1 836 3 discriminator 1 view .LVU46
 368              		.loc 1 836 3 is_stmt 0 discriminator 1 view .LVU47
 369 0014 0024     		movs	r4, #0
 370              		.loc 1 836 3 view .LVU48
 371 0016 04E0     		b	.L27
 372              	.LVL23:
 373              	.L28:
 374              		.loc 1 836 3 is_stmt 1 discriminator 3 view .LVU49
 375 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 22


 376 001c FFF7FEFF 		bl	__io_putchar_usart6
 377              	.LVL24:
 378              		.loc 1 836 3 discriminator 3 view .LVU50
 379 0020 0134     		adds	r4, r4, #1
 380              	.LVL25:
 381              	.L27:
 382              		.loc 1 836 3 discriminator 2 view .LVU51
 383 0022 AC42     		cmp	r4, r5
 384 0024 F8DB     		blt	.L28
 385              	.LBE5:
 386              	.LBE4:
 837:Core/Src/main.c **** 
 838:Core/Src/main.c **** }
 387              		.loc 1 838 1 is_stmt 0 view .LVU52
 388 0026 41B0     		add	sp, sp, #260
 389              	.LCFI20:
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
 392 0028 30BD     		pop	{r4, r5, pc}
 393              	.LVL26:
 394              	.L31:
 395              		.loc 1 838 1 view .LVU53
 396 002a 00BF     		.align	2
 397              	.L30:
 398 002c 00000000 		.word	.LC0
 399              		.cfi_endproc
 400              	.LFE254:
 402              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 403              		.align	2
 404              	.LC1:
 405 0000 25640A00 		.ascii	"%d\012\000"
 406              		.section	.text.Joint2Set,"ax",%progbits
 407              		.align	1
 408              		.global	Joint2Set
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	Joint2Set:
 414              	.LVL27:
 415              	.LFB255:
 839:Core/Src/main.c **** 
 840:Core/Src/main.c **** void Joint2Set(int theta){
 416              		.loc 1 840 26 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 256
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 840 26 is_stmt 0 view .LVU55
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 C1B0     		sub	sp, sp, #260
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 272
 430 0004 0346     		mov	r3, r0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 23


 841:Core/Src/main.c ****   printf_joint2("%d\n", theta);
 431              		.loc 1 841 3 is_stmt 1 view .LVU56
 432              	.LBB6:
 433              		.loc 1 841 3 view .LVU57
 434              		.loc 1 841 3 view .LVU58
 435 0006 094A     		ldr	r2, .L36
 436 0008 4FF48071 		mov	r1, #256
 437 000c 6846     		mov	r0, sp
 438              	.LVL28:
 439              		.loc 1 841 3 is_stmt 0 view .LVU59
 440 000e FFF7FEFF 		bl	snprintf
 441              	.LVL29:
 442              		.loc 1 841 3 view .LVU60
 443 0012 0546     		mov	r5, r0
 444              	.LVL30:
 445              		.loc 1 841 3 is_stmt 1 discriminator 1 view .LVU61
 446              	.LBB7:
 447              		.loc 1 841 3 discriminator 1 view .LVU62
 448              		.loc 1 841 3 is_stmt 0 discriminator 1 view .LVU63
 449 0014 0024     		movs	r4, #0
 450              		.loc 1 841 3 view .LVU64
 451 0016 04E0     		b	.L33
 452              	.LVL31:
 453              	.L34:
 454              		.loc 1 841 3 is_stmt 1 discriminator 3 view .LVU65
 455 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 456 001c FFF7FEFF 		bl	__io_putchar_usart2
 457              	.LVL32:
 458              		.loc 1 841 3 discriminator 3 view .LVU66
 459 0020 0134     		adds	r4, r4, #1
 460              	.LVL33:
 461              	.L33:
 462              		.loc 1 841 3 discriminator 2 view .LVU67
 463 0022 AC42     		cmp	r4, r5
 464 0024 F8DB     		blt	.L34
 465              	.LBE7:
 466              	.LBE6:
 842:Core/Src/main.c **** 
 843:Core/Src/main.c **** }
 467              		.loc 1 843 1 is_stmt 0 view .LVU68
 468 0026 41B0     		add	sp, sp, #260
 469              	.LCFI23:
 470              		.cfi_def_cfa_offset 12
 471              		@ sp needed
 472 0028 30BD     		pop	{r4, r5, pc}
 473              	.LVL34:
 474              	.L37:
 475              		.loc 1 843 1 view .LVU69
 476 002a 00BF     		.align	2
 477              	.L36:
 478 002c 00000000 		.word	.LC1
 479              		.cfi_endproc
 480              	.LFE255:
 482              		.section	.text.Joint3Set,"ax",%progbits
 483              		.align	1
 484              		.global	Joint3Set
 485              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 24


 486              		.thumb
 487              		.thumb_func
 489              	Joint3Set:
 490              	.LVL35:
 491              	.LFB256:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c **** void Joint3Set(int theta){
 492              		.loc 1 845 26 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 256
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 845 26 is_stmt 0 view .LVU71
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 C1B0     		sub	sp, sp, #260
 504              	.LCFI25:
 505              		.cfi_def_cfa_offset 272
 506 0004 0346     		mov	r3, r0
 846:Core/Src/main.c ****   printf_joint3("%d\r\n", theta);
 507              		.loc 1 846 3 is_stmt 1 view .LVU72
 508              	.LBB8:
 509              		.loc 1 846 3 view .LVU73
 510              		.loc 1 846 3 view .LVU74
 511 0006 094A     		ldr	r2, .L42
 512 0008 4FF48071 		mov	r1, #256
 513 000c 6846     		mov	r0, sp
 514              	.LVL36:
 515              		.loc 1 846 3 is_stmt 0 view .LVU75
 516 000e FFF7FEFF 		bl	snprintf
 517              	.LVL37:
 518              		.loc 1 846 3 view .LVU76
 519 0012 0546     		mov	r5, r0
 520              	.LVL38:
 521              		.loc 1 846 3 is_stmt 1 discriminator 1 view .LVU77
 522              	.LBB9:
 523              		.loc 1 846 3 discriminator 1 view .LVU78
 524              		.loc 1 846 3 is_stmt 0 discriminator 1 view .LVU79
 525 0014 0024     		movs	r4, #0
 526              		.loc 1 846 3 view .LVU80
 527 0016 04E0     		b	.L39
 528              	.LVL39:
 529              	.L40:
 530              		.loc 1 846 3 is_stmt 1 discriminator 3 view .LVU81
 531 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 532 001c FFF7FEFF 		bl	__io_putchar_usart3
 533              	.LVL40:
 534              		.loc 1 846 3 discriminator 3 view .LVU82
 535 0020 0134     		adds	r4, r4, #1
 536              	.LVL41:
 537              	.L39:
 538              		.loc 1 846 3 discriminator 2 view .LVU83
 539 0022 AC42     		cmp	r4, r5
 540 0024 F8DB     		blt	.L40
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 25


 541              	.LBE9:
 542              	.LBE8:
 847:Core/Src/main.c **** 
 848:Core/Src/main.c **** }
 543              		.loc 1 848 1 is_stmt 0 view .LVU84
 544 0026 41B0     		add	sp, sp, #260
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 12
 547              		@ sp needed
 548 0028 30BD     		pop	{r4, r5, pc}
 549              	.LVL42:
 550              	.L43:
 551              		.loc 1 848 1 view .LVU85
 552 002a 00BF     		.align	2
 553              	.L42:
 554 002c 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE256:
 558              		.section	.text.Joint4Set,"ax",%progbits
 559              		.align	1
 560              		.global	Joint4Set
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	Joint4Set:
 566              	.LVL43:
 567              	.LFB257:
 849:Core/Src/main.c **** 
 850:Core/Src/main.c **** void Joint4Set(int theta){
 568              		.loc 1 850 26 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 256
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 850 26 is_stmt 0 view .LVU87
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI27:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 C1B0     		sub	sp, sp, #260
 580              	.LCFI28:
 581              		.cfi_def_cfa_offset 272
 582 0004 0346     		mov	r3, r0
 851:Core/Src/main.c ****   printf_joint4("%d\r\n", theta);
 583              		.loc 1 851 3 is_stmt 1 view .LVU88
 584              	.LBB10:
 585              		.loc 1 851 3 view .LVU89
 586              		.loc 1 851 3 view .LVU90
 587 0006 094A     		ldr	r2, .L48
 588 0008 4FF48071 		mov	r1, #256
 589 000c 6846     		mov	r0, sp
 590              	.LVL44:
 591              		.loc 1 851 3 is_stmt 0 view .LVU91
 592 000e FFF7FEFF 		bl	snprintf
 593              	.LVL45:
 594              		.loc 1 851 3 view .LVU92
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 26


 595 0012 0546     		mov	r5, r0
 596              	.LVL46:
 597              		.loc 1 851 3 is_stmt 1 discriminator 1 view .LVU93
 598              	.LBB11:
 599              		.loc 1 851 3 discriminator 1 view .LVU94
 600              		.loc 1 851 3 is_stmt 0 discriminator 1 view .LVU95
 601 0014 0024     		movs	r4, #0
 602              		.loc 1 851 3 view .LVU96
 603 0016 04E0     		b	.L45
 604              	.LVL47:
 605              	.L46:
 606              		.loc 1 851 3 is_stmt 1 discriminator 3 view .LVU97
 607 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 608 001c FFF7FEFF 		bl	__io_putchar_uart4
 609              	.LVL48:
 610              		.loc 1 851 3 discriminator 3 view .LVU98
 611 0020 0134     		adds	r4, r4, #1
 612              	.LVL49:
 613              	.L45:
 614              		.loc 1 851 3 discriminator 2 view .LVU99
 615 0022 AC42     		cmp	r4, r5
 616 0024 F8DB     		blt	.L46
 617              	.LBE11:
 618              	.LBE10:
 852:Core/Src/main.c **** 
 853:Core/Src/main.c **** }
 619              		.loc 1 853 1 is_stmt 0 view .LVU100
 620 0026 41B0     		add	sp, sp, #260
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 12
 623              		@ sp needed
 624 0028 30BD     		pop	{r4, r5, pc}
 625              	.LVL50:
 626              	.L49:
 627              		.loc 1 853 1 view .LVU101
 628 002a 00BF     		.align	2
 629              	.L48:
 630 002c 00000000 		.word	.LC0
 631              		.cfi_endproc
 632              	.LFE257:
 634              		.section	.text.Joint5Set,"ax",%progbits
 635              		.align	1
 636              		.global	Joint5Set
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	Joint5Set:
 642              	.LVL51:
 643              	.LFB258:
 854:Core/Src/main.c **** 
 855:Core/Src/main.c **** void Joint5Set(int theta){
 644              		.loc 1 855 26 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 256
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 855 26 is_stmt 0 view .LVU103
 649 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 27


 650              	.LCFI30:
 651              		.cfi_def_cfa_offset 12
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
 655 0002 C1B0     		sub	sp, sp, #260
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 272
 658 0004 0346     		mov	r3, r0
 856:Core/Src/main.c ****   printf_joint5("%d\r\n", theta);
 659              		.loc 1 856 3 is_stmt 1 view .LVU104
 660              	.LBB12:
 661              		.loc 1 856 3 view .LVU105
 662              		.loc 1 856 3 view .LVU106
 663 0006 094A     		ldr	r2, .L54
 664 0008 4FF48071 		mov	r1, #256
 665 000c 6846     		mov	r0, sp
 666              	.LVL52:
 667              		.loc 1 856 3 is_stmt 0 view .LVU107
 668 000e FFF7FEFF 		bl	snprintf
 669              	.LVL53:
 670              		.loc 1 856 3 view .LVU108
 671 0012 0546     		mov	r5, r0
 672              	.LVL54:
 673              		.loc 1 856 3 is_stmt 1 discriminator 1 view .LVU109
 674              	.LBB13:
 675              		.loc 1 856 3 discriminator 1 view .LVU110
 676              		.loc 1 856 3 is_stmt 0 discriminator 1 view .LVU111
 677 0014 0024     		movs	r4, #0
 678              		.loc 1 856 3 view .LVU112
 679 0016 04E0     		b	.L51
 680              	.LVL55:
 681              	.L52:
 682              		.loc 1 856 3 is_stmt 1 discriminator 3 view .LVU113
 683 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 684 001c FFF7FEFF 		bl	__io_putchar_uart5
 685              	.LVL56:
 686              		.loc 1 856 3 discriminator 3 view .LVU114
 687 0020 0134     		adds	r4, r4, #1
 688              	.LVL57:
 689              	.L51:
 690              		.loc 1 856 3 discriminator 2 view .LVU115
 691 0022 AC42     		cmp	r4, r5
 692 0024 F8DB     		blt	.L52
 693              	.LBE13:
 694              	.LBE12:
 857:Core/Src/main.c **** 
 858:Core/Src/main.c **** }
 695              		.loc 1 858 1 is_stmt 0 view .LVU116
 696 0026 41B0     		add	sp, sp, #260
 697              	.LCFI32:
 698              		.cfi_def_cfa_offset 12
 699              		@ sp needed
 700 0028 30BD     		pop	{r4, r5, pc}
 701              	.LVL58:
 702              	.L55:
 703              		.loc 1 858 1 view .LVU117
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 28


 704 002a 00BF     		.align	2
 705              	.L54:
 706 002c 00000000 		.word	.LC0
 707              		.cfi_endproc
 708              	.LFE258:
 710              		.section	.text.HomeSet,"ax",%progbits
 711              		.align	1
 712              		.global	HomeSet
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HomeSet:
 718              	.LFB253:
 819:Core/Src/main.c ****   //Set all joints to home
 719              		.loc 1 819 15 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI33:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 821:Core/Src/main.c ****   Joint1Set(joint1);
 728              		.loc 1 821 3 view .LVU119
 821:Core/Src/main.c ****   Joint1Set(joint1);
 729              		.loc 1 821 10 is_stmt 0 view .LVU120
 730 0002 5A24     		movs	r4, #90
 731 0004 0E4B     		ldr	r3, .L58
 732 0006 1C60     		str	r4, [r3]
 822:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 733              		.loc 1 822 3 is_stmt 1 view .LVU121
 734 0008 2046     		mov	r0, r4
 735 000a FFF7FEFF 		bl	Joint1Set
 736              	.LVL59:
 823:Core/Src/main.c ****   Joint2Set(joint2);
 737              		.loc 1 823 3 view .LVU122
 823:Core/Src/main.c ****   Joint2Set(joint2);
 738              		.loc 1 823 10 is_stmt 0 view .LVU123
 739 000e 0D4B     		ldr	r3, .L58+4
 740 0010 1C60     		str	r4, [r3]
 824:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 741              		.loc 1 824 3 is_stmt 1 view .LVU124
 742 0012 2046     		mov	r0, r4
 743 0014 FFF7FEFF 		bl	Joint2Set
 744              	.LVL60:
 825:Core/Src/main.c ****   Joint3Set(joint3);
 745              		.loc 1 825 3 view .LVU125
 825:Core/Src/main.c ****   Joint3Set(joint3);
 746              		.loc 1 825 10 is_stmt 0 view .LVU126
 747 0018 0B4B     		ldr	r3, .L58+8
 748 001a 1C60     		str	r4, [r3]
 826:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 749              		.loc 1 826 3 is_stmt 1 view .LVU127
 750 001c 2046     		mov	r0, r4
 751 001e FFF7FEFF 		bl	Joint3Set
 752              	.LVL61:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 29


 827:Core/Src/main.c ****   Joint4Set(joint4);
 753              		.loc 1 827 3 view .LVU128
 827:Core/Src/main.c ****   Joint4Set(joint4);
 754              		.loc 1 827 10 is_stmt 0 view .LVU129
 755 0022 0A4B     		ldr	r3, .L58+12
 756 0024 1C60     		str	r4, [r3]
 828:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 757              		.loc 1 828 3 is_stmt 1 view .LVU130
 758 0026 2046     		mov	r0, r4
 759 0028 FFF7FEFF 		bl	Joint4Set
 760              	.LVL62:
 829:Core/Src/main.c ****   Joint5Set(joint5);
 761              		.loc 1 829 3 view .LVU131
 829:Core/Src/main.c ****   Joint5Set(joint5);
 762              		.loc 1 829 10 is_stmt 0 view .LVU132
 763 002c 084B     		ldr	r3, .L58+16
 764 002e 1C60     		str	r4, [r3]
 830:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 765              		.loc 1 830 3 is_stmt 1 view .LVU133
 766 0030 2046     		mov	r0, r4
 767 0032 FFF7FEFF 		bl	Joint5Set
 768              	.LVL63:
 831:Core/Src/main.c ****   ActuatorSet(actuator);
 769              		.loc 1 831 3 view .LVU134
 831:Core/Src/main.c ****   ActuatorSet(actuator);
 770              		.loc 1 831 12 is_stmt 0 view .LVU135
 771 0036 074B     		ldr	r3, .L58+20
 772 0038 0022     		movs	r2, #0
 773 003a 1A60     		str	r2, [r3]
 832:Core/Src/main.c **** }
 774              		.loc 1 832 3 is_stmt 1 view .LVU136
 833:Core/Src/main.c **** 
 775              		.loc 1 833 1 is_stmt 0 view .LVU137
 776 003c 10BD     		pop	{r4, pc}
 777              	.L59:
 778 003e 00BF     		.align	2
 779              	.L58:
 780 0040 00000000 		.word	joint1
 781 0044 00000000 		.word	joint2
 782 0048 00000000 		.word	joint3
 783 004c 00000000 		.word	joint4
 784 0050 00000000 		.word	joint5
 785 0054 00000000 		.word	actuator
 786              		.cfi_endproc
 787              	.LFE253:
 789              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 790              		.align	2
 791              	.LC2:
 792 0000 73657400 		.ascii	"set\000"
 793              		.align	2
 794              	.LC3:
 795 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 795      2533642D 
 795      2533642D 
 795      2533642D 
 795      2533642D 
 796              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 30


 797              	.LC4:
 798 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 798      69766564 
 798      206E756D 
 798      62657273 
 798      3A202564 
 799 0042 0000     		.align	2
 800              	.LC5:
 801 0044 496E7661 		.ascii	"Invalid format!\015\000"
 801      6C696420 
 801      666F726D 
 801      6174210D 
 801      00
 802 0055 000000   		.align	2
 803              	.LC6:
 804 0058 6A6F696E 		.ascii	"joint1\000"
 804      743100
 805 005f 00       		.align	2
 806              	.LC7:
 807 0060 25336400 		.ascii	"%3d\000"
 808              		.align	2
 809              	.LC8:
 810 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 810      74312073 
 810      65743A20 
 810      25640D0A 
 810      00
 811 0075 000000   		.align	2
 812              	.LC9:
 813 0078 6A6F696E 		.ascii	"joint2\000"
 813      743200
 814 007f 00       		.align	2
 815              	.LC10:
 816 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 816      74322073 
 816      65743A20 
 816      25640D0A 
 816      00
 817 0091 000000   		.align	2
 818              	.LC11:
 819 0094 6A6F696E 		.ascii	"joint3\000"
 819      743300
 820 009b 00       		.align	2
 821              	.LC12:
 822 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 822      74332073 
 822      65743A20 
 822      25640D0A 
 822      00
 823 00ad 000000   		.align	2
 824              	.LC13:
 825 00b0 6A6F696E 		.ascii	"joint4\000"
 825      743400
 826 00b7 00       		.align	2
 827              	.LC14:
 828 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 828      74342073 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 31


 828      65743A20 
 828      25640D0A 
 828      00
 829 00c9 000000   		.align	2
 830              	.LC15:
 831 00cc 6A6F696E 		.ascii	"joint5\000"
 831      743500
 832 00d3 00       		.align	2
 833              	.LC16:
 834 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 834      74352073 
 834      65743A20 
 834      25640D0A 
 834      00
 835 00e5 000000   		.align	2
 836              	.LC17:
 837 00e8 61637475 		.ascii	"actuator\000"
 837      61746F72 
 837      00
 838 00f1 000000   		.align	2
 839              	.LC18:
 840 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 840      61746F72 
 840      20736574 
 840      3A202564 
 840      0D0A00
 841 0107 00       		.align	2
 842              	.LC19:
 843 0108 6A317265 		.ascii	"j1read\000"
 843      616400
 844 010f 00       		.align	2
 845              	.LC20:
 846 0110 6A327265 		.ascii	"j2read\000"
 846      616400
 847 0117 00       		.align	2
 848              	.LC21:
 849 0118 6A337265 		.ascii	"j3read\000"
 849      616400
 850 011f 00       		.align	2
 851              	.LC22:
 852 0120 6A347265 		.ascii	"j4read\000"
 852      616400
 853 0127 00       		.align	2
 854              	.LC23:
 855 0128 6A357265 		.ascii	"j5read\000"
 855      616400
 856 012f 00       		.align	2
 857              	.LC24:
 858 0130 61726561 		.ascii	"aread\000"
 858      6400
 859 0136 0000     		.align	2
 860              	.LC25:
 861 0138 686F6D65 		.ascii	"home\000"
 861      00
 862 013d 000000   		.align	2
 863              	.LC26:
 864 0140 53657420 		.ascii	"Set all joints home\015\000"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 32


 864      616C6C20 
 864      6A6F696E 
 864      74732068 
 864      6F6D650D 
 865 0155 000000   		.align	2
 866              	.LC27:
 867 0158 666C6173 		.ascii	"flash\000"
 867      6800
 868 015e 0000     		.align	2
 869              	.LC28:
 870 0160 4C454473 		.ascii	"LEDs Toggled\015\000"
 870      20546F67 
 870      676C6564 
 870      0D00
 871 016e 0000     		.align	2
 872              	.LC29:
 873 0170 7072696E 		.ascii	"print\000"
 873      7400
 874 0176 0000     		.align	2
 875              	.LC30:
 876 0178 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 876      74313A20 
 876      25640D0A 
 876      00
 877 0185 000000   		.align	2
 878              	.LC31:
 879 0188 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 879      74323A20 
 879      25640D0A 
 879      00
 880 0195 000000   		.align	2
 881              	.LC32:
 882 0198 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 882      74333A20 
 882      25640D0A 
 882      00
 883 01a5 000000   		.align	2
 884              	.LC33:
 885 01a8 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 885      74343A20 
 885      25640D0A 
 885      00
 886 01b5 000000   		.align	2
 887              	.LC34:
 888 01b8 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 888      74353A20 
 888      25640D0A 
 888      00
 889 01c5 000000   		.align	2
 890              	.LC35:
 891 01c8 41637475 		.ascii	"Actuator: %d\015\012\000"
 891      61746F72 
 891      3A202564 
 891      0D0A00
 892 01d7 00       		.align	2
 893              	.LC36:
 894 01d8 52656365 		.ascii	"Received: %s\015\012\000"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 33


 894      69766564 
 894      3A202573 
 894      0D0A00
 895              		.section	.text.ProcessReceivedString,"ax",%progbits
 896              		.align	1
 897              		.global	ProcessReceivedString
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 902              	ProcessReceivedString:
 903              	.LVL64:
 904              	.LFB251:
 574:Core/Src/main.c ****     // Check if the string starts with "set"
 905              		.loc 1 574 1 is_stmt 1 view -0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 256
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 574:Core/Src/main.c ****     // Check if the string starts with "set"
 909              		.loc 1 574 1 is_stmt 0 view .LVU139
 910 0000 30B5     		push	{r4, r5, lr}
 911              	.LCFI34:
 912              		.cfi_def_cfa_offset 12
 913              		.cfi_offset 4, -12
 914              		.cfi_offset 5, -8
 915              		.cfi_offset 14, -4
 916 0002 C5B0     		sub	sp, sp, #276
 917              	.LCFI35:
 918              		.cfi_def_cfa_offset 288
 919 0004 0446     		mov	r4, r0
 576:Core/Src/main.c ****     {
 920              		.loc 1 576 5 is_stmt 1 view .LVU140
 576:Core/Src/main.c ****     {
 921              		.loc 1 576 9 is_stmt 0 view .LVU141
 922 0006 0322     		movs	r2, #3
 923 0008 A049     		ldr	r1, .L124
 924 000a FFF7FEFF 		bl	strncmp
 925              	.LVL65:
 576:Core/Src/main.c ****     {
 926              		.loc 1 576 8 discriminator 1 view .LVU142
 927 000e 0028     		cmp	r0, #0
 928 0010 00F09B80 		beq	.L100
 622:Core/Src/main.c ****     {
 929              		.loc 1 622 10 is_stmt 1 view .LVU143
 622:Core/Src/main.c ****     {
 930              		.loc 1 622 14 is_stmt 0 view .LVU144
 931 0014 0622     		movs	r2, #6
 932 0016 9E49     		ldr	r1, .L124+4
 933 0018 2046     		mov	r0, r4
 934 001a FFF7FEFF 		bl	strncmp
 935              	.LVL66:
 622:Core/Src/main.c ****     {
 936              		.loc 1 622 13 discriminator 1 view .LVU145
 937 001e 0028     		cmp	r0, #0
 938 0020 00F0F380 		beq	.L101
 643:Core/Src/main.c ****     {
 939              		.loc 1 643 10 is_stmt 1 view .LVU146
 643:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 34


 940              		.loc 1 643 14 is_stmt 0 view .LVU147
 941 0024 0622     		movs	r2, #6
 942 0026 9B49     		ldr	r1, .L124+8
 943 0028 2046     		mov	r0, r4
 944 002a FFF7FEFF 		bl	strncmp
 945              	.LVL67:
 643:Core/Src/main.c ****     {
 946              		.loc 1 643 13 discriminator 1 view .LVU148
 947 002e 0028     		cmp	r0, #0
 948 0030 00F00681 		beq	.L102
 664:Core/Src/main.c ****     {
 949              		.loc 1 664 10 is_stmt 1 view .LVU149
 664:Core/Src/main.c ****     {
 950              		.loc 1 664 14 is_stmt 0 view .LVU150
 951 0034 0622     		movs	r2, #6
 952 0036 9849     		ldr	r1, .L124+12
 953 0038 2046     		mov	r0, r4
 954 003a FFF7FEFF 		bl	strncmp
 955              	.LVL68:
 664:Core/Src/main.c ****     {
 956              		.loc 1 664 13 discriminator 1 view .LVU151
 957 003e 0028     		cmp	r0, #0
 958 0040 00F01981 		beq	.L103
 685:Core/Src/main.c ****     {
 959              		.loc 1 685 10 is_stmt 1 view .LVU152
 685:Core/Src/main.c ****     {
 960              		.loc 1 685 14 is_stmt 0 view .LVU153
 961 0044 0622     		movs	r2, #6
 962 0046 9549     		ldr	r1, .L124+16
 963 0048 2046     		mov	r0, r4
 964 004a FFF7FEFF 		bl	strncmp
 965              	.LVL69:
 685:Core/Src/main.c ****     {
 966              		.loc 1 685 13 discriminator 1 view .LVU154
 967 004e 0028     		cmp	r0, #0
 968 0050 00F07D81 		beq	.L104
 706:Core/Src/main.c ****     {
 969              		.loc 1 706 10 is_stmt 1 view .LVU155
 706:Core/Src/main.c ****     {
 970              		.loc 1 706 14 is_stmt 0 view .LVU156
 971 0054 0622     		movs	r2, #6
 972 0056 9249     		ldr	r1, .L124+20
 973 0058 2046     		mov	r0, r4
 974 005a FFF7FEFF 		bl	strncmp
 975              	.LVL70:
 706:Core/Src/main.c ****     {
 976              		.loc 1 706 13 discriminator 1 view .LVU157
 977 005e 0028     		cmp	r0, #0
 978 0060 00F09181 		beq	.L105
 727:Core/Src/main.c ****     {
 979              		.loc 1 727 10 is_stmt 1 view .LVU158
 727:Core/Src/main.c ****     {
 980              		.loc 1 727 14 is_stmt 0 view .LVU159
 981 0064 0822     		movs	r2, #8
 982 0066 8F49     		ldr	r1, .L124+24
 983 0068 2046     		mov	r0, r4
 984 006a FFF7FEFF 		bl	strncmp
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 35


 985              	.LVL71:
 727:Core/Src/main.c ****     {
 986              		.loc 1 727 13 discriminator 1 view .LVU160
 987 006e 0028     		cmp	r0, #0
 988 0070 00F0A581 		beq	.L106
 747:Core/Src/main.c ****     {
 989              		.loc 1 747 10 is_stmt 1 view .LVU161
 747:Core/Src/main.c ****     {
 990              		.loc 1 747 14 is_stmt 0 view .LVU162
 991 0074 0622     		movs	r2, #6
 992 0076 8C49     		ldr	r1, .L124+28
 993 0078 2046     		mov	r0, r4
 994 007a FFF7FEFF 		bl	strncmp
 995              	.LVL72:
 747:Core/Src/main.c ****     {
 996              		.loc 1 747 13 discriminator 1 view .LVU163
 997 007e 0546     		mov	r5, r0
 998 0080 0028     		cmp	r0, #0
 999 0082 00F0AE81 		beq	.L107
 752:Core/Src/main.c ****     {
 1000              		.loc 1 752 10 is_stmt 1 view .LVU164
 752:Core/Src/main.c ****     {
 1001              		.loc 1 752 14 is_stmt 0 view .LVU165
 1002 0086 0622     		movs	r2, #6
 1003 0088 8849     		ldr	r1, .L124+32
 1004 008a 2046     		mov	r0, r4
 1005 008c FFF7FEFF 		bl	strncmp
 1006              	.LVL73:
 752:Core/Src/main.c ****     {
 1007              		.loc 1 752 13 discriminator 1 view .LVU166
 1008 0090 0546     		mov	r5, r0
 1009 0092 0028     		cmp	r0, #0
 1010 0094 00F0B081 		beq	.L108
 757:Core/Src/main.c ****     {
 1011              		.loc 1 757 10 is_stmt 1 view .LVU167
 757:Core/Src/main.c ****     {
 1012              		.loc 1 757 14 is_stmt 0 view .LVU168
 1013 0098 0622     		movs	r2, #6
 1014 009a 8549     		ldr	r1, .L124+36
 1015 009c 2046     		mov	r0, r4
 1016 009e FFF7FEFF 		bl	strncmp
 1017              	.LVL74:
 757:Core/Src/main.c ****     {
 1018              		.loc 1 757 13 discriminator 1 view .LVU169
 1019 00a2 0546     		mov	r5, r0
 1020 00a4 0028     		cmp	r0, #0
 1021 00a6 00F0B281 		beq	.L109
 762:Core/Src/main.c ****       {
 1022              		.loc 1 762 12 is_stmt 1 view .LVU170
 762:Core/Src/main.c ****       {
 1023              		.loc 1 762 16 is_stmt 0 view .LVU171
 1024 00aa 0622     		movs	r2, #6
 1025 00ac 8149     		ldr	r1, .L124+40
 1026 00ae 2046     		mov	r0, r4
 1027 00b0 FFF7FEFF 		bl	strncmp
 1028              	.LVL75:
 762:Core/Src/main.c ****       {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 36


 1029              		.loc 1 762 15 discriminator 1 view .LVU172
 1030 00b4 0546     		mov	r5, r0
 1031 00b6 0028     		cmp	r0, #0
 1032 00b8 00F0B481 		beq	.L110
 767:Core/Src/main.c ****       {
 1033              		.loc 1 767 12 is_stmt 1 view .LVU173
 767:Core/Src/main.c ****       {
 1034              		.loc 1 767 16 is_stmt 0 view .LVU174
 1035 00bc 0622     		movs	r2, #6
 1036 00be 7E49     		ldr	r1, .L124+44
 1037 00c0 2046     		mov	r0, r4
 1038 00c2 FFF7FEFF 		bl	strncmp
 1039              	.LVL76:
 767:Core/Src/main.c ****       {
 1040              		.loc 1 767 15 discriminator 1 view .LVU175
 1041 00c6 0546     		mov	r5, r0
 1042 00c8 0028     		cmp	r0, #0
 1043 00ca 00F0B681 		beq	.L111
 772:Core/Src/main.c ****       {
 1044              		.loc 1 772 12 is_stmt 1 view .LVU176
 772:Core/Src/main.c ****       {
 1045              		.loc 1 772 16 is_stmt 0 view .LVU177
 1046 00ce 0522     		movs	r2, #5
 1047 00d0 7A49     		ldr	r1, .L124+48
 1048 00d2 2046     		mov	r0, r4
 1049 00d4 FFF7FEFF 		bl	strncmp
 1050              	.LVL77:
 772:Core/Src/main.c ****       {
 1051              		.loc 1 772 15 discriminator 1 view .LVU178
 1052 00d8 0028     		cmp	r0, #0
 1053 00da 49D0     		beq	.L60
 779:Core/Src/main.c ****     {
 1054              		.loc 1 779 10 is_stmt 1 view .LVU179
 779:Core/Src/main.c ****     {
 1055              		.loc 1 779 14 is_stmt 0 view .LVU180
 1056 00dc 0422     		movs	r2, #4
 1057 00de 7849     		ldr	r1, .L124+52
 1058 00e0 2046     		mov	r0, r4
 1059 00e2 FFF7FEFF 		bl	strncmp
 1060              	.LVL78:
 779:Core/Src/main.c ****     {
 1061              		.loc 1 779 13 discriminator 1 view .LVU181
 1062 00e6 0028     		cmp	r0, #0
 1063 00e8 00F0B281 		beq	.L112
 789:Core/Src/main.c ****     {
 1064              		.loc 1 789 10 is_stmt 1 view .LVU182
 789:Core/Src/main.c ****     {
 1065              		.loc 1 789 14 is_stmt 0 view .LVU183
 1066 00ec 0522     		movs	r2, #5
 1067 00ee 7549     		ldr	r1, .L124+56
 1068 00f0 2046     		mov	r0, r4
 1069 00f2 FFF7FEFF 		bl	strncmp
 1070              	.LVL79:
 789:Core/Src/main.c ****     {
 1071              		.loc 1 789 13 discriminator 1 view .LVU184
 1072 00f6 0028     		cmp	r0, #0
 1073 00f8 00F0B081 		beq	.L113
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 37


 799:Core/Src/main.c ****     {
 1074              		.loc 1 799 10 is_stmt 1 view .LVU185
 799:Core/Src/main.c ****     {
 1075              		.loc 1 799 14 is_stmt 0 view .LVU186
 1076 00fc 0522     		movs	r2, #5
 1077 00fe 7249     		ldr	r1, .L124+60
 1078 0100 2046     		mov	r0, r4
 1079 0102 FFF7FEFF 		bl	strncmp
 1080              	.LVL80:
 799:Core/Src/main.c ****     {
 1081              		.loc 1 799 13 discriminator 1 view .LVU187
 1082 0106 0028     		cmp	r0, #0
 1083 0108 40F0B281 		bne	.L98
 801:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 1084              		.loc 1 801 8 is_stmt 1 view .LVU188
 1085 010c 6F4B     		ldr	r3, .L124+64
 1086 010e 1968     		ldr	r1, [r3]
 1087 0110 6F48     		ldr	r0, .L124+68
 1088 0112 FFF7FEFF 		bl	printf
 1089              	.LVL81:
 802:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 1090              		.loc 1 802 8 view .LVU189
 1091 0116 6F4B     		ldr	r3, .L124+72
 1092 0118 1968     		ldr	r1, [r3]
 1093 011a 6F48     		ldr	r0, .L124+76
 1094 011c FFF7FEFF 		bl	printf
 1095              	.LVL82:
 803:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 1096              		.loc 1 803 8 view .LVU190
 1097 0120 6E4B     		ldr	r3, .L124+80
 1098 0122 1968     		ldr	r1, [r3]
 1099 0124 6E48     		ldr	r0, .L124+84
 1100 0126 FFF7FEFF 		bl	printf
 1101              	.LVL83:
 804:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 1102              		.loc 1 804 8 view .LVU191
 1103 012a 6E4B     		ldr	r3, .L124+88
 1104 012c 1968     		ldr	r1, [r3]
 1105 012e 6E48     		ldr	r0, .L124+92
 1106 0130 FFF7FEFF 		bl	printf
 1107              	.LVL84:
 805:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 1108              		.loc 1 805 8 view .LVU192
 1109 0134 6D4B     		ldr	r3, .L124+96
 1110 0136 1968     		ldr	r1, [r3]
 1111 0138 6D48     		ldr	r0, .L124+100
 1112 013a FFF7FEFF 		bl	printf
 1113              	.LVL85:
 806:Core/Src/main.c ****     }
 1114              		.loc 1 806 8 view .LVU193
 1115 013e 6D4B     		ldr	r3, .L124+104
 1116 0140 1968     		ldr	r1, [r3]
 1117 0142 6D48     		ldr	r0, .L124+108
 1118 0144 FFF7FEFF 		bl	printf
 1119              	.LVL86:
 1120 0148 12E0     		b	.L60
 1121              	.L100:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 38


 579:Core/Src/main.c **** 
 1122              		.loc 1 579 9 view .LVU194
 1123              	.LVL87:
 582:Core/Src/main.c ****         {
 1124              		.loc 1 582 9 view .LVU195
 582:Core/Src/main.c ****         {
 1125              		.loc 1 582 13 is_stmt 0 view .LVU196
 1126 014a 6A4B     		ldr	r3, .L124+104
 1127 014c 0393     		str	r3, [sp, #12]
 1128 014e 674B     		ldr	r3, .L124+96
 1129 0150 0293     		str	r3, [sp, #8]
 1130 0152 644B     		ldr	r3, .L124+88
 1131 0154 0193     		str	r3, [sp, #4]
 1132 0156 614B     		ldr	r3, .L124+80
 1133 0158 0093     		str	r3, [sp]
 1134 015a 5E4B     		ldr	r3, .L124+72
 1135 015c 5B4A     		ldr	r2, .L124+64
 1136 015e 6749     		ldr	r1, .L124+112
 1137 0160 201D     		adds	r0, r4, #4
 1138              	.LVL88:
 582:Core/Src/main.c ****         {
 1139              		.loc 1 582 13 view .LVU197
 1140 0162 FFF7FEFF 		bl	sscanf
 1141              	.LVL89:
 582:Core/Src/main.c ****         {
 1142              		.loc 1 582 12 discriminator 1 view .LVU198
 1143 0166 0628     		cmp	r0, #6
 1144 0168 04D0     		beq	.L114
 618:Core/Src/main.c ****         }
 1145              		.loc 1 618 13 is_stmt 1 view .LVU199
 1146 016a 6548     		ldr	r0, .L124+116
 1147 016c FFF7FEFF 		bl	puts
 1148              	.LVL90:
 1149              	.L60:
 814:Core/Src/main.c **** 
 1150              		.loc 1 814 1 is_stmt 0 view .LVU200
 1151 0170 45B0     		add	sp, sp, #276
 1152              	.LCFI36:
 1153              		.cfi_remember_state
 1154              		.cfi_def_cfa_offset 12
 1155              		@ sp needed
 1156 0172 30BD     		pop	{r4, r5, pc}
 1157              	.LVL91:
 1158              	.L114:
 1159              	.LCFI37:
 1160              		.cfi_restore_state
 585:Core/Src/main.c **** 
 1161              		.loc 1 585 13 is_stmt 1 view .LVU201
 1162 0174 554C     		ldr	r4, .L124+64
 1163              	.LVL92:
 585:Core/Src/main.c **** 
 1164              		.loc 1 585 13 is_stmt 0 view .LVU202
 1165 0176 5F4B     		ldr	r3, .L124+104
 1166 0178 1B68     		ldr	r3, [r3]
 1167 017a 0293     		str	r3, [sp, #8]
 1168 017c 5B4B     		ldr	r3, .L124+96
 1169 017e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 39


 1170 0180 0193     		str	r3, [sp, #4]
 1171 0182 584B     		ldr	r3, .L124+88
 1172 0184 1B68     		ldr	r3, [r3]
 1173 0186 0093     		str	r3, [sp]
 1174 0188 544B     		ldr	r3, .L124+80
 1175 018a 1B68     		ldr	r3, [r3]
 1176 018c 514A     		ldr	r2, .L124+72
 1177 018e 1268     		ldr	r2, [r2]
 1178 0190 2168     		ldr	r1, [r4]
 1179 0192 5C48     		ldr	r0, .L124+120
 1180 0194 FFF7FEFF 		bl	printf
 1181              	.LVL93:
 588:Core/Src/main.c ****                 // send to joint
 1182              		.loc 1 588 13 is_stmt 1 view .LVU203
 588:Core/Src/main.c ****                 // send to joint
 1183              		.loc 1 588 24 is_stmt 0 view .LVU204
 1184 0198 2068     		ldr	r0, [r4]
 1185 019a 5B4B     		ldr	r3, .L124+124
 1186 019c 1B68     		ldr	r3, [r3]
 588:Core/Src/main.c ****                 // send to joint
 1187              		.loc 1 588 16 view .LVU205
 1188 019e 9842     		cmp	r0, r3
 1189 01a0 24D1     		bne	.L115
 1190              	.L63:
 593:Core/Src/main.c ****                 // send to joint
 1191              		.loc 1 593 13 is_stmt 1 view .LVU206
 593:Core/Src/main.c ****                 // send to joint
 1192              		.loc 1 593 24 is_stmt 0 view .LVU207
 1193 01a2 4C4B     		ldr	r3, .L124+72
 1194 01a4 1868     		ldr	r0, [r3]
 1195 01a6 594B     		ldr	r3, .L124+128
 1196 01a8 1B68     		ldr	r3, [r3]
 593:Core/Src/main.c ****                 // send to joint
 1197              		.loc 1 593 16 view .LVU208
 1198 01aa 9842     		cmp	r0, r3
 1199 01ac 23D1     		bne	.L116
 1200              	.L64:
 598:Core/Src/main.c ****                 // send to joint
 1201              		.loc 1 598 13 is_stmt 1 view .LVU209
 598:Core/Src/main.c ****                 // send to joint
 1202              		.loc 1 598 24 is_stmt 0 view .LVU210
 1203 01ae 4B4B     		ldr	r3, .L124+80
 1204 01b0 1868     		ldr	r0, [r3]
 1205 01b2 574B     		ldr	r3, .L124+132
 1206 01b4 1B68     		ldr	r3, [r3]
 598:Core/Src/main.c ****                 // send to joint
 1207              		.loc 1 598 16 view .LVU211
 1208 01b6 9842     		cmp	r0, r3
 1209 01b8 22D1     		bne	.L117
 1210              	.L65:
 603:Core/Src/main.c ****                 // send to joint
 1211              		.loc 1 603 13 is_stmt 1 view .LVU212
 603:Core/Src/main.c ****                 // send to joint
 1212              		.loc 1 603 24 is_stmt 0 view .LVU213
 1213 01ba 4A4B     		ldr	r3, .L124+88
 1214 01bc 1B68     		ldr	r3, [r3]
 1215 01be 554A     		ldr	r2, .L124+136
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 40


 1216 01c0 1268     		ldr	r2, [r2]
 603:Core/Src/main.c ****                 // send to joint
 1217              		.loc 1 603 16 view .LVU214
 1218 01c2 9342     		cmp	r3, r2
 1219 01c4 01D0     		beq	.L66
 605:Core/Src/main.c ****             }
 1220              		.loc 1 605 17 is_stmt 1 view .LVU215
 605:Core/Src/main.c ****             }
 1221              		.loc 1 605 29 is_stmt 0 view .LVU216
 1222 01c6 534A     		ldr	r2, .L124+136
 1223 01c8 1360     		str	r3, [r2]
 1224              	.L66:
 607:Core/Src/main.c ****                 // send to joint
 1225              		.loc 1 607 13 is_stmt 1 view .LVU217
 607:Core/Src/main.c ****                 // send to joint
 1226              		.loc 1 607 24 is_stmt 0 view .LVU218
 1227 01ca 484B     		ldr	r3, .L124+96
 1228 01cc 1B68     		ldr	r3, [r3]
 1229 01ce 524A     		ldr	r2, .L124+140
 1230 01d0 1268     		ldr	r2, [r2]
 607:Core/Src/main.c ****                 // send to joint
 1231              		.loc 1 607 16 view .LVU219
 1232 01d2 9342     		cmp	r3, r2
 1233 01d4 01D0     		beq	.L67
 609:Core/Src/main.c ****             }
 1234              		.loc 1 609 17 is_stmt 1 view .LVU220
 609:Core/Src/main.c ****             }
 1235              		.loc 1 609 29 is_stmt 0 view .LVU221
 1236 01d6 504A     		ldr	r2, .L124+140
 1237 01d8 1360     		str	r3, [r2]
 1238              	.L67:
 611:Core/Src/main.c ****                 // send to actuator
 1239              		.loc 1 611 13 is_stmt 1 view .LVU222
 611:Core/Src/main.c ****                 // send to actuator
 1240              		.loc 1 611 26 is_stmt 0 view .LVU223
 1241 01da 464B     		ldr	r3, .L124+104
 1242 01dc 1B68     		ldr	r3, [r3]
 1243 01de 4F4A     		ldr	r2, .L124+144
 1244 01e0 1268     		ldr	r2, [r2]
 611:Core/Src/main.c ****                 // send to actuator
 1245              		.loc 1 611 16 view .LVU224
 1246 01e2 9342     		cmp	r3, r2
 1247 01e4 C4D0     		beq	.L60
 613:Core/Src/main.c ****             }
 1248              		.loc 1 613 17 is_stmt 1 view .LVU225
 613:Core/Src/main.c ****             }
 1249              		.loc 1 613 31 is_stmt 0 view .LVU226
 1250 01e6 4D4A     		ldr	r2, .L124+144
 1251 01e8 1360     		str	r3, [r2]
 1252 01ea C1E7     		b	.L60
 1253              	.L115:
 1254              	.LBB14:
 590:Core/Src/main.c ****                 Joint1Set(joint1);
 1255              		.loc 1 590 17 is_stmt 1 view .LVU227
 590:Core/Src/main.c ****                 Joint1Set(joint1);
 1256              		.loc 1 590 29 is_stmt 0 view .LVU228
 1257 01ec 464B     		ldr	r3, .L124+124
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 41


 1258 01ee 1860     		str	r0, [r3]
 591:Core/Src/main.c ****             }
 1259              		.loc 1 591 17 is_stmt 1 view .LVU229
 1260 01f0 FFF7FEFF 		bl	Joint1Set
 1261              	.LVL94:
 1262 01f4 D5E7     		b	.L63
 1263              	.L116:
 1264              	.LBE14:
 1265              	.LBB15:
 595:Core/Src/main.c ****                 Joint2Set(joint2);
 1266              		.loc 1 595 17 view .LVU230
 595:Core/Src/main.c ****                 Joint2Set(joint2);
 1267              		.loc 1 595 29 is_stmt 0 view .LVU231
 1268 01f6 454B     		ldr	r3, .L124+128
 1269 01f8 1860     		str	r0, [r3]
 596:Core/Src/main.c ****             }
 1270              		.loc 1 596 17 is_stmt 1 view .LVU232
 1271 01fa FFF7FEFF 		bl	Joint2Set
 1272              	.LVL95:
 1273 01fe D6E7     		b	.L64
 1274              	.L117:
 1275              	.LBE15:
 1276              	.LBB16:
 600:Core/Src/main.c ****                 Joint3Set(joint3);
 1277              		.loc 1 600 17 view .LVU233
 600:Core/Src/main.c ****                 Joint3Set(joint3);
 1278              		.loc 1 600 29 is_stmt 0 view .LVU234
 1279 0200 434B     		ldr	r3, .L124+132
 1280 0202 1860     		str	r0, [r3]
 601:Core/Src/main.c ****             }
 1281              		.loc 1 601 17 is_stmt 1 view .LVU235
 1282 0204 FFF7FEFF 		bl	Joint3Set
 1283              	.LVL96:
 1284 0208 D7E7     		b	.L65
 1285              	.LVL97:
 1286              	.L101:
 601:Core/Src/main.c ****             }
 1287              		.loc 1 601 17 is_stmt 0 view .LVU236
 1288              	.LBE16:
 624:Core/Src/main.c **** 
 1289              		.loc 1 624 9 is_stmt 1 view .LVU237
 626:Core/Src/main.c ****         {
 1290              		.loc 1 626 9 view .LVU238
 626:Core/Src/main.c ****         {
 1291              		.loc 1 626 13 is_stmt 0 view .LVU239
 1292 020a 304A     		ldr	r2, .L124+64
 1293 020c 4449     		ldr	r1, .L124+148
 1294 020e E01D     		adds	r0, r4, #7
 1295              	.LVL98:
 626:Core/Src/main.c ****         {
 1296              		.loc 1 626 13 view .LVU240
 1297 0210 FFF7FEFF 		bl	sscanf
 1298              	.LVL99:
 626:Core/Src/main.c ****         {
 1299              		.loc 1 626 12 discriminator 1 view .LVU241
 1300 0214 0128     		cmp	r0, #1
 1301 0216 03D0     		beq	.L118
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 42


 638:Core/Src/main.c ****         }
 1302              		.loc 1 638 13 is_stmt 1 view .LVU242
 1303 0218 3948     		ldr	r0, .L124+116
 1304 021a FFF7FEFF 		bl	puts
 1305              	.LVL100:
 1306 021e A7E7     		b	.L60
 1307              	.L118:
 629:Core/Src/main.c **** 
 1308              		.loc 1 629 13 view .LVU243
 1309 0220 2A4C     		ldr	r4, .L124+64
 1310              	.LVL101:
 629:Core/Src/main.c **** 
 1311              		.loc 1 629 13 is_stmt 0 view .LVU244
 1312 0222 2168     		ldr	r1, [r4]
 1313 0224 3F48     		ldr	r0, .L124+152
 1314 0226 FFF7FEFF 		bl	printf
 1315              	.LVL102:
 631:Core/Src/main.c ****                 Joint1Set(joint1);
 1316              		.loc 1 631 13 is_stmt 1 view .LVU245
 631:Core/Src/main.c ****                 Joint1Set(joint1);
 1317              		.loc 1 631 24 is_stmt 0 view .LVU246
 1318 022a 2068     		ldr	r0, [r4]
 1319 022c 364B     		ldr	r3, .L124+124
 1320 022e 1B68     		ldr	r3, [r3]
 631:Core/Src/main.c ****                 Joint1Set(joint1);
 1321              		.loc 1 631 16 view .LVU247
 1322 0230 9842     		cmp	r0, r3
 1323 0232 9DD0     		beq	.L60
 1324              	.LBB17:
 632:Core/Src/main.c ****                 prev_joint1 = joint1;
 1325              		.loc 1 632 17 is_stmt 1 view .LVU248
 1326 0234 FFF7FEFF 		bl	Joint1Set
 1327              	.LVL103:
 633:Core/Src/main.c ****             }
 1328              		.loc 1 633 17 view .LVU249
 633:Core/Src/main.c ****             }
 1329              		.loc 1 633 29 is_stmt 0 view .LVU250
 1330 0238 2268     		ldr	r2, [r4]
 1331 023a 334B     		ldr	r3, .L124+124
 1332 023c 1A60     		str	r2, [r3]
 1333 023e 97E7     		b	.L60
 1334              	.LVL104:
 1335              	.L102:
 633:Core/Src/main.c ****             }
 1336              		.loc 1 633 29 view .LVU251
 1337              	.LBE17:
 645:Core/Src/main.c **** 
 1338              		.loc 1 645 9 is_stmt 1 view .LVU252
 647:Core/Src/main.c ****         {
 1339              		.loc 1 647 9 view .LVU253
 647:Core/Src/main.c ****         {
 1340              		.loc 1 647 13 is_stmt 0 view .LVU254
 1341 0240 244A     		ldr	r2, .L124+72
 1342 0242 3749     		ldr	r1, .L124+148
 1343 0244 E01D     		adds	r0, r4, #7
 1344              	.LVL105:
 647:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 43


 1345              		.loc 1 647 13 view .LVU255
 1346 0246 FFF7FEFF 		bl	sscanf
 1347              	.LVL106:
 647:Core/Src/main.c ****         {
 1348              		.loc 1 647 12 discriminator 1 view .LVU256
 1349 024a 0128     		cmp	r0, #1
 1350 024c 03D0     		beq	.L119
 659:Core/Src/main.c ****         }
 1351              		.loc 1 659 13 is_stmt 1 view .LVU257
 1352 024e 2C48     		ldr	r0, .L124+116
 1353 0250 FFF7FEFF 		bl	puts
 1354              	.LVL107:
 1355 0254 8CE7     		b	.L60
 1356              	.L119:
 650:Core/Src/main.c **** 
 1357              		.loc 1 650 13 view .LVU258
 1358 0256 1F4C     		ldr	r4, .L124+72
 1359              	.LVL108:
 650:Core/Src/main.c **** 
 1360              		.loc 1 650 13 is_stmt 0 view .LVU259
 1361 0258 2168     		ldr	r1, [r4]
 1362 025a 3348     		ldr	r0, .L124+156
 1363 025c FFF7FEFF 		bl	printf
 1364              	.LVL109:
 652:Core/Src/main.c ****                 Joint2Set(joint2);
 1365              		.loc 1 652 13 is_stmt 1 view .LVU260
 652:Core/Src/main.c ****                 Joint2Set(joint2);
 1366              		.loc 1 652 24 is_stmt 0 view .LVU261
 1367 0260 2068     		ldr	r0, [r4]
 1368 0262 2A4B     		ldr	r3, .L124+128
 1369 0264 1B68     		ldr	r3, [r3]
 652:Core/Src/main.c ****                 Joint2Set(joint2);
 1370              		.loc 1 652 16 view .LVU262
 1371 0266 9842     		cmp	r0, r3
 1372 0268 82D0     		beq	.L60
 1373              	.LBB18:
 653:Core/Src/main.c ****                 prev_joint2 = joint2;
 1374              		.loc 1 653 17 is_stmt 1 view .LVU263
 1375 026a FFF7FEFF 		bl	Joint2Set
 1376              	.LVL110:
 654:Core/Src/main.c ****             }
 1377              		.loc 1 654 17 view .LVU264
 654:Core/Src/main.c ****             }
 1378              		.loc 1 654 29 is_stmt 0 view .LVU265
 1379 026e 2268     		ldr	r2, [r4]
 1380 0270 264B     		ldr	r3, .L124+128
 1381 0272 1A60     		str	r2, [r3]
 1382 0274 7CE7     		b	.L60
 1383              	.LVL111:
 1384              	.L103:
 654:Core/Src/main.c ****             }
 1385              		.loc 1 654 29 view .LVU266
 1386              	.LBE18:
 666:Core/Src/main.c **** 
 1387              		.loc 1 666 9 is_stmt 1 view .LVU267
 668:Core/Src/main.c ****         {
 1388              		.loc 1 668 9 view .LVU268
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 44


 668:Core/Src/main.c ****         {
 1389              		.loc 1 668 13 is_stmt 0 view .LVU269
 1390 0276 194A     		ldr	r2, .L124+80
 1391 0278 2949     		ldr	r1, .L124+148
 1392 027a E01D     		adds	r0, r4, #7
 1393              	.LVL112:
 668:Core/Src/main.c ****         {
 1394              		.loc 1 668 13 view .LVU270
 1395 027c FFF7FEFF 		bl	sscanf
 1396              	.LVL113:
 668:Core/Src/main.c ****         {
 1397              		.loc 1 668 12 discriminator 1 view .LVU271
 1398 0280 0128     		cmp	r0, #1
 1399 0282 53D0     		beq	.L120
 680:Core/Src/main.c ****         }
 1400              		.loc 1 680 13 is_stmt 1 view .LVU272
 1401 0284 1E48     		ldr	r0, .L124+116
 1402 0286 FFF7FEFF 		bl	puts
 1403              	.LVL114:
 1404 028a 71E7     		b	.L60
 1405              	.L125:
 1406              		.align	2
 1407              	.L124:
 1408 028c 00000000 		.word	.LC2
 1409 0290 58000000 		.word	.LC6
 1410 0294 78000000 		.word	.LC9
 1411 0298 94000000 		.word	.LC11
 1412 029c B0000000 		.word	.LC13
 1413 02a0 CC000000 		.word	.LC15
 1414 02a4 E8000000 		.word	.LC17
 1415 02a8 08010000 		.word	.LC19
 1416 02ac 10010000 		.word	.LC20
 1417 02b0 18010000 		.word	.LC21
 1418 02b4 20010000 		.word	.LC22
 1419 02b8 28010000 		.word	.LC23
 1420 02bc 30010000 		.word	.LC24
 1421 02c0 38010000 		.word	.LC25
 1422 02c4 58010000 		.word	.LC27
 1423 02c8 70010000 		.word	.LC29
 1424 02cc 00000000 		.word	joint1
 1425 02d0 78010000 		.word	.LC30
 1426 02d4 00000000 		.word	joint2
 1427 02d8 88010000 		.word	.LC31
 1428 02dc 00000000 		.word	joint3
 1429 02e0 98010000 		.word	.LC32
 1430 02e4 00000000 		.word	joint4
 1431 02e8 A8010000 		.word	.LC33
 1432 02ec 00000000 		.word	joint5
 1433 02f0 B8010000 		.word	.LC34
 1434 02f4 00000000 		.word	actuator
 1435 02f8 C8010000 		.word	.LC35
 1436 02fc 04000000 		.word	.LC3
 1437 0300 44000000 		.word	.LC5
 1438 0304 1C000000 		.word	.LC4
 1439 0308 00000000 		.word	prev_joint1
 1440 030c 00000000 		.word	prev_joint2
 1441 0310 00000000 		.word	prev_joint3
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 45


 1442 0314 00000000 		.word	prev_joint4
 1443 0318 00000000 		.word	prev_joint5
 1444 031c 00000000 		.word	prev_actuator
 1445 0320 60000000 		.word	.LC7
 1446 0324 64000000 		.word	.LC8
 1447 0328 80000000 		.word	.LC10
 1448              	.L120:
 671:Core/Src/main.c **** 
 1449              		.loc 1 671 13 view .LVU273
 1450 032c 534C     		ldr	r4, .L126
 1451              	.LVL115:
 671:Core/Src/main.c **** 
 1452              		.loc 1 671 13 is_stmt 0 view .LVU274
 1453 032e 2168     		ldr	r1, [r4]
 1454 0330 5348     		ldr	r0, .L126+4
 1455 0332 FFF7FEFF 		bl	printf
 1456              	.LVL116:
 673:Core/Src/main.c ****                 Joint3Set(joint3);
 1457              		.loc 1 673 13 is_stmt 1 view .LVU275
 673:Core/Src/main.c ****                 Joint3Set(joint3);
 1458              		.loc 1 673 24 is_stmt 0 view .LVU276
 1459 0336 2068     		ldr	r0, [r4]
 1460 0338 524B     		ldr	r3, .L126+8
 1461 033a 1B68     		ldr	r3, [r3]
 673:Core/Src/main.c ****                 Joint3Set(joint3);
 1462              		.loc 1 673 16 view .LVU277
 1463 033c 9842     		cmp	r0, r3
 1464 033e 3FF417AF 		beq	.L60
 1465              	.LBB19:
 674:Core/Src/main.c ****                 prev_joint3 = joint3;
 1466              		.loc 1 674 17 is_stmt 1 view .LVU278
 1467 0342 FFF7FEFF 		bl	Joint3Set
 1468              	.LVL117:
 675:Core/Src/main.c ****             }
 1469              		.loc 1 675 17 view .LVU279
 675:Core/Src/main.c ****             }
 1470              		.loc 1 675 29 is_stmt 0 view .LVU280
 1471 0346 2268     		ldr	r2, [r4]
 1472 0348 4E4B     		ldr	r3, .L126+8
 1473 034a 1A60     		str	r2, [r3]
 1474 034c 10E7     		b	.L60
 1475              	.LVL118:
 1476              	.L104:
 675:Core/Src/main.c ****             }
 1477              		.loc 1 675 29 view .LVU281
 1478              	.LBE19:
 687:Core/Src/main.c **** 
 1479              		.loc 1 687 9 is_stmt 1 view .LVU282
 689:Core/Src/main.c ****         {
 1480              		.loc 1 689 9 view .LVU283
 689:Core/Src/main.c ****         {
 1481              		.loc 1 689 13 is_stmt 0 view .LVU284
 1482 034e 4E4A     		ldr	r2, .L126+12
 1483 0350 4E49     		ldr	r1, .L126+16
 1484 0352 E01D     		adds	r0, r4, #7
 1485              	.LVL119:
 689:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 46


 1486              		.loc 1 689 13 view .LVU285
 1487 0354 FFF7FEFF 		bl	sscanf
 1488              	.LVL120:
 689:Core/Src/main.c ****         {
 1489              		.loc 1 689 12 discriminator 1 view .LVU286
 1490 0358 0128     		cmp	r0, #1
 1491 035a 03D0     		beq	.L121
 701:Core/Src/main.c ****         }
 1492              		.loc 1 701 13 is_stmt 1 view .LVU287
 1493 035c 4C48     		ldr	r0, .L126+20
 1494 035e FFF7FEFF 		bl	puts
 1495              	.LVL121:
 1496 0362 05E7     		b	.L60
 1497              	.L121:
 692:Core/Src/main.c **** 
 1498              		.loc 1 692 13 view .LVU288
 1499 0364 484C     		ldr	r4, .L126+12
 1500              	.LVL122:
 692:Core/Src/main.c **** 
 1501              		.loc 1 692 13 is_stmt 0 view .LVU289
 1502 0366 2168     		ldr	r1, [r4]
 1503 0368 4A48     		ldr	r0, .L126+24
 1504 036a FFF7FEFF 		bl	printf
 1505              	.LVL123:
 694:Core/Src/main.c ****                 Joint4Set(joint4);
 1506              		.loc 1 694 13 is_stmt 1 view .LVU290
 694:Core/Src/main.c ****                 Joint4Set(joint4);
 1507              		.loc 1 694 24 is_stmt 0 view .LVU291
 1508 036e 2068     		ldr	r0, [r4]
 1509 0370 494B     		ldr	r3, .L126+28
 1510 0372 1B68     		ldr	r3, [r3]
 694:Core/Src/main.c ****                 Joint4Set(joint4);
 1511              		.loc 1 694 16 view .LVU292
 1512 0374 9842     		cmp	r0, r3
 1513 0376 3FF4FBAE 		beq	.L60
 1514              	.LBB20:
 695:Core/Src/main.c ****                 prev_joint4 = joint4;
 1515              		.loc 1 695 17 is_stmt 1 view .LVU293
 1516 037a FFF7FEFF 		bl	Joint4Set
 1517              	.LVL124:
 696:Core/Src/main.c ****             }
 1518              		.loc 1 696 17 view .LVU294
 696:Core/Src/main.c ****             }
 1519              		.loc 1 696 29 is_stmt 0 view .LVU295
 1520 037e 2268     		ldr	r2, [r4]
 1521 0380 454B     		ldr	r3, .L126+28
 1522 0382 1A60     		str	r2, [r3]
 1523 0384 F4E6     		b	.L60
 1524              	.LVL125:
 1525              	.L105:
 696:Core/Src/main.c ****             }
 1526              		.loc 1 696 29 view .LVU296
 1527              	.LBE20:
 708:Core/Src/main.c **** 
 1528              		.loc 1 708 9 is_stmt 1 view .LVU297
 710:Core/Src/main.c ****         {
 1529              		.loc 1 710 9 view .LVU298
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 47


 710:Core/Src/main.c ****         {
 1530              		.loc 1 710 13 is_stmt 0 view .LVU299
 1531 0386 454A     		ldr	r2, .L126+32
 1532 0388 4049     		ldr	r1, .L126+16
 1533 038a E01D     		adds	r0, r4, #7
 1534              	.LVL126:
 710:Core/Src/main.c ****         {
 1535              		.loc 1 710 13 view .LVU300
 1536 038c FFF7FEFF 		bl	sscanf
 1537              	.LVL127:
 710:Core/Src/main.c ****         {
 1538              		.loc 1 710 12 discriminator 1 view .LVU301
 1539 0390 0128     		cmp	r0, #1
 1540 0392 03D0     		beq	.L122
 722:Core/Src/main.c ****         }
 1541              		.loc 1 722 13 is_stmt 1 view .LVU302
 1542 0394 3E48     		ldr	r0, .L126+20
 1543 0396 FFF7FEFF 		bl	puts
 1544              	.LVL128:
 1545 039a E9E6     		b	.L60
 1546              	.L122:
 713:Core/Src/main.c **** 
 1547              		.loc 1 713 13 view .LVU303
 1548 039c 3F4C     		ldr	r4, .L126+32
 1549              	.LVL129:
 713:Core/Src/main.c **** 
 1550              		.loc 1 713 13 is_stmt 0 view .LVU304
 1551 039e 2168     		ldr	r1, [r4]
 1552 03a0 3F48     		ldr	r0, .L126+36
 1553 03a2 FFF7FEFF 		bl	printf
 1554              	.LVL130:
 715:Core/Src/main.c ****                 Joint5Set(joint5);
 1555              		.loc 1 715 13 is_stmt 1 view .LVU305
 715:Core/Src/main.c ****                 Joint5Set(joint5);
 1556              		.loc 1 715 24 is_stmt 0 view .LVU306
 1557 03a6 2068     		ldr	r0, [r4]
 1558 03a8 3E4B     		ldr	r3, .L126+40
 1559 03aa 1B68     		ldr	r3, [r3]
 715:Core/Src/main.c ****                 Joint5Set(joint5);
 1560              		.loc 1 715 16 view .LVU307
 1561 03ac 9842     		cmp	r0, r3
 1562 03ae 3FF4DFAE 		beq	.L60
 1563              	.LBB21:
 716:Core/Src/main.c ****                 prev_joint5 = joint5;
 1564              		.loc 1 716 17 is_stmt 1 view .LVU308
 1565 03b2 FFF7FEFF 		bl	Joint5Set
 1566              	.LVL131:
 717:Core/Src/main.c ****             }
 1567              		.loc 1 717 17 view .LVU309
 717:Core/Src/main.c ****             }
 1568              		.loc 1 717 29 is_stmt 0 view .LVU310
 1569 03b6 2268     		ldr	r2, [r4]
 1570 03b8 3A4B     		ldr	r3, .L126+40
 1571 03ba 1A60     		str	r2, [r3]
 1572 03bc D8E6     		b	.L60
 1573              	.LVL132:
 1574              	.L106:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 48


 717:Core/Src/main.c ****             }
 1575              		.loc 1 717 29 view .LVU311
 1576              	.LBE21:
 729:Core/Src/main.c **** 
 1577              		.loc 1 729 9 is_stmt 1 view .LVU312
 731:Core/Src/main.c ****         {
 1578              		.loc 1 731 9 view .LVU313
 731:Core/Src/main.c ****         {
 1579              		.loc 1 731 13 is_stmt 0 view .LVU314
 1580 03be 3A4A     		ldr	r2, .L126+44
 1581 03c0 3249     		ldr	r1, .L126+16
 1582 03c2 04F10900 		add	r0, r4, #9
 1583              	.LVL133:
 731:Core/Src/main.c ****         {
 1584              		.loc 1 731 13 view .LVU315
 1585 03c6 FFF7FEFF 		bl	sscanf
 1586              	.LVL134:
 731:Core/Src/main.c ****         {
 1587              		.loc 1 731 12 discriminator 1 view .LVU316
 1588 03ca 0128     		cmp	r0, #1
 1589 03cc 03D0     		beq	.L123
 743:Core/Src/main.c ****         }
 1590              		.loc 1 743 13 is_stmt 1 view .LVU317
 1591 03ce 3048     		ldr	r0, .L126+20
 1592 03d0 FFF7FEFF 		bl	puts
 1593              	.LVL135:
 1594 03d4 CCE6     		b	.L60
 1595              	.L123:
 734:Core/Src/main.c **** 
 1596              		.loc 1 734 13 view .LVU318
 1597 03d6 344B     		ldr	r3, .L126+44
 1598 03d8 1968     		ldr	r1, [r3]
 1599 03da 3448     		ldr	r0, .L126+48
 1600 03dc FFF7FEFF 		bl	printf
 1601              	.LVL136:
 736:Core/Src/main.c ****                 ActuatorSet(actuator);
 1602              		.loc 1 736 13 view .LVU319
 1603 03e0 C6E6     		b	.L60
 1604              	.LVL137:
 1605              	.L107:
 749:Core/Src/main.c ****     }
 1606              		.loc 1 749 9 view .LVU320
 1607              	.LBB22:
 749:Core/Src/main.c ****     }
 1608              		.loc 1 749 9 view .LVU321
 749:Core/Src/main.c ****     }
 1609              		.loc 1 749 9 view .LVU322
 1610 03e2 334B     		ldr	r3, .L126+52
 1611 03e4 0493     		str	r3, [sp, #16]
 1612              	.LVL138:
 749:Core/Src/main.c ****     }
 1613              		.loc 1 749 9 discriminator 1 view .LVU323
 1614              	.LBB23:
 749:Core/Src/main.c ****     }
 1615              		.loc 1 749 9 discriminator 1 view .LVU324
 749:Core/Src/main.c ****     }
 1616              		.loc 1 749 9 is_stmt 0 view .LVU325
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 49


 1617 03e6 04E0     		b	.L82
 1618              	.LVL139:
 1619              	.L83:
 749:Core/Src/main.c ****     }
 1620              		.loc 1 749 9 is_stmt 1 discriminator 3 view .LVU326
 1621 03e8 04AB     		add	r3, sp, #16
 1622 03ea 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1623 03ec FFF7FEFF 		bl	__io_putchar_usart6
 1624              	.LVL140:
 749:Core/Src/main.c ****     }
 1625              		.loc 1 749 9 discriminator 3 view .LVU327
 1626 03f0 0135     		adds	r5, r5, #1
 1627              	.LVL141:
 1628              	.L82:
 749:Core/Src/main.c ****     }
 1629              		.loc 1 749 9 discriminator 2 view .LVU328
 1630 03f2 022D     		cmp	r5, #2
 1631 03f4 F8DD     		ble	.L83
 1632 03f6 BBE6     		b	.L60
 1633              	.LVL142:
 1634              	.L108:
 749:Core/Src/main.c ****     }
 1635              		.loc 1 749 9 is_stmt 0 discriminator 2 view .LVU329
 1636              	.LBE23:
 1637              	.LBE22:
 754:Core/Src/main.c ****     }
 1638              		.loc 1 754 9 is_stmt 1 view .LVU330
 1639              	.LBB24:
 754:Core/Src/main.c ****     }
 1640              		.loc 1 754 9 view .LVU331
 754:Core/Src/main.c ****     }
 1641              		.loc 1 754 9 view .LVU332
 1642 03f8 2D4B     		ldr	r3, .L126+52
 1643 03fa 0493     		str	r3, [sp, #16]
 1644              	.LVL143:
 754:Core/Src/main.c ****     }
 1645              		.loc 1 754 9 discriminator 1 view .LVU333
 1646              	.LBB25:
 754:Core/Src/main.c ****     }
 1647              		.loc 1 754 9 discriminator 1 view .LVU334
 754:Core/Src/main.c ****     }
 1648              		.loc 1 754 9 is_stmt 0 view .LVU335
 1649 03fc 04E0     		b	.L85
 1650              	.LVL144:
 1651              	.L86:
 754:Core/Src/main.c ****     }
 1652              		.loc 1 754 9 is_stmt 1 discriminator 3 view .LVU336
 1653 03fe 04AB     		add	r3, sp, #16
 1654 0400 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1655 0402 FFF7FEFF 		bl	__io_putchar_usart2
 1656              	.LVL145:
 754:Core/Src/main.c ****     }
 1657              		.loc 1 754 9 discriminator 3 view .LVU337
 1658 0406 0135     		adds	r5, r5, #1
 1659              	.LVL146:
 1660              	.L85:
 754:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 50


 1661              		.loc 1 754 9 discriminator 2 view .LVU338
 1662 0408 022D     		cmp	r5, #2
 1663 040a F8DD     		ble	.L86
 1664 040c B0E6     		b	.L60
 1665              	.LVL147:
 1666              	.L109:
 754:Core/Src/main.c ****     }
 1667              		.loc 1 754 9 is_stmt 0 discriminator 2 view .LVU339
 1668              	.LBE25:
 1669              	.LBE24:
 759:Core/Src/main.c ****     }
 1670              		.loc 1 759 9 is_stmt 1 view .LVU340
 1671              	.LBB26:
 759:Core/Src/main.c ****     }
 1672              		.loc 1 759 9 view .LVU341
 759:Core/Src/main.c ****     }
 1673              		.loc 1 759 9 view .LVU342
 1674 040e 284B     		ldr	r3, .L126+52
 1675 0410 0493     		str	r3, [sp, #16]
 1676              	.LVL148:
 759:Core/Src/main.c ****     }
 1677              		.loc 1 759 9 discriminator 1 view .LVU343
 1678              	.LBB27:
 759:Core/Src/main.c ****     }
 1679              		.loc 1 759 9 discriminator 1 view .LVU344
 759:Core/Src/main.c ****     }
 1680              		.loc 1 759 9 is_stmt 0 view .LVU345
 1681 0412 04E0     		b	.L88
 1682              	.LVL149:
 1683              	.L89:
 759:Core/Src/main.c ****     }
 1684              		.loc 1 759 9 is_stmt 1 discriminator 3 view .LVU346
 1685 0414 04AB     		add	r3, sp, #16
 1686 0416 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1687 0418 FFF7FEFF 		bl	__io_putchar_usart3
 1688              	.LVL150:
 759:Core/Src/main.c ****     }
 1689              		.loc 1 759 9 discriminator 3 view .LVU347
 1690 041c 0135     		adds	r5, r5, #1
 1691              	.LVL151:
 1692              	.L88:
 759:Core/Src/main.c ****     }
 1693              		.loc 1 759 9 discriminator 2 view .LVU348
 1694 041e 022D     		cmp	r5, #2
 1695 0420 F8DD     		ble	.L89
 1696 0422 A5E6     		b	.L60
 1697              	.LVL152:
 1698              	.L110:
 759:Core/Src/main.c ****     }
 1699              		.loc 1 759 9 is_stmt 0 discriminator 2 view .LVU349
 1700              	.LBE27:
 1701              	.LBE26:
 764:Core/Src/main.c ****       }
 1702              		.loc 1 764 11 is_stmt 1 view .LVU350
 1703              	.LBB28:
 764:Core/Src/main.c ****       }
 1704              		.loc 1 764 11 view .LVU351
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 51


 764:Core/Src/main.c ****       }
 1705              		.loc 1 764 11 view .LVU352
 1706 0424 224B     		ldr	r3, .L126+52
 1707 0426 0493     		str	r3, [sp, #16]
 1708              	.LVL153:
 764:Core/Src/main.c ****       }
 1709              		.loc 1 764 11 discriminator 1 view .LVU353
 1710              	.LBB29:
 764:Core/Src/main.c ****       }
 1711              		.loc 1 764 11 discriminator 1 view .LVU354
 764:Core/Src/main.c ****       }
 1712              		.loc 1 764 11 is_stmt 0 view .LVU355
 1713 0428 04E0     		b	.L91
 1714              	.LVL154:
 1715              	.L92:
 764:Core/Src/main.c ****       }
 1716              		.loc 1 764 11 is_stmt 1 discriminator 3 view .LVU356
 1717 042a 04AB     		add	r3, sp, #16
 1718 042c 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1719 042e FFF7FEFF 		bl	__io_putchar_uart4
 1720              	.LVL155:
 764:Core/Src/main.c ****       }
 1721              		.loc 1 764 11 discriminator 3 view .LVU357
 1722 0432 0135     		adds	r5, r5, #1
 1723              	.LVL156:
 1724              	.L91:
 764:Core/Src/main.c ****       }
 1725              		.loc 1 764 11 discriminator 2 view .LVU358
 1726 0434 022D     		cmp	r5, #2
 1727 0436 F8DD     		ble	.L92
 1728 0438 9AE6     		b	.L60
 1729              	.LVL157:
 1730              	.L111:
 764:Core/Src/main.c ****       }
 1731              		.loc 1 764 11 is_stmt 0 discriminator 2 view .LVU359
 1732              	.LBE29:
 1733              	.LBE28:
 769:Core/Src/main.c ****       }
 1734              		.loc 1 769 11 is_stmt 1 view .LVU360
 1735              	.LBB30:
 769:Core/Src/main.c ****       }
 1736              		.loc 1 769 11 view .LVU361
 769:Core/Src/main.c ****       }
 1737              		.loc 1 769 11 view .LVU362
 1738 043a 1D4B     		ldr	r3, .L126+52
 1739 043c 0493     		str	r3, [sp, #16]
 1740              	.LVL158:
 769:Core/Src/main.c ****       }
 1741              		.loc 1 769 11 discriminator 1 view .LVU363
 1742              	.LBB31:
 769:Core/Src/main.c ****       }
 1743              		.loc 1 769 11 discriminator 1 view .LVU364
 769:Core/Src/main.c ****       }
 1744              		.loc 1 769 11 is_stmt 0 view .LVU365
 1745 043e 04E0     		b	.L94
 1746              	.LVL159:
 1747              	.L95:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 52


 769:Core/Src/main.c ****       }
 1748              		.loc 1 769 11 is_stmt 1 discriminator 3 view .LVU366
 1749 0440 04AB     		add	r3, sp, #16
 1750 0442 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1751 0444 FFF7FEFF 		bl	__io_putchar_uart5
 1752              	.LVL160:
 769:Core/Src/main.c ****       }
 1753              		.loc 1 769 11 discriminator 3 view .LVU367
 1754 0448 0135     		adds	r5, r5, #1
 1755              	.LVL161:
 1756              	.L94:
 769:Core/Src/main.c ****       }
 1757              		.loc 1 769 11 discriminator 2 view .LVU368
 1758 044a 022D     		cmp	r5, #2
 1759 044c F8DD     		ble	.L95
 1760 044e 8FE6     		b	.L60
 1761              	.LVL162:
 1762              	.L112:
 769:Core/Src/main.c ****       }
 1763              		.loc 1 769 11 is_stmt 0 discriminator 2 view .LVU369
 1764              	.LBE31:
 1765              	.LBE30:
 1766              	.LBB32:
 781:Core/Src/main.c ****         
 1767              		.loc 1 781 9 is_stmt 1 view .LVU370
 783:Core/Src/main.c ****         
 1768              		.loc 1 783 9 view .LVU371
 1769 0450 FFF7FEFF 		bl	HomeSet
 1770              	.LVL163:
 785:Core/Src/main.c **** 
 1771              		.loc 1 785 9 view .LVU372
 1772 0454 1748     		ldr	r0, .L126+56
 1773 0456 FFF7FEFF 		bl	puts
 1774              	.LVL164:
 1775              	.LBE32:
 1776 045a 89E6     		b	.L60
 1777              	.LVL165:
 1778              	.L113:
 791:Core/Src/main.c ****         ledFlag = !ledFlag;
 1779              		.loc 1 791 9 view .LVU373
 792:Core/Src/main.c ****         
 1780              		.loc 1 792 9 view .LVU374
 792:Core/Src/main.c ****         
 1781              		.loc 1 792 19 is_stmt 0 view .LVU375
 1782 045c 164A     		ldr	r2, .L126+60
 1783 045e 1368     		ldr	r3, [r2]
 1784 0460 B3FA83F3 		clz	r3, r3
 1785 0464 5B09     		lsrs	r3, r3, #5
 792:Core/Src/main.c ****         
 1786              		.loc 1 792 17 view .LVU376
 1787 0466 1360     		str	r3, [r2]
 794:Core/Src/main.c **** 
 1788              		.loc 1 794 9 is_stmt 1 view .LVU377
 1789 0468 1448     		ldr	r0, .L126+64
 1790 046a FFF7FEFF 		bl	puts
 1791              	.LVL166:
 1792 046e 7FE6     		b	.L60
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 53


 1793              	.LVL167:
 1794              	.L98:
 812:Core/Src/main.c ****     }
 1795              		.loc 1 812 9 view .LVU378
 1796 0470 2146     		mov	r1, r4
 1797 0472 1348     		ldr	r0, .L126+68
 1798 0474 FFF7FEFF 		bl	printf
 1799              	.LVL168:
 814:Core/Src/main.c **** 
 1800              		.loc 1 814 1 is_stmt 0 view .LVU379
 1801 0478 7AE6     		b	.L60
 1802              	.L127:
 1803 047a 00BF     		.align	2
 1804              	.L126:
 1805 047c 00000000 		.word	joint3
 1806 0480 9C000000 		.word	.LC12
 1807 0484 00000000 		.word	prev_joint3
 1808 0488 00000000 		.word	joint4
 1809 048c 60000000 		.word	.LC7
 1810 0490 44000000 		.word	.LC5
 1811 0494 B8000000 		.word	.LC14
 1812 0498 00000000 		.word	prev_joint4
 1813 049c 00000000 		.word	joint5
 1814 04a0 D4000000 		.word	.LC16
 1815 04a4 00000000 		.word	prev_joint5
 1816 04a8 00000000 		.word	actuator
 1817 04ac F4000000 		.word	.LC18
 1818 04b0 720D0A00 		.word	658802
 1819 04b4 40010000 		.word	.LC26
 1820 04b8 00000000 		.word	ledFlag
 1821 04bc 60010000 		.word	.LC28
 1822 04c0 D8010000 		.word	.LC36
 1823              		.cfi_endproc
 1824              	.LFE251:
 1826              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 1827              		.align	2
 1828              	.LC37:
 1829 0000 42756666 		.ascii	"Buffer overflow\015\000"
 1829      6572206F 
 1829      76657266 
 1829      6C6F770D 
 1829      00
 1830              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1831              		.align	1
 1832              		.global	HAL_UART_RxCpltCallback
 1833              		.syntax unified
 1834              		.thumb
 1835              		.thumb_func
 1837              	HAL_UART_RxCpltCallback:
 1838              	.LVL169:
 1839              	.LFB250:
 336:Core/Src/main.c **** 
 1840              		.loc 1 336 1 is_stmt 1 view -0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 54


 1844              		.loc 1 336 1 is_stmt 0 view .LVU381
 1845 0000 10B5     		push	{r4, lr}
 1846              	.LCFI38:
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 4, -8
 1849              		.cfi_offset 14, -4
 338:Core/Src/main.c **** 
 1850              		.loc 1 338 5 is_stmt 1 view .LVU382
 338:Core/Src/main.c **** 
 1851              		.loc 1 338 14 is_stmt 0 view .LVU383
 1852 0002 0368     		ldr	r3, [r0]
 338:Core/Src/main.c **** 
 1853              		.loc 1 338 8 view .LVU384
 1854 0004 914A     		ldr	r2, .L171
 1855 0006 9342     		cmp	r3, r2
 1856 0008 2DD0     		beq	.L154
 378:Core/Src/main.c ****         // Store received byte in buffer
 1857              		.loc 1 378 10 is_stmt 1 view .LVU385
 378:Core/Src/main.c ****         // Store received byte in buffer
 1858              		.loc 1 378 12 is_stmt 0 view .LVU386
 1859 000a 914A     		ldr	r2, .L171+4
 1860 000c 9342     		cmp	r3, r2
 1861 000e 72D0     		beq	.L155
 416:Core/Src/main.c ****         // Store received byte in buffer
 1862              		.loc 1 416 10 is_stmt 1 view .LVU387
 416:Core/Src/main.c ****         // Store received byte in buffer
 1863              		.loc 1 416 12 is_stmt 0 view .LVU388
 1864 0010 904A     		ldr	r2, .L171+8
 1865 0012 9342     		cmp	r3, r2
 1866 0014 00F0B780 		beq	.L156
 453:Core/Src/main.c ****         // Store received byte in buffer
 1867              		.loc 1 453 12 is_stmt 1 view .LVU389
 453:Core/Src/main.c ****         // Store received byte in buffer
 1868              		.loc 1 453 14 is_stmt 0 view .LVU390
 1869 0018 8F4A     		ldr	r2, .L171+12
 1870 001a 9342     		cmp	r3, r2
 1871 001c 00F0FB80 		beq	.L157
 490:Core/Src/main.c ****         // Store received byte in buffer
 1872              		.loc 1 490 12 is_stmt 1 view .LVU391
 490:Core/Src/main.c ****         // Store received byte in buffer
 1873              		.loc 1 490 14 is_stmt 0 view .LVU392
 1874 0020 8E4A     		ldr	r2, .L171+16
 1875 0022 9342     		cmp	r3, r2
 1876 0024 00F06C81 		beq	.L158
 527:Core/Src/main.c ****         // Store received byte in buffer
 1877              		.loc 1 527 12 is_stmt 1 view .LVU393
 527:Core/Src/main.c ****         // Store received byte in buffer
 1878              		.loc 1 527 14 is_stmt 0 view .LVU394
 1879 0028 8D4A     		ldr	r2, .L171+20
 1880 002a 9342     		cmp	r3, r2
 1881 002c 34D1     		bne	.L128
 529:Core/Src/main.c ****         {
 1882              		.loc 1 529 9 is_stmt 1 view .LVU395
 529:Core/Src/main.c ****         {
 1883              		.loc 1 529 26 is_stmt 0 view .LVU396
 1884 002e 8D4B     		ldr	r3, .L171+24
 1885 0030 1B88     		ldrh	r3, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 55


 1886 0032 9BB2     		uxth	r3, r3
 529:Core/Src/main.c ****         {
 1887              		.loc 1 529 12 view .LVU397
 1888 0034 FE2B     		cmp	r3, #254
 1889 0036 00F2D381 		bhi	.L150
 531:Core/Src/main.c **** 
 1890              		.loc 1 531 13 is_stmt 1 view .LVU398
 531:Core/Src/main.c **** 
 1891              		.loc 1 531 37 is_stmt 0 view .LVU399
 1892 003a 8A49     		ldr	r1, .L171+24
 1893 003c 0B88     		ldrh	r3, [r1]
 1894 003e 9BB2     		uxth	r3, r3
 1895 0040 5A1C     		adds	r2, r3, #1
 1896 0042 92B2     		uxth	r2, r2
 1897 0044 0A80     		strh	r2, [r1]	@ movhi
 531:Core/Src/main.c **** 
 1898              		.loc 1 531 41 view .LVU400
 1899 0046 8849     		ldr	r1, .L171+28
 1900 0048 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1901 004a D2B2     		uxtb	r2, r2
 1902 004c 8748     		ldr	r0, .L171+32
 1903              	.LVL170:
 531:Core/Src/main.c **** 
 1904              		.loc 1 531 41 view .LVU401
 1905 004e C254     		strb	r2, [r0, r3]
 534:Core/Src/main.c ****             {
 1906              		.loc 1 534 13 is_stmt 1 view .LVU402
 534:Core/Src/main.c ****             {
 1907              		.loc 1 534 26 is_stmt 0 view .LVU403
 1908 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1909 0052 DBB2     		uxtb	r3, r3
 534:Core/Src/main.c ****             {
 1910              		.loc 1 534 16 view .LVU404
 1911 0054 0A2B     		cmp	r3, #10
 1912 0056 00F09B81 		beq	.L159
 1913              	.L151:
 560:Core/Src/main.c **** 
 1914              		.loc 1 560 9 is_stmt 1 view .LVU405
 1915 005a 0122     		movs	r2, #1
 1916 005c 8249     		ldr	r1, .L171+28
 1917 005e 8448     		ldr	r0, .L171+36
 1918 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1919              	.LVL171:
 564:Core/Src/main.c **** 
 1920              		.loc 1 564 1 is_stmt 0 view .LVU406
 1921 0064 18E0     		b	.L128
 1922              	.LVL172:
 1923              	.L154:
 342:Core/Src/main.c ****         {
 1924              		.loc 1 342 9 is_stmt 1 view .LVU407
 342:Core/Src/main.c ****         {
 1925              		.loc 1 342 26 is_stmt 0 view .LVU408
 1926 0066 7F4B     		ldr	r3, .L171+24
 1927 0068 1B88     		ldrh	r3, [r3]
 1928 006a 9BB2     		uxth	r3, r3
 342:Core/Src/main.c ****         {
 1929              		.loc 1 342 12 view .LVU409
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 56


 1930 006c FE2B     		cmp	r3, #254
 1931 006e 3BD8     		bhi	.L130
 344:Core/Src/main.c **** 
 1932              		.loc 1 344 13 is_stmt 1 view .LVU410
 344:Core/Src/main.c **** 
 1933              		.loc 1 344 37 is_stmt 0 view .LVU411
 1934 0070 7C49     		ldr	r1, .L171+24
 1935 0072 0B88     		ldrh	r3, [r1]
 1936 0074 9BB2     		uxth	r3, r3
 1937 0076 5A1C     		adds	r2, r3, #1
 1938 0078 92B2     		uxth	r2, r2
 1939 007a 0A80     		strh	r2, [r1]	@ movhi
 344:Core/Src/main.c **** 
 1940              		.loc 1 344 41 view .LVU412
 1941 007c 7D49     		ldr	r1, .L171+40
 1942 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1943 0080 D2B2     		uxtb	r2, r2
 1944 0082 7A48     		ldr	r0, .L171+32
 1945              	.LVL173:
 344:Core/Src/main.c **** 
 1946              		.loc 1 344 41 view .LVU413
 1947 0084 C254     		strb	r2, [r0, r3]
 347:Core/Src/main.c ****             {
 1948              		.loc 1 347 13 is_stmt 1 view .LVU414
 347:Core/Src/main.c ****             {
 1949              		.loc 1 347 25 is_stmt 0 view .LVU415
 1950 0086 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1951 0088 DBB2     		uxtb	r3, r3
 347:Core/Src/main.c ****             {
 1952              		.loc 1 347 16 view .LVU416
 1953 008a 0A2B     		cmp	r3, #10
 1954 008c 05D0     		beq	.L160
 1955              	.L131:
 375:Core/Src/main.c ****     }
 1956              		.loc 1 375 9 is_stmt 1 view .LVU417
 1957 008e 0122     		movs	r2, #1
 1958 0090 7849     		ldr	r1, .L171+40
 1959 0092 7948     		ldr	r0, .L171+44
 1960 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1961              	.LVL174:
 1962              	.L128:
 564:Core/Src/main.c **** 
 1963              		.loc 1 564 1 is_stmt 0 view .LVU418
 1964 0098 10BD     		pop	{r4, pc}
 1965              	.L160:
 349:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1966              		.loc 1 349 17 is_stmt 1 view .LVU419
 349:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1967              		.loc 1 349 28 is_stmt 0 view .LVU420
 1968 009a 724A     		ldr	r2, .L171+24
 1969 009c 1388     		ldrh	r3, [r2]
 1970 009e 9BB2     		uxth	r3, r3
 349:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1971              		.loc 1 349 43 view .LVU421
 1972 00a0 0146     		mov	r1, r0
 1973 00a2 0020     		movs	r0, #0
 1974 00a4 C854     		strb	r0, [r1, r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 57


 350:Core/Src/main.c **** 
 1975              		.loc 1 350 17 is_stmt 1 view .LVU422
 350:Core/Src/main.c **** 
 1976              		.loc 1 350 30 is_stmt 0 view .LVU423
 1977 00a6 1080     		strh	r0, [r2]	@ movhi
 353:Core/Src/main.c **** 
 1978              		.loc 1 353 17 is_stmt 1 view .LVU424
 1979 00a8 744C     		ldr	r4, .L171+48
 1980 00aa 2046     		mov	r0, r4
 1981 00ac FFF7FEFF 		bl	strcpy
 1982              	.LVL175:
 355:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1983              		.loc 1 355 17 view .LVU425
 355:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1984              		.loc 1 355 20 is_stmt 0 view .LVU426
 1985 00b0 2146     		mov	r1, r4
 1986 00b2 7348     		ldr	r0, .L171+52
 1987 00b4 FFF7FEFF 		bl	strcmp
 1988              	.LVL176:
 355:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1989              		.loc 1 355 19 discriminator 1 view .LVU427
 1990 00b8 70B9     		cbnz	r0, .L161
 359:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1991              		.loc 1 359 22 is_stmt 1 view .LVU428
 359:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1992              		.loc 1 359 25 is_stmt 0 view .LVU429
 1993 00ba 7249     		ldr	r1, .L171+56
 1994 00bc 6F48     		ldr	r0, .L171+48
 1995 00be FFF7FEFF 		bl	strcmp
 1996              	.LVL177:
 359:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1997              		.loc 1 359 24 discriminator 1 view .LVU430
 1998 00c2 0028     		cmp	r0, #0
 1999 00c4 E3D0     		beq	.L131
 2000              	.LBB33:
 360:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2001              		.loc 1 360 19 is_stmt 1 view .LVU431
 2002 00c6 6D4C     		ldr	r4, .L171+48
 2003 00c8 2046     		mov	r0, r4
 2004 00ca FFF7FEFF 		bl	ProcessReceivedString
 2005              	.LVL178:
 361:Core/Src/main.c ****                 }
 2006              		.loc 1 361 19 view .LVU432
 2007 00ce 2146     		mov	r1, r4
 2008 00d0 6C48     		ldr	r0, .L171+56
 2009 00d2 FFF7FEFF 		bl	strcpy
 2010              	.LVL179:
 2011 00d6 DAE7     		b	.L131
 2012              	.L161:
 2013              	.LBE33:
 2014              	.LBB34:
 356:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2015              		.loc 1 356 19 view .LVU433
 2016 00d8 2046     		mov	r0, r4
 2017 00da FFF7FEFF 		bl	ProcessReceivedString
 2018              	.LVL180:
 357:Core/Src/main.c ****                 }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 58


 2019              		.loc 1 357 19 view .LVU434
 2020 00de 2146     		mov	r1, r4
 2021 00e0 6848     		ldr	r0, .L171+56
 2022 00e2 FFF7FEFF 		bl	strcpy
 2023              	.LVL181:
 2024              	.LBE34:
 2025 00e6 D2E7     		b	.L131
 2026              	.LVL182:
 2027              	.L130:
 370:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2028              		.loc 1 370 13 view .LVU435
 370:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2029              		.loc 1 370 26 is_stmt 0 view .LVU436
 2030 00e8 5E4B     		ldr	r3, .L171+24
 2031 00ea 0022     		movs	r2, #0
 2032 00ec 1A80     		strh	r2, [r3]	@ movhi
 371:Core/Src/main.c ****         }
 2033              		.loc 1 371 13 is_stmt 1 view .LVU437
 2034 00ee 6648     		ldr	r0, .L171+60
 2035              	.LVL183:
 371:Core/Src/main.c ****         }
 2036              		.loc 1 371 13 is_stmt 0 view .LVU438
 2037 00f0 FFF7FEFF 		bl	puts
 2038              	.LVL184:
 2039 00f4 CBE7     		b	.L131
 2040              	.LVL185:
 2041              	.L155:
 380:Core/Src/main.c ****         {
 2042              		.loc 1 380 9 is_stmt 1 view .LVU439
 380:Core/Src/main.c ****         {
 2043              		.loc 1 380 26 is_stmt 0 view .LVU440
 2044 00f6 5B4B     		ldr	r3, .L171+24
 2045 00f8 1B88     		ldrh	r3, [r3]
 2046 00fa 9BB2     		uxth	r3, r3
 380:Core/Src/main.c ****         {
 2047              		.loc 1 380 12 view .LVU441
 2048 00fc FE2B     		cmp	r3, #254
 2049 00fe 3BD8     		bhi	.L135
 382:Core/Src/main.c **** 
 2050              		.loc 1 382 13 is_stmt 1 view .LVU442
 382:Core/Src/main.c **** 
 2051              		.loc 1 382 37 is_stmt 0 view .LVU443
 2052 0100 5849     		ldr	r1, .L171+24
 2053 0102 0B88     		ldrh	r3, [r1]
 2054 0104 9BB2     		uxth	r3, r3
 2055 0106 5A1C     		adds	r2, r3, #1
 2056 0108 92B2     		uxth	r2, r2
 2057 010a 0A80     		strh	r2, [r1]	@ movhi
 382:Core/Src/main.c **** 
 2058              		.loc 1 382 41 view .LVU444
 2059 010c 5F49     		ldr	r1, .L171+64
 2060 010e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2061 0110 D2B2     		uxtb	r2, r2
 2062 0112 5648     		ldr	r0, .L171+32
 2063              	.LVL186:
 382:Core/Src/main.c **** 
 2064              		.loc 1 382 41 view .LVU445
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 59


 2065 0114 C254     		strb	r2, [r0, r3]
 385:Core/Src/main.c ****             {
 2066              		.loc 1 385 13 is_stmt 1 view .LVU446
 385:Core/Src/main.c ****             {
 2067              		.loc 1 385 26 is_stmt 0 view .LVU447
 2068 0116 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2069 0118 DBB2     		uxtb	r3, r3
 385:Core/Src/main.c ****             {
 2070              		.loc 1 385 16 view .LVU448
 2071 011a 0A2B     		cmp	r3, #10
 2072 011c 05D0     		beq	.L162
 2073              	.L136:
 413:Core/Src/main.c ****     }
 2074              		.loc 1 413 9 is_stmt 1 view .LVU449
 2075 011e 0122     		movs	r2, #1
 2076 0120 5A49     		ldr	r1, .L171+64
 2077 0122 5B48     		ldr	r0, .L171+68
 2078 0124 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2079              	.LVL187:
 2080 0128 B6E7     		b	.L128
 2081              	.L162:
 387:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2082              		.loc 1 387 17 view .LVU450
 387:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2083              		.loc 1 387 28 is_stmt 0 view .LVU451
 2084 012a 4E4A     		ldr	r2, .L171+24
 2085 012c 1388     		ldrh	r3, [r2]
 2086 012e 9BB2     		uxth	r3, r3
 387:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2087              		.loc 1 387 43 view .LVU452
 2088 0130 0146     		mov	r1, r0
 2089 0132 0020     		movs	r0, #0
 2090 0134 C854     		strb	r0, [r1, r3]
 388:Core/Src/main.c **** 
 2091              		.loc 1 388 17 is_stmt 1 view .LVU453
 388:Core/Src/main.c **** 
 2092              		.loc 1 388 30 is_stmt 0 view .LVU454
 2093 0136 1080     		strh	r0, [r2]	@ movhi
 391:Core/Src/main.c **** 
 2094              		.loc 1 391 17 is_stmt 1 view .LVU455
 2095 0138 504C     		ldr	r4, .L171+48
 2096 013a 2046     		mov	r0, r4
 2097 013c FFF7FEFF 		bl	strcpy
 2098              	.LVL188:
 393:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2099              		.loc 1 393 17 view .LVU456
 393:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2100              		.loc 1 393 20 is_stmt 0 view .LVU457
 2101 0140 2146     		mov	r1, r4
 2102 0142 4F48     		ldr	r0, .L171+52
 2103 0144 FFF7FEFF 		bl	strcmp
 2104              	.LVL189:
 393:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2105              		.loc 1 393 19 discriminator 1 view .LVU458
 2106 0148 70B9     		cbnz	r0, .L163
 397:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2107              		.loc 1 397 22 is_stmt 1 view .LVU459
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 60


 397:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2108              		.loc 1 397 25 is_stmt 0 view .LVU460
 2109 014a 4E49     		ldr	r1, .L171+56
 2110 014c 4B48     		ldr	r0, .L171+48
 2111 014e FFF7FEFF 		bl	strcmp
 2112              	.LVL190:
 397:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2113              		.loc 1 397 24 discriminator 1 view .LVU461
 2114 0152 0028     		cmp	r0, #0
 2115 0154 E3D0     		beq	.L136
 2116              	.LBB35:
 398:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2117              		.loc 1 398 19 is_stmt 1 view .LVU462
 2118 0156 494C     		ldr	r4, .L171+48
 2119 0158 2046     		mov	r0, r4
 2120 015a FFF7FEFF 		bl	ProcessReceivedString
 2121              	.LVL191:
 399:Core/Src/main.c ****                 }
 2122              		.loc 1 399 19 view .LVU463
 2123 015e 2146     		mov	r1, r4
 2124 0160 4848     		ldr	r0, .L171+56
 2125 0162 FFF7FEFF 		bl	strcpy
 2126              	.LVL192:
 2127 0166 DAE7     		b	.L136
 2128              	.L163:
 2129              	.LBE35:
 2130              	.LBB36:
 394:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2131              		.loc 1 394 19 view .LVU464
 2132 0168 2046     		mov	r0, r4
 2133 016a FFF7FEFF 		bl	ProcessReceivedString
 2134              	.LVL193:
 395:Core/Src/main.c ****                 }
 2135              		.loc 1 395 19 view .LVU465
 2136 016e 2146     		mov	r1, r4
 2137 0170 4448     		ldr	r0, .L171+56
 2138 0172 FFF7FEFF 		bl	strcpy
 2139              	.LVL194:
 2140              	.LBE36:
 2141 0176 D2E7     		b	.L136
 2142              	.LVL195:
 2143              	.L135:
 408:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2144              		.loc 1 408 13 view .LVU466
 408:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2145              		.loc 1 408 26 is_stmt 0 view .LVU467
 2146 0178 3A4B     		ldr	r3, .L171+24
 2147 017a 0022     		movs	r2, #0
 2148 017c 1A80     		strh	r2, [r3]	@ movhi
 409:Core/Src/main.c ****         }
 2149              		.loc 1 409 13 is_stmt 1 view .LVU468
 2150 017e 4248     		ldr	r0, .L171+60
 2151              	.LVL196:
 409:Core/Src/main.c ****         }
 2152              		.loc 1 409 13 is_stmt 0 view .LVU469
 2153 0180 FFF7FEFF 		bl	puts
 2154              	.LVL197:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 61


 2155 0184 CBE7     		b	.L136
 2156              	.LVL198:
 2157              	.L156:
 418:Core/Src/main.c ****         {
 2158              		.loc 1 418 9 is_stmt 1 view .LVU470
 418:Core/Src/main.c ****         {
 2159              		.loc 1 418 26 is_stmt 0 view .LVU471
 2160 0186 374B     		ldr	r3, .L171+24
 2161 0188 1B88     		ldrh	r3, [r3]
 2162 018a 9BB2     		uxth	r3, r3
 418:Core/Src/main.c ****         {
 2163              		.loc 1 418 12 view .LVU472
 2164 018c FE2B     		cmp	r3, #254
 2165 018e 3BD8     		bhi	.L139
 420:Core/Src/main.c **** 
 2166              		.loc 1 420 13 is_stmt 1 view .LVU473
 420:Core/Src/main.c **** 
 2167              		.loc 1 420 37 is_stmt 0 view .LVU474
 2168 0190 3449     		ldr	r1, .L171+24
 2169 0192 0B88     		ldrh	r3, [r1]
 2170 0194 9BB2     		uxth	r3, r3
 2171 0196 5A1C     		adds	r2, r3, #1
 2172 0198 92B2     		uxth	r2, r2
 2173 019a 0A80     		strh	r2, [r1]	@ movhi
 420:Core/Src/main.c **** 
 2174              		.loc 1 420 41 view .LVU475
 2175 019c 3D49     		ldr	r1, .L171+72
 2176 019e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2177 01a0 D2B2     		uxtb	r2, r2
 2178 01a2 3248     		ldr	r0, .L171+32
 2179              	.LVL199:
 420:Core/Src/main.c **** 
 2180              		.loc 1 420 41 view .LVU476
 2181 01a4 C254     		strb	r2, [r0, r3]
 423:Core/Src/main.c ****             {
 2182              		.loc 1 423 13 is_stmt 1 view .LVU477
 423:Core/Src/main.c ****             {
 2183              		.loc 1 423 26 is_stmt 0 view .LVU478
 2184 01a6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2185 01a8 DBB2     		uxtb	r3, r3
 423:Core/Src/main.c ****             {
 2186              		.loc 1 423 16 view .LVU479
 2187 01aa 0A2B     		cmp	r3, #10
 2188 01ac 05D0     		beq	.L164
 2189              	.L140:
 449:Core/Src/main.c **** 
 2190              		.loc 1 449 9 is_stmt 1 view .LVU480
 2191 01ae 0122     		movs	r2, #1
 2192 01b0 3849     		ldr	r1, .L171+72
 2193 01b2 3948     		ldr	r0, .L171+76
 2194 01b4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2195              	.LVL200:
 2196 01b8 6EE7     		b	.L128
 2197              	.L164:
 425:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2198              		.loc 1 425 17 view .LVU481
 425:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 62


 2199              		.loc 1 425 28 is_stmt 0 view .LVU482
 2200 01ba 2A4A     		ldr	r2, .L171+24
 2201 01bc 1388     		ldrh	r3, [r2]
 2202 01be 9BB2     		uxth	r3, r3
 425:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2203              		.loc 1 425 43 view .LVU483
 2204 01c0 0146     		mov	r1, r0
 2205 01c2 0020     		movs	r0, #0
 2206 01c4 C854     		strb	r0, [r1, r3]
 426:Core/Src/main.c **** 
 2207              		.loc 1 426 17 is_stmt 1 view .LVU484
 426:Core/Src/main.c **** 
 2208              		.loc 1 426 30 is_stmt 0 view .LVU485
 2209 01c6 1080     		strh	r0, [r2]	@ movhi
 429:Core/Src/main.c **** 
 2210              		.loc 1 429 17 is_stmt 1 view .LVU486
 2211 01c8 2C4C     		ldr	r4, .L171+48
 2212 01ca 2046     		mov	r0, r4
 2213 01cc FFF7FEFF 		bl	strcpy
 2214              	.LVL201:
 431:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2215              		.loc 1 431 17 view .LVU487
 431:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2216              		.loc 1 431 20 is_stmt 0 view .LVU488
 2217 01d0 2146     		mov	r1, r4
 2218 01d2 2B48     		ldr	r0, .L171+52
 2219 01d4 FFF7FEFF 		bl	strcmp
 2220              	.LVL202:
 431:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2221              		.loc 1 431 19 discriminator 1 view .LVU489
 2222 01d8 70B9     		cbnz	r0, .L165
 435:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2223              		.loc 1 435 22 is_stmt 1 view .LVU490
 435:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2224              		.loc 1 435 25 is_stmt 0 view .LVU491
 2225 01da 2A49     		ldr	r1, .L171+56
 2226 01dc 2748     		ldr	r0, .L171+48
 2227 01de FFF7FEFF 		bl	strcmp
 2228              	.LVL203:
 435:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2229              		.loc 1 435 24 discriminator 1 view .LVU492
 2230 01e2 0028     		cmp	r0, #0
 2231 01e4 E3D0     		beq	.L140
 2232              	.LBB37:
 436:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2233              		.loc 1 436 19 is_stmt 1 view .LVU493
 2234 01e6 254C     		ldr	r4, .L171+48
 2235 01e8 2046     		mov	r0, r4
 2236 01ea FFF7FEFF 		bl	ProcessReceivedString
 2237              	.LVL204:
 437:Core/Src/main.c ****                 }
 2238              		.loc 1 437 19 view .LVU494
 2239 01ee 2146     		mov	r1, r4
 2240 01f0 2448     		ldr	r0, .L171+56
 2241 01f2 FFF7FEFF 		bl	strcpy
 2242              	.LVL205:
 2243 01f6 DAE7     		b	.L140
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 63


 2244              	.L165:
 2245              	.LBE37:
 2246              	.LBB38:
 432:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2247              		.loc 1 432 19 view .LVU495
 2248 01f8 2046     		mov	r0, r4
 2249 01fa FFF7FEFF 		bl	ProcessReceivedString
 2250              	.LVL206:
 433:Core/Src/main.c ****                 }
 2251              		.loc 1 433 19 view .LVU496
 2252 01fe 2146     		mov	r1, r4
 2253 0200 2048     		ldr	r0, .L171+56
 2254 0202 FFF7FEFF 		bl	strcpy
 2255              	.LVL207:
 2256              	.LBE38:
 2257 0206 D2E7     		b	.L140
 2258              	.LVL208:
 2259              	.L139:
 446:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2260              		.loc 1 446 13 view .LVU497
 446:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2261              		.loc 1 446 26 is_stmt 0 view .LVU498
 2262 0208 164B     		ldr	r3, .L171+24
 2263 020a 0022     		movs	r2, #0
 2264 020c 1A80     		strh	r2, [r3]	@ movhi
 447:Core/Src/main.c ****         }
 2265              		.loc 1 447 13 is_stmt 1 view .LVU499
 2266 020e 1E48     		ldr	r0, .L171+60
 2267              	.LVL209:
 447:Core/Src/main.c ****         }
 2268              		.loc 1 447 13 is_stmt 0 view .LVU500
 2269 0210 FFF7FEFF 		bl	puts
 2270              	.LVL210:
 2271 0214 CBE7     		b	.L140
 2272              	.LVL211:
 2273              	.L157:
 455:Core/Src/main.c ****         {
 2274              		.loc 1 455 9 is_stmt 1 view .LVU501
 455:Core/Src/main.c ****         {
 2275              		.loc 1 455 26 is_stmt 0 view .LVU502
 2276 0216 134B     		ldr	r3, .L171+24
 2277 0218 1B88     		ldrh	r3, [r3]
 2278 021a 9BB2     		uxth	r3, r3
 455:Core/Src/main.c ****         {
 2279              		.loc 1 455 12 view .LVU503
 2280 021c FE2B     		cmp	r3, #254
 2281 021e 68D8     		bhi	.L143
 457:Core/Src/main.c **** 
 2282              		.loc 1 457 13 is_stmt 1 view .LVU504
 457:Core/Src/main.c **** 
 2283              		.loc 1 457 37 is_stmt 0 view .LVU505
 2284 0220 1049     		ldr	r1, .L171+24
 2285 0222 0B88     		ldrh	r3, [r1]
 2286 0224 9BB2     		uxth	r3, r3
 2287 0226 5A1C     		adds	r2, r3, #1
 2288 0228 92B2     		uxth	r2, r2
 2289 022a 0A80     		strh	r2, [r1]	@ movhi
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 64


 457:Core/Src/main.c **** 
 2290              		.loc 1 457 41 view .LVU506
 2291 022c 1B49     		ldr	r1, .L171+80
 2292 022e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2293 0230 D2B2     		uxtb	r2, r2
 2294 0232 0E48     		ldr	r0, .L171+32
 2295              	.LVL212:
 457:Core/Src/main.c **** 
 2296              		.loc 1 457 41 view .LVU507
 2297 0234 C254     		strb	r2, [r0, r3]
 460:Core/Src/main.c ****             {
 2298              		.loc 1 460 13 is_stmt 1 view .LVU508
 460:Core/Src/main.c ****             {
 2299              		.loc 1 460 26 is_stmt 0 view .LVU509
 2300 0236 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2301 0238 DBB2     		uxtb	r3, r3
 460:Core/Src/main.c ****             {
 2302              		.loc 1 460 16 view .LVU510
 2303 023a 0A2B     		cmp	r3, #10
 2304 023c 32D0     		beq	.L166
 2305              	.L144:
 486:Core/Src/main.c **** 
 2306              		.loc 1 486 9 is_stmt 1 view .LVU511
 2307 023e 0122     		movs	r2, #1
 2308 0240 1649     		ldr	r1, .L171+80
 2309 0242 1748     		ldr	r0, .L171+84
 2310 0244 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2311              	.LVL213:
 2312 0248 26E7     		b	.L128
 2313              	.L172:
 2314 024a 00BF     		.align	2
 2315              	.L171:
 2316 024c 00100140 		.word	1073811456
 2317 0250 00140140 		.word	1073812480
 2318 0254 00440040 		.word	1073759232
 2319 0258 00480040 		.word	1073760256
 2320 025c 004C0040 		.word	1073761280
 2321 0260 00500040 		.word	1073762304
 2322 0264 00000000 		.word	buffer_index
 2323 0268 00000000 		.word	rx_byte5
 2324 026c 00000000 		.word	uart_buffer
 2325 0270 00000000 		.word	huart5
 2326 0274 00000000 		.word	rx_byte
 2327 0278 00000000 		.word	huart1
 2328 027c 00000000 		.word	received_string
 2329 0280 70010000 		.word	.LC29
 2330 0284 00000000 		.word	previous_string
 2331 0288 00000000 		.word	.LC37
 2332 028c 00000000 		.word	rx_byte1
 2333 0290 00000000 		.word	huart6
 2334 0294 00000000 		.word	rx_byte2
 2335 0298 00000000 		.word	huart2
 2336 029c 00000000 		.word	rx_byte3
 2337 02a0 00000000 		.word	huart3
 2338              	.L166:
 462:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2339              		.loc 1 462 17 view .LVU512
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 65


 462:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2340              		.loc 1 462 28 is_stmt 0 view .LVU513
 2341 02a4 524A     		ldr	r2, .L173
 2342 02a6 1388     		ldrh	r3, [r2]
 2343 02a8 9BB2     		uxth	r3, r3
 462:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2344              		.loc 1 462 43 view .LVU514
 2345 02aa 0146     		mov	r1, r0
 2346 02ac 0020     		movs	r0, #0
 2347 02ae C854     		strb	r0, [r1, r3]
 463:Core/Src/main.c **** 
 2348              		.loc 1 463 17 is_stmt 1 view .LVU515
 463:Core/Src/main.c **** 
 2349              		.loc 1 463 30 is_stmt 0 view .LVU516
 2350 02b0 1080     		strh	r0, [r2]	@ movhi
 466:Core/Src/main.c **** 
 2351              		.loc 1 466 17 is_stmt 1 view .LVU517
 2352 02b2 504C     		ldr	r4, .L173+4
 2353 02b4 2046     		mov	r0, r4
 2354 02b6 FFF7FEFF 		bl	strcpy
 2355              	.LVL214:
 468:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2356              		.loc 1 468 17 view .LVU518
 468:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2357              		.loc 1 468 20 is_stmt 0 view .LVU519
 2358 02ba 2146     		mov	r1, r4
 2359 02bc 4E48     		ldr	r0, .L173+8
 2360 02be FFF7FEFF 		bl	strcmp
 2361              	.LVL215:
 468:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2362              		.loc 1 468 19 discriminator 1 view .LVU520
 2363 02c2 70B9     		cbnz	r0, .L167
 472:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2364              		.loc 1 472 22 is_stmt 1 view .LVU521
 472:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2365              		.loc 1 472 25 is_stmt 0 view .LVU522
 2366 02c4 4D49     		ldr	r1, .L173+12
 2367 02c6 4B48     		ldr	r0, .L173+4
 2368 02c8 FFF7FEFF 		bl	strcmp
 2369              	.LVL216:
 472:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2370              		.loc 1 472 24 discriminator 1 view .LVU523
 2371 02cc 0028     		cmp	r0, #0
 2372 02ce B6D0     		beq	.L144
 2373              	.LBB39:
 473:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2374              		.loc 1 473 19 is_stmt 1 view .LVU524
 2375 02d0 484C     		ldr	r4, .L173+4
 2376 02d2 2046     		mov	r0, r4
 2377 02d4 FFF7FEFF 		bl	ProcessReceivedString
 2378              	.LVL217:
 474:Core/Src/main.c ****                 }
 2379              		.loc 1 474 19 view .LVU525
 2380 02d8 2146     		mov	r1, r4
 2381 02da 4848     		ldr	r0, .L173+12
 2382 02dc FFF7FEFF 		bl	strcpy
 2383              	.LVL218:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 66


 2384 02e0 ADE7     		b	.L144
 2385              	.L167:
 2386              	.LBE39:
 2387              	.LBB40:
 469:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2388              		.loc 1 469 19 view .LVU526
 2389 02e2 2046     		mov	r0, r4
 2390 02e4 FFF7FEFF 		bl	ProcessReceivedString
 2391              	.LVL219:
 470:Core/Src/main.c ****                 }
 2392              		.loc 1 470 19 view .LVU527
 2393 02e8 2146     		mov	r1, r4
 2394 02ea 4448     		ldr	r0, .L173+12
 2395 02ec FFF7FEFF 		bl	strcpy
 2396              	.LVL220:
 2397              	.LBE40:
 2398 02f0 A5E7     		b	.L144
 2399              	.LVL221:
 2400              	.L143:
 483:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2401              		.loc 1 483 13 view .LVU528
 483:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2402              		.loc 1 483 26 is_stmt 0 view .LVU529
 2403 02f2 3F4B     		ldr	r3, .L173
 2404 02f4 0022     		movs	r2, #0
 2405 02f6 1A80     		strh	r2, [r3]	@ movhi
 484:Core/Src/main.c ****         }
 2406              		.loc 1 484 13 is_stmt 1 view .LVU530
 2407 02f8 4148     		ldr	r0, .L173+16
 2408              	.LVL222:
 484:Core/Src/main.c ****         }
 2409              		.loc 1 484 13 is_stmt 0 view .LVU531
 2410 02fa FFF7FEFF 		bl	puts
 2411              	.LVL223:
 2412 02fe 9EE7     		b	.L144
 2413              	.LVL224:
 2414              	.L158:
 492:Core/Src/main.c ****         {
 2415              		.loc 1 492 9 is_stmt 1 view .LVU532
 492:Core/Src/main.c ****         {
 2416              		.loc 1 492 26 is_stmt 0 view .LVU533
 2417 0300 3B4B     		ldr	r3, .L173
 2418 0302 1B88     		ldrh	r3, [r3]
 2419 0304 9BB2     		uxth	r3, r3
 492:Core/Src/main.c ****         {
 2420              		.loc 1 492 12 view .LVU534
 2421 0306 FE2B     		cmp	r3, #254
 2422 0308 3BD8     		bhi	.L147
 494:Core/Src/main.c **** 
 2423              		.loc 1 494 13 is_stmt 1 view .LVU535
 494:Core/Src/main.c **** 
 2424              		.loc 1 494 37 is_stmt 0 view .LVU536
 2425 030a 3949     		ldr	r1, .L173
 2426 030c 0B88     		ldrh	r3, [r1]
 2427 030e 9BB2     		uxth	r3, r3
 2428 0310 5A1C     		adds	r2, r3, #1
 2429 0312 92B2     		uxth	r2, r2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 67


 2430 0314 0A80     		strh	r2, [r1]	@ movhi
 494:Core/Src/main.c **** 
 2431              		.loc 1 494 41 view .LVU537
 2432 0316 3B49     		ldr	r1, .L173+20
 2433 0318 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2434 031a D2B2     		uxtb	r2, r2
 2435 031c 3A48     		ldr	r0, .L173+24
 2436              	.LVL225:
 494:Core/Src/main.c **** 
 2437              		.loc 1 494 41 view .LVU538
 2438 031e C254     		strb	r2, [r0, r3]
 497:Core/Src/main.c ****             {
 2439              		.loc 1 497 13 is_stmt 1 view .LVU539
 497:Core/Src/main.c ****             {
 2440              		.loc 1 497 26 is_stmt 0 view .LVU540
 2441 0320 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2442 0322 DBB2     		uxtb	r3, r3
 497:Core/Src/main.c ****             {
 2443              		.loc 1 497 16 view .LVU541
 2444 0324 0A2B     		cmp	r3, #10
 2445 0326 05D0     		beq	.L168
 2446              	.L148:
 523:Core/Src/main.c **** 
 2447              		.loc 1 523 9 is_stmt 1 view .LVU542
 2448 0328 0122     		movs	r2, #1
 2449 032a 3649     		ldr	r1, .L173+20
 2450 032c 3748     		ldr	r0, .L173+28
 2451 032e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2452              	.LVL226:
 2453 0332 B1E6     		b	.L128
 2454              	.L168:
 499:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2455              		.loc 1 499 17 view .LVU543
 499:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2456              		.loc 1 499 28 is_stmt 0 view .LVU544
 2457 0334 2E4A     		ldr	r2, .L173
 2458 0336 1388     		ldrh	r3, [r2]
 2459 0338 9BB2     		uxth	r3, r3
 499:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2460              		.loc 1 499 43 view .LVU545
 2461 033a 0146     		mov	r1, r0
 2462 033c 0020     		movs	r0, #0
 2463 033e C854     		strb	r0, [r1, r3]
 500:Core/Src/main.c **** 
 2464              		.loc 1 500 17 is_stmt 1 view .LVU546
 500:Core/Src/main.c **** 
 2465              		.loc 1 500 30 is_stmt 0 view .LVU547
 2466 0340 1080     		strh	r0, [r2]	@ movhi
 503:Core/Src/main.c **** 
 2467              		.loc 1 503 17 is_stmt 1 view .LVU548
 2468 0342 2C4C     		ldr	r4, .L173+4
 2469 0344 2046     		mov	r0, r4
 2470 0346 FFF7FEFF 		bl	strcpy
 2471              	.LVL227:
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2472              		.loc 1 505 17 view .LVU549
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 68


 2473              		.loc 1 505 20 is_stmt 0 view .LVU550
 2474 034a 2146     		mov	r1, r4
 2475 034c 2A48     		ldr	r0, .L173+8
 2476 034e FFF7FEFF 		bl	strcmp
 2477              	.LVL228:
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2478              		.loc 1 505 19 discriminator 1 view .LVU551
 2479 0352 70B9     		cbnz	r0, .L169
 509:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2480              		.loc 1 509 22 is_stmt 1 view .LVU552
 509:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2481              		.loc 1 509 25 is_stmt 0 view .LVU553
 2482 0354 2949     		ldr	r1, .L173+12
 2483 0356 2748     		ldr	r0, .L173+4
 2484 0358 FFF7FEFF 		bl	strcmp
 2485              	.LVL229:
 509:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2486              		.loc 1 509 24 discriminator 1 view .LVU554
 2487 035c 0028     		cmp	r0, #0
 2488 035e E3D0     		beq	.L148
 2489              	.LBB41:
 510:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2490              		.loc 1 510 19 is_stmt 1 view .LVU555
 2491 0360 244C     		ldr	r4, .L173+4
 2492 0362 2046     		mov	r0, r4
 2493 0364 FFF7FEFF 		bl	ProcessReceivedString
 2494              	.LVL230:
 511:Core/Src/main.c ****                 }
 2495              		.loc 1 511 19 view .LVU556
 2496 0368 2146     		mov	r1, r4
 2497 036a 2448     		ldr	r0, .L173+12
 2498 036c FFF7FEFF 		bl	strcpy
 2499              	.LVL231:
 2500 0370 DAE7     		b	.L148
 2501              	.L169:
 2502              	.LBE41:
 2503              	.LBB42:
 506:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2504              		.loc 1 506 19 view .LVU557
 2505 0372 2046     		mov	r0, r4
 2506 0374 FFF7FEFF 		bl	ProcessReceivedString
 2507              	.LVL232:
 507:Core/Src/main.c ****                 }
 2508              		.loc 1 507 19 view .LVU558
 2509 0378 2146     		mov	r1, r4
 2510 037a 2048     		ldr	r0, .L173+12
 2511 037c FFF7FEFF 		bl	strcpy
 2512              	.LVL233:
 2513              	.LBE42:
 2514 0380 D2E7     		b	.L148
 2515              	.LVL234:
 2516              	.L147:
 520:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2517              		.loc 1 520 13 view .LVU559
 520:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2518              		.loc 1 520 26 is_stmt 0 view .LVU560
 2519 0382 1B4B     		ldr	r3, .L173
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 69


 2520 0384 0022     		movs	r2, #0
 2521 0386 1A80     		strh	r2, [r3]	@ movhi
 521:Core/Src/main.c ****         }
 2522              		.loc 1 521 13 is_stmt 1 view .LVU561
 2523 0388 1D48     		ldr	r0, .L173+16
 2524              	.LVL235:
 521:Core/Src/main.c ****         }
 2525              		.loc 1 521 13 is_stmt 0 view .LVU562
 2526 038a FFF7FEFF 		bl	puts
 2527              	.LVL236:
 2528 038e CBE7     		b	.L148
 2529              	.L159:
 536:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2530              		.loc 1 536 17 is_stmt 1 view .LVU563
 536:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2531              		.loc 1 536 28 is_stmt 0 view .LVU564
 2532 0390 174A     		ldr	r2, .L173
 2533 0392 1388     		ldrh	r3, [r2]
 2534 0394 9BB2     		uxth	r3, r3
 536:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2535              		.loc 1 536 43 view .LVU565
 2536 0396 0146     		mov	r1, r0
 2537 0398 0020     		movs	r0, #0
 2538 039a C854     		strb	r0, [r1, r3]
 537:Core/Src/main.c **** 
 2539              		.loc 1 537 17 is_stmt 1 view .LVU566
 537:Core/Src/main.c **** 
 2540              		.loc 1 537 30 is_stmt 0 view .LVU567
 2541 039c 1080     		strh	r0, [r2]	@ movhi
 540:Core/Src/main.c **** 
 2542              		.loc 1 540 17 is_stmt 1 view .LVU568
 2543 039e 154C     		ldr	r4, .L173+4
 2544 03a0 2046     		mov	r0, r4
 2545 03a2 FFF7FEFF 		bl	strcpy
 2546              	.LVL237:
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2547              		.loc 1 542 17 view .LVU569
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2548              		.loc 1 542 20 is_stmt 0 view .LVU570
 2549 03a6 2146     		mov	r1, r4
 2550 03a8 1348     		ldr	r0, .L173+8
 2551 03aa FFF7FEFF 		bl	strcmp
 2552              	.LVL238:
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2553              		.loc 1 542 19 discriminator 1 view .LVU571
 2554 03ae 78B9     		cbnz	r0, .L170
 546:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2555              		.loc 1 546 22 is_stmt 1 view .LVU572
 546:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2556              		.loc 1 546 25 is_stmt 0 view .LVU573
 2557 03b0 1249     		ldr	r1, .L173+12
 2558 03b2 1048     		ldr	r0, .L173+4
 2559 03b4 FFF7FEFF 		bl	strcmp
 2560              	.LVL239:
 546:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2561              		.loc 1 546 24 discriminator 1 view .LVU574
 2562 03b8 0028     		cmp	r0, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 70


 2563 03ba 3FF44EAE 		beq	.L151
 2564              	.LBB43:
 547:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2565              		.loc 1 547 19 is_stmt 1 view .LVU575
 2566 03be 0D4C     		ldr	r4, .L173+4
 2567 03c0 2046     		mov	r0, r4
 2568 03c2 FFF7FEFF 		bl	ProcessReceivedString
 2569              	.LVL240:
 548:Core/Src/main.c ****                 }
 2570              		.loc 1 548 19 view .LVU576
 2571 03c6 2146     		mov	r1, r4
 2572 03c8 0C48     		ldr	r0, .L173+12
 2573 03ca FFF7FEFF 		bl	strcpy
 2574              	.LVL241:
 2575 03ce 44E6     		b	.L151
 2576              	.L170:
 2577              	.LBE43:
 2578              	.LBB44:
 543:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2579              		.loc 1 543 19 view .LVU577
 2580 03d0 2046     		mov	r0, r4
 2581 03d2 FFF7FEFF 		bl	ProcessReceivedString
 2582              	.LVL242:
 544:Core/Src/main.c ****                 }
 2583              		.loc 1 544 19 view .LVU578
 2584 03d6 2146     		mov	r1, r4
 2585 03d8 0848     		ldr	r0, .L173+12
 2586 03da FFF7FEFF 		bl	strcpy
 2587              	.LVL243:
 2588              	.LBE44:
 2589 03de 3CE6     		b	.L151
 2590              	.LVL244:
 2591              	.L150:
 557:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2592              		.loc 1 557 13 view .LVU579
 557:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2593              		.loc 1 557 26 is_stmt 0 view .LVU580
 2594 03e0 034B     		ldr	r3, .L173
 2595 03e2 0022     		movs	r2, #0
 2596 03e4 1A80     		strh	r2, [r3]	@ movhi
 558:Core/Src/main.c ****         }
 2597              		.loc 1 558 13 is_stmt 1 view .LVU581
 2598 03e6 0648     		ldr	r0, .L173+16
 2599              	.LVL245:
 558:Core/Src/main.c ****         }
 2600              		.loc 1 558 13 is_stmt 0 view .LVU582
 2601 03e8 FFF7FEFF 		bl	puts
 2602              	.LVL246:
 2603 03ec 35E6     		b	.L151
 2604              	.L174:
 2605 03ee 00BF     		.align	2
 2606              	.L173:
 2607 03f0 00000000 		.word	buffer_index
 2608 03f4 00000000 		.word	received_string
 2609 03f8 70010000 		.word	.LC29
 2610 03fc 00000000 		.word	previous_string
 2611 0400 00000000 		.word	.LC37
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 71


 2612 0404 00000000 		.word	rx_byte4
 2613 0408 00000000 		.word	uart_buffer
 2614 040c 00000000 		.word	huart4
 2615              		.cfi_endproc
 2616              	.LFE250:
 2618              		.section	.text.ActuatorSet,"ax",%progbits
 2619              		.align	1
 2620              		.global	ActuatorSet
 2621              		.syntax unified
 2622              		.thumb
 2623              		.thumb_func
 2625              	ActuatorSet:
 2626              	.LVL247:
 2627              	.LFB259:
 859:Core/Src/main.c **** 
 860:Core/Src/main.c **** void ActuatorSet(int theta){
 2628              		.loc 1 860 28 is_stmt 1 view -0
 2629              		.cfi_startproc
 2630              		@ args = 0, pretend = 0, frame = 0
 2631              		@ frame_needed = 0, uses_anonymous_args = 0
 2632              		@ link register save eliminated.
 861:Core/Src/main.c ****   // Set joint. This is connected to the actuator motor controller. 
 862:Core/Src/main.c ****   // Make an actuator status function
 863:Core/Src/main.c **** 
 864:Core/Src/main.c **** }
 2633              		.loc 1 864 1 view .LVU584
 2634 0000 7047     		bx	lr
 2635              		.cfi_endproc
 2636              	.LFE259:
 2638              		.section	.text.ActuatorStatus,"ax",%progbits
 2639              		.align	1
 2640              		.global	ActuatorStatus
 2641              		.syntax unified
 2642              		.thumb
 2643              		.thumb_func
 2645              	ActuatorStatus:
 2646              	.LFB260:
 865:Core/Src/main.c **** 
 866:Core/Src/main.c **** int ActuatorStatus(){
 2647              		.loc 1 866 21 view -0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              		@ link register save eliminated.
 867:Core/Src/main.c ****   // Get actuator status
 868:Core/Src/main.c ****   return 0;
 2652              		.loc 1 868 3 view .LVU586
 869:Core/Src/main.c **** }
 2653              		.loc 1 869 1 is_stmt 0 view .LVU587
 2654 0000 0020     		movs	r0, #0
 2655 0002 7047     		bx	lr
 2656              		.cfi_endproc
 2657              	.LFE260:
 2659              		.section	.text.Error_Handler,"ax",%progbits
 2660              		.align	1
 2661              		.global	Error_Handler
 2662              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 72


 2663              		.thumb
 2664              		.thumb_func
 2666              	Error_Handler:
 2667              	.LFB261:
 870:Core/Src/main.c **** 
 871:Core/Src/main.c **** /* USER CODE END 4 */
 872:Core/Src/main.c **** 
 873:Core/Src/main.c **** /**
 874:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 875:Core/Src/main.c ****   * @retval None
 876:Core/Src/main.c ****   */
 877:Core/Src/main.c **** void Error_Handler(void)
 878:Core/Src/main.c **** {
 2668              		.loc 1 878 1 is_stmt 1 view -0
 2669              		.cfi_startproc
 2670              		@ Volatile: function does not return.
 2671              		@ args = 0, pretend = 0, frame = 0
 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673              		@ link register save eliminated.
 879:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 880:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 881:Core/Src/main.c ****   __disable_irq();
 2674              		.loc 1 881 3 view .LVU589
 2675              	.LBB45:
 2676              	.LBI45:
 2677              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 73


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 74


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 75


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 76


 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 77


 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 78


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 79


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 80


 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 81


 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 82


 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 83


 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 84


 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 85


 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 86


 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 87


 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 88


 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 89


 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2678              		.loc 2 960 27 view .LVU590
 2679              	.LBB46:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2680              		.loc 2 962 3 view .LVU591
 2681              		.syntax unified
 2682              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2683 0000 72B6     		cpsid i
 2684              	@ 0 "" 2
 2685              		.thumb
 2686              		.syntax unified
 2687              	.L178:
 2688              	.LBE46:
 2689              	.LBE45:
 882:Core/Src/main.c ****   while (1)
 2690              		.loc 1 882 3 view .LVU592
 883:Core/Src/main.c ****   {
 884:Core/Src/main.c ****   }
 2691              		.loc 1 884 3 view .LVU593
 882:Core/Src/main.c ****   while (1)
 2692              		.loc 1 882 9 view .LVU594
 2693 0002 FEE7     		b	.L178
 2694              		.cfi_endproc
 2695              	.LFE261:
 2697              		.section	.text.SystemClock_Config,"ax",%progbits
 2698              		.align	1
 2699              		.global	SystemClock_Config
 2700              		.syntax unified
 2701              		.thumb
 2702              		.thumb_func
 2704              	SystemClock_Config:
 2705              	.LFB243:
 238:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2706              		.loc 1 238 1 view -0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 80
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710 0000 00B5     		push	{lr}
 2711              	.LCFI39:
 2712              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 90


 2713              		.cfi_offset 14, -4
 2714 0002 95B0     		sub	sp, sp, #84
 2715              	.LCFI40:
 2716              		.cfi_def_cfa_offset 88
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2717              		.loc 1 239 3 view .LVU596
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2718              		.loc 1 239 22 is_stmt 0 view .LVU597
 2719 0004 3022     		movs	r2, #48
 2720 0006 0021     		movs	r1, #0
 2721 0008 08A8     		add	r0, sp, #32
 2722 000a FFF7FEFF 		bl	memset
 2723              	.LVL248:
 240:Core/Src/main.c **** 
 2724              		.loc 1 240 3 is_stmt 1 view .LVU598
 240:Core/Src/main.c **** 
 2725              		.loc 1 240 22 is_stmt 0 view .LVU599
 2726 000e 0023     		movs	r3, #0
 2727 0010 0393     		str	r3, [sp, #12]
 2728 0012 0493     		str	r3, [sp, #16]
 2729 0014 0593     		str	r3, [sp, #20]
 2730 0016 0693     		str	r3, [sp, #24]
 2731 0018 0793     		str	r3, [sp, #28]
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2732              		.loc 1 244 3 is_stmt 1 view .LVU600
 2733              	.LBB47:
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2734              		.loc 1 244 3 view .LVU601
 2735 001a 0193     		str	r3, [sp, #4]
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2736              		.loc 1 244 3 view .LVU602
 2737 001c 1F4A     		ldr	r2, .L185
 2738 001e 116C     		ldr	r1, [r2, #64]
 2739 0020 41F08051 		orr	r1, r1, #268435456
 2740 0024 1164     		str	r1, [r2, #64]
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2741              		.loc 1 244 3 view .LVU603
 2742 0026 126C     		ldr	r2, [r2, #64]
 2743 0028 02F08052 		and	r2, r2, #268435456
 2744 002c 0192     		str	r2, [sp, #4]
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2745              		.loc 1 244 3 view .LVU604
 2746 002e 019A     		ldr	r2, [sp, #4]
 2747              	.LBE47:
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2748              		.loc 1 244 3 view .LVU605
 245:Core/Src/main.c **** 
 2749              		.loc 1 245 3 view .LVU606
 2750              	.LBB48:
 245:Core/Src/main.c **** 
 2751              		.loc 1 245 3 view .LVU607
 2752 0030 0293     		str	r3, [sp, #8]
 245:Core/Src/main.c **** 
 2753              		.loc 1 245 3 view .LVU608
 2754 0032 1B4B     		ldr	r3, .L185+4
 2755 0034 1A68     		ldr	r2, [r3]
 2756 0036 42F48042 		orr	r2, r2, #16384
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 91


 2757 003a 1A60     		str	r2, [r3]
 245:Core/Src/main.c **** 
 2758              		.loc 1 245 3 view .LVU609
 2759 003c 1B68     		ldr	r3, [r3]
 2760 003e 03F48043 		and	r3, r3, #16384
 2761 0042 0293     		str	r3, [sp, #8]
 245:Core/Src/main.c **** 
 2762              		.loc 1 245 3 view .LVU610
 2763 0044 029B     		ldr	r3, [sp, #8]
 2764              	.LBE48:
 245:Core/Src/main.c **** 
 2765              		.loc 1 245 3 view .LVU611
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2766              		.loc 1 250 3 view .LVU612
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2767              		.loc 1 250 36 is_stmt 0 view .LVU613
 2768 0046 0123     		movs	r3, #1
 2769 0048 0893     		str	r3, [sp, #32]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2770              		.loc 1 251 3 is_stmt 1 view .LVU614
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2771              		.loc 1 251 30 is_stmt 0 view .LVU615
 2772 004a 4FF48033 		mov	r3, #65536
 2773 004e 0993     		str	r3, [sp, #36]
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2774              		.loc 1 252 3 is_stmt 1 view .LVU616
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2775              		.loc 1 252 34 is_stmt 0 view .LVU617
 2776 0050 0223     		movs	r3, #2
 2777 0052 0E93     		str	r3, [sp, #56]
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2778              		.loc 1 253 3 is_stmt 1 view .LVU618
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2779              		.loc 1 253 35 is_stmt 0 view .LVU619
 2780 0054 4FF48002 		mov	r2, #4194304
 2781 0058 0F92     		str	r2, [sp, #60]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 2782              		.loc 1 254 3 is_stmt 1 view .LVU620
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 2783              		.loc 1 254 30 is_stmt 0 view .LVU621
 2784 005a 0422     		movs	r2, #4
 2785 005c 1092     		str	r2, [sp, #64]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2786              		.loc 1 255 3 is_stmt 1 view .LVU622
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2787              		.loc 1 255 30 is_stmt 0 view .LVU623
 2788 005e 4822     		movs	r2, #72
 2789 0060 1192     		str	r2, [sp, #68]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 2790              		.loc 1 256 3 is_stmt 1 view .LVU624
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 2791              		.loc 1 256 30 is_stmt 0 view .LVU625
 2792 0062 1293     		str	r3, [sp, #72]
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2793              		.loc 1 257 3 is_stmt 1 view .LVU626
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2794              		.loc 1 257 30 is_stmt 0 view .LVU627
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 92


 2795 0064 0323     		movs	r3, #3
 2796 0066 1393     		str	r3, [sp, #76]
 258:Core/Src/main.c ****   {
 2797              		.loc 1 258 3 is_stmt 1 view .LVU628
 258:Core/Src/main.c ****   {
 2798              		.loc 1 258 7 is_stmt 0 view .LVU629
 2799 0068 08A8     		add	r0, sp, #32
 2800 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 2801              	.LVL249:
 258:Core/Src/main.c ****   {
 2802              		.loc 1 258 6 discriminator 1 view .LVU630
 2803 006e 80B9     		cbnz	r0, .L183
 265:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2804              		.loc 1 265 3 is_stmt 1 view .LVU631
 265:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2805              		.loc 1 265 31 is_stmt 0 view .LVU632
 2806 0070 0F23     		movs	r3, #15
 2807 0072 0393     		str	r3, [sp, #12]
 267:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2808              		.loc 1 267 3 is_stmt 1 view .LVU633
 267:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2809              		.loc 1 267 34 is_stmt 0 view .LVU634
 2810 0074 0221     		movs	r1, #2
 2811 0076 0491     		str	r1, [sp, #16]
 268:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2812              		.loc 1 268 3 is_stmt 1 view .LVU635
 268:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2813              		.loc 1 268 35 is_stmt 0 view .LVU636
 2814 0078 0023     		movs	r3, #0
 2815 007a 0593     		str	r3, [sp, #20]
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2816              		.loc 1 269 3 is_stmt 1 view .LVU637
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2817              		.loc 1 269 36 is_stmt 0 view .LVU638
 2818 007c 4FF48052 		mov	r2, #4096
 2819 0080 0692     		str	r2, [sp, #24]
 270:Core/Src/main.c **** 
 2820              		.loc 1 270 3 is_stmt 1 view .LVU639
 270:Core/Src/main.c **** 
 2821              		.loc 1 270 36 is_stmt 0 view .LVU640
 2822 0082 0793     		str	r3, [sp, #28]
 272:Core/Src/main.c ****   {
 2823              		.loc 1 272 3 is_stmt 1 view .LVU641
 272:Core/Src/main.c ****   {
 2824              		.loc 1 272 7 is_stmt 0 view .LVU642
 2825 0084 03A8     		add	r0, sp, #12
 2826 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2827              	.LVL250:
 272:Core/Src/main.c ****   {
 2828              		.loc 1 272 6 discriminator 1 view .LVU643
 2829 008a 20B9     		cbnz	r0, .L184
 276:Core/Src/main.c **** 
 2830              		.loc 1 276 1 view .LVU644
 2831 008c 15B0     		add	sp, sp, #84
 2832              	.LCFI41:
 2833              		.cfi_remember_state
 2834              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 93


 2835              		@ sp needed
 2836 008e 5DF804FB 		ldr	pc, [sp], #4
 2837              	.L183:
 2838              	.LCFI42:
 2839              		.cfi_restore_state
 260:Core/Src/main.c ****   }
 2840              		.loc 1 260 5 is_stmt 1 view .LVU645
 2841 0092 FFF7FEFF 		bl	Error_Handler
 2842              	.LVL251:
 2843              	.L184:
 274:Core/Src/main.c ****   }
 2844              		.loc 1 274 5 view .LVU646
 2845 0096 FFF7FEFF 		bl	Error_Handler
 2846              	.LVL252:
 2847              	.L186:
 2848 009a 00BF     		.align	2
 2849              	.L185:
 2850 009c 00380240 		.word	1073887232
 2851 00a0 00700040 		.word	1073770496
 2852              		.cfi_endproc
 2853              	.LFE243:
 2855              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2856              		.align	2
 2857              	.LC38:
 2858 0000 53797374 		.ascii	"System Initialized\015\000"
 2858      656D2049 
 2858      6E697469 
 2858      616C697A 
 2858      65640D00 
 2859              		.section	.text.main,"ax",%progbits
 2860              		.align	1
 2861              		.global	main
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2866              	main:
 2867              	.LFB242:
 164:Core/Src/main.c **** 
 2868              		.loc 1 164 1 view -0
 2869              		.cfi_startproc
 2870              		@ Volatile: function does not return.
 2871              		@ args = 0, pretend = 0, frame = 0
 2872              		@ frame_needed = 0, uses_anonymous_args = 0
 2873 0000 08B5     		push	{r3, lr}
 2874              	.LCFI43:
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 3, -8
 2877              		.cfi_offset 14, -4
 173:Core/Src/main.c **** 
 2878              		.loc 1 173 3 view .LVU648
 2879 0002 FFF7FEFF 		bl	HAL_Init
 2880              	.LVL253:
 180:Core/Src/main.c **** 
 2881              		.loc 1 180 3 view .LVU649
 2882 0006 FFF7FEFF 		bl	SystemClock_Config
 2883              	.LVL254:
 187:Core/Src/main.c ****   MX_ADC1_Init();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 94


 2884              		.loc 1 187 3 view .LVU650
 2885 000a FFF7FEFF 		bl	MX_GPIO_Init
 2886              	.LVL255:
 188:Core/Src/main.c ****   MX_I2C1_Init();
 2887              		.loc 1 188 3 view .LVU651
 2888 000e FFF7FEFF 		bl	MX_ADC1_Init
 2889              	.LVL256:
 189:Core/Src/main.c ****   MX_TIM1_Init();
 2890              		.loc 1 189 3 view .LVU652
 2891 0012 FFF7FEFF 		bl	MX_I2C1_Init
 2892              	.LVL257:
 190:Core/Src/main.c ****   MX_TIM2_Init();
 2893              		.loc 1 190 3 view .LVU653
 2894 0016 FFF7FEFF 		bl	MX_TIM1_Init
 2895              	.LVL258:
 191:Core/Src/main.c ****   MX_UART4_Init();
 2896              		.loc 1 191 3 view .LVU654
 2897 001a FFF7FEFF 		bl	MX_TIM2_Init
 2898              	.LVL259:
 192:Core/Src/main.c ****   MX_UART5_Init();
 2899              		.loc 1 192 3 view .LVU655
 2900 001e FFF7FEFF 		bl	MX_UART4_Init
 2901              	.LVL260:
 193:Core/Src/main.c ****   MX_USART1_UART_Init();
 2902              		.loc 1 193 3 view .LVU656
 2903 0022 FFF7FEFF 		bl	MX_UART5_Init
 2904              	.LVL261:
 194:Core/Src/main.c ****   MX_USART2_UART_Init();
 2905              		.loc 1 194 3 view .LVU657
 2906 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 2907              	.LVL262:
 195:Core/Src/main.c ****   MX_USART3_UART_Init();
 2908              		.loc 1 195 3 view .LVU658
 2909 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 2910              	.LVL263:
 196:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 2911              		.loc 1 196 3 view .LVU659
 2912 002e FFF7FEFF 		bl	MX_USART3_UART_Init
 2913              	.LVL264:
 197:Core/Src/main.c ****   MX_TIM4_Init();
 2914              		.loc 1 197 3 view .LVU660
 2915 0032 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 2916              	.LVL265:
 198:Core/Src/main.c ****   MX_TIM3_Init();
 2917              		.loc 1 198 3 view .LVU661
 2918 0036 FFF7FEFF 		bl	MX_TIM4_Init
 2919              	.LVL266:
 199:Core/Src/main.c ****   MX_USART6_UART_Init();
 2920              		.loc 1 199 3 view .LVU662
 2921 003a FFF7FEFF 		bl	MX_TIM3_Init
 2922              	.LVL267:
 200:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2923              		.loc 1 200 3 view .LVU663
 2924 003e FFF7FEFF 		bl	MX_USART6_UART_Init
 2925              	.LVL268:
 204:Core/Src/main.c **** 
 2926              		.loc 1 204 3 view .LVU664
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 95


 2927 0042 1248     		ldr	r0, .L190
 2928 0044 FFF7FEFF 		bl	puts
 2929              	.LVL269:
 206:Core/Src/main.c **** 
 2930              		.loc 1 206 3 view .LVU665
 2931 0048 FFF7FEFF 		bl	HomeSet
 2932              	.LVL270:
 208:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 2933              		.loc 1 208 3 view .LVU666
 2934 004c 0122     		movs	r2, #1
 2935 004e 1049     		ldr	r1, .L190+4
 2936 0050 1048     		ldr	r0, .L190+8
 2937 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2938              	.LVL271:
 209:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 2939              		.loc 1 209 3 view .LVU667
 2940 0056 0122     		movs	r2, #1
 2941 0058 0F49     		ldr	r1, .L190+12
 2942 005a 1048     		ldr	r0, .L190+16
 2943 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 2944              	.LVL272:
 210:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 2945              		.loc 1 210 3 view .LVU668
 2946 0060 0122     		movs	r2, #1
 2947 0062 0F49     		ldr	r1, .L190+20
 2948 0064 0F48     		ldr	r0, .L190+24
 2949 0066 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2950              	.LVL273:
 211:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 2951              		.loc 1 211 3 view .LVU669
 2952 006a 0122     		movs	r2, #1
 2953 006c 0E49     		ldr	r1, .L190+28
 2954 006e 0F48     		ldr	r0, .L190+32
 2955 0070 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2956              	.LVL274:
 212:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 2957              		.loc 1 212 3 view .LVU670
 2958 0074 0122     		movs	r2, #1
 2959 0076 0E49     		ldr	r1, .L190+36
 2960 0078 0E48     		ldr	r0, .L190+40
 2961 007a FFF7FEFF 		bl	HAL_UART_Receive_IT
 2962              	.LVL275:
 213:Core/Src/main.c **** 
 2963              		.loc 1 213 3 view .LVU671
 2964 007e 0122     		movs	r2, #1
 2965 0080 0D49     		ldr	r1, .L190+44
 2966 0082 0E48     		ldr	r0, .L190+48
 2967 0084 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2968              	.LVL276:
 2969              	.L188:
 220:Core/Src/main.c ****   {
 2970              		.loc 1 220 3 view .LVU672
 229:Core/Src/main.c ****   /* USER CODE END 3 */
 2971              		.loc 1 229 3 view .LVU673
 220:Core/Src/main.c ****   {
 2972              		.loc 1 220 9 view .LVU674
 2973 0088 FEE7     		b	.L188
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 96


 2974              	.L191:
 2975 008a 00BF     		.align	2
 2976              	.L190:
 2977 008c 00000000 		.word	.LC38
 2978 0090 00000000 		.word	rx_byte
 2979 0094 00000000 		.word	huart1
 2980 0098 00000000 		.word	rx_byte1
 2981 009c 00000000 		.word	huart6
 2982 00a0 00000000 		.word	rx_byte2
 2983 00a4 00000000 		.word	huart2
 2984 00a8 00000000 		.word	rx_byte3
 2985 00ac 00000000 		.word	huart3
 2986 00b0 00000000 		.word	rx_byte4
 2987 00b4 00000000 		.word	huart4
 2988 00b8 00000000 		.word	rx_byte5
 2989 00bc 00000000 		.word	huart5
 2990              		.cfi_endproc
 2991              	.LFE242:
 2993              		.global	prev_actuator
 2994              		.section	.bss.prev_actuator,"aw",%nobits
 2995              		.align	2
 2998              	prev_actuator:
 2999 0000 00000000 		.space	4
 3000              		.global	prev_joint5
 3001              		.section	.bss.prev_joint5,"aw",%nobits
 3002              		.align	2
 3005              	prev_joint5:
 3006 0000 00000000 		.space	4
 3007              		.global	prev_joint4
 3008              		.section	.bss.prev_joint4,"aw",%nobits
 3009              		.align	2
 3012              	prev_joint4:
 3013 0000 00000000 		.space	4
 3014              		.global	prev_joint3
 3015              		.section	.bss.prev_joint3,"aw",%nobits
 3016              		.align	2
 3019              	prev_joint3:
 3020 0000 00000000 		.space	4
 3021              		.global	prev_joint2
 3022              		.section	.bss.prev_joint2,"aw",%nobits
 3023              		.align	2
 3026              	prev_joint2:
 3027 0000 00000000 		.space	4
 3028              		.global	prev_joint1
 3029              		.section	.bss.prev_joint1,"aw",%nobits
 3030              		.align	2
 3033              	prev_joint1:
 3034 0000 00000000 		.space	4
 3035              		.global	ledFlag
 3036              		.section	.bss.ledFlag,"aw",%nobits
 3037              		.align	2
 3040              	ledFlag:
 3041 0000 00000000 		.space	4
 3042              		.global	actuator
 3043              		.section	.bss.actuator,"aw",%nobits
 3044              		.align	2
 3047              	actuator:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 97


 3048 0000 00000000 		.space	4
 3049              		.global	joint5
 3050              		.section	.data.joint5,"aw"
 3051              		.align	2
 3054              	joint5:
 3055 0000 5A000000 		.word	90
 3056              		.global	joint4
 3057              		.section	.data.joint4,"aw"
 3058              		.align	2
 3061              	joint4:
 3062 0000 5A000000 		.word	90
 3063              		.global	joint3
 3064              		.section	.data.joint3,"aw"
 3065              		.align	2
 3068              	joint3:
 3069 0000 5A000000 		.word	90
 3070              		.global	joint2
 3071              		.section	.data.joint2,"aw"
 3072              		.align	2
 3075              	joint2:
 3076 0000 5A000000 		.word	90
 3077              		.global	joint1
 3078              		.section	.data.joint1,"aw"
 3079              		.align	2
 3082              	joint1:
 3083 0000 5A000000 		.word	90
 3084              		.global	previous_string
 3085              		.section	.bss.previous_string,"aw",%nobits
 3086              		.align	2
 3089              	previous_string:
 3090 0000 00000000 		.space	256
 3090      00000000 
 3090      00000000 
 3090      00000000 
 3090      00000000 
 3091              		.global	received_string
 3092              		.section	.bss.received_string,"aw",%nobits
 3093              		.align	2
 3096              	received_string:
 3097 0000 00000000 		.space	256
 3097      00000000 
 3097      00000000 
 3097      00000000 
 3097      00000000 
 3098              		.global	uart_received
 3099              		.section	.bss.uart_received,"aw",%nobits
 3102              	uart_received:
 3103 0000 00       		.space	1
 3104              		.global	buffer_index
 3105              		.section	.bss.buffer_index,"aw",%nobits
 3106              		.align	1
 3109              	buffer_index:
 3110 0000 0000     		.space	2
 3111              		.global	uart_buffer
 3112              		.section	.bss.uart_buffer,"aw",%nobits
 3113              		.align	2
 3116              	uart_buffer:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 98


 3117 0000 00000000 		.space	256
 3117      00000000 
 3117      00000000 
 3117      00000000 
 3117      00000000 
 3118              		.global	rx_byte5
 3119              		.section	.bss.rx_byte5,"aw",%nobits
 3122              	rx_byte5:
 3123 0000 00       		.space	1
 3124              		.global	rx_byte4
 3125              		.section	.bss.rx_byte4,"aw",%nobits
 3128              	rx_byte4:
 3129 0000 00       		.space	1
 3130              		.global	rx_byte3
 3131              		.section	.bss.rx_byte3,"aw",%nobits
 3134              	rx_byte3:
 3135 0000 00       		.space	1
 3136              		.global	rx_byte2
 3137              		.section	.bss.rx_byte2,"aw",%nobits
 3140              	rx_byte2:
 3141 0000 00       		.space	1
 3142              		.global	rx_byte1
 3143              		.section	.bss.rx_byte1,"aw",%nobits
 3146              	rx_byte1:
 3147 0000 00       		.space	1
 3148              		.global	rx_byte
 3149              		.section	.bss.rx_byte,"aw",%nobits
 3152              	rx_byte:
 3153 0000 00       		.space	1
 3154              		.text
 3155              	.Letext0:
 3156              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 3157              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3158              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3159              		.file 6 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 3160              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3161              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3162              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3163              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3164              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3165              		.file 12 "Core/Inc/usart.h"
 3166              		.file 13 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 3167              		.file 14 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 3168              		.file 15 "Core/Inc/tim.h"
 3169              		.file 16 "Core/Inc/usb_otg.h"
 3170              		.file 17 "Core/Inc/i2c.h"
 3171              		.file 18 "Core/Inc/adc.h"
 3172              		.file 19 "Core/Inc/gpio.h"
 3173              		.file 20 "<built-in>"
 3174              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 99


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:68     .text.__io_putchar_usart2:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:74     .text.__io_putchar_usart2:00000000 __io_putchar_usart2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:110    .text.__io_putchar_usart2:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:115    .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:121    .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:157    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:162    .text.__io_putchar_uart4:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:168    .text.__io_putchar_uart4:00000000 __io_putchar_uart4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:204    .text.__io_putchar_uart4:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:209    .text.__io_putchar_uart5:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:215    .text.__io_putchar_uart5:00000000 __io_putchar_uart5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:251    .text.__io_putchar_uart5:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:256    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:262    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:298    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:303    .text.ProcessReceivedJoint:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:309    .text.ProcessReceivedJoint:00000000 ProcessReceivedJoint
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:323    .rodata.Joint1Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:327    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:333    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:398    .text.Joint1Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:403    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:407    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:413    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:478    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:483    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:489    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:554    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:559    .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:565    .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:630    .text.Joint4Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:635    .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:641    .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:706    .text.Joint5Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:711    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:717    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:780    .text.HomeSet:00000040 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3082   .data.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3075   .data.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3068   .data.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3061   .data.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3054   .data.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3047   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:790    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:896    .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:902    .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1408   .text.ProcessReceivedString:0000028c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3033   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3026   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3019   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3012   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3005   .bss.prev_joint5:00000000 prev_joint5
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 100


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2998   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1450   .text.ProcessReceivedString:0000032c $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1805   .text.ProcessReceivedString:0000047c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3040   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1827   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1831   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:1837   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2316   .text.HAL_UART_RxCpltCallback:0000024c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3109   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3122   .bss.rx_byte5:00000000 rx_byte5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3116   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3152   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3096   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3089   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3146   .bss.rx_byte1:00000000 rx_byte1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3140   .bss.rx_byte2:00000000 rx_byte2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3134   .bss.rx_byte3:00000000 rx_byte3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2341   .text.HAL_UART_RxCpltCallback:000002a4 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2607   .text.HAL_UART_RxCpltCallback:000003f0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3128   .bss.rx_byte4:00000000 rx_byte4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2619   .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2625   .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2639   .text.ActuatorStatus:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2645   .text.ActuatorStatus:00000000 ActuatorStatus
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2660   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2666   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2698   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2704   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2850   .text.SystemClock_Config:0000009c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2856   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2860   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2866   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2977   .text.main:0000008c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:2995   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3002   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3009   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3016   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3023   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3030   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3037   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3044   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3051   .data.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3058   .data.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3065   .data.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3072   .data.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3079   .data.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3086   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3093   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3102   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3103   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3106   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3113   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3123   .bss.rx_byte5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3129   .bss.rx_byte4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3135   .bss.rx_byte3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3141   .bss.rx_byte2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3147   .bss.rx_byte1:00000000 $d
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s 			page 101


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccbtjyPM.s:3153   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
huart3
huart4
huart5
huart6
snprintf
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_UART4_Init
MX_UART5_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM4_Init
MX_TIM3_Init
MX_USART6_UART_Init
