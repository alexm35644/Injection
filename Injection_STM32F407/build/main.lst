ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB244:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 0
  44:Core/Src/main.c **** #define JOINT2_HOME 0
  45:Core/Src/main.c **** #define JOINT3_HOME 0
  46:Core/Src/main.c **** #define JOINT4_HOME 0 
  47:Core/Src/main.c **** #define JOINT5_HOME 0
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** #define MAIN_UART &huart1
  51:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART1
  52:Core/Src/main.c **** #define JOINT1_UART &huart6
  53:Core/Src/main.c **** #define JOINT1_UART_INSTANCE USART6
  54:Core/Src/main.c **** #define JOINT2_UART &huart2
  55:Core/Src/main.c **** #define JOINT2_UART_INSTANCE USART2
  56:Core/Src/main.c **** #define JOINT3_UART &huart3
  57:Core/Src/main.c **** #define JOINT3_UART_INSTANCE USART3
  58:Core/Src/main.c **** #define JOINT4_UART &huart4
  59:Core/Src/main.c **** #define JOINT4_UART_INSTANCE UART4
  60:Core/Src/main.c **** #define JOINT5_UART &huart5
  61:Core/Src/main.c **** #define JOINT5_UART_INSTANCE UART5
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PD */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN PM */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PV */
  74:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  75:Core/Src/main.c **** volatile uint8_t rx_byte;                        // For receiving single byte
  76:Core/Src/main.c **** volatile uint8_t rx_byte1;                        // For receiving single byte
  77:Core/Src/main.c **** volatile uint8_t rx_byte2;                        // For receiving single byte
  78:Core/Src/main.c **** volatile uint8_t rx_byte3;                        // For receiving single byte
  79:Core/Src/main.c **** volatile uint8_t rx_byte4;                        // For receiving single byte
  80:Core/Src/main.c **** volatile uint8_t rx_byte5;                        // For receiving single byte
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  83:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
  86:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 3


  87:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** int joint1 = JOINT1_HOME;
  90:Core/Src/main.c **** int joint2 = JOINT2_HOME;
  91:Core/Src/main.c **** int joint3 = JOINT3_HOME;
  92:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
  93:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
  94:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
  95:Core/Src/main.c **** int ledFlag = 0; 
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
 104:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 105:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART2 int __io_putchar_usart2(int ch)
 108:Core/Src/main.c **** #define printf_joint2(...) do { \
 109:Core/Src/main.c ****     char buffer[256]; \
 110:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 111:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 112:Core/Src/main.c ****         __io_putchar_usart2(buffer[i]); \
 113:Core/Src/main.c ****     } \
 114:Core/Src/main.c **** } while (0)
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
 117:Core/Src/main.c **** #define printf_joint3(...) do { \
 118:Core/Src/main.c ****     char buffer[256]; \
 119:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 120:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 121:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
 122:Core/Src/main.c ****     } \
 123:Core/Src/main.c **** } while (0)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART4 int __io_putchar_uart4(int ch)
 126:Core/Src/main.c **** #define printf_joint4(...) do { \
 127:Core/Src/main.c ****     char buffer[256]; \
 128:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 129:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 130:Core/Src/main.c ****         __io_putchar_uart4(buffer[i]); \
 131:Core/Src/main.c ****     } \
 132:Core/Src/main.c **** } while (0)
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART5 int __io_putchar_uart5(int ch)
 135:Core/Src/main.c **** #define printf_joint5(...) do { \
 136:Core/Src/main.c ****     char buffer[256]; \
 137:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 138:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 139:Core/Src/main.c ****         __io_putchar_uart5(buffer[i]); \
 140:Core/Src/main.c ****     } \
 141:Core/Src/main.c **** } while (0)
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 4


 144:Core/Src/main.c **** #define printf_joint1(...) do { \
 145:Core/Src/main.c ****     char buffer[256]; \
 146:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 147:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 148:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 149:Core/Src/main.c ****     } \
 150:Core/Src/main.c **** } while (0)
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* USER CODE END PFP */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 155:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE END 0 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief  The application entry point.
 161:Core/Src/main.c ****   * @retval int
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** int main(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 173:Core/Src/main.c ****   HAL_Init();
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END Init */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Configure the system clock */
 180:Core/Src/main.c ****   SystemClock_Config();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END SysInit */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* Initialize all configured peripherals */
 187:Core/Src/main.c ****   MX_GPIO_Init();
 188:Core/Src/main.c ****   MX_ADC1_Init();
 189:Core/Src/main.c ****   MX_I2C1_Init();
 190:Core/Src/main.c ****   MX_TIM1_Init();
 191:Core/Src/main.c ****   MX_TIM2_Init();
 192:Core/Src/main.c ****   MX_UART4_Init();
 193:Core/Src/main.c ****   MX_UART5_Init();
 194:Core/Src/main.c ****   MX_USART1_UART_Init();
 195:Core/Src/main.c ****   MX_USART2_UART_Init();
 196:Core/Src/main.c ****   MX_USART3_UART_Init();
 197:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 198:Core/Src/main.c ****   MX_TIM4_Init();
 199:Core/Src/main.c ****   MX_TIM3_Init();
 200:Core/Src/main.c ****   MX_USART6_UART_Init();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 5


 201:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 202:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 203:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 204:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 205:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 206:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 207:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 208:Core/Src/main.c ****   printf("System Initialized\r\n");
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* Infinite loop */
 214:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 215:Core/Src/main.c ****   while (1)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     /* USER CODE END WHILE */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   /* USER CODE END 3 */
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /**
 229:Core/Src/main.c ****   * @brief System Clock Configuration
 230:Core/Src/main.c ****   * @retval None
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** void SystemClock_Config(void)
 233:Core/Src/main.c **** {
 234:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 235:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 240:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 243:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 253:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 6


 258:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 261:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 262:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 263:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 265:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** /**
 276:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 277:Core/Src/main.c ****   * @retval None
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 280:Core/Src/main.c ****  {
  30              		.loc 1 280 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 280 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 281:Core/Src/main.c ****    /* Place your implementation of fputc here */
 282:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 283:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 283 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 283 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 284:Core/Src/main.c ****  
 285:Core/Src/main.c ****    return ch;
  52              		.loc 1 285 4 is_stmt 1 view .LVU4
 286:Core/Src/main.c ****  }
  53              		.loc 1 286 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 7


  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE244:
  67              		.section	.text.__io_putchar_usart2,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart2
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart2:
  75              	.LVL3:
  76              	.LFB245:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART2{
  77              		.loc 1 288 26 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 288 26 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 289:Core/Src/main.c ****     HAL_UART_Transmit(JOINT2_UART, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 289 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 289 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****       return ch;
  99              		.loc 1 291 7 is_stmt 1 view .LVU10
 292:Core/Src/main.c ****  }
 100              		.loc 1 292 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 8


 111              		.cfi_endproc
 112              	.LFE245:
 114              		.section	.text.__io_putchar_usart3,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart3:
 122              	.LVL6:
 123              	.LFB246:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 295:Core/Src/main.c ****  {
 124              		.loc 1 295 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 295 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 296:Core/Src/main.c ****     /* Place your implementation of fputc here */
 297:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 298:Core/Src/main.c ****     HAL_UART_Transmit(JOINT3_UART, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 298 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 298 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****     return ch;
 146              		.loc 1 300 5 is_stmt 1 view .LVU16
 301:Core/Src/main.c ****  }
 147              		.loc 1 301 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 001c 00000000 		.word	huart3
 158              		.cfi_endproc
 159              	.LFE246:
 161              		.section	.text.__io_putchar_uart4,"ax",%progbits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 9


 162              		.align	1
 163              		.global	__io_putchar_uart4
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	__io_putchar_uart4:
 169              	.LVL9:
 170              	.LFB247:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART4
 304:Core/Src/main.c ****  {
 171              		.loc 1 304 2 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 304 2 is_stmt 0 view .LVU19
 176 0000 00B5     		push	{lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              	.LCFI10:
 182              		.cfi_def_cfa_offset 16
 183 0004 0190     		str	r0, [sp, #4]
 305:Core/Src/main.c ****     /* Place your implementation of fputc here */
 306:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 307:Core/Src/main.c ****     HAL_UART_Transmit(JOINT4_UART, (uint8_t *)&ch, 1, 0xFFFF);
 184              		.loc 1 307 5 is_stmt 1 view .LVU20
 185 0006 4FF6FF73 		movw	r3, #65535
 186 000a 0122     		movs	r2, #1
 187 000c 01A9     		add	r1, sp, #4
 188 000e 0348     		ldr	r0, .L15
 189              	.LVL10:
 190              		.loc 1 307 5 is_stmt 0 view .LVU21
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 192              	.LVL11:
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****     return ch;
 193              		.loc 1 309 5 is_stmt 1 view .LVU22
 310:Core/Src/main.c ****  }
 194              		.loc 1 310 2 is_stmt 0 view .LVU23
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              		.align	2
 203              	.L15:
 204 001c 00000000 		.word	huart4
 205              		.cfi_endproc
 206              	.LFE247:
 208              		.section	.text.__io_putchar_uart5,"ax",%progbits
 209              		.align	1
 210              		.global	__io_putchar_uart5
 211              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 10


 212              		.thumb
 213              		.thumb_func
 215              	__io_putchar_uart5:
 216              	.LVL12:
 217              	.LFB248:
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART5
 313:Core/Src/main.c ****  {
 218              		.loc 1 313 2 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 313 2 is_stmt 0 view .LVU25
 223 0000 00B5     		push	{lr}
 224              	.LCFI12:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI13:
 229              		.cfi_def_cfa_offset 16
 230 0004 0190     		str	r0, [sp, #4]
 314:Core/Src/main.c ****     /* Place your implementation of fputc here */
 315:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 316:Core/Src/main.c ****     HAL_UART_Transmit(JOINT5_UART, (uint8_t *)&ch, 1, 0xFFFF);
 231              		.loc 1 316 5 is_stmt 1 view .LVU26
 232 0006 4FF6FF73 		movw	r3, #65535
 233 000a 0122     		movs	r2, #1
 234 000c 01A9     		add	r1, sp, #4
 235 000e 0348     		ldr	r0, .L19
 236              	.LVL13:
 237              		.loc 1 316 5 is_stmt 0 view .LVU27
 238 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 239              	.LVL14:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     return ch;
 240              		.loc 1 318 5 is_stmt 1 view .LVU28
 319:Core/Src/main.c ****  }
 241              		.loc 1 319 2 is_stmt 0 view .LVU29
 242 0014 0198     		ldr	r0, [sp, #4]
 243 0016 03B0     		add	sp, sp, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0018 5DF804FB 		ldr	pc, [sp], #4
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 001c 00000000 		.word	huart5
 252              		.cfi_endproc
 253              	.LFE248:
 255              		.section	.text.__io_putchar_usart6,"ax",%progbits
 256              		.align	1
 257              		.global	__io_putchar_usart6
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	__io_putchar_usart6:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 11


 263              	.LVL15:
 264              	.LFB249:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 322:Core/Src/main.c ****  {
 265              		.loc 1 322 2 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 322 2 is_stmt 0 view .LVU31
 270 0000 00B5     		push	{lr}
 271              	.LCFI15:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 14, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 16
 277 0004 0190     		str	r0, [sp, #4]
 323:Core/Src/main.c ****     /* Place your implementation of fputc here */
 324:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 325:Core/Src/main.c ****     HAL_UART_Transmit(JOINT1_UART, (uint8_t *)&ch, 1, 0xFFFF);
 278              		.loc 1 325 5 is_stmt 1 view .LVU32
 279 0006 4FF6FF73 		movw	r3, #65535
 280 000a 0122     		movs	r2, #1
 281 000c 01A9     		add	r1, sp, #4
 282 000e 0348     		ldr	r0, .L23
 283              	.LVL16:
 284              		.loc 1 325 5 is_stmt 0 view .LVU33
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL17:
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****     return ch;
 287              		.loc 1 327 5 is_stmt 1 view .LVU34
 328:Core/Src/main.c ****  }
 288              		.loc 1 328 2 is_stmt 0 view .LVU35
 289 0014 0198     		ldr	r0, [sp, #4]
 290 0016 03B0     		add	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 4
 293              		@ sp needed
 294 0018 5DF804FB 		ldr	pc, [sp], #4
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 001c 00000000 		.word	huart6
 299              		.cfi_endproc
 300              	.LFE249:
 302              		.section	.text.ProcessReceivedJoint,"ax",%progbits
 303              		.align	1
 304              		.global	ProcessReceivedJoint
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	ProcessReceivedJoint:
 310              	.LVL18:
 311              	.LFB252:
 329:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 12


 330:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 331:Core/Src/main.c **** {
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     {
 336:Core/Src/main.c ****         // Store received byte in buffer
 337:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 338:Core/Src/main.c ****         {
 339:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****             // Check for newline or carriage return
 342:Core/Src/main.c ****             if (rx_byte == '\n') 
 343:Core/Src/main.c ****             {
 344:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 345:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 348:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 351:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 352:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 353:Core/Src/main.c ****                 }
 354:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 355:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 356:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 357:Core/Src/main.c ****                 }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****                 
 360:Core/Src/main.c ****             }
 361:Core/Src/main.c ****         }
 362:Core/Src/main.c ****         else 
 363:Core/Src/main.c ****         {
 364:Core/Src/main.c ****             // Buffer overflow, reset index
 365:Core/Src/main.c ****             buffer_index = 0;
 366:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 367:Core/Src/main.c ****         }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****         // Restart UART reception for the next byte
 370:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 371:Core/Src/main.c ****     }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     else if(huart -> Instance == JOINT1_UART_INSTANCE){
 374:Core/Src/main.c ****         // Store received byte in buffer
 375:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 376:Core/Src/main.c ****         {
 377:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte1;
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****             // Check for newline or carriage return
 380:Core/Src/main.c ****             if (rx_byte1 == '\n') 
 381:Core/Src/main.c ****             {
 382:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 383:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 386:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 13


 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 389:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 390:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 391:Core/Src/main.c ****                 }
 392:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 393:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 394:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 395:Core/Src/main.c ****                 }
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****                 
 398:Core/Src/main.c ****             }
 399:Core/Src/main.c ****         }
 400:Core/Src/main.c ****         else 
 401:Core/Src/main.c ****         {
 402:Core/Src/main.c ****             // Buffer overflow, reset index
 403:Core/Src/main.c ****             buffer_index = 0;
 404:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 405:Core/Src/main.c ****         }
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****         // Restart UART reception for the next byte
 408:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1);
 409:Core/Src/main.c ****     }
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****     else if(huart -> Instance == JOINT2_UART_INSTANCE){
 412:Core/Src/main.c ****         // Store received byte in buffer
 413:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 414:Core/Src/main.c ****         {
 415:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte2;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****             // Check for newline or carriage return
 418:Core/Src/main.c ****             if (rx_byte2 == '\n') 
 419:Core/Src/main.c ****             {
 420:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 421:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 424:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 427:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 428:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 429:Core/Src/main.c ****                 }
 430:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 431:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 432:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 433:Core/Src/main.c ****                 }
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****                 
 436:Core/Src/main.c ****             }
 437:Core/Src/main.c ****         }
 438:Core/Src/main.c ****         else 
 439:Core/Src/main.c ****         {
 440:Core/Src/main.c ****             // Buffer overflow
 441:Core/Src/main.c ****             buffer_index = 0;
 442:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 443:Core/Src/main.c ****         }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 14


 444:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1);
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****       }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****       else if(huart -> Instance == JOINT3_UART_INSTANCE){
 449:Core/Src/main.c ****         // Store received byte in buffer
 450:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 451:Core/Src/main.c ****         {
 452:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte3;
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****             // Check for newline or carriage return
 455:Core/Src/main.c ****             if (rx_byte3 == '\n') 
 456:Core/Src/main.c ****             {
 457:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 458:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 461:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 464:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 465:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 466:Core/Src/main.c ****                 }
 467:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 468:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 469:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 470:Core/Src/main.c ****                 }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****                 
 473:Core/Src/main.c ****             }
 474:Core/Src/main.c ****         }
 475:Core/Src/main.c ****         else 
 476:Core/Src/main.c ****         {
 477:Core/Src/main.c ****             // Buffer overflow
 478:Core/Src/main.c ****             buffer_index = 0;
 479:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 480:Core/Src/main.c ****         }
 481:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1);
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****       }
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****       else if(huart -> Instance == JOINT4_UART_INSTANCE){
 486:Core/Src/main.c ****         // Store received byte in buffer
 487:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 488:Core/Src/main.c ****         {
 489:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte4;
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****             // Check for newline or carriage return
 492:Core/Src/main.c ****             if (rx_byte4 == '\n') 
 493:Core/Src/main.c ****             {
 494:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 495:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 498:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 15


 501:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 502:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 503:Core/Src/main.c ****                 }
 504:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 506:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 507:Core/Src/main.c ****                 }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****                 
 510:Core/Src/main.c ****             }
 511:Core/Src/main.c ****         }
 512:Core/Src/main.c ****         else 
 513:Core/Src/main.c ****         {
 514:Core/Src/main.c ****             // Buffer overflow
 515:Core/Src/main.c ****             buffer_index = 0;
 516:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 517:Core/Src/main.c ****         }
 518:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1);
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****       }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****       else if(huart -> Instance == JOINT5_UART_INSTANCE){
 523:Core/Src/main.c ****         // Store received byte in buffer
 524:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 525:Core/Src/main.c ****         {
 526:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte5;
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****             // Check for newline or carriage return
 529:Core/Src/main.c ****             if (rx_byte5 == '\n') 
 530:Core/Src/main.c ****             {
 531:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 532:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 535:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 538:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 539:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 540:Core/Src/main.c ****                 }
 541:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 543:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 544:Core/Src/main.c ****                 }
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****                 
 547:Core/Src/main.c ****             }
 548:Core/Src/main.c ****         }
 549:Core/Src/main.c ****         else 
 550:Core/Src/main.c ****         {
 551:Core/Src/main.c ****             // Buffer overflow
 552:Core/Src/main.c ****             buffer_index = 0;
 553:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 554:Core/Src/main.c ****         }
 555:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1);
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****       }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 16


 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** }
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****  
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****  
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** // Function to process the received string
 568:Core/Src/main.c **** void ProcessReceivedString(char *str)
 569:Core/Src/main.c **** {
 570:Core/Src/main.c ****     // Check if the string starts with "set"
 571:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 572:Core/Src/main.c ****     {
 573:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 574:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 577:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 578:Core/Src/main.c ****         {
 579:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 580:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 583:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 584:Core/Src/main.c ****                 // send to joint
 585:Core/Src/main.c ****                 prev_joint1 = joint1;
 586:Core/Src/main.c ****                 Joint1Set(joint1);
 587:Core/Src/main.c ****             }
 588:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 589:Core/Src/main.c ****                 // send to joint
 590:Core/Src/main.c ****                 prev_joint2 = joint2;
 591:Core/Src/main.c ****                 Joint2Set(joint2);
 592:Core/Src/main.c ****             }
 593:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 594:Core/Src/main.c ****                 // send to joint
 595:Core/Src/main.c ****                 prev_joint3 = joint3;
 596:Core/Src/main.c ****                 Joint3Set(joint3);
 597:Core/Src/main.c ****             }
 598:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 599:Core/Src/main.c ****                 // send to joint
 600:Core/Src/main.c ****                 prev_joint4 = joint4;
 601:Core/Src/main.c ****             }
 602:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 603:Core/Src/main.c ****                 // send to joint
 604:Core/Src/main.c ****                 prev_joint5 = joint5;
 605:Core/Src/main.c ****             }
 606:Core/Src/main.c ****             if (actuator != prev_actuator) {
 607:Core/Src/main.c ****                 // send to actuator
 608:Core/Src/main.c ****                 prev_actuator = actuator;
 609:Core/Src/main.c ****             }
 610:Core/Src/main.c ****         }
 611:Core/Src/main.c ****         else
 612:Core/Src/main.c ****         {
 613:Core/Src/main.c ****             printf("Invalid format!\r\n");
 614:Core/Src/main.c ****         }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 17


 615:Core/Src/main.c ****     }
 616:Core/Src/main.c ****     // Just setting joint1 
 617:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 618:Core/Src/main.c ****     {
 619:Core/Src/main.c ****         str += 7;
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 622:Core/Src/main.c ****         {
 623:Core/Src/main.c ****             // Successfully parsed joint1
 624:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 627:Core/Src/main.c ****                 Joint1Set(joint1);
 628:Core/Src/main.c ****                 prev_joint1 = joint1;
 629:Core/Src/main.c ****             }
 630:Core/Src/main.c ****         }
 631:Core/Src/main.c ****         else
 632:Core/Src/main.c ****         {
 633:Core/Src/main.c ****             printf("Invalid format!\r\n");
 634:Core/Src/main.c ****         }
 635:Core/Src/main.c ****     }
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****     // Just setting joint2
 638:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 639:Core/Src/main.c ****     {
 640:Core/Src/main.c ****         str += 7;
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 643:Core/Src/main.c ****         {
 644:Core/Src/main.c ****             // Successfully parsed joint2
 645:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 648:Core/Src/main.c ****                 Joint2Set(joint2);
 649:Core/Src/main.c ****                 prev_joint2 = joint2;
 650:Core/Src/main.c ****             }
 651:Core/Src/main.c ****         }
 652:Core/Src/main.c ****         else
 653:Core/Src/main.c ****         {
 654:Core/Src/main.c ****             printf("Invalid format!\r\n");
 655:Core/Src/main.c ****         }
 656:Core/Src/main.c ****     }
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****     // Just setting joint3
 659:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 660:Core/Src/main.c ****     {
 661:Core/Src/main.c ****         str += 7;
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 664:Core/Src/main.c ****         {
 665:Core/Src/main.c ****             // Successfully parsed joint3
 666:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 669:Core/Src/main.c ****                 Joint3Set(joint3);
 670:Core/Src/main.c ****                 prev_joint3 = joint3;
 671:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 18


 672:Core/Src/main.c ****         }
 673:Core/Src/main.c ****         else
 674:Core/Src/main.c ****         {
 675:Core/Src/main.c ****             printf("Invalid format!\r\n");
 676:Core/Src/main.c ****         }
 677:Core/Src/main.c ****     }
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****     // Just setting joint4
 680:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 681:Core/Src/main.c ****     {
 682:Core/Src/main.c ****         str += 7;
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 685:Core/Src/main.c ****         {
 686:Core/Src/main.c ****             // Successfully parsed joint4
 687:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 690:Core/Src/main.c ****                 Joint4Set(joint4);
 691:Core/Src/main.c ****                 prev_joint4 = joint4;
 692:Core/Src/main.c ****             }
 693:Core/Src/main.c ****         }
 694:Core/Src/main.c ****         else
 695:Core/Src/main.c ****         {
 696:Core/Src/main.c ****             printf("Invalid format!\r\n");
 697:Core/Src/main.c ****         }
 698:Core/Src/main.c ****     }
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****     // Just setting joint5
 701:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 702:Core/Src/main.c ****     {
 703:Core/Src/main.c ****         str += 7;
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 706:Core/Src/main.c ****         {
 707:Core/Src/main.c ****             // Successfully parsed joint5
 708:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 711:Core/Src/main.c ****                 Joint5Set(joint5);
 712:Core/Src/main.c ****                 prev_joint5 = joint5;
 713:Core/Src/main.c ****             }
 714:Core/Src/main.c ****         }
 715:Core/Src/main.c ****         else
 716:Core/Src/main.c ****         {
 717:Core/Src/main.c ****             printf("Invalid format!\r\n");
 718:Core/Src/main.c ****         }
 719:Core/Src/main.c ****     }
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****     // Just setting actuator
 722:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 723:Core/Src/main.c ****     {
 724:Core/Src/main.c ****         str += 9;
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 727:Core/Src/main.c ****         {
 728:Core/Src/main.c ****             // Successfully parsed joint5
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 19


 729:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****             if (actuator != actuator) {
 732:Core/Src/main.c ****                 ActuatorSet(actuator);
 733:Core/Src/main.c ****                 prev_actuator = actuator;
 734:Core/Src/main.c ****             }
 735:Core/Src/main.c ****         }
 736:Core/Src/main.c ****         else
 737:Core/Src/main.c ****         {
 738:Core/Src/main.c ****             printf("Invalid format!\r\n");
 739:Core/Src/main.c ****         }
 740:Core/Src/main.c ****     }
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****     else if (strncmp(str, "j1read", 6) == 0)
 743:Core/Src/main.c ****     {
 744:Core/Src/main.c ****         printf_joint1("r\r\n");
 745:Core/Src/main.c ****     }
 746:Core/Src/main.c **** 
 747:Core/Src/main.c ****     else if (strncmp(str, "j2read", 6) == 0)
 748:Core/Src/main.c ****     {
 749:Core/Src/main.c ****         printf_joint2("r\r\n");
 750:Core/Src/main.c ****     }
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****     else if (strncmp(str, "j3read", 6) == 0)
 753:Core/Src/main.c ****     {
 754:Core/Src/main.c ****         printf_joint3("r\r\n");
 755:Core/Src/main.c ****     }
 756:Core/Src/main.c ****       
 757:Core/Src/main.c ****       else if (strncmp(str, "j4read", 6) == 0)
 758:Core/Src/main.c ****       {
 759:Core/Src/main.c ****           printf_joint4("r\r\n");
 760:Core/Src/main.c ****       }
 761:Core/Src/main.c ****   
 762:Core/Src/main.c ****       else if (strncmp(str, "j5read", 6) == 0)
 763:Core/Src/main.c ****       {
 764:Core/Src/main.c ****           printf_joint5("r\r\n");
 765:Core/Src/main.c ****       }
 766:Core/Src/main.c ****   
 767:Core/Src/main.c ****       else if (strncmp(str, "aread", 5) == 0)
 768:Core/Src/main.c ****       {
 769:Core/Src/main.c ****           // Print acutator position or status
 770:Core/Src/main.c ****       }
 771:Core/Src/main.c **** 
 772:Core/Src/main.c **** 
 773:Core/Src/main.c ****     // Set Home 
 774:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 775:Core/Src/main.c ****     {
 776:Core/Src/main.c ****         str += 5;
 777:Core/Src/main.c ****         
 778:Core/Src/main.c ****         HomeSet();
 779:Core/Src/main.c ****         
 780:Core/Src/main.c ****         printf("Set all joints home\r\n");
 781:Core/Src/main.c **** 
 782:Core/Src/main.c ****     }
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 785:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 20


 786:Core/Src/main.c ****         str += 6;
 787:Core/Src/main.c ****         ledFlag = !ledFlag;
 788:Core/Src/main.c ****         
 789:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 790:Core/Src/main.c **** 
 791:Core/Src/main.c ****     }
 792:Core/Src/main.c **** 
 793:Core/Src/main.c ****     // Prints all joints
 794:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 795:Core/Src/main.c ****     {
 796:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 797:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 798:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 799:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 800:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 801:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 802:Core/Src/main.c ****     }
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****     // Echoes string if no keywords are sent
 805:Core/Src/main.c ****     else
 806:Core/Src/main.c ****     {
 807:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 808:Core/Src/main.c ****     }
 809:Core/Src/main.c **** }
 810:Core/Src/main.c **** 
 811:Core/Src/main.c **** void ProcessReceivedJoint(char *str){
 312              		.loc 1 811 37 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** }
 317              		.loc 1 813 1 view .LVU37
 318 0000 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE252:
 322              		.section	.rodata.Joint1Set.str1.4,"aMS",%progbits,1
 323              		.align	2
 324              	.LC0:
 325 0000 25640D0A 		.ascii	"%d\015\012\000"
 325      00
 326              		.section	.text.Joint1Set,"ax",%progbits
 327              		.align	1
 328              		.global	Joint1Set
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	Joint1Set:
 334              	.LVL19:
 335              	.LFB254:
 814:Core/Src/main.c **** void HomeSet(){
 815:Core/Src/main.c ****   //Set all joints to home
 816:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 817:Core/Src/main.c ****   Joint1Set(joint1);
 818:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 819:Core/Src/main.c ****   Joint2Set(joint2);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 21


 820:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 821:Core/Src/main.c ****   Joint3Set(joint3);
 822:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 823:Core/Src/main.c ****   Joint4Set(joint4);
 824:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 825:Core/Src/main.c ****   Joint5Set(joint5);
 826:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 827:Core/Src/main.c ****   ActuatorSet(actuator);
 828:Core/Src/main.c **** }
 829:Core/Src/main.c **** 
 830:Core/Src/main.c **** void Joint1Set(int theta){
 336              		.loc 1 830 26 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 256
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 830 26 is_stmt 0 view .LVU39
 341 0000 30B5     		push	{r4, r5, lr}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347 0002 C1B0     		sub	sp, sp, #260
 348              	.LCFI19:
 349              		.cfi_def_cfa_offset 272
 350 0004 0346     		mov	r3, r0
 831:Core/Src/main.c ****   printf_joint1("%d\r\n", theta);
 351              		.loc 1 831 3 is_stmt 1 view .LVU40
 352              	.LBB4:
 353              		.loc 1 831 3 view .LVU41
 354              		.loc 1 831 3 view .LVU42
 355 0006 094A     		ldr	r2, .L30
 356 0008 4FF48071 		mov	r1, #256
 357 000c 6846     		mov	r0, sp
 358              	.LVL20:
 359              		.loc 1 831 3 is_stmt 0 view .LVU43
 360 000e FFF7FEFF 		bl	snprintf
 361              	.LVL21:
 362              		.loc 1 831 3 view .LVU44
 363 0012 0546     		mov	r5, r0
 364              	.LVL22:
 365              		.loc 1 831 3 is_stmt 1 discriminator 1 view .LVU45
 366              	.LBB5:
 367              		.loc 1 831 3 discriminator 1 view .LVU46
 368              		.loc 1 831 3 is_stmt 0 discriminator 1 view .LVU47
 369 0014 0024     		movs	r4, #0
 370              		.loc 1 831 3 view .LVU48
 371 0016 04E0     		b	.L27
 372              	.LVL23:
 373              	.L28:
 374              		.loc 1 831 3 is_stmt 1 discriminator 3 view .LVU49
 375 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 376 001c FFF7FEFF 		bl	__io_putchar_usart6
 377              	.LVL24:
 378              		.loc 1 831 3 discriminator 3 view .LVU50
 379 0020 0134     		adds	r4, r4, #1
 380              	.LVL25:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 22


 381              	.L27:
 382              		.loc 1 831 3 discriminator 2 view .LVU51
 383 0022 AC42     		cmp	r4, r5
 384 0024 F8DB     		blt	.L28
 385              	.LBE5:
 386              	.LBE4:
 832:Core/Src/main.c **** 
 833:Core/Src/main.c **** }
 387              		.loc 1 833 1 is_stmt 0 view .LVU52
 388 0026 41B0     		add	sp, sp, #260
 389              	.LCFI20:
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
 392 0028 30BD     		pop	{r4, r5, pc}
 393              	.LVL26:
 394              	.L31:
 395              		.loc 1 833 1 view .LVU53
 396 002a 00BF     		.align	2
 397              	.L30:
 398 002c 00000000 		.word	.LC0
 399              		.cfi_endproc
 400              	.LFE254:
 402              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 403              		.align	2
 404              	.LC1:
 405 0000 25640A00 		.ascii	"%d\012\000"
 406              		.section	.text.Joint2Set,"ax",%progbits
 407              		.align	1
 408              		.global	Joint2Set
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	Joint2Set:
 414              	.LVL27:
 415              	.LFB255:
 834:Core/Src/main.c **** 
 835:Core/Src/main.c **** void Joint2Set(int theta){
 416              		.loc 1 835 26 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 256
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 835 26 is_stmt 0 view .LVU55
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 C1B0     		sub	sp, sp, #260
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 272
 430 0004 0346     		mov	r3, r0
 836:Core/Src/main.c ****   printf_joint2("%d\n", theta);
 431              		.loc 1 836 3 is_stmt 1 view .LVU56
 432              	.LBB6:
 433              		.loc 1 836 3 view .LVU57
 434              		.loc 1 836 3 view .LVU58
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 23


 435 0006 094A     		ldr	r2, .L36
 436 0008 4FF48071 		mov	r1, #256
 437 000c 6846     		mov	r0, sp
 438              	.LVL28:
 439              		.loc 1 836 3 is_stmt 0 view .LVU59
 440 000e FFF7FEFF 		bl	snprintf
 441              	.LVL29:
 442              		.loc 1 836 3 view .LVU60
 443 0012 0546     		mov	r5, r0
 444              	.LVL30:
 445              		.loc 1 836 3 is_stmt 1 discriminator 1 view .LVU61
 446              	.LBB7:
 447              		.loc 1 836 3 discriminator 1 view .LVU62
 448              		.loc 1 836 3 is_stmt 0 discriminator 1 view .LVU63
 449 0014 0024     		movs	r4, #0
 450              		.loc 1 836 3 view .LVU64
 451 0016 04E0     		b	.L33
 452              	.LVL31:
 453              	.L34:
 454              		.loc 1 836 3 is_stmt 1 discriminator 3 view .LVU65
 455 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 456 001c FFF7FEFF 		bl	__io_putchar_usart2
 457              	.LVL32:
 458              		.loc 1 836 3 discriminator 3 view .LVU66
 459 0020 0134     		adds	r4, r4, #1
 460              	.LVL33:
 461              	.L33:
 462              		.loc 1 836 3 discriminator 2 view .LVU67
 463 0022 AC42     		cmp	r4, r5
 464 0024 F8DB     		blt	.L34
 465              	.LBE7:
 466              	.LBE6:
 837:Core/Src/main.c **** 
 838:Core/Src/main.c **** }
 467              		.loc 1 838 1 is_stmt 0 view .LVU68
 468 0026 41B0     		add	sp, sp, #260
 469              	.LCFI23:
 470              		.cfi_def_cfa_offset 12
 471              		@ sp needed
 472 0028 30BD     		pop	{r4, r5, pc}
 473              	.LVL34:
 474              	.L37:
 475              		.loc 1 838 1 view .LVU69
 476 002a 00BF     		.align	2
 477              	.L36:
 478 002c 00000000 		.word	.LC1
 479              		.cfi_endproc
 480              	.LFE255:
 482              		.section	.text.Joint3Set,"ax",%progbits
 483              		.align	1
 484              		.global	Joint3Set
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	Joint3Set:
 490              	.LVL35:
 491              	.LFB256:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 24


 839:Core/Src/main.c **** 
 840:Core/Src/main.c **** void Joint3Set(int theta){
 492              		.loc 1 840 26 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 256
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 840 26 is_stmt 0 view .LVU71
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 C1B0     		sub	sp, sp, #260
 504              	.LCFI25:
 505              		.cfi_def_cfa_offset 272
 506 0004 0346     		mov	r3, r0
 841:Core/Src/main.c ****   printf_joint3("%d\r\n", theta);
 507              		.loc 1 841 3 is_stmt 1 view .LVU72
 508              	.LBB8:
 509              		.loc 1 841 3 view .LVU73
 510              		.loc 1 841 3 view .LVU74
 511 0006 094A     		ldr	r2, .L42
 512 0008 4FF48071 		mov	r1, #256
 513 000c 6846     		mov	r0, sp
 514              	.LVL36:
 515              		.loc 1 841 3 is_stmt 0 view .LVU75
 516 000e FFF7FEFF 		bl	snprintf
 517              	.LVL37:
 518              		.loc 1 841 3 view .LVU76
 519 0012 0546     		mov	r5, r0
 520              	.LVL38:
 521              		.loc 1 841 3 is_stmt 1 discriminator 1 view .LVU77
 522              	.LBB9:
 523              		.loc 1 841 3 discriminator 1 view .LVU78
 524              		.loc 1 841 3 is_stmt 0 discriminator 1 view .LVU79
 525 0014 0024     		movs	r4, #0
 526              		.loc 1 841 3 view .LVU80
 527 0016 04E0     		b	.L39
 528              	.LVL39:
 529              	.L40:
 530              		.loc 1 841 3 is_stmt 1 discriminator 3 view .LVU81
 531 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 532 001c FFF7FEFF 		bl	__io_putchar_usart3
 533              	.LVL40:
 534              		.loc 1 841 3 discriminator 3 view .LVU82
 535 0020 0134     		adds	r4, r4, #1
 536              	.LVL41:
 537              	.L39:
 538              		.loc 1 841 3 discriminator 2 view .LVU83
 539 0022 AC42     		cmp	r4, r5
 540 0024 F8DB     		blt	.L40
 541              	.LBE9:
 542              	.LBE8:
 842:Core/Src/main.c **** 
 843:Core/Src/main.c **** }
 543              		.loc 1 843 1 is_stmt 0 view .LVU84
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 25


 544 0026 41B0     		add	sp, sp, #260
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 12
 547              		@ sp needed
 548 0028 30BD     		pop	{r4, r5, pc}
 549              	.LVL42:
 550              	.L43:
 551              		.loc 1 843 1 view .LVU85
 552 002a 00BF     		.align	2
 553              	.L42:
 554 002c 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE256:
 558              		.section	.text.Joint4Set,"ax",%progbits
 559              		.align	1
 560              		.global	Joint4Set
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	Joint4Set:
 566              	.LVL43:
 567              	.LFB257:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c **** void Joint4Set(int theta){
 568              		.loc 1 845 26 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 256
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 845 26 is_stmt 0 view .LVU87
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI27:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 C1B0     		sub	sp, sp, #260
 580              	.LCFI28:
 581              		.cfi_def_cfa_offset 272
 582 0004 0346     		mov	r3, r0
 846:Core/Src/main.c ****   printf_joint4("%d\r\n", theta);
 583              		.loc 1 846 3 is_stmt 1 view .LVU88
 584              	.LBB10:
 585              		.loc 1 846 3 view .LVU89
 586              		.loc 1 846 3 view .LVU90
 587 0006 094A     		ldr	r2, .L48
 588 0008 4FF48071 		mov	r1, #256
 589 000c 6846     		mov	r0, sp
 590              	.LVL44:
 591              		.loc 1 846 3 is_stmt 0 view .LVU91
 592 000e FFF7FEFF 		bl	snprintf
 593              	.LVL45:
 594              		.loc 1 846 3 view .LVU92
 595 0012 0546     		mov	r5, r0
 596              	.LVL46:
 597              		.loc 1 846 3 is_stmt 1 discriminator 1 view .LVU93
 598              	.LBB11:
 599              		.loc 1 846 3 discriminator 1 view .LVU94
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 26


 600              		.loc 1 846 3 is_stmt 0 discriminator 1 view .LVU95
 601 0014 0024     		movs	r4, #0
 602              		.loc 1 846 3 view .LVU96
 603 0016 04E0     		b	.L45
 604              	.LVL47:
 605              	.L46:
 606              		.loc 1 846 3 is_stmt 1 discriminator 3 view .LVU97
 607 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 608 001c FFF7FEFF 		bl	__io_putchar_uart4
 609              	.LVL48:
 610              		.loc 1 846 3 discriminator 3 view .LVU98
 611 0020 0134     		adds	r4, r4, #1
 612              	.LVL49:
 613              	.L45:
 614              		.loc 1 846 3 discriminator 2 view .LVU99
 615 0022 AC42     		cmp	r4, r5
 616 0024 F8DB     		blt	.L46
 617              	.LBE11:
 618              	.LBE10:
 847:Core/Src/main.c **** 
 848:Core/Src/main.c **** }
 619              		.loc 1 848 1 is_stmt 0 view .LVU100
 620 0026 41B0     		add	sp, sp, #260
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 12
 623              		@ sp needed
 624 0028 30BD     		pop	{r4, r5, pc}
 625              	.LVL50:
 626              	.L49:
 627              		.loc 1 848 1 view .LVU101
 628 002a 00BF     		.align	2
 629              	.L48:
 630 002c 00000000 		.word	.LC0
 631              		.cfi_endproc
 632              	.LFE257:
 634              		.section	.text.Joint5Set,"ax",%progbits
 635              		.align	1
 636              		.global	Joint5Set
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	Joint5Set:
 642              	.LVL51:
 643              	.LFB258:
 849:Core/Src/main.c **** 
 850:Core/Src/main.c **** void Joint5Set(int theta){
 644              		.loc 1 850 26 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 256
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 850 26 is_stmt 0 view .LVU103
 649 0000 30B5     		push	{r4, r5, lr}
 650              	.LCFI30:
 651              		.cfi_def_cfa_offset 12
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 27


 655 0002 C1B0     		sub	sp, sp, #260
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 272
 658 0004 0346     		mov	r3, r0
 851:Core/Src/main.c ****   printf_joint5("%d\r\n", theta);
 659              		.loc 1 851 3 is_stmt 1 view .LVU104
 660              	.LBB12:
 661              		.loc 1 851 3 view .LVU105
 662              		.loc 1 851 3 view .LVU106
 663 0006 094A     		ldr	r2, .L54
 664 0008 4FF48071 		mov	r1, #256
 665 000c 6846     		mov	r0, sp
 666              	.LVL52:
 667              		.loc 1 851 3 is_stmt 0 view .LVU107
 668 000e FFF7FEFF 		bl	snprintf
 669              	.LVL53:
 670              		.loc 1 851 3 view .LVU108
 671 0012 0546     		mov	r5, r0
 672              	.LVL54:
 673              		.loc 1 851 3 is_stmt 1 discriminator 1 view .LVU109
 674              	.LBB13:
 675              		.loc 1 851 3 discriminator 1 view .LVU110
 676              		.loc 1 851 3 is_stmt 0 discriminator 1 view .LVU111
 677 0014 0024     		movs	r4, #0
 678              		.loc 1 851 3 view .LVU112
 679 0016 04E0     		b	.L51
 680              	.LVL55:
 681              	.L52:
 682              		.loc 1 851 3 is_stmt 1 discriminator 3 view .LVU113
 683 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 684 001c FFF7FEFF 		bl	__io_putchar_uart5
 685              	.LVL56:
 686              		.loc 1 851 3 discriminator 3 view .LVU114
 687 0020 0134     		adds	r4, r4, #1
 688              	.LVL57:
 689              	.L51:
 690              		.loc 1 851 3 discriminator 2 view .LVU115
 691 0022 AC42     		cmp	r4, r5
 692 0024 F8DB     		blt	.L52
 693              	.LBE13:
 694              	.LBE12:
 852:Core/Src/main.c **** 
 853:Core/Src/main.c **** }
 695              		.loc 1 853 1 is_stmt 0 view .LVU116
 696 0026 41B0     		add	sp, sp, #260
 697              	.LCFI32:
 698              		.cfi_def_cfa_offset 12
 699              		@ sp needed
 700 0028 30BD     		pop	{r4, r5, pc}
 701              	.LVL58:
 702              	.L55:
 703              		.loc 1 853 1 view .LVU117
 704 002a 00BF     		.align	2
 705              	.L54:
 706 002c 00000000 		.word	.LC0
 707              		.cfi_endproc
 708              	.LFE258:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 28


 710              		.section	.text.HomeSet,"ax",%progbits
 711              		.align	1
 712              		.global	HomeSet
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HomeSet:
 718              	.LFB253:
 814:Core/Src/main.c ****   //Set all joints to home
 719              		.loc 1 814 15 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI33:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 816:Core/Src/main.c ****   Joint1Set(joint1);
 728              		.loc 1 816 3 view .LVU119
 816:Core/Src/main.c ****   Joint1Set(joint1);
 729              		.loc 1 816 10 is_stmt 0 view .LVU120
 730 0002 0024     		movs	r4, #0
 731 0004 0D4B     		ldr	r3, .L58
 732 0006 1C60     		str	r4, [r3]
 817:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 733              		.loc 1 817 3 is_stmt 1 view .LVU121
 734 0008 2046     		mov	r0, r4
 735 000a FFF7FEFF 		bl	Joint1Set
 736              	.LVL59:
 818:Core/Src/main.c ****   Joint2Set(joint2);
 737              		.loc 1 818 3 view .LVU122
 818:Core/Src/main.c ****   Joint2Set(joint2);
 738              		.loc 1 818 10 is_stmt 0 view .LVU123
 739 000e 0C4B     		ldr	r3, .L58+4
 740 0010 1C60     		str	r4, [r3]
 819:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 741              		.loc 1 819 3 is_stmt 1 view .LVU124
 742 0012 2046     		mov	r0, r4
 743 0014 FFF7FEFF 		bl	Joint2Set
 744              	.LVL60:
 820:Core/Src/main.c ****   Joint3Set(joint3);
 745              		.loc 1 820 3 view .LVU125
 820:Core/Src/main.c ****   Joint3Set(joint3);
 746              		.loc 1 820 10 is_stmt 0 view .LVU126
 747 0018 0A4B     		ldr	r3, .L58+8
 748 001a 1C60     		str	r4, [r3]
 821:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 749              		.loc 1 821 3 is_stmt 1 view .LVU127
 750 001c 2046     		mov	r0, r4
 751 001e FFF7FEFF 		bl	Joint3Set
 752              	.LVL61:
 822:Core/Src/main.c ****   Joint4Set(joint4);
 753              		.loc 1 822 3 view .LVU128
 822:Core/Src/main.c ****   Joint4Set(joint4);
 754              		.loc 1 822 10 is_stmt 0 view .LVU129
 755 0022 094B     		ldr	r3, .L58+12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 29


 756 0024 1C60     		str	r4, [r3]
 823:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 757              		.loc 1 823 3 is_stmt 1 view .LVU130
 758 0026 2046     		mov	r0, r4
 759 0028 FFF7FEFF 		bl	Joint4Set
 760              	.LVL62:
 824:Core/Src/main.c ****   Joint5Set(joint5);
 761              		.loc 1 824 3 view .LVU131
 824:Core/Src/main.c ****   Joint5Set(joint5);
 762              		.loc 1 824 10 is_stmt 0 view .LVU132
 763 002c 074B     		ldr	r3, .L58+16
 764 002e 1C60     		str	r4, [r3]
 825:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 765              		.loc 1 825 3 is_stmt 1 view .LVU133
 766 0030 2046     		mov	r0, r4
 767 0032 FFF7FEFF 		bl	Joint5Set
 768              	.LVL63:
 826:Core/Src/main.c ****   ActuatorSet(actuator);
 769              		.loc 1 826 3 view .LVU134
 826:Core/Src/main.c ****   ActuatorSet(actuator);
 770              		.loc 1 826 12 is_stmt 0 view .LVU135
 771 0036 064B     		ldr	r3, .L58+20
 772 0038 1C60     		str	r4, [r3]
 827:Core/Src/main.c **** }
 773              		.loc 1 827 3 is_stmt 1 view .LVU136
 828:Core/Src/main.c **** 
 774              		.loc 1 828 1 is_stmt 0 view .LVU137
 775 003a 10BD     		pop	{r4, pc}
 776              	.L59:
 777              		.align	2
 778              	.L58:
 779 003c 00000000 		.word	joint1
 780 0040 00000000 		.word	joint2
 781 0044 00000000 		.word	joint3
 782 0048 00000000 		.word	joint4
 783 004c 00000000 		.word	joint5
 784 0050 00000000 		.word	actuator
 785              		.cfi_endproc
 786              	.LFE253:
 788              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 789              		.align	2
 790              	.LC2:
 791 0000 73657400 		.ascii	"set\000"
 792              		.align	2
 793              	.LC3:
 794 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 794      2533642D 
 794      2533642D 
 794      2533642D 
 794      2533642D 
 795              		.align	2
 796              	.LC4:
 797 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 797      69766564 
 797      206E756D 
 797      62657273 
 797      3A202564 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 30


 798 0042 0000     		.align	2
 799              	.LC5:
 800 0044 496E7661 		.ascii	"Invalid format!\015\000"
 800      6C696420 
 800      666F726D 
 800      6174210D 
 800      00
 801 0055 000000   		.align	2
 802              	.LC6:
 803 0058 6A6F696E 		.ascii	"joint1\000"
 803      743100
 804 005f 00       		.align	2
 805              	.LC7:
 806 0060 25336400 		.ascii	"%3d\000"
 807              		.align	2
 808              	.LC8:
 809 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 809      74312073 
 809      65743A20 
 809      25640D0A 
 809      00
 810 0075 000000   		.align	2
 811              	.LC9:
 812 0078 6A6F696E 		.ascii	"joint2\000"
 812      743200
 813 007f 00       		.align	2
 814              	.LC10:
 815 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 815      74322073 
 815      65743A20 
 815      25640D0A 
 815      00
 816 0091 000000   		.align	2
 817              	.LC11:
 818 0094 6A6F696E 		.ascii	"joint3\000"
 818      743300
 819 009b 00       		.align	2
 820              	.LC12:
 821 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 821      74332073 
 821      65743A20 
 821      25640D0A 
 821      00
 822 00ad 000000   		.align	2
 823              	.LC13:
 824 00b0 6A6F696E 		.ascii	"joint4\000"
 824      743400
 825 00b7 00       		.align	2
 826              	.LC14:
 827 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 827      74342073 
 827      65743A20 
 827      25640D0A 
 827      00
 828 00c9 000000   		.align	2
 829              	.LC15:
 830 00cc 6A6F696E 		.ascii	"joint5\000"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 31


 830      743500
 831 00d3 00       		.align	2
 832              	.LC16:
 833 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 833      74352073 
 833      65743A20 
 833      25640D0A 
 833      00
 834 00e5 000000   		.align	2
 835              	.LC17:
 836 00e8 61637475 		.ascii	"actuator\000"
 836      61746F72 
 836      00
 837 00f1 000000   		.align	2
 838              	.LC18:
 839 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 839      61746F72 
 839      20736574 
 839      3A202564 
 839      0D0A00
 840 0107 00       		.align	2
 841              	.LC19:
 842 0108 6A317265 		.ascii	"j1read\000"
 842      616400
 843 010f 00       		.align	2
 844              	.LC20:
 845 0110 6A327265 		.ascii	"j2read\000"
 845      616400
 846 0117 00       		.align	2
 847              	.LC21:
 848 0118 6A337265 		.ascii	"j3read\000"
 848      616400
 849 011f 00       		.align	2
 850              	.LC22:
 851 0120 6A347265 		.ascii	"j4read\000"
 851      616400
 852 0127 00       		.align	2
 853              	.LC23:
 854 0128 6A357265 		.ascii	"j5read\000"
 854      616400
 855 012f 00       		.align	2
 856              	.LC24:
 857 0130 61726561 		.ascii	"aread\000"
 857      6400
 858 0136 0000     		.align	2
 859              	.LC25:
 860 0138 686F6D65 		.ascii	"home\000"
 860      00
 861 013d 000000   		.align	2
 862              	.LC26:
 863 0140 53657420 		.ascii	"Set all joints home\015\000"
 863      616C6C20 
 863      6A6F696E 
 863      74732068 
 863      6F6D650D 
 864 0155 000000   		.align	2
 865              	.LC27:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 32


 866 0158 666C6173 		.ascii	"flash\000"
 866      6800
 867 015e 0000     		.align	2
 868              	.LC28:
 869 0160 4C454473 		.ascii	"LEDs Toggled\015\000"
 869      20546F67 
 869      676C6564 
 869      0D00
 870 016e 0000     		.align	2
 871              	.LC29:
 872 0170 7072696E 		.ascii	"print\000"
 872      7400
 873 0176 0000     		.align	2
 874              	.LC30:
 875 0178 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 875      74313A20 
 875      25640D0A 
 875      00
 876 0185 000000   		.align	2
 877              	.LC31:
 878 0188 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 878      74323A20 
 878      25640D0A 
 878      00
 879 0195 000000   		.align	2
 880              	.LC32:
 881 0198 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 881      74333A20 
 881      25640D0A 
 881      00
 882 01a5 000000   		.align	2
 883              	.LC33:
 884 01a8 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 884      74343A20 
 884      25640D0A 
 884      00
 885 01b5 000000   		.align	2
 886              	.LC34:
 887 01b8 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 887      74353A20 
 887      25640D0A 
 887      00
 888 01c5 000000   		.align	2
 889              	.LC35:
 890 01c8 41637475 		.ascii	"Actuator: %d\015\012\000"
 890      61746F72 
 890      3A202564 
 890      0D0A00
 891 01d7 00       		.align	2
 892              	.LC36:
 893 01d8 52656365 		.ascii	"Received: %s\015\012\000"
 893      69766564 
 893      3A202573 
 893      0D0A00
 894              		.section	.text.ProcessReceivedString,"ax",%progbits
 895              		.align	1
 896              		.global	ProcessReceivedString
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 33


 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 901              	ProcessReceivedString:
 902              	.LVL64:
 903              	.LFB251:
 569:Core/Src/main.c ****     // Check if the string starts with "set"
 904              		.loc 1 569 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 256
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 569:Core/Src/main.c ****     // Check if the string starts with "set"
 908              		.loc 1 569 1 is_stmt 0 view .LVU139
 909 0000 30B5     		push	{r4, r5, lr}
 910              	.LCFI34:
 911              		.cfi_def_cfa_offset 12
 912              		.cfi_offset 4, -12
 913              		.cfi_offset 5, -8
 914              		.cfi_offset 14, -4
 915 0002 C5B0     		sub	sp, sp, #276
 916              	.LCFI35:
 917              		.cfi_def_cfa_offset 288
 918 0004 0446     		mov	r4, r0
 571:Core/Src/main.c ****     {
 919              		.loc 1 571 5 is_stmt 1 view .LVU140
 571:Core/Src/main.c ****     {
 920              		.loc 1 571 9 is_stmt 0 view .LVU141
 921 0006 0322     		movs	r2, #3
 922 0008 A049     		ldr	r1, .L124
 923 000a FFF7FEFF 		bl	strncmp
 924              	.LVL65:
 571:Core/Src/main.c ****     {
 925              		.loc 1 571 8 discriminator 1 view .LVU142
 926 000e 0028     		cmp	r0, #0
 927 0010 00F09B80 		beq	.L100
 617:Core/Src/main.c ****     {
 928              		.loc 1 617 10 is_stmt 1 view .LVU143
 617:Core/Src/main.c ****     {
 929              		.loc 1 617 14 is_stmt 0 view .LVU144
 930 0014 0622     		movs	r2, #6
 931 0016 9E49     		ldr	r1, .L124+4
 932 0018 2046     		mov	r0, r4
 933 001a FFF7FEFF 		bl	strncmp
 934              	.LVL66:
 617:Core/Src/main.c ****     {
 935              		.loc 1 617 13 discriminator 1 view .LVU145
 936 001e 0028     		cmp	r0, #0
 937 0020 00F0F380 		beq	.L101
 638:Core/Src/main.c ****     {
 938              		.loc 1 638 10 is_stmt 1 view .LVU146
 638:Core/Src/main.c ****     {
 939              		.loc 1 638 14 is_stmt 0 view .LVU147
 940 0024 0622     		movs	r2, #6
 941 0026 9B49     		ldr	r1, .L124+8
 942 0028 2046     		mov	r0, r4
 943 002a FFF7FEFF 		bl	strncmp
 944              	.LVL67:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 34


 638:Core/Src/main.c ****     {
 945              		.loc 1 638 13 discriminator 1 view .LVU148
 946 002e 0028     		cmp	r0, #0
 947 0030 00F00681 		beq	.L102
 659:Core/Src/main.c ****     {
 948              		.loc 1 659 10 is_stmt 1 view .LVU149
 659:Core/Src/main.c ****     {
 949              		.loc 1 659 14 is_stmt 0 view .LVU150
 950 0034 0622     		movs	r2, #6
 951 0036 9849     		ldr	r1, .L124+12
 952 0038 2046     		mov	r0, r4
 953 003a FFF7FEFF 		bl	strncmp
 954              	.LVL68:
 659:Core/Src/main.c ****     {
 955              		.loc 1 659 13 discriminator 1 view .LVU151
 956 003e 0028     		cmp	r0, #0
 957 0040 00F01981 		beq	.L103
 680:Core/Src/main.c ****     {
 958              		.loc 1 680 10 is_stmt 1 view .LVU152
 680:Core/Src/main.c ****     {
 959              		.loc 1 680 14 is_stmt 0 view .LVU153
 960 0044 0622     		movs	r2, #6
 961 0046 9549     		ldr	r1, .L124+16
 962 0048 2046     		mov	r0, r4
 963 004a FFF7FEFF 		bl	strncmp
 964              	.LVL69:
 680:Core/Src/main.c ****     {
 965              		.loc 1 680 13 discriminator 1 view .LVU154
 966 004e 0028     		cmp	r0, #0
 967 0050 00F07D81 		beq	.L104
 701:Core/Src/main.c ****     {
 968              		.loc 1 701 10 is_stmt 1 view .LVU155
 701:Core/Src/main.c ****     {
 969              		.loc 1 701 14 is_stmt 0 view .LVU156
 970 0054 0622     		movs	r2, #6
 971 0056 9249     		ldr	r1, .L124+20
 972 0058 2046     		mov	r0, r4
 973 005a FFF7FEFF 		bl	strncmp
 974              	.LVL70:
 701:Core/Src/main.c ****     {
 975              		.loc 1 701 13 discriminator 1 view .LVU157
 976 005e 0028     		cmp	r0, #0
 977 0060 00F09181 		beq	.L105
 722:Core/Src/main.c ****     {
 978              		.loc 1 722 10 is_stmt 1 view .LVU158
 722:Core/Src/main.c ****     {
 979              		.loc 1 722 14 is_stmt 0 view .LVU159
 980 0064 0822     		movs	r2, #8
 981 0066 8F49     		ldr	r1, .L124+24
 982 0068 2046     		mov	r0, r4
 983 006a FFF7FEFF 		bl	strncmp
 984              	.LVL71:
 722:Core/Src/main.c ****     {
 985              		.loc 1 722 13 discriminator 1 view .LVU160
 986 006e 0028     		cmp	r0, #0
 987 0070 00F0A581 		beq	.L106
 742:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 35


 988              		.loc 1 742 10 is_stmt 1 view .LVU161
 742:Core/Src/main.c ****     {
 989              		.loc 1 742 14 is_stmt 0 view .LVU162
 990 0074 0622     		movs	r2, #6
 991 0076 8C49     		ldr	r1, .L124+28
 992 0078 2046     		mov	r0, r4
 993 007a FFF7FEFF 		bl	strncmp
 994              	.LVL72:
 742:Core/Src/main.c ****     {
 995              		.loc 1 742 13 discriminator 1 view .LVU163
 996 007e 0546     		mov	r5, r0
 997 0080 0028     		cmp	r0, #0
 998 0082 00F0AE81 		beq	.L107
 747:Core/Src/main.c ****     {
 999              		.loc 1 747 10 is_stmt 1 view .LVU164
 747:Core/Src/main.c ****     {
 1000              		.loc 1 747 14 is_stmt 0 view .LVU165
 1001 0086 0622     		movs	r2, #6
 1002 0088 8849     		ldr	r1, .L124+32
 1003 008a 2046     		mov	r0, r4
 1004 008c FFF7FEFF 		bl	strncmp
 1005              	.LVL73:
 747:Core/Src/main.c ****     {
 1006              		.loc 1 747 13 discriminator 1 view .LVU166
 1007 0090 0546     		mov	r5, r0
 1008 0092 0028     		cmp	r0, #0
 1009 0094 00F0B081 		beq	.L108
 752:Core/Src/main.c ****     {
 1010              		.loc 1 752 10 is_stmt 1 view .LVU167
 752:Core/Src/main.c ****     {
 1011              		.loc 1 752 14 is_stmt 0 view .LVU168
 1012 0098 0622     		movs	r2, #6
 1013 009a 8549     		ldr	r1, .L124+36
 1014 009c 2046     		mov	r0, r4
 1015 009e FFF7FEFF 		bl	strncmp
 1016              	.LVL74:
 752:Core/Src/main.c ****     {
 1017              		.loc 1 752 13 discriminator 1 view .LVU169
 1018 00a2 0546     		mov	r5, r0
 1019 00a4 0028     		cmp	r0, #0
 1020 00a6 00F0B281 		beq	.L109
 757:Core/Src/main.c ****       {
 1021              		.loc 1 757 12 is_stmt 1 view .LVU170
 757:Core/Src/main.c ****       {
 1022              		.loc 1 757 16 is_stmt 0 view .LVU171
 1023 00aa 0622     		movs	r2, #6
 1024 00ac 8149     		ldr	r1, .L124+40
 1025 00ae 2046     		mov	r0, r4
 1026 00b0 FFF7FEFF 		bl	strncmp
 1027              	.LVL75:
 757:Core/Src/main.c ****       {
 1028              		.loc 1 757 15 discriminator 1 view .LVU172
 1029 00b4 0546     		mov	r5, r0
 1030 00b6 0028     		cmp	r0, #0
 1031 00b8 00F0B481 		beq	.L110
 762:Core/Src/main.c ****       {
 1032              		.loc 1 762 12 is_stmt 1 view .LVU173
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 36


 762:Core/Src/main.c ****       {
 1033              		.loc 1 762 16 is_stmt 0 view .LVU174
 1034 00bc 0622     		movs	r2, #6
 1035 00be 7E49     		ldr	r1, .L124+44
 1036 00c0 2046     		mov	r0, r4
 1037 00c2 FFF7FEFF 		bl	strncmp
 1038              	.LVL76:
 762:Core/Src/main.c ****       {
 1039              		.loc 1 762 15 discriminator 1 view .LVU175
 1040 00c6 0546     		mov	r5, r0
 1041 00c8 0028     		cmp	r0, #0
 1042 00ca 00F0B681 		beq	.L111
 767:Core/Src/main.c ****       {
 1043              		.loc 1 767 12 is_stmt 1 view .LVU176
 767:Core/Src/main.c ****       {
 1044              		.loc 1 767 16 is_stmt 0 view .LVU177
 1045 00ce 0522     		movs	r2, #5
 1046 00d0 7A49     		ldr	r1, .L124+48
 1047 00d2 2046     		mov	r0, r4
 1048 00d4 FFF7FEFF 		bl	strncmp
 1049              	.LVL77:
 767:Core/Src/main.c ****       {
 1050              		.loc 1 767 15 discriminator 1 view .LVU178
 1051 00d8 0028     		cmp	r0, #0
 1052 00da 49D0     		beq	.L60
 774:Core/Src/main.c ****     {
 1053              		.loc 1 774 10 is_stmt 1 view .LVU179
 774:Core/Src/main.c ****     {
 1054              		.loc 1 774 14 is_stmt 0 view .LVU180
 1055 00dc 0422     		movs	r2, #4
 1056 00de 7849     		ldr	r1, .L124+52
 1057 00e0 2046     		mov	r0, r4
 1058 00e2 FFF7FEFF 		bl	strncmp
 1059              	.LVL78:
 774:Core/Src/main.c ****     {
 1060              		.loc 1 774 13 discriminator 1 view .LVU181
 1061 00e6 0028     		cmp	r0, #0
 1062 00e8 00F0B281 		beq	.L112
 784:Core/Src/main.c ****     {
 1063              		.loc 1 784 10 is_stmt 1 view .LVU182
 784:Core/Src/main.c ****     {
 1064              		.loc 1 784 14 is_stmt 0 view .LVU183
 1065 00ec 0522     		movs	r2, #5
 1066 00ee 7549     		ldr	r1, .L124+56
 1067 00f0 2046     		mov	r0, r4
 1068 00f2 FFF7FEFF 		bl	strncmp
 1069              	.LVL79:
 784:Core/Src/main.c ****     {
 1070              		.loc 1 784 13 discriminator 1 view .LVU184
 1071 00f6 0028     		cmp	r0, #0
 1072 00f8 00F0B081 		beq	.L113
 794:Core/Src/main.c ****     {
 1073              		.loc 1 794 10 is_stmt 1 view .LVU185
 794:Core/Src/main.c ****     {
 1074              		.loc 1 794 14 is_stmt 0 view .LVU186
 1075 00fc 0522     		movs	r2, #5
 1076 00fe 7249     		ldr	r1, .L124+60
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 37


 1077 0100 2046     		mov	r0, r4
 1078 0102 FFF7FEFF 		bl	strncmp
 1079              	.LVL80:
 794:Core/Src/main.c ****     {
 1080              		.loc 1 794 13 discriminator 1 view .LVU187
 1081 0106 0028     		cmp	r0, #0
 1082 0108 40F0B281 		bne	.L98
 796:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 1083              		.loc 1 796 8 is_stmt 1 view .LVU188
 1084 010c 6F4B     		ldr	r3, .L124+64
 1085 010e 1968     		ldr	r1, [r3]
 1086 0110 6F48     		ldr	r0, .L124+68
 1087 0112 FFF7FEFF 		bl	printf
 1088              	.LVL81:
 797:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 1089              		.loc 1 797 8 view .LVU189
 1090 0116 6F4B     		ldr	r3, .L124+72
 1091 0118 1968     		ldr	r1, [r3]
 1092 011a 6F48     		ldr	r0, .L124+76
 1093 011c FFF7FEFF 		bl	printf
 1094              	.LVL82:
 798:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 1095              		.loc 1 798 8 view .LVU190
 1096 0120 6E4B     		ldr	r3, .L124+80
 1097 0122 1968     		ldr	r1, [r3]
 1098 0124 6E48     		ldr	r0, .L124+84
 1099 0126 FFF7FEFF 		bl	printf
 1100              	.LVL83:
 799:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 1101              		.loc 1 799 8 view .LVU191
 1102 012a 6E4B     		ldr	r3, .L124+88
 1103 012c 1968     		ldr	r1, [r3]
 1104 012e 6E48     		ldr	r0, .L124+92
 1105 0130 FFF7FEFF 		bl	printf
 1106              	.LVL84:
 800:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 1107              		.loc 1 800 8 view .LVU192
 1108 0134 6D4B     		ldr	r3, .L124+96
 1109 0136 1968     		ldr	r1, [r3]
 1110 0138 6D48     		ldr	r0, .L124+100
 1111 013a FFF7FEFF 		bl	printf
 1112              	.LVL85:
 801:Core/Src/main.c ****     }
 1113              		.loc 1 801 8 view .LVU193
 1114 013e 6D4B     		ldr	r3, .L124+104
 1115 0140 1968     		ldr	r1, [r3]
 1116 0142 6D48     		ldr	r0, .L124+108
 1117 0144 FFF7FEFF 		bl	printf
 1118              	.LVL86:
 1119 0148 12E0     		b	.L60
 1120              	.L100:
 574:Core/Src/main.c **** 
 1121              		.loc 1 574 9 view .LVU194
 1122              	.LVL87:
 577:Core/Src/main.c ****         {
 1123              		.loc 1 577 9 view .LVU195
 577:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 38


 1124              		.loc 1 577 13 is_stmt 0 view .LVU196
 1125 014a 6A4B     		ldr	r3, .L124+104
 1126 014c 0393     		str	r3, [sp, #12]
 1127 014e 674B     		ldr	r3, .L124+96
 1128 0150 0293     		str	r3, [sp, #8]
 1129 0152 644B     		ldr	r3, .L124+88
 1130 0154 0193     		str	r3, [sp, #4]
 1131 0156 614B     		ldr	r3, .L124+80
 1132 0158 0093     		str	r3, [sp]
 1133 015a 5E4B     		ldr	r3, .L124+72
 1134 015c 5B4A     		ldr	r2, .L124+64
 1135 015e 6749     		ldr	r1, .L124+112
 1136 0160 201D     		adds	r0, r4, #4
 1137              	.LVL88:
 577:Core/Src/main.c ****         {
 1138              		.loc 1 577 13 view .LVU197
 1139 0162 FFF7FEFF 		bl	sscanf
 1140              	.LVL89:
 577:Core/Src/main.c ****         {
 1141              		.loc 1 577 12 discriminator 1 view .LVU198
 1142 0166 0628     		cmp	r0, #6
 1143 0168 04D0     		beq	.L114
 613:Core/Src/main.c ****         }
 1144              		.loc 1 613 13 is_stmt 1 view .LVU199
 1145 016a 6548     		ldr	r0, .L124+116
 1146 016c FFF7FEFF 		bl	puts
 1147              	.LVL90:
 1148              	.L60:
 809:Core/Src/main.c **** 
 1149              		.loc 1 809 1 is_stmt 0 view .LVU200
 1150 0170 45B0     		add	sp, sp, #276
 1151              	.LCFI36:
 1152              		.cfi_remember_state
 1153              		.cfi_def_cfa_offset 12
 1154              		@ sp needed
 1155 0172 30BD     		pop	{r4, r5, pc}
 1156              	.LVL91:
 1157              	.L114:
 1158              	.LCFI37:
 1159              		.cfi_restore_state
 580:Core/Src/main.c **** 
 1160              		.loc 1 580 13 is_stmt 1 view .LVU201
 1161 0174 554C     		ldr	r4, .L124+64
 1162              	.LVL92:
 580:Core/Src/main.c **** 
 1163              		.loc 1 580 13 is_stmt 0 view .LVU202
 1164 0176 5F4B     		ldr	r3, .L124+104
 1165 0178 1B68     		ldr	r3, [r3]
 1166 017a 0293     		str	r3, [sp, #8]
 1167 017c 5B4B     		ldr	r3, .L124+96
 1168 017e 1B68     		ldr	r3, [r3]
 1169 0180 0193     		str	r3, [sp, #4]
 1170 0182 584B     		ldr	r3, .L124+88
 1171 0184 1B68     		ldr	r3, [r3]
 1172 0186 0093     		str	r3, [sp]
 1173 0188 544B     		ldr	r3, .L124+80
 1174 018a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 39


 1175 018c 514A     		ldr	r2, .L124+72
 1176 018e 1268     		ldr	r2, [r2]
 1177 0190 2168     		ldr	r1, [r4]
 1178 0192 5C48     		ldr	r0, .L124+120
 1179 0194 FFF7FEFF 		bl	printf
 1180              	.LVL93:
 583:Core/Src/main.c ****                 // send to joint
 1181              		.loc 1 583 13 is_stmt 1 view .LVU203
 583:Core/Src/main.c ****                 // send to joint
 1182              		.loc 1 583 24 is_stmt 0 view .LVU204
 1183 0198 2068     		ldr	r0, [r4]
 1184 019a 5B4B     		ldr	r3, .L124+124
 1185 019c 1B68     		ldr	r3, [r3]
 583:Core/Src/main.c ****                 // send to joint
 1186              		.loc 1 583 16 view .LVU205
 1187 019e 9842     		cmp	r0, r3
 1188 01a0 24D1     		bne	.L115
 1189              	.L63:
 588:Core/Src/main.c ****                 // send to joint
 1190              		.loc 1 588 13 is_stmt 1 view .LVU206
 588:Core/Src/main.c ****                 // send to joint
 1191              		.loc 1 588 24 is_stmt 0 view .LVU207
 1192 01a2 4C4B     		ldr	r3, .L124+72
 1193 01a4 1868     		ldr	r0, [r3]
 1194 01a6 594B     		ldr	r3, .L124+128
 1195 01a8 1B68     		ldr	r3, [r3]
 588:Core/Src/main.c ****                 // send to joint
 1196              		.loc 1 588 16 view .LVU208
 1197 01aa 9842     		cmp	r0, r3
 1198 01ac 23D1     		bne	.L116
 1199              	.L64:
 593:Core/Src/main.c ****                 // send to joint
 1200              		.loc 1 593 13 is_stmt 1 view .LVU209
 593:Core/Src/main.c ****                 // send to joint
 1201              		.loc 1 593 24 is_stmt 0 view .LVU210
 1202 01ae 4B4B     		ldr	r3, .L124+80
 1203 01b0 1868     		ldr	r0, [r3]
 1204 01b2 574B     		ldr	r3, .L124+132
 1205 01b4 1B68     		ldr	r3, [r3]
 593:Core/Src/main.c ****                 // send to joint
 1206              		.loc 1 593 16 view .LVU211
 1207 01b6 9842     		cmp	r0, r3
 1208 01b8 22D1     		bne	.L117
 1209              	.L65:
 598:Core/Src/main.c ****                 // send to joint
 1210              		.loc 1 598 13 is_stmt 1 view .LVU212
 598:Core/Src/main.c ****                 // send to joint
 1211              		.loc 1 598 24 is_stmt 0 view .LVU213
 1212 01ba 4A4B     		ldr	r3, .L124+88
 1213 01bc 1B68     		ldr	r3, [r3]
 1214 01be 554A     		ldr	r2, .L124+136
 1215 01c0 1268     		ldr	r2, [r2]
 598:Core/Src/main.c ****                 // send to joint
 1216              		.loc 1 598 16 view .LVU214
 1217 01c2 9342     		cmp	r3, r2
 1218 01c4 01D0     		beq	.L66
 600:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 40


 1219              		.loc 1 600 17 is_stmt 1 view .LVU215
 600:Core/Src/main.c ****             }
 1220              		.loc 1 600 29 is_stmt 0 view .LVU216
 1221 01c6 534A     		ldr	r2, .L124+136
 1222 01c8 1360     		str	r3, [r2]
 1223              	.L66:
 602:Core/Src/main.c ****                 // send to joint
 1224              		.loc 1 602 13 is_stmt 1 view .LVU217
 602:Core/Src/main.c ****                 // send to joint
 1225              		.loc 1 602 24 is_stmt 0 view .LVU218
 1226 01ca 484B     		ldr	r3, .L124+96
 1227 01cc 1B68     		ldr	r3, [r3]
 1228 01ce 524A     		ldr	r2, .L124+140
 1229 01d0 1268     		ldr	r2, [r2]
 602:Core/Src/main.c ****                 // send to joint
 1230              		.loc 1 602 16 view .LVU219
 1231 01d2 9342     		cmp	r3, r2
 1232 01d4 01D0     		beq	.L67
 604:Core/Src/main.c ****             }
 1233              		.loc 1 604 17 is_stmt 1 view .LVU220
 604:Core/Src/main.c ****             }
 1234              		.loc 1 604 29 is_stmt 0 view .LVU221
 1235 01d6 504A     		ldr	r2, .L124+140
 1236 01d8 1360     		str	r3, [r2]
 1237              	.L67:
 606:Core/Src/main.c ****                 // send to actuator
 1238              		.loc 1 606 13 is_stmt 1 view .LVU222
 606:Core/Src/main.c ****                 // send to actuator
 1239              		.loc 1 606 26 is_stmt 0 view .LVU223
 1240 01da 464B     		ldr	r3, .L124+104
 1241 01dc 1B68     		ldr	r3, [r3]
 1242 01de 4F4A     		ldr	r2, .L124+144
 1243 01e0 1268     		ldr	r2, [r2]
 606:Core/Src/main.c ****                 // send to actuator
 1244              		.loc 1 606 16 view .LVU224
 1245 01e2 9342     		cmp	r3, r2
 1246 01e4 C4D0     		beq	.L60
 608:Core/Src/main.c ****             }
 1247              		.loc 1 608 17 is_stmt 1 view .LVU225
 608:Core/Src/main.c ****             }
 1248              		.loc 1 608 31 is_stmt 0 view .LVU226
 1249 01e6 4D4A     		ldr	r2, .L124+144
 1250 01e8 1360     		str	r3, [r2]
 1251 01ea C1E7     		b	.L60
 1252              	.L115:
 1253              	.LBB14:
 585:Core/Src/main.c ****                 Joint1Set(joint1);
 1254              		.loc 1 585 17 is_stmt 1 view .LVU227
 585:Core/Src/main.c ****                 Joint1Set(joint1);
 1255              		.loc 1 585 29 is_stmt 0 view .LVU228
 1256 01ec 464B     		ldr	r3, .L124+124
 1257 01ee 1860     		str	r0, [r3]
 586:Core/Src/main.c ****             }
 1258              		.loc 1 586 17 is_stmt 1 view .LVU229
 1259 01f0 FFF7FEFF 		bl	Joint1Set
 1260              	.LVL94:
 1261 01f4 D5E7     		b	.L63
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 41


 1262              	.L116:
 1263              	.LBE14:
 1264              	.LBB15:
 590:Core/Src/main.c ****                 Joint2Set(joint2);
 1265              		.loc 1 590 17 view .LVU230
 590:Core/Src/main.c ****                 Joint2Set(joint2);
 1266              		.loc 1 590 29 is_stmt 0 view .LVU231
 1267 01f6 454B     		ldr	r3, .L124+128
 1268 01f8 1860     		str	r0, [r3]
 591:Core/Src/main.c ****             }
 1269              		.loc 1 591 17 is_stmt 1 view .LVU232
 1270 01fa FFF7FEFF 		bl	Joint2Set
 1271              	.LVL95:
 1272 01fe D6E7     		b	.L64
 1273              	.L117:
 1274              	.LBE15:
 1275              	.LBB16:
 595:Core/Src/main.c ****                 Joint3Set(joint3);
 1276              		.loc 1 595 17 view .LVU233
 595:Core/Src/main.c ****                 Joint3Set(joint3);
 1277              		.loc 1 595 29 is_stmt 0 view .LVU234
 1278 0200 434B     		ldr	r3, .L124+132
 1279 0202 1860     		str	r0, [r3]
 596:Core/Src/main.c ****             }
 1280              		.loc 1 596 17 is_stmt 1 view .LVU235
 1281 0204 FFF7FEFF 		bl	Joint3Set
 1282              	.LVL96:
 1283 0208 D7E7     		b	.L65
 1284              	.LVL97:
 1285              	.L101:
 596:Core/Src/main.c ****             }
 1286              		.loc 1 596 17 is_stmt 0 view .LVU236
 1287              	.LBE16:
 619:Core/Src/main.c **** 
 1288              		.loc 1 619 9 is_stmt 1 view .LVU237
 621:Core/Src/main.c ****         {
 1289              		.loc 1 621 9 view .LVU238
 621:Core/Src/main.c ****         {
 1290              		.loc 1 621 13 is_stmt 0 view .LVU239
 1291 020a 304A     		ldr	r2, .L124+64
 1292 020c 4449     		ldr	r1, .L124+148
 1293 020e E01D     		adds	r0, r4, #7
 1294              	.LVL98:
 621:Core/Src/main.c ****         {
 1295              		.loc 1 621 13 view .LVU240
 1296 0210 FFF7FEFF 		bl	sscanf
 1297              	.LVL99:
 621:Core/Src/main.c ****         {
 1298              		.loc 1 621 12 discriminator 1 view .LVU241
 1299 0214 0128     		cmp	r0, #1
 1300 0216 03D0     		beq	.L118
 633:Core/Src/main.c ****         }
 1301              		.loc 1 633 13 is_stmt 1 view .LVU242
 1302 0218 3948     		ldr	r0, .L124+116
 1303 021a FFF7FEFF 		bl	puts
 1304              	.LVL100:
 1305 021e A7E7     		b	.L60
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 42


 1306              	.L118:
 624:Core/Src/main.c **** 
 1307              		.loc 1 624 13 view .LVU243
 1308 0220 2A4C     		ldr	r4, .L124+64
 1309              	.LVL101:
 624:Core/Src/main.c **** 
 1310              		.loc 1 624 13 is_stmt 0 view .LVU244
 1311 0222 2168     		ldr	r1, [r4]
 1312 0224 3F48     		ldr	r0, .L124+152
 1313 0226 FFF7FEFF 		bl	printf
 1314              	.LVL102:
 626:Core/Src/main.c ****                 Joint1Set(joint1);
 1315              		.loc 1 626 13 is_stmt 1 view .LVU245
 626:Core/Src/main.c ****                 Joint1Set(joint1);
 1316              		.loc 1 626 24 is_stmt 0 view .LVU246
 1317 022a 2068     		ldr	r0, [r4]
 1318 022c 364B     		ldr	r3, .L124+124
 1319 022e 1B68     		ldr	r3, [r3]
 626:Core/Src/main.c ****                 Joint1Set(joint1);
 1320              		.loc 1 626 16 view .LVU247
 1321 0230 9842     		cmp	r0, r3
 1322 0232 9DD0     		beq	.L60
 1323              	.LBB17:
 627:Core/Src/main.c ****                 prev_joint1 = joint1;
 1324              		.loc 1 627 17 is_stmt 1 view .LVU248
 1325 0234 FFF7FEFF 		bl	Joint1Set
 1326              	.LVL103:
 628:Core/Src/main.c ****             }
 1327              		.loc 1 628 17 view .LVU249
 628:Core/Src/main.c ****             }
 1328              		.loc 1 628 29 is_stmt 0 view .LVU250
 1329 0238 2268     		ldr	r2, [r4]
 1330 023a 334B     		ldr	r3, .L124+124
 1331 023c 1A60     		str	r2, [r3]
 1332 023e 97E7     		b	.L60
 1333              	.LVL104:
 1334              	.L102:
 628:Core/Src/main.c ****             }
 1335              		.loc 1 628 29 view .LVU251
 1336              	.LBE17:
 640:Core/Src/main.c **** 
 1337              		.loc 1 640 9 is_stmt 1 view .LVU252
 642:Core/Src/main.c ****         {
 1338              		.loc 1 642 9 view .LVU253
 642:Core/Src/main.c ****         {
 1339              		.loc 1 642 13 is_stmt 0 view .LVU254
 1340 0240 244A     		ldr	r2, .L124+72
 1341 0242 3749     		ldr	r1, .L124+148
 1342 0244 E01D     		adds	r0, r4, #7
 1343              	.LVL105:
 642:Core/Src/main.c ****         {
 1344              		.loc 1 642 13 view .LVU255
 1345 0246 FFF7FEFF 		bl	sscanf
 1346              	.LVL106:
 642:Core/Src/main.c ****         {
 1347              		.loc 1 642 12 discriminator 1 view .LVU256
 1348 024a 0128     		cmp	r0, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 43


 1349 024c 03D0     		beq	.L119
 654:Core/Src/main.c ****         }
 1350              		.loc 1 654 13 is_stmt 1 view .LVU257
 1351 024e 2C48     		ldr	r0, .L124+116
 1352 0250 FFF7FEFF 		bl	puts
 1353              	.LVL107:
 1354 0254 8CE7     		b	.L60
 1355              	.L119:
 645:Core/Src/main.c **** 
 1356              		.loc 1 645 13 view .LVU258
 1357 0256 1F4C     		ldr	r4, .L124+72
 1358              	.LVL108:
 645:Core/Src/main.c **** 
 1359              		.loc 1 645 13 is_stmt 0 view .LVU259
 1360 0258 2168     		ldr	r1, [r4]
 1361 025a 3348     		ldr	r0, .L124+156
 1362 025c FFF7FEFF 		bl	printf
 1363              	.LVL109:
 647:Core/Src/main.c ****                 Joint2Set(joint2);
 1364              		.loc 1 647 13 is_stmt 1 view .LVU260
 647:Core/Src/main.c ****                 Joint2Set(joint2);
 1365              		.loc 1 647 24 is_stmt 0 view .LVU261
 1366 0260 2068     		ldr	r0, [r4]
 1367 0262 2A4B     		ldr	r3, .L124+128
 1368 0264 1B68     		ldr	r3, [r3]
 647:Core/Src/main.c ****                 Joint2Set(joint2);
 1369              		.loc 1 647 16 view .LVU262
 1370 0266 9842     		cmp	r0, r3
 1371 0268 82D0     		beq	.L60
 1372              	.LBB18:
 648:Core/Src/main.c ****                 prev_joint2 = joint2;
 1373              		.loc 1 648 17 is_stmt 1 view .LVU263
 1374 026a FFF7FEFF 		bl	Joint2Set
 1375              	.LVL110:
 649:Core/Src/main.c ****             }
 1376              		.loc 1 649 17 view .LVU264
 649:Core/Src/main.c ****             }
 1377              		.loc 1 649 29 is_stmt 0 view .LVU265
 1378 026e 2268     		ldr	r2, [r4]
 1379 0270 264B     		ldr	r3, .L124+128
 1380 0272 1A60     		str	r2, [r3]
 1381 0274 7CE7     		b	.L60
 1382              	.LVL111:
 1383              	.L103:
 649:Core/Src/main.c ****             }
 1384              		.loc 1 649 29 view .LVU266
 1385              	.LBE18:
 661:Core/Src/main.c **** 
 1386              		.loc 1 661 9 is_stmt 1 view .LVU267
 663:Core/Src/main.c ****         {
 1387              		.loc 1 663 9 view .LVU268
 663:Core/Src/main.c ****         {
 1388              		.loc 1 663 13 is_stmt 0 view .LVU269
 1389 0276 194A     		ldr	r2, .L124+80
 1390 0278 2949     		ldr	r1, .L124+148
 1391 027a E01D     		adds	r0, r4, #7
 1392              	.LVL112:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 44


 663:Core/Src/main.c ****         {
 1393              		.loc 1 663 13 view .LVU270
 1394 027c FFF7FEFF 		bl	sscanf
 1395              	.LVL113:
 663:Core/Src/main.c ****         {
 1396              		.loc 1 663 12 discriminator 1 view .LVU271
 1397 0280 0128     		cmp	r0, #1
 1398 0282 53D0     		beq	.L120
 675:Core/Src/main.c ****         }
 1399              		.loc 1 675 13 is_stmt 1 view .LVU272
 1400 0284 1E48     		ldr	r0, .L124+116
 1401 0286 FFF7FEFF 		bl	puts
 1402              	.LVL114:
 1403 028a 71E7     		b	.L60
 1404              	.L125:
 1405              		.align	2
 1406              	.L124:
 1407 028c 00000000 		.word	.LC2
 1408 0290 58000000 		.word	.LC6
 1409 0294 78000000 		.word	.LC9
 1410 0298 94000000 		.word	.LC11
 1411 029c B0000000 		.word	.LC13
 1412 02a0 CC000000 		.word	.LC15
 1413 02a4 E8000000 		.word	.LC17
 1414 02a8 08010000 		.word	.LC19
 1415 02ac 10010000 		.word	.LC20
 1416 02b0 18010000 		.word	.LC21
 1417 02b4 20010000 		.word	.LC22
 1418 02b8 28010000 		.word	.LC23
 1419 02bc 30010000 		.word	.LC24
 1420 02c0 38010000 		.word	.LC25
 1421 02c4 58010000 		.word	.LC27
 1422 02c8 70010000 		.word	.LC29
 1423 02cc 00000000 		.word	joint1
 1424 02d0 78010000 		.word	.LC30
 1425 02d4 00000000 		.word	joint2
 1426 02d8 88010000 		.word	.LC31
 1427 02dc 00000000 		.word	joint3
 1428 02e0 98010000 		.word	.LC32
 1429 02e4 00000000 		.word	joint4
 1430 02e8 A8010000 		.word	.LC33
 1431 02ec 00000000 		.word	joint5
 1432 02f0 B8010000 		.word	.LC34
 1433 02f4 00000000 		.word	actuator
 1434 02f8 C8010000 		.word	.LC35
 1435 02fc 04000000 		.word	.LC3
 1436 0300 44000000 		.word	.LC5
 1437 0304 1C000000 		.word	.LC4
 1438 0308 00000000 		.word	prev_joint1
 1439 030c 00000000 		.word	prev_joint2
 1440 0310 00000000 		.word	prev_joint3
 1441 0314 00000000 		.word	prev_joint4
 1442 0318 00000000 		.word	prev_joint5
 1443 031c 00000000 		.word	prev_actuator
 1444 0320 60000000 		.word	.LC7
 1445 0324 64000000 		.word	.LC8
 1446 0328 80000000 		.word	.LC10
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 45


 1447              	.L120:
 666:Core/Src/main.c **** 
 1448              		.loc 1 666 13 view .LVU273
 1449 032c 534C     		ldr	r4, .L126
 1450              	.LVL115:
 666:Core/Src/main.c **** 
 1451              		.loc 1 666 13 is_stmt 0 view .LVU274
 1452 032e 2168     		ldr	r1, [r4]
 1453 0330 5348     		ldr	r0, .L126+4
 1454 0332 FFF7FEFF 		bl	printf
 1455              	.LVL116:
 668:Core/Src/main.c ****                 Joint3Set(joint3);
 1456              		.loc 1 668 13 is_stmt 1 view .LVU275
 668:Core/Src/main.c ****                 Joint3Set(joint3);
 1457              		.loc 1 668 24 is_stmt 0 view .LVU276
 1458 0336 2068     		ldr	r0, [r4]
 1459 0338 524B     		ldr	r3, .L126+8
 1460 033a 1B68     		ldr	r3, [r3]
 668:Core/Src/main.c ****                 Joint3Set(joint3);
 1461              		.loc 1 668 16 view .LVU277
 1462 033c 9842     		cmp	r0, r3
 1463 033e 3FF417AF 		beq	.L60
 1464              	.LBB19:
 669:Core/Src/main.c ****                 prev_joint3 = joint3;
 1465              		.loc 1 669 17 is_stmt 1 view .LVU278
 1466 0342 FFF7FEFF 		bl	Joint3Set
 1467              	.LVL117:
 670:Core/Src/main.c ****             }
 1468              		.loc 1 670 17 view .LVU279
 670:Core/Src/main.c ****             }
 1469              		.loc 1 670 29 is_stmt 0 view .LVU280
 1470 0346 2268     		ldr	r2, [r4]
 1471 0348 4E4B     		ldr	r3, .L126+8
 1472 034a 1A60     		str	r2, [r3]
 1473 034c 10E7     		b	.L60
 1474              	.LVL118:
 1475              	.L104:
 670:Core/Src/main.c ****             }
 1476              		.loc 1 670 29 view .LVU281
 1477              	.LBE19:
 682:Core/Src/main.c **** 
 1478              		.loc 1 682 9 is_stmt 1 view .LVU282
 684:Core/Src/main.c ****         {
 1479              		.loc 1 684 9 view .LVU283
 684:Core/Src/main.c ****         {
 1480              		.loc 1 684 13 is_stmt 0 view .LVU284
 1481 034e 4E4A     		ldr	r2, .L126+12
 1482 0350 4E49     		ldr	r1, .L126+16
 1483 0352 E01D     		adds	r0, r4, #7
 1484              	.LVL119:
 684:Core/Src/main.c ****         {
 1485              		.loc 1 684 13 view .LVU285
 1486 0354 FFF7FEFF 		bl	sscanf
 1487              	.LVL120:
 684:Core/Src/main.c ****         {
 1488              		.loc 1 684 12 discriminator 1 view .LVU286
 1489 0358 0128     		cmp	r0, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 46


 1490 035a 03D0     		beq	.L121
 696:Core/Src/main.c ****         }
 1491              		.loc 1 696 13 is_stmt 1 view .LVU287
 1492 035c 4C48     		ldr	r0, .L126+20
 1493 035e FFF7FEFF 		bl	puts
 1494              	.LVL121:
 1495 0362 05E7     		b	.L60
 1496              	.L121:
 687:Core/Src/main.c **** 
 1497              		.loc 1 687 13 view .LVU288
 1498 0364 484C     		ldr	r4, .L126+12
 1499              	.LVL122:
 687:Core/Src/main.c **** 
 1500              		.loc 1 687 13 is_stmt 0 view .LVU289
 1501 0366 2168     		ldr	r1, [r4]
 1502 0368 4A48     		ldr	r0, .L126+24
 1503 036a FFF7FEFF 		bl	printf
 1504              	.LVL123:
 689:Core/Src/main.c ****                 Joint4Set(joint4);
 1505              		.loc 1 689 13 is_stmt 1 view .LVU290
 689:Core/Src/main.c ****                 Joint4Set(joint4);
 1506              		.loc 1 689 24 is_stmt 0 view .LVU291
 1507 036e 2068     		ldr	r0, [r4]
 1508 0370 494B     		ldr	r3, .L126+28
 1509 0372 1B68     		ldr	r3, [r3]
 689:Core/Src/main.c ****                 Joint4Set(joint4);
 1510              		.loc 1 689 16 view .LVU292
 1511 0374 9842     		cmp	r0, r3
 1512 0376 3FF4FBAE 		beq	.L60
 1513              	.LBB20:
 690:Core/Src/main.c ****                 prev_joint4 = joint4;
 1514              		.loc 1 690 17 is_stmt 1 view .LVU293
 1515 037a FFF7FEFF 		bl	Joint4Set
 1516              	.LVL124:
 691:Core/Src/main.c ****             }
 1517              		.loc 1 691 17 view .LVU294
 691:Core/Src/main.c ****             }
 1518              		.loc 1 691 29 is_stmt 0 view .LVU295
 1519 037e 2268     		ldr	r2, [r4]
 1520 0380 454B     		ldr	r3, .L126+28
 1521 0382 1A60     		str	r2, [r3]
 1522 0384 F4E6     		b	.L60
 1523              	.LVL125:
 1524              	.L105:
 691:Core/Src/main.c ****             }
 1525              		.loc 1 691 29 view .LVU296
 1526              	.LBE20:
 703:Core/Src/main.c **** 
 1527              		.loc 1 703 9 is_stmt 1 view .LVU297
 705:Core/Src/main.c ****         {
 1528              		.loc 1 705 9 view .LVU298
 705:Core/Src/main.c ****         {
 1529              		.loc 1 705 13 is_stmt 0 view .LVU299
 1530 0386 454A     		ldr	r2, .L126+32
 1531 0388 4049     		ldr	r1, .L126+16
 1532 038a E01D     		adds	r0, r4, #7
 1533              	.LVL126:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 47


 705:Core/Src/main.c ****         {
 1534              		.loc 1 705 13 view .LVU300
 1535 038c FFF7FEFF 		bl	sscanf
 1536              	.LVL127:
 705:Core/Src/main.c ****         {
 1537              		.loc 1 705 12 discriminator 1 view .LVU301
 1538 0390 0128     		cmp	r0, #1
 1539 0392 03D0     		beq	.L122
 717:Core/Src/main.c ****         }
 1540              		.loc 1 717 13 is_stmt 1 view .LVU302
 1541 0394 3E48     		ldr	r0, .L126+20
 1542 0396 FFF7FEFF 		bl	puts
 1543              	.LVL128:
 1544 039a E9E6     		b	.L60
 1545              	.L122:
 708:Core/Src/main.c **** 
 1546              		.loc 1 708 13 view .LVU303
 1547 039c 3F4C     		ldr	r4, .L126+32
 1548              	.LVL129:
 708:Core/Src/main.c **** 
 1549              		.loc 1 708 13 is_stmt 0 view .LVU304
 1550 039e 2168     		ldr	r1, [r4]
 1551 03a0 3F48     		ldr	r0, .L126+36
 1552 03a2 FFF7FEFF 		bl	printf
 1553              	.LVL130:
 710:Core/Src/main.c ****                 Joint5Set(joint5);
 1554              		.loc 1 710 13 is_stmt 1 view .LVU305
 710:Core/Src/main.c ****                 Joint5Set(joint5);
 1555              		.loc 1 710 24 is_stmt 0 view .LVU306
 1556 03a6 2068     		ldr	r0, [r4]
 1557 03a8 3E4B     		ldr	r3, .L126+40
 1558 03aa 1B68     		ldr	r3, [r3]
 710:Core/Src/main.c ****                 Joint5Set(joint5);
 1559              		.loc 1 710 16 view .LVU307
 1560 03ac 9842     		cmp	r0, r3
 1561 03ae 3FF4DFAE 		beq	.L60
 1562              	.LBB21:
 711:Core/Src/main.c ****                 prev_joint5 = joint5;
 1563              		.loc 1 711 17 is_stmt 1 view .LVU308
 1564 03b2 FFF7FEFF 		bl	Joint5Set
 1565              	.LVL131:
 712:Core/Src/main.c ****             }
 1566              		.loc 1 712 17 view .LVU309
 712:Core/Src/main.c ****             }
 1567              		.loc 1 712 29 is_stmt 0 view .LVU310
 1568 03b6 2268     		ldr	r2, [r4]
 1569 03b8 3A4B     		ldr	r3, .L126+40
 1570 03ba 1A60     		str	r2, [r3]
 1571 03bc D8E6     		b	.L60
 1572              	.LVL132:
 1573              	.L106:
 712:Core/Src/main.c ****             }
 1574              		.loc 1 712 29 view .LVU311
 1575              	.LBE21:
 724:Core/Src/main.c **** 
 1576              		.loc 1 724 9 is_stmt 1 view .LVU312
 726:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 48


 1577              		.loc 1 726 9 view .LVU313
 726:Core/Src/main.c ****         {
 1578              		.loc 1 726 13 is_stmt 0 view .LVU314
 1579 03be 3A4A     		ldr	r2, .L126+44
 1580 03c0 3249     		ldr	r1, .L126+16
 1581 03c2 04F10900 		add	r0, r4, #9
 1582              	.LVL133:
 726:Core/Src/main.c ****         {
 1583              		.loc 1 726 13 view .LVU315
 1584 03c6 FFF7FEFF 		bl	sscanf
 1585              	.LVL134:
 726:Core/Src/main.c ****         {
 1586              		.loc 1 726 12 discriminator 1 view .LVU316
 1587 03ca 0128     		cmp	r0, #1
 1588 03cc 03D0     		beq	.L123
 738:Core/Src/main.c ****         }
 1589              		.loc 1 738 13 is_stmt 1 view .LVU317
 1590 03ce 3048     		ldr	r0, .L126+20
 1591 03d0 FFF7FEFF 		bl	puts
 1592              	.LVL135:
 1593 03d4 CCE6     		b	.L60
 1594              	.L123:
 729:Core/Src/main.c **** 
 1595              		.loc 1 729 13 view .LVU318
 1596 03d6 344B     		ldr	r3, .L126+44
 1597 03d8 1968     		ldr	r1, [r3]
 1598 03da 3448     		ldr	r0, .L126+48
 1599 03dc FFF7FEFF 		bl	printf
 1600              	.LVL136:
 731:Core/Src/main.c ****                 ActuatorSet(actuator);
 1601              		.loc 1 731 13 view .LVU319
 1602 03e0 C6E6     		b	.L60
 1603              	.LVL137:
 1604              	.L107:
 744:Core/Src/main.c ****     }
 1605              		.loc 1 744 9 view .LVU320
 1606              	.LBB22:
 744:Core/Src/main.c ****     }
 1607              		.loc 1 744 9 view .LVU321
 744:Core/Src/main.c ****     }
 1608              		.loc 1 744 9 view .LVU322
 1609 03e2 334B     		ldr	r3, .L126+52
 1610 03e4 0493     		str	r3, [sp, #16]
 1611              	.LVL138:
 744:Core/Src/main.c ****     }
 1612              		.loc 1 744 9 discriminator 1 view .LVU323
 1613              	.LBB23:
 744:Core/Src/main.c ****     }
 1614              		.loc 1 744 9 discriminator 1 view .LVU324
 744:Core/Src/main.c ****     }
 1615              		.loc 1 744 9 is_stmt 0 view .LVU325
 1616 03e6 04E0     		b	.L82
 1617              	.LVL139:
 1618              	.L83:
 744:Core/Src/main.c ****     }
 1619              		.loc 1 744 9 is_stmt 1 discriminator 3 view .LVU326
 1620 03e8 04AB     		add	r3, sp, #16
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 49


 1621 03ea 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1622 03ec FFF7FEFF 		bl	__io_putchar_usart6
 1623              	.LVL140:
 744:Core/Src/main.c ****     }
 1624              		.loc 1 744 9 discriminator 3 view .LVU327
 1625 03f0 0135     		adds	r5, r5, #1
 1626              	.LVL141:
 1627              	.L82:
 744:Core/Src/main.c ****     }
 1628              		.loc 1 744 9 discriminator 2 view .LVU328
 1629 03f2 022D     		cmp	r5, #2
 1630 03f4 F8DD     		ble	.L83
 1631 03f6 BBE6     		b	.L60
 1632              	.LVL142:
 1633              	.L108:
 744:Core/Src/main.c ****     }
 1634              		.loc 1 744 9 is_stmt 0 discriminator 2 view .LVU329
 1635              	.LBE23:
 1636              	.LBE22:
 749:Core/Src/main.c ****     }
 1637              		.loc 1 749 9 is_stmt 1 view .LVU330
 1638              	.LBB24:
 749:Core/Src/main.c ****     }
 1639              		.loc 1 749 9 view .LVU331
 749:Core/Src/main.c ****     }
 1640              		.loc 1 749 9 view .LVU332
 1641 03f8 2D4B     		ldr	r3, .L126+52
 1642 03fa 0493     		str	r3, [sp, #16]
 1643              	.LVL143:
 749:Core/Src/main.c ****     }
 1644              		.loc 1 749 9 discriminator 1 view .LVU333
 1645              	.LBB25:
 749:Core/Src/main.c ****     }
 1646              		.loc 1 749 9 discriminator 1 view .LVU334
 749:Core/Src/main.c ****     }
 1647              		.loc 1 749 9 is_stmt 0 view .LVU335
 1648 03fc 04E0     		b	.L85
 1649              	.LVL144:
 1650              	.L86:
 749:Core/Src/main.c ****     }
 1651              		.loc 1 749 9 is_stmt 1 discriminator 3 view .LVU336
 1652 03fe 04AB     		add	r3, sp, #16
 1653 0400 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1654 0402 FFF7FEFF 		bl	__io_putchar_usart2
 1655              	.LVL145:
 749:Core/Src/main.c ****     }
 1656              		.loc 1 749 9 discriminator 3 view .LVU337
 1657 0406 0135     		adds	r5, r5, #1
 1658              	.LVL146:
 1659              	.L85:
 749:Core/Src/main.c ****     }
 1660              		.loc 1 749 9 discriminator 2 view .LVU338
 1661 0408 022D     		cmp	r5, #2
 1662 040a F8DD     		ble	.L86
 1663 040c B0E6     		b	.L60
 1664              	.LVL147:
 1665              	.L109:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 50


 749:Core/Src/main.c ****     }
 1666              		.loc 1 749 9 is_stmt 0 discriminator 2 view .LVU339
 1667              	.LBE25:
 1668              	.LBE24:
 754:Core/Src/main.c ****     }
 1669              		.loc 1 754 9 is_stmt 1 view .LVU340
 1670              	.LBB26:
 754:Core/Src/main.c ****     }
 1671              		.loc 1 754 9 view .LVU341
 754:Core/Src/main.c ****     }
 1672              		.loc 1 754 9 view .LVU342
 1673 040e 284B     		ldr	r3, .L126+52
 1674 0410 0493     		str	r3, [sp, #16]
 1675              	.LVL148:
 754:Core/Src/main.c ****     }
 1676              		.loc 1 754 9 discriminator 1 view .LVU343
 1677              	.LBB27:
 754:Core/Src/main.c ****     }
 1678              		.loc 1 754 9 discriminator 1 view .LVU344
 754:Core/Src/main.c ****     }
 1679              		.loc 1 754 9 is_stmt 0 view .LVU345
 1680 0412 04E0     		b	.L88
 1681              	.LVL149:
 1682              	.L89:
 754:Core/Src/main.c ****     }
 1683              		.loc 1 754 9 is_stmt 1 discriminator 3 view .LVU346
 1684 0414 04AB     		add	r3, sp, #16
 1685 0416 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1686 0418 FFF7FEFF 		bl	__io_putchar_usart3
 1687              	.LVL150:
 754:Core/Src/main.c ****     }
 1688              		.loc 1 754 9 discriminator 3 view .LVU347
 1689 041c 0135     		adds	r5, r5, #1
 1690              	.LVL151:
 1691              	.L88:
 754:Core/Src/main.c ****     }
 1692              		.loc 1 754 9 discriminator 2 view .LVU348
 1693 041e 022D     		cmp	r5, #2
 1694 0420 F8DD     		ble	.L89
 1695 0422 A5E6     		b	.L60
 1696              	.LVL152:
 1697              	.L110:
 754:Core/Src/main.c ****     }
 1698              		.loc 1 754 9 is_stmt 0 discriminator 2 view .LVU349
 1699              	.LBE27:
 1700              	.LBE26:
 759:Core/Src/main.c ****       }
 1701              		.loc 1 759 11 is_stmt 1 view .LVU350
 1702              	.LBB28:
 759:Core/Src/main.c ****       }
 1703              		.loc 1 759 11 view .LVU351
 759:Core/Src/main.c ****       }
 1704              		.loc 1 759 11 view .LVU352
 1705 0424 224B     		ldr	r3, .L126+52
 1706 0426 0493     		str	r3, [sp, #16]
 1707              	.LVL153:
 759:Core/Src/main.c ****       }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 51


 1708              		.loc 1 759 11 discriminator 1 view .LVU353
 1709              	.LBB29:
 759:Core/Src/main.c ****       }
 1710              		.loc 1 759 11 discriminator 1 view .LVU354
 759:Core/Src/main.c ****       }
 1711              		.loc 1 759 11 is_stmt 0 view .LVU355
 1712 0428 04E0     		b	.L91
 1713              	.LVL154:
 1714              	.L92:
 759:Core/Src/main.c ****       }
 1715              		.loc 1 759 11 is_stmt 1 discriminator 3 view .LVU356
 1716 042a 04AB     		add	r3, sp, #16
 1717 042c 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1718 042e FFF7FEFF 		bl	__io_putchar_uart4
 1719              	.LVL155:
 759:Core/Src/main.c ****       }
 1720              		.loc 1 759 11 discriminator 3 view .LVU357
 1721 0432 0135     		adds	r5, r5, #1
 1722              	.LVL156:
 1723              	.L91:
 759:Core/Src/main.c ****       }
 1724              		.loc 1 759 11 discriminator 2 view .LVU358
 1725 0434 022D     		cmp	r5, #2
 1726 0436 F8DD     		ble	.L92
 1727 0438 9AE6     		b	.L60
 1728              	.LVL157:
 1729              	.L111:
 759:Core/Src/main.c ****       }
 1730              		.loc 1 759 11 is_stmt 0 discriminator 2 view .LVU359
 1731              	.LBE29:
 1732              	.LBE28:
 764:Core/Src/main.c ****       }
 1733              		.loc 1 764 11 is_stmt 1 view .LVU360
 1734              	.LBB30:
 764:Core/Src/main.c ****       }
 1735              		.loc 1 764 11 view .LVU361
 764:Core/Src/main.c ****       }
 1736              		.loc 1 764 11 view .LVU362
 1737 043a 1D4B     		ldr	r3, .L126+52
 1738 043c 0493     		str	r3, [sp, #16]
 1739              	.LVL158:
 764:Core/Src/main.c ****       }
 1740              		.loc 1 764 11 discriminator 1 view .LVU363
 1741              	.LBB31:
 764:Core/Src/main.c ****       }
 1742              		.loc 1 764 11 discriminator 1 view .LVU364
 764:Core/Src/main.c ****       }
 1743              		.loc 1 764 11 is_stmt 0 view .LVU365
 1744 043e 04E0     		b	.L94
 1745              	.LVL159:
 1746              	.L95:
 764:Core/Src/main.c ****       }
 1747              		.loc 1 764 11 is_stmt 1 discriminator 3 view .LVU366
 1748 0440 04AB     		add	r3, sp, #16
 1749 0442 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1750 0444 FFF7FEFF 		bl	__io_putchar_uart5
 1751              	.LVL160:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 52


 764:Core/Src/main.c ****       }
 1752              		.loc 1 764 11 discriminator 3 view .LVU367
 1753 0448 0135     		adds	r5, r5, #1
 1754              	.LVL161:
 1755              	.L94:
 764:Core/Src/main.c ****       }
 1756              		.loc 1 764 11 discriminator 2 view .LVU368
 1757 044a 022D     		cmp	r5, #2
 1758 044c F8DD     		ble	.L95
 1759 044e 8FE6     		b	.L60
 1760              	.LVL162:
 1761              	.L112:
 764:Core/Src/main.c ****       }
 1762              		.loc 1 764 11 is_stmt 0 discriminator 2 view .LVU369
 1763              	.LBE31:
 1764              	.LBE30:
 1765              	.LBB32:
 776:Core/Src/main.c ****         
 1766              		.loc 1 776 9 is_stmt 1 view .LVU370
 778:Core/Src/main.c ****         
 1767              		.loc 1 778 9 view .LVU371
 1768 0450 FFF7FEFF 		bl	HomeSet
 1769              	.LVL163:
 780:Core/Src/main.c **** 
 1770              		.loc 1 780 9 view .LVU372
 1771 0454 1748     		ldr	r0, .L126+56
 1772 0456 FFF7FEFF 		bl	puts
 1773              	.LVL164:
 1774              	.LBE32:
 1775 045a 89E6     		b	.L60
 1776              	.LVL165:
 1777              	.L113:
 786:Core/Src/main.c ****         ledFlag = !ledFlag;
 1778              		.loc 1 786 9 view .LVU373
 787:Core/Src/main.c ****         
 1779              		.loc 1 787 9 view .LVU374
 787:Core/Src/main.c ****         
 1780              		.loc 1 787 19 is_stmt 0 view .LVU375
 1781 045c 164A     		ldr	r2, .L126+60
 1782 045e 1368     		ldr	r3, [r2]
 1783 0460 B3FA83F3 		clz	r3, r3
 1784 0464 5B09     		lsrs	r3, r3, #5
 787:Core/Src/main.c ****         
 1785              		.loc 1 787 17 view .LVU376
 1786 0466 1360     		str	r3, [r2]
 789:Core/Src/main.c **** 
 1787              		.loc 1 789 9 is_stmt 1 view .LVU377
 1788 0468 1448     		ldr	r0, .L126+64
 1789 046a FFF7FEFF 		bl	puts
 1790              	.LVL166:
 1791 046e 7FE6     		b	.L60
 1792              	.LVL167:
 1793              	.L98:
 807:Core/Src/main.c ****     }
 1794              		.loc 1 807 9 view .LVU378
 1795 0470 2146     		mov	r1, r4
 1796 0472 1348     		ldr	r0, .L126+68
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 53


 1797 0474 FFF7FEFF 		bl	printf
 1798              	.LVL168:
 809:Core/Src/main.c **** 
 1799              		.loc 1 809 1 is_stmt 0 view .LVU379
 1800 0478 7AE6     		b	.L60
 1801              	.L127:
 1802 047a 00BF     		.align	2
 1803              	.L126:
 1804 047c 00000000 		.word	joint3
 1805 0480 9C000000 		.word	.LC12
 1806 0484 00000000 		.word	prev_joint3
 1807 0488 00000000 		.word	joint4
 1808 048c 60000000 		.word	.LC7
 1809 0490 44000000 		.word	.LC5
 1810 0494 B8000000 		.word	.LC14
 1811 0498 00000000 		.word	prev_joint4
 1812 049c 00000000 		.word	joint5
 1813 04a0 D4000000 		.word	.LC16
 1814 04a4 00000000 		.word	prev_joint5
 1815 04a8 00000000 		.word	actuator
 1816 04ac F4000000 		.word	.LC18
 1817 04b0 720D0A00 		.word	658802
 1818 04b4 40010000 		.word	.LC26
 1819 04b8 00000000 		.word	ledFlag
 1820 04bc 60010000 		.word	.LC28
 1821 04c0 D8010000 		.word	.LC36
 1822              		.cfi_endproc
 1823              	.LFE251:
 1825              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 1826              		.align	2
 1827              	.LC37:
 1828 0000 42756666 		.ascii	"Buffer overflow\015\000"
 1828      6572206F 
 1828      76657266 
 1828      6C6F770D 
 1828      00
 1829              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1830              		.align	1
 1831              		.global	HAL_UART_RxCpltCallback
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1836              	HAL_UART_RxCpltCallback:
 1837              	.LVL169:
 1838              	.LFB250:
 331:Core/Src/main.c **** 
 1839              		.loc 1 331 1 is_stmt 1 view -0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 331:Core/Src/main.c **** 
 1843              		.loc 1 331 1 is_stmt 0 view .LVU381
 1844 0000 10B5     		push	{r4, lr}
 1845              	.LCFI38:
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 4, -8
 1848              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 54


 333:Core/Src/main.c **** 
 1849              		.loc 1 333 5 is_stmt 1 view .LVU382
 333:Core/Src/main.c **** 
 1850              		.loc 1 333 14 is_stmt 0 view .LVU383
 1851 0002 0368     		ldr	r3, [r0]
 333:Core/Src/main.c **** 
 1852              		.loc 1 333 8 view .LVU384
 1853 0004 914A     		ldr	r2, .L171
 1854 0006 9342     		cmp	r3, r2
 1855 0008 2DD0     		beq	.L154
 373:Core/Src/main.c ****         // Store received byte in buffer
 1856              		.loc 1 373 10 is_stmt 1 view .LVU385
 373:Core/Src/main.c ****         // Store received byte in buffer
 1857              		.loc 1 373 12 is_stmt 0 view .LVU386
 1858 000a 914A     		ldr	r2, .L171+4
 1859 000c 9342     		cmp	r3, r2
 1860 000e 72D0     		beq	.L155
 411:Core/Src/main.c ****         // Store received byte in buffer
 1861              		.loc 1 411 10 is_stmt 1 view .LVU387
 411:Core/Src/main.c ****         // Store received byte in buffer
 1862              		.loc 1 411 12 is_stmt 0 view .LVU388
 1863 0010 904A     		ldr	r2, .L171+8
 1864 0012 9342     		cmp	r3, r2
 1865 0014 00F0B780 		beq	.L156
 448:Core/Src/main.c ****         // Store received byte in buffer
 1866              		.loc 1 448 12 is_stmt 1 view .LVU389
 448:Core/Src/main.c ****         // Store received byte in buffer
 1867              		.loc 1 448 14 is_stmt 0 view .LVU390
 1868 0018 8F4A     		ldr	r2, .L171+12
 1869 001a 9342     		cmp	r3, r2
 1870 001c 00F0FB80 		beq	.L157
 485:Core/Src/main.c ****         // Store received byte in buffer
 1871              		.loc 1 485 12 is_stmt 1 view .LVU391
 485:Core/Src/main.c ****         // Store received byte in buffer
 1872              		.loc 1 485 14 is_stmt 0 view .LVU392
 1873 0020 8E4A     		ldr	r2, .L171+16
 1874 0022 9342     		cmp	r3, r2
 1875 0024 00F06C81 		beq	.L158
 522:Core/Src/main.c ****         // Store received byte in buffer
 1876              		.loc 1 522 12 is_stmt 1 view .LVU393
 522:Core/Src/main.c ****         // Store received byte in buffer
 1877              		.loc 1 522 14 is_stmt 0 view .LVU394
 1878 0028 8D4A     		ldr	r2, .L171+20
 1879 002a 9342     		cmp	r3, r2
 1880 002c 34D1     		bne	.L128
 524:Core/Src/main.c ****         {
 1881              		.loc 1 524 9 is_stmt 1 view .LVU395
 524:Core/Src/main.c ****         {
 1882              		.loc 1 524 26 is_stmt 0 view .LVU396
 1883 002e 8D4B     		ldr	r3, .L171+24
 1884 0030 1B88     		ldrh	r3, [r3]
 1885 0032 9BB2     		uxth	r3, r3
 524:Core/Src/main.c ****         {
 1886              		.loc 1 524 12 view .LVU397
 1887 0034 FE2B     		cmp	r3, #254
 1888 0036 00F2D381 		bhi	.L150
 526:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 55


 1889              		.loc 1 526 13 is_stmt 1 view .LVU398
 526:Core/Src/main.c **** 
 1890              		.loc 1 526 37 is_stmt 0 view .LVU399
 1891 003a 8A49     		ldr	r1, .L171+24
 1892 003c 0B88     		ldrh	r3, [r1]
 1893 003e 9BB2     		uxth	r3, r3
 1894 0040 5A1C     		adds	r2, r3, #1
 1895 0042 92B2     		uxth	r2, r2
 1896 0044 0A80     		strh	r2, [r1]	@ movhi
 526:Core/Src/main.c **** 
 1897              		.loc 1 526 41 view .LVU400
 1898 0046 8849     		ldr	r1, .L171+28
 1899 0048 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1900 004a D2B2     		uxtb	r2, r2
 1901 004c 8748     		ldr	r0, .L171+32
 1902              	.LVL170:
 526:Core/Src/main.c **** 
 1903              		.loc 1 526 41 view .LVU401
 1904 004e C254     		strb	r2, [r0, r3]
 529:Core/Src/main.c ****             {
 1905              		.loc 1 529 13 is_stmt 1 view .LVU402
 529:Core/Src/main.c ****             {
 1906              		.loc 1 529 26 is_stmt 0 view .LVU403
 1907 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1908 0052 DBB2     		uxtb	r3, r3
 529:Core/Src/main.c ****             {
 1909              		.loc 1 529 16 view .LVU404
 1910 0054 0A2B     		cmp	r3, #10
 1911 0056 00F09B81 		beq	.L159
 1912              	.L151:
 555:Core/Src/main.c **** 
 1913              		.loc 1 555 9 is_stmt 1 view .LVU405
 1914 005a 0122     		movs	r2, #1
 1915 005c 8249     		ldr	r1, .L171+28
 1916 005e 8448     		ldr	r0, .L171+36
 1917 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1918              	.LVL171:
 559:Core/Src/main.c **** 
 1919              		.loc 1 559 1 is_stmt 0 view .LVU406
 1920 0064 18E0     		b	.L128
 1921              	.LVL172:
 1922              	.L154:
 337:Core/Src/main.c ****         {
 1923              		.loc 1 337 9 is_stmt 1 view .LVU407
 337:Core/Src/main.c ****         {
 1924              		.loc 1 337 26 is_stmt 0 view .LVU408
 1925 0066 7F4B     		ldr	r3, .L171+24
 1926 0068 1B88     		ldrh	r3, [r3]
 1927 006a 9BB2     		uxth	r3, r3
 337:Core/Src/main.c ****         {
 1928              		.loc 1 337 12 view .LVU409
 1929 006c FE2B     		cmp	r3, #254
 1930 006e 3BD8     		bhi	.L130
 339:Core/Src/main.c **** 
 1931              		.loc 1 339 13 is_stmt 1 view .LVU410
 339:Core/Src/main.c **** 
 1932              		.loc 1 339 37 is_stmt 0 view .LVU411
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 56


 1933 0070 7C49     		ldr	r1, .L171+24
 1934 0072 0B88     		ldrh	r3, [r1]
 1935 0074 9BB2     		uxth	r3, r3
 1936 0076 5A1C     		adds	r2, r3, #1
 1937 0078 92B2     		uxth	r2, r2
 1938 007a 0A80     		strh	r2, [r1]	@ movhi
 339:Core/Src/main.c **** 
 1939              		.loc 1 339 41 view .LVU412
 1940 007c 7D49     		ldr	r1, .L171+40
 1941 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1942 0080 D2B2     		uxtb	r2, r2
 1943 0082 7A48     		ldr	r0, .L171+32
 1944              	.LVL173:
 339:Core/Src/main.c **** 
 1945              		.loc 1 339 41 view .LVU413
 1946 0084 C254     		strb	r2, [r0, r3]
 342:Core/Src/main.c ****             {
 1947              		.loc 1 342 13 is_stmt 1 view .LVU414
 342:Core/Src/main.c ****             {
 1948              		.loc 1 342 25 is_stmt 0 view .LVU415
 1949 0086 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1950 0088 DBB2     		uxtb	r3, r3
 342:Core/Src/main.c ****             {
 1951              		.loc 1 342 16 view .LVU416
 1952 008a 0A2B     		cmp	r3, #10
 1953 008c 05D0     		beq	.L160
 1954              	.L131:
 370:Core/Src/main.c ****     }
 1955              		.loc 1 370 9 is_stmt 1 view .LVU417
 1956 008e 0122     		movs	r2, #1
 1957 0090 7849     		ldr	r1, .L171+40
 1958 0092 7948     		ldr	r0, .L171+44
 1959 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1960              	.LVL174:
 1961              	.L128:
 559:Core/Src/main.c **** 
 1962              		.loc 1 559 1 is_stmt 0 view .LVU418
 1963 0098 10BD     		pop	{r4, pc}
 1964              	.L160:
 344:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1965              		.loc 1 344 17 is_stmt 1 view .LVU419
 344:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1966              		.loc 1 344 28 is_stmt 0 view .LVU420
 1967 009a 724A     		ldr	r2, .L171+24
 1968 009c 1388     		ldrh	r3, [r2]
 1969 009e 9BB2     		uxth	r3, r3
 344:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1970              		.loc 1 344 43 view .LVU421
 1971 00a0 0146     		mov	r1, r0
 1972 00a2 0020     		movs	r0, #0
 1973 00a4 C854     		strb	r0, [r1, r3]
 345:Core/Src/main.c **** 
 1974              		.loc 1 345 17 is_stmt 1 view .LVU422
 345:Core/Src/main.c **** 
 1975              		.loc 1 345 30 is_stmt 0 view .LVU423
 1976 00a6 1080     		strh	r0, [r2]	@ movhi
 348:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 57


 1977              		.loc 1 348 17 is_stmt 1 view .LVU424
 1978 00a8 744C     		ldr	r4, .L171+48
 1979 00aa 2046     		mov	r0, r4
 1980 00ac FFF7FEFF 		bl	strcpy
 1981              	.LVL175:
 350:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1982              		.loc 1 350 17 view .LVU425
 350:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1983              		.loc 1 350 20 is_stmt 0 view .LVU426
 1984 00b0 2146     		mov	r1, r4
 1985 00b2 7348     		ldr	r0, .L171+52
 1986 00b4 FFF7FEFF 		bl	strcmp
 1987              	.LVL176:
 350:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1988              		.loc 1 350 19 discriminator 1 view .LVU427
 1989 00b8 70B9     		cbnz	r0, .L161
 354:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1990              		.loc 1 354 22 is_stmt 1 view .LVU428
 354:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1991              		.loc 1 354 25 is_stmt 0 view .LVU429
 1992 00ba 7249     		ldr	r1, .L171+56
 1993 00bc 6F48     		ldr	r0, .L171+48
 1994 00be FFF7FEFF 		bl	strcmp
 1995              	.LVL177:
 354:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1996              		.loc 1 354 24 discriminator 1 view .LVU430
 1997 00c2 0028     		cmp	r0, #0
 1998 00c4 E3D0     		beq	.L131
 1999              	.LBB33:
 355:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2000              		.loc 1 355 19 is_stmt 1 view .LVU431
 2001 00c6 6D4C     		ldr	r4, .L171+48
 2002 00c8 2046     		mov	r0, r4
 2003 00ca FFF7FEFF 		bl	ProcessReceivedString
 2004              	.LVL178:
 356:Core/Src/main.c ****                 }
 2005              		.loc 1 356 19 view .LVU432
 2006 00ce 2146     		mov	r1, r4
 2007 00d0 6C48     		ldr	r0, .L171+56
 2008 00d2 FFF7FEFF 		bl	strcpy
 2009              	.LVL179:
 2010 00d6 DAE7     		b	.L131
 2011              	.L161:
 2012              	.LBE33:
 2013              	.LBB34:
 351:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2014              		.loc 1 351 19 view .LVU433
 2015 00d8 2046     		mov	r0, r4
 2016 00da FFF7FEFF 		bl	ProcessReceivedString
 2017              	.LVL180:
 352:Core/Src/main.c ****                 }
 2018              		.loc 1 352 19 view .LVU434
 2019 00de 2146     		mov	r1, r4
 2020 00e0 6848     		ldr	r0, .L171+56
 2021 00e2 FFF7FEFF 		bl	strcpy
 2022              	.LVL181:
 2023              	.LBE34:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 58


 2024 00e6 D2E7     		b	.L131
 2025              	.LVL182:
 2026              	.L130:
 365:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2027              		.loc 1 365 13 view .LVU435
 365:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2028              		.loc 1 365 26 is_stmt 0 view .LVU436
 2029 00e8 5E4B     		ldr	r3, .L171+24
 2030 00ea 0022     		movs	r2, #0
 2031 00ec 1A80     		strh	r2, [r3]	@ movhi
 366:Core/Src/main.c ****         }
 2032              		.loc 1 366 13 is_stmt 1 view .LVU437
 2033 00ee 6648     		ldr	r0, .L171+60
 2034              	.LVL183:
 366:Core/Src/main.c ****         }
 2035              		.loc 1 366 13 is_stmt 0 view .LVU438
 2036 00f0 FFF7FEFF 		bl	puts
 2037              	.LVL184:
 2038 00f4 CBE7     		b	.L131
 2039              	.LVL185:
 2040              	.L155:
 375:Core/Src/main.c ****         {
 2041              		.loc 1 375 9 is_stmt 1 view .LVU439
 375:Core/Src/main.c ****         {
 2042              		.loc 1 375 26 is_stmt 0 view .LVU440
 2043 00f6 5B4B     		ldr	r3, .L171+24
 2044 00f8 1B88     		ldrh	r3, [r3]
 2045 00fa 9BB2     		uxth	r3, r3
 375:Core/Src/main.c ****         {
 2046              		.loc 1 375 12 view .LVU441
 2047 00fc FE2B     		cmp	r3, #254
 2048 00fe 3BD8     		bhi	.L135
 377:Core/Src/main.c **** 
 2049              		.loc 1 377 13 is_stmt 1 view .LVU442
 377:Core/Src/main.c **** 
 2050              		.loc 1 377 37 is_stmt 0 view .LVU443
 2051 0100 5849     		ldr	r1, .L171+24
 2052 0102 0B88     		ldrh	r3, [r1]
 2053 0104 9BB2     		uxth	r3, r3
 2054 0106 5A1C     		adds	r2, r3, #1
 2055 0108 92B2     		uxth	r2, r2
 2056 010a 0A80     		strh	r2, [r1]	@ movhi
 377:Core/Src/main.c **** 
 2057              		.loc 1 377 41 view .LVU444
 2058 010c 5F49     		ldr	r1, .L171+64
 2059 010e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2060 0110 D2B2     		uxtb	r2, r2
 2061 0112 5648     		ldr	r0, .L171+32
 2062              	.LVL186:
 377:Core/Src/main.c **** 
 2063              		.loc 1 377 41 view .LVU445
 2064 0114 C254     		strb	r2, [r0, r3]
 380:Core/Src/main.c ****             {
 2065              		.loc 1 380 13 is_stmt 1 view .LVU446
 380:Core/Src/main.c ****             {
 2066              		.loc 1 380 26 is_stmt 0 view .LVU447
 2067 0116 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 59


 2068 0118 DBB2     		uxtb	r3, r3
 380:Core/Src/main.c ****             {
 2069              		.loc 1 380 16 view .LVU448
 2070 011a 0A2B     		cmp	r3, #10
 2071 011c 05D0     		beq	.L162
 2072              	.L136:
 408:Core/Src/main.c ****     }
 2073              		.loc 1 408 9 is_stmt 1 view .LVU449
 2074 011e 0122     		movs	r2, #1
 2075 0120 5A49     		ldr	r1, .L171+64
 2076 0122 5B48     		ldr	r0, .L171+68
 2077 0124 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2078              	.LVL187:
 2079 0128 B6E7     		b	.L128
 2080              	.L162:
 382:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2081              		.loc 1 382 17 view .LVU450
 382:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2082              		.loc 1 382 28 is_stmt 0 view .LVU451
 2083 012a 4E4A     		ldr	r2, .L171+24
 2084 012c 1388     		ldrh	r3, [r2]
 2085 012e 9BB2     		uxth	r3, r3
 382:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2086              		.loc 1 382 43 view .LVU452
 2087 0130 0146     		mov	r1, r0
 2088 0132 0020     		movs	r0, #0
 2089 0134 C854     		strb	r0, [r1, r3]
 383:Core/Src/main.c **** 
 2090              		.loc 1 383 17 is_stmt 1 view .LVU453
 383:Core/Src/main.c **** 
 2091              		.loc 1 383 30 is_stmt 0 view .LVU454
 2092 0136 1080     		strh	r0, [r2]	@ movhi
 386:Core/Src/main.c **** 
 2093              		.loc 1 386 17 is_stmt 1 view .LVU455
 2094 0138 504C     		ldr	r4, .L171+48
 2095 013a 2046     		mov	r0, r4
 2096 013c FFF7FEFF 		bl	strcpy
 2097              	.LVL188:
 388:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2098              		.loc 1 388 17 view .LVU456
 388:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2099              		.loc 1 388 20 is_stmt 0 view .LVU457
 2100 0140 2146     		mov	r1, r4
 2101 0142 4F48     		ldr	r0, .L171+52
 2102 0144 FFF7FEFF 		bl	strcmp
 2103              	.LVL189:
 388:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2104              		.loc 1 388 19 discriminator 1 view .LVU458
 2105 0148 70B9     		cbnz	r0, .L163
 392:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2106              		.loc 1 392 22 is_stmt 1 view .LVU459
 392:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2107              		.loc 1 392 25 is_stmt 0 view .LVU460
 2108 014a 4E49     		ldr	r1, .L171+56
 2109 014c 4B48     		ldr	r0, .L171+48
 2110 014e FFF7FEFF 		bl	strcmp
 2111              	.LVL190:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 60


 392:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2112              		.loc 1 392 24 discriminator 1 view .LVU461
 2113 0152 0028     		cmp	r0, #0
 2114 0154 E3D0     		beq	.L136
 2115              	.LBB35:
 393:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2116              		.loc 1 393 19 is_stmt 1 view .LVU462
 2117 0156 494C     		ldr	r4, .L171+48
 2118 0158 2046     		mov	r0, r4
 2119 015a FFF7FEFF 		bl	ProcessReceivedString
 2120              	.LVL191:
 394:Core/Src/main.c ****                 }
 2121              		.loc 1 394 19 view .LVU463
 2122 015e 2146     		mov	r1, r4
 2123 0160 4848     		ldr	r0, .L171+56
 2124 0162 FFF7FEFF 		bl	strcpy
 2125              	.LVL192:
 2126 0166 DAE7     		b	.L136
 2127              	.L163:
 2128              	.LBE35:
 2129              	.LBB36:
 389:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2130              		.loc 1 389 19 view .LVU464
 2131 0168 2046     		mov	r0, r4
 2132 016a FFF7FEFF 		bl	ProcessReceivedString
 2133              	.LVL193:
 390:Core/Src/main.c ****                 }
 2134              		.loc 1 390 19 view .LVU465
 2135 016e 2146     		mov	r1, r4
 2136 0170 4448     		ldr	r0, .L171+56
 2137 0172 FFF7FEFF 		bl	strcpy
 2138              	.LVL194:
 2139              	.LBE36:
 2140 0176 D2E7     		b	.L136
 2141              	.LVL195:
 2142              	.L135:
 403:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2143              		.loc 1 403 13 view .LVU466
 403:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2144              		.loc 1 403 26 is_stmt 0 view .LVU467
 2145 0178 3A4B     		ldr	r3, .L171+24
 2146 017a 0022     		movs	r2, #0
 2147 017c 1A80     		strh	r2, [r3]	@ movhi
 404:Core/Src/main.c ****         }
 2148              		.loc 1 404 13 is_stmt 1 view .LVU468
 2149 017e 4248     		ldr	r0, .L171+60
 2150              	.LVL196:
 404:Core/Src/main.c ****         }
 2151              		.loc 1 404 13 is_stmt 0 view .LVU469
 2152 0180 FFF7FEFF 		bl	puts
 2153              	.LVL197:
 2154 0184 CBE7     		b	.L136
 2155              	.LVL198:
 2156              	.L156:
 413:Core/Src/main.c ****         {
 2157              		.loc 1 413 9 is_stmt 1 view .LVU470
 413:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 61


 2158              		.loc 1 413 26 is_stmt 0 view .LVU471
 2159 0186 374B     		ldr	r3, .L171+24
 2160 0188 1B88     		ldrh	r3, [r3]
 2161 018a 9BB2     		uxth	r3, r3
 413:Core/Src/main.c ****         {
 2162              		.loc 1 413 12 view .LVU472
 2163 018c FE2B     		cmp	r3, #254
 2164 018e 3BD8     		bhi	.L139
 415:Core/Src/main.c **** 
 2165              		.loc 1 415 13 is_stmt 1 view .LVU473
 415:Core/Src/main.c **** 
 2166              		.loc 1 415 37 is_stmt 0 view .LVU474
 2167 0190 3449     		ldr	r1, .L171+24
 2168 0192 0B88     		ldrh	r3, [r1]
 2169 0194 9BB2     		uxth	r3, r3
 2170 0196 5A1C     		adds	r2, r3, #1
 2171 0198 92B2     		uxth	r2, r2
 2172 019a 0A80     		strh	r2, [r1]	@ movhi
 415:Core/Src/main.c **** 
 2173              		.loc 1 415 41 view .LVU475
 2174 019c 3D49     		ldr	r1, .L171+72
 2175 019e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2176 01a0 D2B2     		uxtb	r2, r2
 2177 01a2 3248     		ldr	r0, .L171+32
 2178              	.LVL199:
 415:Core/Src/main.c **** 
 2179              		.loc 1 415 41 view .LVU476
 2180 01a4 C254     		strb	r2, [r0, r3]
 418:Core/Src/main.c ****             {
 2181              		.loc 1 418 13 is_stmt 1 view .LVU477
 418:Core/Src/main.c ****             {
 2182              		.loc 1 418 26 is_stmt 0 view .LVU478
 2183 01a6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2184 01a8 DBB2     		uxtb	r3, r3
 418:Core/Src/main.c ****             {
 2185              		.loc 1 418 16 view .LVU479
 2186 01aa 0A2B     		cmp	r3, #10
 2187 01ac 05D0     		beq	.L164
 2188              	.L140:
 444:Core/Src/main.c **** 
 2189              		.loc 1 444 9 is_stmt 1 view .LVU480
 2190 01ae 0122     		movs	r2, #1
 2191 01b0 3849     		ldr	r1, .L171+72
 2192 01b2 3948     		ldr	r0, .L171+76
 2193 01b4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2194              	.LVL200:
 2195 01b8 6EE7     		b	.L128
 2196              	.L164:
 420:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2197              		.loc 1 420 17 view .LVU481
 420:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2198              		.loc 1 420 28 is_stmt 0 view .LVU482
 2199 01ba 2A4A     		ldr	r2, .L171+24
 2200 01bc 1388     		ldrh	r3, [r2]
 2201 01be 9BB2     		uxth	r3, r3
 420:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2202              		.loc 1 420 43 view .LVU483
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 62


 2203 01c0 0146     		mov	r1, r0
 2204 01c2 0020     		movs	r0, #0
 2205 01c4 C854     		strb	r0, [r1, r3]
 421:Core/Src/main.c **** 
 2206              		.loc 1 421 17 is_stmt 1 view .LVU484
 421:Core/Src/main.c **** 
 2207              		.loc 1 421 30 is_stmt 0 view .LVU485
 2208 01c6 1080     		strh	r0, [r2]	@ movhi
 424:Core/Src/main.c **** 
 2209              		.loc 1 424 17 is_stmt 1 view .LVU486
 2210 01c8 2C4C     		ldr	r4, .L171+48
 2211 01ca 2046     		mov	r0, r4
 2212 01cc FFF7FEFF 		bl	strcpy
 2213              	.LVL201:
 426:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2214              		.loc 1 426 17 view .LVU487
 426:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2215              		.loc 1 426 20 is_stmt 0 view .LVU488
 2216 01d0 2146     		mov	r1, r4
 2217 01d2 2B48     		ldr	r0, .L171+52
 2218 01d4 FFF7FEFF 		bl	strcmp
 2219              	.LVL202:
 426:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2220              		.loc 1 426 19 discriminator 1 view .LVU489
 2221 01d8 70B9     		cbnz	r0, .L165
 430:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2222              		.loc 1 430 22 is_stmt 1 view .LVU490
 430:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2223              		.loc 1 430 25 is_stmt 0 view .LVU491
 2224 01da 2A49     		ldr	r1, .L171+56
 2225 01dc 2748     		ldr	r0, .L171+48
 2226 01de FFF7FEFF 		bl	strcmp
 2227              	.LVL203:
 430:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2228              		.loc 1 430 24 discriminator 1 view .LVU492
 2229 01e2 0028     		cmp	r0, #0
 2230 01e4 E3D0     		beq	.L140
 2231              	.LBB37:
 431:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2232              		.loc 1 431 19 is_stmt 1 view .LVU493
 2233 01e6 254C     		ldr	r4, .L171+48
 2234 01e8 2046     		mov	r0, r4
 2235 01ea FFF7FEFF 		bl	ProcessReceivedString
 2236              	.LVL204:
 432:Core/Src/main.c ****                 }
 2237              		.loc 1 432 19 view .LVU494
 2238 01ee 2146     		mov	r1, r4
 2239 01f0 2448     		ldr	r0, .L171+56
 2240 01f2 FFF7FEFF 		bl	strcpy
 2241              	.LVL205:
 2242 01f6 DAE7     		b	.L140
 2243              	.L165:
 2244              	.LBE37:
 2245              	.LBB38:
 427:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2246              		.loc 1 427 19 view .LVU495
 2247 01f8 2046     		mov	r0, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 63


 2248 01fa FFF7FEFF 		bl	ProcessReceivedString
 2249              	.LVL206:
 428:Core/Src/main.c ****                 }
 2250              		.loc 1 428 19 view .LVU496
 2251 01fe 2146     		mov	r1, r4
 2252 0200 2048     		ldr	r0, .L171+56
 2253 0202 FFF7FEFF 		bl	strcpy
 2254              	.LVL207:
 2255              	.LBE38:
 2256 0206 D2E7     		b	.L140
 2257              	.LVL208:
 2258              	.L139:
 441:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2259              		.loc 1 441 13 view .LVU497
 441:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2260              		.loc 1 441 26 is_stmt 0 view .LVU498
 2261 0208 164B     		ldr	r3, .L171+24
 2262 020a 0022     		movs	r2, #0
 2263 020c 1A80     		strh	r2, [r3]	@ movhi
 442:Core/Src/main.c ****         }
 2264              		.loc 1 442 13 is_stmt 1 view .LVU499
 2265 020e 1E48     		ldr	r0, .L171+60
 2266              	.LVL209:
 442:Core/Src/main.c ****         }
 2267              		.loc 1 442 13 is_stmt 0 view .LVU500
 2268 0210 FFF7FEFF 		bl	puts
 2269              	.LVL210:
 2270 0214 CBE7     		b	.L140
 2271              	.LVL211:
 2272              	.L157:
 450:Core/Src/main.c ****         {
 2273              		.loc 1 450 9 is_stmt 1 view .LVU501
 450:Core/Src/main.c ****         {
 2274              		.loc 1 450 26 is_stmt 0 view .LVU502
 2275 0216 134B     		ldr	r3, .L171+24
 2276 0218 1B88     		ldrh	r3, [r3]
 2277 021a 9BB2     		uxth	r3, r3
 450:Core/Src/main.c ****         {
 2278              		.loc 1 450 12 view .LVU503
 2279 021c FE2B     		cmp	r3, #254
 2280 021e 68D8     		bhi	.L143
 452:Core/Src/main.c **** 
 2281              		.loc 1 452 13 is_stmt 1 view .LVU504
 452:Core/Src/main.c **** 
 2282              		.loc 1 452 37 is_stmt 0 view .LVU505
 2283 0220 1049     		ldr	r1, .L171+24
 2284 0222 0B88     		ldrh	r3, [r1]
 2285 0224 9BB2     		uxth	r3, r3
 2286 0226 5A1C     		adds	r2, r3, #1
 2287 0228 92B2     		uxth	r2, r2
 2288 022a 0A80     		strh	r2, [r1]	@ movhi
 452:Core/Src/main.c **** 
 2289              		.loc 1 452 41 view .LVU506
 2290 022c 1B49     		ldr	r1, .L171+80
 2291 022e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2292 0230 D2B2     		uxtb	r2, r2
 2293 0232 0E48     		ldr	r0, .L171+32
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 64


 2294              	.LVL212:
 452:Core/Src/main.c **** 
 2295              		.loc 1 452 41 view .LVU507
 2296 0234 C254     		strb	r2, [r0, r3]
 455:Core/Src/main.c ****             {
 2297              		.loc 1 455 13 is_stmt 1 view .LVU508
 455:Core/Src/main.c ****             {
 2298              		.loc 1 455 26 is_stmt 0 view .LVU509
 2299 0236 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2300 0238 DBB2     		uxtb	r3, r3
 455:Core/Src/main.c ****             {
 2301              		.loc 1 455 16 view .LVU510
 2302 023a 0A2B     		cmp	r3, #10
 2303 023c 32D0     		beq	.L166
 2304              	.L144:
 481:Core/Src/main.c **** 
 2305              		.loc 1 481 9 is_stmt 1 view .LVU511
 2306 023e 0122     		movs	r2, #1
 2307 0240 1649     		ldr	r1, .L171+80
 2308 0242 1748     		ldr	r0, .L171+84
 2309 0244 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2310              	.LVL213:
 2311 0248 26E7     		b	.L128
 2312              	.L172:
 2313 024a 00BF     		.align	2
 2314              	.L171:
 2315 024c 00100140 		.word	1073811456
 2316 0250 00140140 		.word	1073812480
 2317 0254 00440040 		.word	1073759232
 2318 0258 00480040 		.word	1073760256
 2319 025c 004C0040 		.word	1073761280
 2320 0260 00500040 		.word	1073762304
 2321 0264 00000000 		.word	buffer_index
 2322 0268 00000000 		.word	rx_byte5
 2323 026c 00000000 		.word	uart_buffer
 2324 0270 00000000 		.word	huart5
 2325 0274 00000000 		.word	rx_byte
 2326 0278 00000000 		.word	huart1
 2327 027c 00000000 		.word	received_string
 2328 0280 70010000 		.word	.LC29
 2329 0284 00000000 		.word	previous_string
 2330 0288 00000000 		.word	.LC37
 2331 028c 00000000 		.word	rx_byte1
 2332 0290 00000000 		.word	huart6
 2333 0294 00000000 		.word	rx_byte2
 2334 0298 00000000 		.word	huart2
 2335 029c 00000000 		.word	rx_byte3
 2336 02a0 00000000 		.word	huart3
 2337              	.L166:
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2338              		.loc 1 457 17 view .LVU512
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2339              		.loc 1 457 28 is_stmt 0 view .LVU513
 2340 02a4 524A     		ldr	r2, .L173
 2341 02a6 1388     		ldrh	r3, [r2]
 2342 02a8 9BB2     		uxth	r3, r3
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 65


 2343              		.loc 1 457 43 view .LVU514
 2344 02aa 0146     		mov	r1, r0
 2345 02ac 0020     		movs	r0, #0
 2346 02ae C854     		strb	r0, [r1, r3]
 458:Core/Src/main.c **** 
 2347              		.loc 1 458 17 is_stmt 1 view .LVU515
 458:Core/Src/main.c **** 
 2348              		.loc 1 458 30 is_stmt 0 view .LVU516
 2349 02b0 1080     		strh	r0, [r2]	@ movhi
 461:Core/Src/main.c **** 
 2350              		.loc 1 461 17 is_stmt 1 view .LVU517
 2351 02b2 504C     		ldr	r4, .L173+4
 2352 02b4 2046     		mov	r0, r4
 2353 02b6 FFF7FEFF 		bl	strcpy
 2354              	.LVL214:
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2355              		.loc 1 463 17 view .LVU518
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2356              		.loc 1 463 20 is_stmt 0 view .LVU519
 2357 02ba 2146     		mov	r1, r4
 2358 02bc 4E48     		ldr	r0, .L173+8
 2359 02be FFF7FEFF 		bl	strcmp
 2360              	.LVL215:
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2361              		.loc 1 463 19 discriminator 1 view .LVU520
 2362 02c2 70B9     		cbnz	r0, .L167
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2363              		.loc 1 467 22 is_stmt 1 view .LVU521
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2364              		.loc 1 467 25 is_stmt 0 view .LVU522
 2365 02c4 4D49     		ldr	r1, .L173+12
 2366 02c6 4B48     		ldr	r0, .L173+4
 2367 02c8 FFF7FEFF 		bl	strcmp
 2368              	.LVL216:
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2369              		.loc 1 467 24 discriminator 1 view .LVU523
 2370 02cc 0028     		cmp	r0, #0
 2371 02ce B6D0     		beq	.L144
 2372              	.LBB39:
 468:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2373              		.loc 1 468 19 is_stmt 1 view .LVU524
 2374 02d0 484C     		ldr	r4, .L173+4
 2375 02d2 2046     		mov	r0, r4
 2376 02d4 FFF7FEFF 		bl	ProcessReceivedString
 2377              	.LVL217:
 469:Core/Src/main.c ****                 }
 2378              		.loc 1 469 19 view .LVU525
 2379 02d8 2146     		mov	r1, r4
 2380 02da 4848     		ldr	r0, .L173+12
 2381 02dc FFF7FEFF 		bl	strcpy
 2382              	.LVL218:
 2383 02e0 ADE7     		b	.L144
 2384              	.L167:
 2385              	.LBE39:
 2386              	.LBB40:
 464:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2387              		.loc 1 464 19 view .LVU526
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 66


 2388 02e2 2046     		mov	r0, r4
 2389 02e4 FFF7FEFF 		bl	ProcessReceivedString
 2390              	.LVL219:
 465:Core/Src/main.c ****                 }
 2391              		.loc 1 465 19 view .LVU527
 2392 02e8 2146     		mov	r1, r4
 2393 02ea 4448     		ldr	r0, .L173+12
 2394 02ec FFF7FEFF 		bl	strcpy
 2395              	.LVL220:
 2396              	.LBE40:
 2397 02f0 A5E7     		b	.L144
 2398              	.LVL221:
 2399              	.L143:
 478:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2400              		.loc 1 478 13 view .LVU528
 478:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2401              		.loc 1 478 26 is_stmt 0 view .LVU529
 2402 02f2 3F4B     		ldr	r3, .L173
 2403 02f4 0022     		movs	r2, #0
 2404 02f6 1A80     		strh	r2, [r3]	@ movhi
 479:Core/Src/main.c ****         }
 2405              		.loc 1 479 13 is_stmt 1 view .LVU530
 2406 02f8 4148     		ldr	r0, .L173+16
 2407              	.LVL222:
 479:Core/Src/main.c ****         }
 2408              		.loc 1 479 13 is_stmt 0 view .LVU531
 2409 02fa FFF7FEFF 		bl	puts
 2410              	.LVL223:
 2411 02fe 9EE7     		b	.L144
 2412              	.LVL224:
 2413              	.L158:
 487:Core/Src/main.c ****         {
 2414              		.loc 1 487 9 is_stmt 1 view .LVU532
 487:Core/Src/main.c ****         {
 2415              		.loc 1 487 26 is_stmt 0 view .LVU533
 2416 0300 3B4B     		ldr	r3, .L173
 2417 0302 1B88     		ldrh	r3, [r3]
 2418 0304 9BB2     		uxth	r3, r3
 487:Core/Src/main.c ****         {
 2419              		.loc 1 487 12 view .LVU534
 2420 0306 FE2B     		cmp	r3, #254
 2421 0308 3BD8     		bhi	.L147
 489:Core/Src/main.c **** 
 2422              		.loc 1 489 13 is_stmt 1 view .LVU535
 489:Core/Src/main.c **** 
 2423              		.loc 1 489 37 is_stmt 0 view .LVU536
 2424 030a 3949     		ldr	r1, .L173
 2425 030c 0B88     		ldrh	r3, [r1]
 2426 030e 9BB2     		uxth	r3, r3
 2427 0310 5A1C     		adds	r2, r3, #1
 2428 0312 92B2     		uxth	r2, r2
 2429 0314 0A80     		strh	r2, [r1]	@ movhi
 489:Core/Src/main.c **** 
 2430              		.loc 1 489 41 view .LVU537
 2431 0316 3B49     		ldr	r1, .L173+20
 2432 0318 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2433 031a D2B2     		uxtb	r2, r2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 67


 2434 031c 3A48     		ldr	r0, .L173+24
 2435              	.LVL225:
 489:Core/Src/main.c **** 
 2436              		.loc 1 489 41 view .LVU538
 2437 031e C254     		strb	r2, [r0, r3]
 492:Core/Src/main.c ****             {
 2438              		.loc 1 492 13 is_stmt 1 view .LVU539
 492:Core/Src/main.c ****             {
 2439              		.loc 1 492 26 is_stmt 0 view .LVU540
 2440 0320 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2441 0322 DBB2     		uxtb	r3, r3
 492:Core/Src/main.c ****             {
 2442              		.loc 1 492 16 view .LVU541
 2443 0324 0A2B     		cmp	r3, #10
 2444 0326 05D0     		beq	.L168
 2445              	.L148:
 518:Core/Src/main.c **** 
 2446              		.loc 1 518 9 is_stmt 1 view .LVU542
 2447 0328 0122     		movs	r2, #1
 2448 032a 3649     		ldr	r1, .L173+20
 2449 032c 3748     		ldr	r0, .L173+28
 2450 032e FFF7FEFF 		bl	HAL_UART_Receive_IT
 2451              	.LVL226:
 2452 0332 B1E6     		b	.L128
 2453              	.L168:
 494:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2454              		.loc 1 494 17 view .LVU543
 494:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2455              		.loc 1 494 28 is_stmt 0 view .LVU544
 2456 0334 2E4A     		ldr	r2, .L173
 2457 0336 1388     		ldrh	r3, [r2]
 2458 0338 9BB2     		uxth	r3, r3
 494:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2459              		.loc 1 494 43 view .LVU545
 2460 033a 0146     		mov	r1, r0
 2461 033c 0020     		movs	r0, #0
 2462 033e C854     		strb	r0, [r1, r3]
 495:Core/Src/main.c **** 
 2463              		.loc 1 495 17 is_stmt 1 view .LVU546
 495:Core/Src/main.c **** 
 2464              		.loc 1 495 30 is_stmt 0 view .LVU547
 2465 0340 1080     		strh	r0, [r2]	@ movhi
 498:Core/Src/main.c **** 
 2466              		.loc 1 498 17 is_stmt 1 view .LVU548
 2467 0342 2C4C     		ldr	r4, .L173+4
 2468 0344 2046     		mov	r0, r4
 2469 0346 FFF7FEFF 		bl	strcpy
 2470              	.LVL227:
 500:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2471              		.loc 1 500 17 view .LVU549
 500:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2472              		.loc 1 500 20 is_stmt 0 view .LVU550
 2473 034a 2146     		mov	r1, r4
 2474 034c 2A48     		ldr	r0, .L173+8
 2475 034e FFF7FEFF 		bl	strcmp
 2476              	.LVL228:
 500:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 68


 2477              		.loc 1 500 19 discriminator 1 view .LVU551
 2478 0352 70B9     		cbnz	r0, .L169
 504:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2479              		.loc 1 504 22 is_stmt 1 view .LVU552
 504:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2480              		.loc 1 504 25 is_stmt 0 view .LVU553
 2481 0354 2949     		ldr	r1, .L173+12
 2482 0356 2748     		ldr	r0, .L173+4
 2483 0358 FFF7FEFF 		bl	strcmp
 2484              	.LVL229:
 504:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2485              		.loc 1 504 24 discriminator 1 view .LVU554
 2486 035c 0028     		cmp	r0, #0
 2487 035e E3D0     		beq	.L148
 2488              	.LBB41:
 505:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2489              		.loc 1 505 19 is_stmt 1 view .LVU555
 2490 0360 244C     		ldr	r4, .L173+4
 2491 0362 2046     		mov	r0, r4
 2492 0364 FFF7FEFF 		bl	ProcessReceivedString
 2493              	.LVL230:
 506:Core/Src/main.c ****                 }
 2494              		.loc 1 506 19 view .LVU556
 2495 0368 2146     		mov	r1, r4
 2496 036a 2448     		ldr	r0, .L173+12
 2497 036c FFF7FEFF 		bl	strcpy
 2498              	.LVL231:
 2499 0370 DAE7     		b	.L148
 2500              	.L169:
 2501              	.LBE41:
 2502              	.LBB42:
 501:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2503              		.loc 1 501 19 view .LVU557
 2504 0372 2046     		mov	r0, r4
 2505 0374 FFF7FEFF 		bl	ProcessReceivedString
 2506              	.LVL232:
 502:Core/Src/main.c ****                 }
 2507              		.loc 1 502 19 view .LVU558
 2508 0378 2146     		mov	r1, r4
 2509 037a 2048     		ldr	r0, .L173+12
 2510 037c FFF7FEFF 		bl	strcpy
 2511              	.LVL233:
 2512              	.LBE42:
 2513 0380 D2E7     		b	.L148
 2514              	.LVL234:
 2515              	.L147:
 515:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2516              		.loc 1 515 13 view .LVU559
 515:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2517              		.loc 1 515 26 is_stmt 0 view .LVU560
 2518 0382 1B4B     		ldr	r3, .L173
 2519 0384 0022     		movs	r2, #0
 2520 0386 1A80     		strh	r2, [r3]	@ movhi
 516:Core/Src/main.c ****         }
 2521              		.loc 1 516 13 is_stmt 1 view .LVU561
 2522 0388 1D48     		ldr	r0, .L173+16
 2523              	.LVL235:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 69


 516:Core/Src/main.c ****         }
 2524              		.loc 1 516 13 is_stmt 0 view .LVU562
 2525 038a FFF7FEFF 		bl	puts
 2526              	.LVL236:
 2527 038e CBE7     		b	.L148
 2528              	.L159:
 531:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2529              		.loc 1 531 17 is_stmt 1 view .LVU563
 531:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2530              		.loc 1 531 28 is_stmt 0 view .LVU564
 2531 0390 174A     		ldr	r2, .L173
 2532 0392 1388     		ldrh	r3, [r2]
 2533 0394 9BB2     		uxth	r3, r3
 531:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2534              		.loc 1 531 43 view .LVU565
 2535 0396 0146     		mov	r1, r0
 2536 0398 0020     		movs	r0, #0
 2537 039a C854     		strb	r0, [r1, r3]
 532:Core/Src/main.c **** 
 2538              		.loc 1 532 17 is_stmt 1 view .LVU566
 532:Core/Src/main.c **** 
 2539              		.loc 1 532 30 is_stmt 0 view .LVU567
 2540 039c 1080     		strh	r0, [r2]	@ movhi
 535:Core/Src/main.c **** 
 2541              		.loc 1 535 17 is_stmt 1 view .LVU568
 2542 039e 154C     		ldr	r4, .L173+4
 2543 03a0 2046     		mov	r0, r4
 2544 03a2 FFF7FEFF 		bl	strcpy
 2545              	.LVL237:
 537:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2546              		.loc 1 537 17 view .LVU569
 537:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2547              		.loc 1 537 20 is_stmt 0 view .LVU570
 2548 03a6 2146     		mov	r1, r4
 2549 03a8 1348     		ldr	r0, .L173+8
 2550 03aa FFF7FEFF 		bl	strcmp
 2551              	.LVL238:
 537:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2552              		.loc 1 537 19 discriminator 1 view .LVU571
 2553 03ae 78B9     		cbnz	r0, .L170
 541:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2554              		.loc 1 541 22 is_stmt 1 view .LVU572
 541:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2555              		.loc 1 541 25 is_stmt 0 view .LVU573
 2556 03b0 1249     		ldr	r1, .L173+12
 2557 03b2 1048     		ldr	r0, .L173+4
 2558 03b4 FFF7FEFF 		bl	strcmp
 2559              	.LVL239:
 541:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2560              		.loc 1 541 24 discriminator 1 view .LVU574
 2561 03b8 0028     		cmp	r0, #0
 2562 03ba 3FF44EAE 		beq	.L151
 2563              	.LBB43:
 542:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2564              		.loc 1 542 19 is_stmt 1 view .LVU575
 2565 03be 0D4C     		ldr	r4, .L173+4
 2566 03c0 2046     		mov	r0, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 70


 2567 03c2 FFF7FEFF 		bl	ProcessReceivedString
 2568              	.LVL240:
 543:Core/Src/main.c ****                 }
 2569              		.loc 1 543 19 view .LVU576
 2570 03c6 2146     		mov	r1, r4
 2571 03c8 0C48     		ldr	r0, .L173+12
 2572 03ca FFF7FEFF 		bl	strcpy
 2573              	.LVL241:
 2574 03ce 44E6     		b	.L151
 2575              	.L170:
 2576              	.LBE43:
 2577              	.LBB44:
 538:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2578              		.loc 1 538 19 view .LVU577
 2579 03d0 2046     		mov	r0, r4
 2580 03d2 FFF7FEFF 		bl	ProcessReceivedString
 2581              	.LVL242:
 539:Core/Src/main.c ****                 }
 2582              		.loc 1 539 19 view .LVU578
 2583 03d6 2146     		mov	r1, r4
 2584 03d8 0848     		ldr	r0, .L173+12
 2585 03da FFF7FEFF 		bl	strcpy
 2586              	.LVL243:
 2587              	.LBE44:
 2588 03de 3CE6     		b	.L151
 2589              	.LVL244:
 2590              	.L150:
 552:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2591              		.loc 1 552 13 view .LVU579
 552:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2592              		.loc 1 552 26 is_stmt 0 view .LVU580
 2593 03e0 034B     		ldr	r3, .L173
 2594 03e2 0022     		movs	r2, #0
 2595 03e4 1A80     		strh	r2, [r3]	@ movhi
 553:Core/Src/main.c ****         }
 2596              		.loc 1 553 13 is_stmt 1 view .LVU581
 2597 03e6 0648     		ldr	r0, .L173+16
 2598              	.LVL245:
 553:Core/Src/main.c ****         }
 2599              		.loc 1 553 13 is_stmt 0 view .LVU582
 2600 03e8 FFF7FEFF 		bl	puts
 2601              	.LVL246:
 2602 03ec 35E6     		b	.L151
 2603              	.L174:
 2604 03ee 00BF     		.align	2
 2605              	.L173:
 2606 03f0 00000000 		.word	buffer_index
 2607 03f4 00000000 		.word	received_string
 2608 03f8 70010000 		.word	.LC29
 2609 03fc 00000000 		.word	previous_string
 2610 0400 00000000 		.word	.LC37
 2611 0404 00000000 		.word	rx_byte4
 2612 0408 00000000 		.word	uart_buffer
 2613 040c 00000000 		.word	huart4
 2614              		.cfi_endproc
 2615              	.LFE250:
 2617              		.section	.text.ActuatorSet,"ax",%progbits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 71


 2618              		.align	1
 2619              		.global	ActuatorSet
 2620              		.syntax unified
 2621              		.thumb
 2622              		.thumb_func
 2624              	ActuatorSet:
 2625              	.LVL247:
 2626              	.LFB259:
 854:Core/Src/main.c **** 
 855:Core/Src/main.c **** void ActuatorSet(int theta){
 2627              		.loc 1 855 28 is_stmt 1 view -0
 2628              		.cfi_startproc
 2629              		@ args = 0, pretend = 0, frame = 0
 2630              		@ frame_needed = 0, uses_anonymous_args = 0
 2631              		@ link register save eliminated.
 856:Core/Src/main.c ****   // Set joint. This is connected to the actuator motor controller. 
 857:Core/Src/main.c ****   // Make an actuator status function
 858:Core/Src/main.c **** 
 859:Core/Src/main.c **** }
 2632              		.loc 1 859 1 view .LVU584
 2633 0000 7047     		bx	lr
 2634              		.cfi_endproc
 2635              	.LFE259:
 2637              		.section	.text.ActuatorStatus,"ax",%progbits
 2638              		.align	1
 2639              		.global	ActuatorStatus
 2640              		.syntax unified
 2641              		.thumb
 2642              		.thumb_func
 2644              	ActuatorStatus:
 2645              	.LFB260:
 860:Core/Src/main.c **** 
 861:Core/Src/main.c **** int ActuatorStatus(){
 2646              		.loc 1 861 21 view -0
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 0
 2649              		@ frame_needed = 0, uses_anonymous_args = 0
 2650              		@ link register save eliminated.
 862:Core/Src/main.c ****   // Get actuator status
 863:Core/Src/main.c ****   return 0;
 2651              		.loc 1 863 3 view .LVU586
 864:Core/Src/main.c **** }
 2652              		.loc 1 864 1 is_stmt 0 view .LVU587
 2653 0000 0020     		movs	r0, #0
 2654 0002 7047     		bx	lr
 2655              		.cfi_endproc
 2656              	.LFE260:
 2658              		.section	.text.Error_Handler,"ax",%progbits
 2659              		.align	1
 2660              		.global	Error_Handler
 2661              		.syntax unified
 2662              		.thumb
 2663              		.thumb_func
 2665              	Error_Handler:
 2666              	.LFB261:
 865:Core/Src/main.c **** 
 866:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 72


 867:Core/Src/main.c **** 
 868:Core/Src/main.c **** /**
 869:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 870:Core/Src/main.c ****   * @retval None
 871:Core/Src/main.c ****   */
 872:Core/Src/main.c **** void Error_Handler(void)
 873:Core/Src/main.c **** {
 2667              		.loc 1 873 1 is_stmt 1 view -0
 2668              		.cfi_startproc
 2669              		@ Volatile: function does not return.
 2670              		@ args = 0, pretend = 0, frame = 0
 2671              		@ frame_needed = 0, uses_anonymous_args = 0
 2672              		@ link register save eliminated.
 874:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 875:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 876:Core/Src/main.c ****   __disable_irq();
 2673              		.loc 1 876 3 view .LVU589
 2674              	.LBB45:
 2675              	.LBI45:
 2676              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 73


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 74


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 75


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 76


 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 77


 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 78


 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 79


 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 80


 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 81


 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 82


 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 83


 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 84


 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 85


 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 86


 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 87


 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 88


 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 89


 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2677              		.loc 2 960 27 view .LVU590
 2678              	.LBB46:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2679              		.loc 2 962 3 view .LVU591
 2680              		.syntax unified
 2681              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2682 0000 72B6     		cpsid i
 2683              	@ 0 "" 2
 2684              		.thumb
 2685              		.syntax unified
 2686              	.L178:
 2687              	.LBE46:
 2688              	.LBE45:
 877:Core/Src/main.c ****   while (1)
 2689              		.loc 1 877 3 view .LVU592
 878:Core/Src/main.c ****   {
 879:Core/Src/main.c ****   }
 2690              		.loc 1 879 3 view .LVU593
 877:Core/Src/main.c ****   while (1)
 2691              		.loc 1 877 9 view .LVU594
 2692 0002 FEE7     		b	.L178
 2693              		.cfi_endproc
 2694              	.LFE261:
 2696              		.section	.text.SystemClock_Config,"ax",%progbits
 2697              		.align	1
 2698              		.global	SystemClock_Config
 2699              		.syntax unified
 2700              		.thumb
 2701              		.thumb_func
 2703              	SystemClock_Config:
 2704              	.LFB243:
 233:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2705              		.loc 1 233 1 view -0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 80
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709 0000 00B5     		push	{lr}
 2710              	.LCFI39:
 2711              		.cfi_def_cfa_offset 4
 2712              		.cfi_offset 14, -4
 2713 0002 95B0     		sub	sp, sp, #84
 2714              	.LCFI40:
 2715              		.cfi_def_cfa_offset 88
 234:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2716              		.loc 1 234 3 view .LVU596
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 90


 234:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2717              		.loc 1 234 22 is_stmt 0 view .LVU597
 2718 0004 3022     		movs	r2, #48
 2719 0006 0021     		movs	r1, #0
 2720 0008 08A8     		add	r0, sp, #32
 2721 000a FFF7FEFF 		bl	memset
 2722              	.LVL248:
 235:Core/Src/main.c **** 
 2723              		.loc 1 235 3 is_stmt 1 view .LVU598
 235:Core/Src/main.c **** 
 2724              		.loc 1 235 22 is_stmt 0 view .LVU599
 2725 000e 0023     		movs	r3, #0
 2726 0010 0393     		str	r3, [sp, #12]
 2727 0012 0493     		str	r3, [sp, #16]
 2728 0014 0593     		str	r3, [sp, #20]
 2729 0016 0693     		str	r3, [sp, #24]
 2730 0018 0793     		str	r3, [sp, #28]
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2731              		.loc 1 239 3 is_stmt 1 view .LVU600
 2732              	.LBB47:
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2733              		.loc 1 239 3 view .LVU601
 2734 001a 0193     		str	r3, [sp, #4]
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2735              		.loc 1 239 3 view .LVU602
 2736 001c 1F4A     		ldr	r2, .L185
 2737 001e 116C     		ldr	r1, [r2, #64]
 2738 0020 41F08051 		orr	r1, r1, #268435456
 2739 0024 1164     		str	r1, [r2, #64]
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2740              		.loc 1 239 3 view .LVU603
 2741 0026 126C     		ldr	r2, [r2, #64]
 2742 0028 02F08052 		and	r2, r2, #268435456
 2743 002c 0192     		str	r2, [sp, #4]
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2744              		.loc 1 239 3 view .LVU604
 2745 002e 019A     		ldr	r2, [sp, #4]
 2746              	.LBE47:
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2747              		.loc 1 239 3 view .LVU605
 240:Core/Src/main.c **** 
 2748              		.loc 1 240 3 view .LVU606
 2749              	.LBB48:
 240:Core/Src/main.c **** 
 2750              		.loc 1 240 3 view .LVU607
 2751 0030 0293     		str	r3, [sp, #8]
 240:Core/Src/main.c **** 
 2752              		.loc 1 240 3 view .LVU608
 2753 0032 1B4B     		ldr	r3, .L185+4
 2754 0034 1A68     		ldr	r2, [r3]
 2755 0036 42F48042 		orr	r2, r2, #16384
 2756 003a 1A60     		str	r2, [r3]
 240:Core/Src/main.c **** 
 2757              		.loc 1 240 3 view .LVU609
 2758 003c 1B68     		ldr	r3, [r3]
 2759 003e 03F48043 		and	r3, r3, #16384
 2760 0042 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 91


 240:Core/Src/main.c **** 
 2761              		.loc 1 240 3 view .LVU610
 2762 0044 029B     		ldr	r3, [sp, #8]
 2763              	.LBE48:
 240:Core/Src/main.c **** 
 2764              		.loc 1 240 3 view .LVU611
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2765              		.loc 1 245 3 view .LVU612
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2766              		.loc 1 245 36 is_stmt 0 view .LVU613
 2767 0046 0123     		movs	r3, #1
 2768 0048 0893     		str	r3, [sp, #32]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2769              		.loc 1 246 3 is_stmt 1 view .LVU614
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2770              		.loc 1 246 30 is_stmt 0 view .LVU615
 2771 004a 4FF48033 		mov	r3, #65536
 2772 004e 0993     		str	r3, [sp, #36]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2773              		.loc 1 247 3 is_stmt 1 view .LVU616
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2774              		.loc 1 247 34 is_stmt 0 view .LVU617
 2775 0050 0223     		movs	r3, #2
 2776 0052 0E93     		str	r3, [sp, #56]
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2777              		.loc 1 248 3 is_stmt 1 view .LVU618
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 2778              		.loc 1 248 35 is_stmt 0 view .LVU619
 2779 0054 4FF48002 		mov	r2, #4194304
 2780 0058 0F92     		str	r2, [sp, #60]
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 2781              		.loc 1 249 3 is_stmt 1 view .LVU620
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 2782              		.loc 1 249 30 is_stmt 0 view .LVU621
 2783 005a 0422     		movs	r2, #4
 2784 005c 1092     		str	r2, [sp, #64]
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2785              		.loc 1 250 3 is_stmt 1 view .LVU622
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2786              		.loc 1 250 30 is_stmt 0 view .LVU623
 2787 005e 4822     		movs	r2, #72
 2788 0060 1192     		str	r2, [sp, #68]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 2789              		.loc 1 251 3 is_stmt 1 view .LVU624
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 2790              		.loc 1 251 30 is_stmt 0 view .LVU625
 2791 0062 1293     		str	r3, [sp, #72]
 252:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2792              		.loc 1 252 3 is_stmt 1 view .LVU626
 252:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2793              		.loc 1 252 30 is_stmt 0 view .LVU627
 2794 0064 0323     		movs	r3, #3
 2795 0066 1393     		str	r3, [sp, #76]
 253:Core/Src/main.c ****   {
 2796              		.loc 1 253 3 is_stmt 1 view .LVU628
 253:Core/Src/main.c ****   {
 2797              		.loc 1 253 7 is_stmt 0 view .LVU629
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 92


 2798 0068 08A8     		add	r0, sp, #32
 2799 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 2800              	.LVL249:
 253:Core/Src/main.c ****   {
 2801              		.loc 1 253 6 discriminator 1 view .LVU630
 2802 006e 80B9     		cbnz	r0, .L183
 260:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2803              		.loc 1 260 3 is_stmt 1 view .LVU631
 260:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2804              		.loc 1 260 31 is_stmt 0 view .LVU632
 2805 0070 0F23     		movs	r3, #15
 2806 0072 0393     		str	r3, [sp, #12]
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2807              		.loc 1 262 3 is_stmt 1 view .LVU633
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2808              		.loc 1 262 34 is_stmt 0 view .LVU634
 2809 0074 0221     		movs	r1, #2
 2810 0076 0491     		str	r1, [sp, #16]
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2811              		.loc 1 263 3 is_stmt 1 view .LVU635
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2812              		.loc 1 263 35 is_stmt 0 view .LVU636
 2813 0078 0023     		movs	r3, #0
 2814 007a 0593     		str	r3, [sp, #20]
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2815              		.loc 1 264 3 is_stmt 1 view .LVU637
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2816              		.loc 1 264 36 is_stmt 0 view .LVU638
 2817 007c 4FF48052 		mov	r2, #4096
 2818 0080 0692     		str	r2, [sp, #24]
 265:Core/Src/main.c **** 
 2819              		.loc 1 265 3 is_stmt 1 view .LVU639
 265:Core/Src/main.c **** 
 2820              		.loc 1 265 36 is_stmt 0 view .LVU640
 2821 0082 0793     		str	r3, [sp, #28]
 267:Core/Src/main.c ****   {
 2822              		.loc 1 267 3 is_stmt 1 view .LVU641
 267:Core/Src/main.c ****   {
 2823              		.loc 1 267 7 is_stmt 0 view .LVU642
 2824 0084 03A8     		add	r0, sp, #12
 2825 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2826              	.LVL250:
 267:Core/Src/main.c ****   {
 2827              		.loc 1 267 6 discriminator 1 view .LVU643
 2828 008a 20B9     		cbnz	r0, .L184
 271:Core/Src/main.c **** 
 2829              		.loc 1 271 1 view .LVU644
 2830 008c 15B0     		add	sp, sp, #84
 2831              	.LCFI41:
 2832              		.cfi_remember_state
 2833              		.cfi_def_cfa_offset 4
 2834              		@ sp needed
 2835 008e 5DF804FB 		ldr	pc, [sp], #4
 2836              	.L183:
 2837              	.LCFI42:
 2838              		.cfi_restore_state
 255:Core/Src/main.c ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 93


 2839              		.loc 1 255 5 is_stmt 1 view .LVU645
 2840 0092 FFF7FEFF 		bl	Error_Handler
 2841              	.LVL251:
 2842              	.L184:
 269:Core/Src/main.c ****   }
 2843              		.loc 1 269 5 view .LVU646
 2844 0096 FFF7FEFF 		bl	Error_Handler
 2845              	.LVL252:
 2846              	.L186:
 2847 009a 00BF     		.align	2
 2848              	.L185:
 2849 009c 00380240 		.word	1073887232
 2850 00a0 00700040 		.word	1073770496
 2851              		.cfi_endproc
 2852              	.LFE243:
 2854              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2855              		.align	2
 2856              	.LC38:
 2857 0000 53797374 		.ascii	"System Initialized\015\000"
 2857      656D2049 
 2857      6E697469 
 2857      616C697A 
 2857      65640D00 
 2858              		.section	.text.main,"ax",%progbits
 2859              		.align	1
 2860              		.global	main
 2861              		.syntax unified
 2862              		.thumb
 2863              		.thumb_func
 2865              	main:
 2866              	.LFB242:
 164:Core/Src/main.c **** 
 2867              		.loc 1 164 1 view -0
 2868              		.cfi_startproc
 2869              		@ Volatile: function does not return.
 2870              		@ args = 0, pretend = 0, frame = 0
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872 0000 08B5     		push	{r3, lr}
 2873              	.LCFI43:
 2874              		.cfi_def_cfa_offset 8
 2875              		.cfi_offset 3, -8
 2876              		.cfi_offset 14, -4
 173:Core/Src/main.c **** 
 2877              		.loc 1 173 3 view .LVU648
 2878 0002 FFF7FEFF 		bl	HAL_Init
 2879              	.LVL253:
 180:Core/Src/main.c **** 
 2880              		.loc 1 180 3 view .LVU649
 2881 0006 FFF7FEFF 		bl	SystemClock_Config
 2882              	.LVL254:
 187:Core/Src/main.c ****   MX_ADC1_Init();
 2883              		.loc 1 187 3 view .LVU650
 2884 000a FFF7FEFF 		bl	MX_GPIO_Init
 2885              	.LVL255:
 188:Core/Src/main.c ****   MX_I2C1_Init();
 2886              		.loc 1 188 3 view .LVU651
 2887 000e FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 94


 2888              	.LVL256:
 189:Core/Src/main.c ****   MX_TIM1_Init();
 2889              		.loc 1 189 3 view .LVU652
 2890 0012 FFF7FEFF 		bl	MX_I2C1_Init
 2891              	.LVL257:
 190:Core/Src/main.c ****   MX_TIM2_Init();
 2892              		.loc 1 190 3 view .LVU653
 2893 0016 FFF7FEFF 		bl	MX_TIM1_Init
 2894              	.LVL258:
 191:Core/Src/main.c ****   MX_UART4_Init();
 2895              		.loc 1 191 3 view .LVU654
 2896 001a FFF7FEFF 		bl	MX_TIM2_Init
 2897              	.LVL259:
 192:Core/Src/main.c ****   MX_UART5_Init();
 2898              		.loc 1 192 3 view .LVU655
 2899 001e FFF7FEFF 		bl	MX_UART4_Init
 2900              	.LVL260:
 193:Core/Src/main.c ****   MX_USART1_UART_Init();
 2901              		.loc 1 193 3 view .LVU656
 2902 0022 FFF7FEFF 		bl	MX_UART5_Init
 2903              	.LVL261:
 194:Core/Src/main.c ****   MX_USART2_UART_Init();
 2904              		.loc 1 194 3 view .LVU657
 2905 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 2906              	.LVL262:
 195:Core/Src/main.c ****   MX_USART3_UART_Init();
 2907              		.loc 1 195 3 view .LVU658
 2908 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 2909              	.LVL263:
 196:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 2910              		.loc 1 196 3 view .LVU659
 2911 002e FFF7FEFF 		bl	MX_USART3_UART_Init
 2912              	.LVL264:
 197:Core/Src/main.c ****   MX_TIM4_Init();
 2913              		.loc 1 197 3 view .LVU660
 2914 0032 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 2915              	.LVL265:
 198:Core/Src/main.c ****   MX_TIM3_Init();
 2916              		.loc 1 198 3 view .LVU661
 2917 0036 FFF7FEFF 		bl	MX_TIM4_Init
 2918              	.LVL266:
 199:Core/Src/main.c ****   MX_USART6_UART_Init();
 2919              		.loc 1 199 3 view .LVU662
 2920 003a FFF7FEFF 		bl	MX_TIM3_Init
 2921              	.LVL267:
 200:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2922              		.loc 1 200 3 view .LVU663
 2923 003e FFF7FEFF 		bl	MX_USART6_UART_Init
 2924              	.LVL268:
 202:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 2925              		.loc 1 202 3 view .LVU664
 2926 0042 0122     		movs	r2, #1
 2927 0044 1049     		ldr	r1, .L190
 2928 0046 1148     		ldr	r0, .L190+4
 2929 0048 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2930              	.LVL269:
 203:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 95


 2931              		.loc 1 203 3 view .LVU665
 2932 004c 0122     		movs	r2, #1
 2933 004e 1049     		ldr	r1, .L190+8
 2934 0050 1048     		ldr	r0, .L190+12
 2935 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2936              	.LVL270:
 204:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 2937              		.loc 1 204 3 view .LVU666
 2938 0056 0122     		movs	r2, #1
 2939 0058 0F49     		ldr	r1, .L190+16
 2940 005a 1048     		ldr	r0, .L190+20
 2941 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 2942              	.LVL271:
 205:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 2943              		.loc 1 205 3 view .LVU667
 2944 0060 0122     		movs	r2, #1
 2945 0062 0F49     		ldr	r1, .L190+24
 2946 0064 0F48     		ldr	r0, .L190+28
 2947 0066 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2948              	.LVL272:
 206:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 2949              		.loc 1 206 3 view .LVU668
 2950 006a 0122     		movs	r2, #1
 2951 006c 0E49     		ldr	r1, .L190+32
 2952 006e 0F48     		ldr	r0, .L190+36
 2953 0070 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2954              	.LVL273:
 207:Core/Src/main.c ****   printf("System Initialized\r\n");
 2955              		.loc 1 207 3 view .LVU669
 2956 0074 0122     		movs	r2, #1
 2957 0076 0E49     		ldr	r1, .L190+40
 2958 0078 0E48     		ldr	r0, .L190+44
 2959 007a FFF7FEFF 		bl	HAL_UART_Receive_IT
 2960              	.LVL274:
 208:Core/Src/main.c **** 
 2961              		.loc 1 208 3 view .LVU670
 2962 007e 0E48     		ldr	r0, .L190+48
 2963 0080 FFF7FEFF 		bl	puts
 2964              	.LVL275:
 2965              	.L188:
 215:Core/Src/main.c ****   {
 2966              		.loc 1 215 3 view .LVU671
 224:Core/Src/main.c ****   /* USER CODE END 3 */
 2967              		.loc 1 224 3 view .LVU672
 215:Core/Src/main.c ****   {
 2968              		.loc 1 215 9 view .LVU673
 2969 0084 FEE7     		b	.L188
 2970              	.L191:
 2971 0086 00BF     		.align	2
 2972              	.L190:
 2973 0088 00000000 		.word	rx_byte
 2974 008c 00000000 		.word	huart1
 2975 0090 00000000 		.word	rx_byte1
 2976 0094 00000000 		.word	huart6
 2977 0098 00000000 		.word	rx_byte2
 2978 009c 00000000 		.word	huart2
 2979 00a0 00000000 		.word	rx_byte3
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 96


 2980 00a4 00000000 		.word	huart3
 2981 00a8 00000000 		.word	rx_byte4
 2982 00ac 00000000 		.word	huart4
 2983 00b0 00000000 		.word	rx_byte5
 2984 00b4 00000000 		.word	huart5
 2985 00b8 00000000 		.word	.LC38
 2986              		.cfi_endproc
 2987              	.LFE242:
 2989              		.global	prev_actuator
 2990              		.section	.bss.prev_actuator,"aw",%nobits
 2991              		.align	2
 2994              	prev_actuator:
 2995 0000 00000000 		.space	4
 2996              		.global	prev_joint5
 2997              		.section	.bss.prev_joint5,"aw",%nobits
 2998              		.align	2
 3001              	prev_joint5:
 3002 0000 00000000 		.space	4
 3003              		.global	prev_joint4
 3004              		.section	.bss.prev_joint4,"aw",%nobits
 3005              		.align	2
 3008              	prev_joint4:
 3009 0000 00000000 		.space	4
 3010              		.global	prev_joint3
 3011              		.section	.bss.prev_joint3,"aw",%nobits
 3012              		.align	2
 3015              	prev_joint3:
 3016 0000 00000000 		.space	4
 3017              		.global	prev_joint2
 3018              		.section	.bss.prev_joint2,"aw",%nobits
 3019              		.align	2
 3022              	prev_joint2:
 3023 0000 00000000 		.space	4
 3024              		.global	prev_joint1
 3025              		.section	.bss.prev_joint1,"aw",%nobits
 3026              		.align	2
 3029              	prev_joint1:
 3030 0000 00000000 		.space	4
 3031              		.global	ledFlag
 3032              		.section	.bss.ledFlag,"aw",%nobits
 3033              		.align	2
 3036              	ledFlag:
 3037 0000 00000000 		.space	4
 3038              		.global	actuator
 3039              		.section	.bss.actuator,"aw",%nobits
 3040              		.align	2
 3043              	actuator:
 3044 0000 00000000 		.space	4
 3045              		.global	joint5
 3046              		.section	.bss.joint5,"aw",%nobits
 3047              		.align	2
 3050              	joint5:
 3051 0000 00000000 		.space	4
 3052              		.global	joint4
 3053              		.section	.bss.joint4,"aw",%nobits
 3054              		.align	2
 3057              	joint4:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 97


 3058 0000 00000000 		.space	4
 3059              		.global	joint3
 3060              		.section	.bss.joint3,"aw",%nobits
 3061              		.align	2
 3064              	joint3:
 3065 0000 00000000 		.space	4
 3066              		.global	joint2
 3067              		.section	.bss.joint2,"aw",%nobits
 3068              		.align	2
 3071              	joint2:
 3072 0000 00000000 		.space	4
 3073              		.global	joint1
 3074              		.section	.bss.joint1,"aw",%nobits
 3075              		.align	2
 3078              	joint1:
 3079 0000 00000000 		.space	4
 3080              		.global	previous_string
 3081              		.section	.bss.previous_string,"aw",%nobits
 3082              		.align	2
 3085              	previous_string:
 3086 0000 00000000 		.space	256
 3086      00000000 
 3086      00000000 
 3086      00000000 
 3086      00000000 
 3087              		.global	received_string
 3088              		.section	.bss.received_string,"aw",%nobits
 3089              		.align	2
 3092              	received_string:
 3093 0000 00000000 		.space	256
 3093      00000000 
 3093      00000000 
 3093      00000000 
 3093      00000000 
 3094              		.global	uart_received
 3095              		.section	.bss.uart_received,"aw",%nobits
 3098              	uart_received:
 3099 0000 00       		.space	1
 3100              		.global	buffer_index
 3101              		.section	.bss.buffer_index,"aw",%nobits
 3102              		.align	1
 3105              	buffer_index:
 3106 0000 0000     		.space	2
 3107              		.global	uart_buffer
 3108              		.section	.bss.uart_buffer,"aw",%nobits
 3109              		.align	2
 3112              	uart_buffer:
 3113 0000 00000000 		.space	256
 3113      00000000 
 3113      00000000 
 3113      00000000 
 3113      00000000 
 3114              		.global	rx_byte5
 3115              		.section	.bss.rx_byte5,"aw",%nobits
 3118              	rx_byte5:
 3119 0000 00       		.space	1
 3120              		.global	rx_byte4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 98


 3121              		.section	.bss.rx_byte4,"aw",%nobits
 3124              	rx_byte4:
 3125 0000 00       		.space	1
 3126              		.global	rx_byte3
 3127              		.section	.bss.rx_byte3,"aw",%nobits
 3130              	rx_byte3:
 3131 0000 00       		.space	1
 3132              		.global	rx_byte2
 3133              		.section	.bss.rx_byte2,"aw",%nobits
 3136              	rx_byte2:
 3137 0000 00       		.space	1
 3138              		.global	rx_byte1
 3139              		.section	.bss.rx_byte1,"aw",%nobits
 3142              	rx_byte1:
 3143 0000 00       		.space	1
 3144              		.global	rx_byte
 3145              		.section	.bss.rx_byte,"aw",%nobits
 3148              	rx_byte:
 3149 0000 00       		.space	1
 3150              		.text
 3151              	.Letext0:
 3152              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 3153              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3154              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3155              		.file 6 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 3156              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3157              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3158              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3159              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3160              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3161              		.file 12 "Core/Inc/usart.h"
 3162              		.file 13 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 3163              		.file 14 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 3164              		.file 15 "Core/Inc/tim.h"
 3165              		.file 16 "Core/Inc/usb_otg.h"
 3166              		.file 17 "Core/Inc/i2c.h"
 3167              		.file 18 "Core/Inc/adc.h"
 3168              		.file 19 "Core/Inc/gpio.h"
 3169              		.file 20 "<built-in>"
 3170              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 99


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:68     .text.__io_putchar_usart2:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:74     .text.__io_putchar_usart2:00000000 __io_putchar_usart2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:110    .text.__io_putchar_usart2:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:115    .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:121    .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:157    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:162    .text.__io_putchar_uart4:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:168    .text.__io_putchar_uart4:00000000 __io_putchar_uart4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:204    .text.__io_putchar_uart4:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:209    .text.__io_putchar_uart5:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:215    .text.__io_putchar_uart5:00000000 __io_putchar_uart5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:251    .text.__io_putchar_uart5:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:256    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:262    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:298    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:303    .text.ProcessReceivedJoint:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:309    .text.ProcessReceivedJoint:00000000 ProcessReceivedJoint
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:323    .rodata.Joint1Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:327    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:333    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:398    .text.Joint1Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:403    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:407    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:413    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:478    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:483    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:489    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:554    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:559    .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:565    .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:630    .text.Joint4Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:635    .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:641    .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:706    .text.Joint5Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:711    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:717    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:779    .text.HomeSet:0000003c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3078   .bss.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3071   .bss.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3064   .bss.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3057   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3050   .bss.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3043   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:789    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:895    .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:901    .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1407   .text.ProcessReceivedString:0000028c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3029   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3022   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3015   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3008   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3001   .bss.prev_joint5:00000000 prev_joint5
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 100


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2994   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1449   .text.ProcessReceivedString:0000032c $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1804   .text.ProcessReceivedString:0000047c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3036   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1826   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1830   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:1836   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2315   .text.HAL_UART_RxCpltCallback:0000024c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3105   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3118   .bss.rx_byte5:00000000 rx_byte5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3112   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3148   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3092   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3085   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3142   .bss.rx_byte1:00000000 rx_byte1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3136   .bss.rx_byte2:00000000 rx_byte2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3130   .bss.rx_byte3:00000000 rx_byte3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2340   .text.HAL_UART_RxCpltCallback:000002a4 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2606   .text.HAL_UART_RxCpltCallback:000003f0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3124   .bss.rx_byte4:00000000 rx_byte4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2618   .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2624   .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2638   .text.ActuatorStatus:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2644   .text.ActuatorStatus:00000000 ActuatorStatus
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2659   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2665   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2697   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2703   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2849   .text.SystemClock_Config:0000009c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2855   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2859   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2865   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2973   .text.main:00000088 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2991   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:2998   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3005   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3012   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3019   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3026   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3033   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3040   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3047   .bss.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3054   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3061   .bss.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3068   .bss.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3075   .bss.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3082   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3089   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3098   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3099   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3102   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3109   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3119   .bss.rx_byte5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3125   .bss.rx_byte4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3131   .bss.rx_byte3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3137   .bss.rx_byte2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3143   .bss.rx_byte1:00000000 $d
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s 			page 101


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmRlMfl.s:3149   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
huart3
huart4
huart5
huart6
snprintf
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_UART4_Init
MX_UART5_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM4_Init
MX_TIM3_Init
MX_USART6_UART_Init
