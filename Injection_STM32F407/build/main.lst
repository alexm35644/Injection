ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB244:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_otg.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 0
  44:Core/Src/main.c **** #define JOINT2_HOME 90
  45:Core/Src/main.c **** #define JOINT3_HOME 180
  46:Core/Src/main.c **** #define JOINT4_HOME 0
  47:Core/Src/main.c **** #define JOINT5_HOME 40
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** #define INJECT 1
  50:Core/Src/main.c **** #define STOP 0
  51:Core/Src/main.c **** #define RETRACT 2
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** #define MAIN_UART &huart1
  55:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART1
  56:Core/Src/main.c **** #define JOINT1_UART &huart6
  57:Core/Src/main.c **** #define JOINT1_UART_INSTANCE USART6
  58:Core/Src/main.c **** #define JOINT2_UART &huart2
  59:Core/Src/main.c **** #define JOINT2_UART_INSTANCE USART2
  60:Core/Src/main.c **** #define JOINT3_UART &huart3
  61:Core/Src/main.c **** #define JOINT3_UART_INSTANCE USART3
  62:Core/Src/main.c **** #define JOINT4_UART &huart4
  63:Core/Src/main.c **** #define JOINT4_UART_INSTANCE UART4
  64:Core/Src/main.c **** #define JOINT5_UART &huart5
  65:Core/Src/main.c **** #define JOINT5_UART_INSTANCE UART5
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PD */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN PM */
  72:Core/Src/main.c **** #define DEBUG
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** #ifdef DEBUG
  75:Core/Src/main.c ****   #define DEBUG_PRINT(x) Serial.print(x)
  76:Core/Src/main.c ****   #define DEBUG_PRINTLN(x) Serial.println(x)
  77:Core/Src/main.c ****   #define DEBUG_DELAY(x) delay(x)
  78:Core/Src/main.c **** #else
  79:Core/Src/main.c ****   #define DEBUG_PRINT(x)
  80:Core/Src/main.c ****   #define DEBUG_PRINTLN(x)
  81:Core/Src/main.c ****   #define DEBUG_DELAY(x)
  82:Core/Src/main.c **** #endif
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PM */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE BEGIN PV */
  89:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  90:Core/Src/main.c **** volatile uint8_t rx_byte;                         // Main UART
  91:Core/Src/main.c **** volatile uint8_t rx_byte1;                        // Joint 1
  92:Core/Src/main.c **** volatile uint8_t rx_byte2;                        // Joint 2
  93:Core/Src/main.c **** volatile uint8_t rx_byte3;                        // Joint 3
  94:Core/Src/main.c **** volatile uint8_t rx_byte4;                        // Joint 4
  95:Core/Src/main.c **** volatile uint8_t rx_byte5;                        // Joint 5
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  98:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
 101:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
 102:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** int joint1 = JOINT1_HOME;
 105:Core/Src/main.c **** int joint2 = JOINT2_HOME;
 106:Core/Src/main.c **** int joint3 = JOINT3_HOME;
 107:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
 108:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
 109:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
 110:Core/Src/main.c **** int ledFlag = 0; 
 111:Core/Src/main.c **** int injectFlag = RETRACT; 
 112:Core/Src/main.c **** volatile uint8_t buttonState = 0; // Global variable to track the button state
 113:Core/Src/main.c **** volatile uint8_t footPedalFlag = 0;   // Global footpedal flag 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** int injectionLimit = 2600;
 116:Core/Src/main.c **** int retractionLimit = 4050;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** uint32_t buttonPressTime = 0;
 122:Core/Src/main.c **** int buttonHeld = 0;
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* USER CODE END PV */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 128:Core/Src/main.c **** void SystemClock_Config(void);
 129:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 130:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART2 int __io_putchar_usart2(int ch)
 133:Core/Src/main.c **** #define printf_joint2(...) do { \
 134:Core/Src/main.c ****     char buffer[256]; \
 135:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 136:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 137:Core/Src/main.c ****         __io_putchar_usart2(buffer[i]); \
 138:Core/Src/main.c ****     } \
 139:Core/Src/main.c **** } while (0)
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
 142:Core/Src/main.c **** #define printf_joint3(...) do { \
 143:Core/Src/main.c ****     char buffer[256]; \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 4


 144:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 145:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 146:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
 147:Core/Src/main.c ****     } \
 148:Core/Src/main.c **** } while (0)
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART4 int __io_putchar_uart4(int ch)
 151:Core/Src/main.c **** #define printf_joint4(...) do { \
 152:Core/Src/main.c ****     char buffer[256]; \
 153:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 154:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 155:Core/Src/main.c ****         __io_putchar_uart4(buffer[i]); \
 156:Core/Src/main.c ****     } \
 157:Core/Src/main.c **** } while (0)
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_UART5 int __io_putchar_uart5(int ch)
 160:Core/Src/main.c **** #define printf_joint5(...) do { \
 161:Core/Src/main.c ****     char buffer[256]; \
 162:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 163:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 164:Core/Src/main.c ****         __io_putchar_uart5(buffer[i]); \
 165:Core/Src/main.c ****     } \
 166:Core/Src/main.c **** } while (0)
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
 169:Core/Src/main.c **** #define printf_joint1(...) do { \
 170:Core/Src/main.c ****     char buffer[256]; \
 171:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 172:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 173:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 174:Core/Src/main.c ****     } \
 175:Core/Src/main.c **** } while (0)
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** void Joint1Set(int theta);
 178:Core/Src/main.c **** void Joint2Set(int theta);
 179:Core/Src/main.c **** void Joint3Set(int theta);
 180:Core/Src/main.c **** void Joint4Set(int theta);
 181:Core/Src/main.c **** void Joint5Set(int theta);
 182:Core/Src/main.c **** void ActuatorSet(int theta);
 183:Core/Src/main.c **** int ActuatorStatus();
 184:Core/Src/main.c **** void homeSet(); 
 185:Core/Src/main.c **** uint16_t Read_ADC_PA0();
 186:Core/Src/main.c **** void inject(int direction, int adc);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /* USER CODE END PFP */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 191:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /* USER CODE END 0 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief  The application entry point.
 197:Core/Src/main.c ****   * @retval int
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** int main(void)
 200:Core/Src/main.c **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 5


 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 209:Core/Src/main.c ****   HAL_Init();
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END Init */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* Configure the system clock */
 216:Core/Src/main.c ****   SystemClock_Config();
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END SysInit */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* Initialize all configured peripherals */
 223:Core/Src/main.c ****   MX_GPIO_Init();
 224:Core/Src/main.c ****   MX_ADC1_Init();
 225:Core/Src/main.c ****   MX_I2C1_Init();
 226:Core/Src/main.c ****   MX_TIM1_Init();
 227:Core/Src/main.c ****   MX_TIM2_Init();
 228:Core/Src/main.c ****   MX_UART4_Init();
 229:Core/Src/main.c ****   MX_UART5_Init();
 230:Core/Src/main.c ****   MX_USART1_UART_Init();
 231:Core/Src/main.c ****   MX_USART2_UART_Init();
 232:Core/Src/main.c ****   MX_USART3_UART_Init();
 233:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 234:Core/Src/main.c ****   MX_TIM4_Init();
 235:Core/Src/main.c ****   MX_TIM3_Init();
 236:Core/Src/main.c ****   MX_USART6_UART_Init();
 237:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 238:Core/Src/main.c ****   
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   printf("System Initialized\r\n");
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1); // Start PWM on PD12
 243:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);  // 50% duty cycle on PD12
 246:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   uint16_t adcValue = Read_ADC_PA0();
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   HomeSet();
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 253:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 254:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 255:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 256:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 257:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 6


 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* Infinite loop */
 263:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 264:Core/Src/main.c ****   while (1)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     /* USER CODE END WHILE */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 269:Core/Src/main.c ****     uint16_t adcValue = Read_ADC_PA0();
 270:Core/Src/main.c ****     HAL_Delay(1);
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     // Joint4 Button
 273:Core/Src/main.c ****     // if(buttonState){
 274:Core/Src/main.c ****     //   Joint4Set(28);
 275:Core/Src/main.c ****     //   buttonState = 0; 
 276:Core/Src/main.c ****     // } 
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****     // Foot pedal 
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(USER2_GPIO_Port, USER2_Pin)) { 
 281:Core/Src/main.c ****       injectSequence();
 282:Core/Src/main.c ****       if (!buttonHeld) { 
 283:Core/Src/main.c ****           buttonHeld = 1; 
 284:Core/Src/main.c ****           buttonPressTime = HAL_GetTick(); // Record the press time
 285:Core/Src/main.c ****           injectFlag = RETRACT; 
 286:Core/Src/main.c ****           inject(RETRACT, adcValue);
 287:Core/Src/main.c ****       } 
 288:Core/Src/main.c ****       
 289:Core/Src/main.c ****       if (HAL_GetTick() - buttonPressTime >= 4000) { // Check if held for 1 second
 290:Core/Src/main.c ****         injectFlag = INJECT; 
 291:Core/Src/main.c ****         inject(INJECT, adcValue);
 292:Core/Src/main.c ****       }
 293:Core/Src/main.c ****   } else {
 294:Core/Src/main.c ****       buttonHeld = 0;
 295:Core/Src/main.c ****       buttonPressTime = 0; // Reset timer
 296:Core/Src/main.c ****       HomeSet();
 297:Core/Src/main.c ****       injectFlag = RETRACT; 
 298:Core/Src/main.c ****       inject(RETRACT, adcValue);
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c ****     
 301:Core/Src/main.c ****     
 302:Core/Src/main.c ****     
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****     
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   /* USER CODE END 3 */
 308:Core/Src/main.c **** }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****   * @brief System Clock Configuration
 312:Core/Src/main.c ****   * @retval None
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 7


 315:Core/Src/main.c **** {
 316:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 317:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 322:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 325:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 328:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 330:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 331:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 332:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 333:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 334:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 335:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 343:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 344:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 345:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 346:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 347:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c **** }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** /**
 358:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 359:Core/Src/main.c ****   * @retval None
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 362:Core/Src/main.c ****  {
  30              		.loc 1 362 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 362 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 8


  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 363:Core/Src/main.c ****    /* Place your implementation of fputc here */
 364:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 365:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 365 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 365 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 366:Core/Src/main.c ****  
 367:Core/Src/main.c ****    return ch;
  52              		.loc 1 367 4 is_stmt 1 view .LVU4
 368:Core/Src/main.c ****  }
  53              		.loc 1 368 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart1
  64              		.cfi_endproc
  65              	.LFE244:
  67              		.section	.text.__io_putchar_usart2,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart2
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart2:
  75              	.LVL3:
  76              	.LFB245:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART2{
  77              		.loc 1 370 26 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 370 26 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 9


 371:Core/Src/main.c ****     HAL_UART_Transmit(JOINT2_UART, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 371 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 371 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****       return ch;
  99              		.loc 1 373 7 is_stmt 1 view .LVU10
 374:Core/Src/main.c ****  }
 100              		.loc 1 374 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart2
 111              		.cfi_endproc
 112              	.LFE245:
 114              		.section	.text.__io_putchar_usart3,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart3
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart3:
 122              	.LVL6:
 123              	.LFB246:
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 377:Core/Src/main.c ****  {
 124              		.loc 1 377 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 377 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 378:Core/Src/main.c ****     /* Place your implementation of fputc here */
 379:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 380:Core/Src/main.c ****     HAL_UART_Transmit(JOINT3_UART, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 380 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 10


 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 380 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****     return ch;
 146              		.loc 1 382 5 is_stmt 1 view .LVU16
 383:Core/Src/main.c ****  }
 147              		.loc 1 383 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 001c 00000000 		.word	huart3
 158              		.cfi_endproc
 159              	.LFE246:
 161              		.section	.text.__io_putchar_uart4,"ax",%progbits
 162              		.align	1
 163              		.global	__io_putchar_uart4
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	__io_putchar_uart4:
 169              	.LVL9:
 170              	.LFB247:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART4
 386:Core/Src/main.c ****  {
 171              		.loc 1 386 2 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 386 2 is_stmt 0 view .LVU19
 176 0000 00B5     		push	{lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              	.LCFI10:
 182              		.cfi_def_cfa_offset 16
 183 0004 0190     		str	r0, [sp, #4]
 387:Core/Src/main.c ****     /* Place your implementation of fputc here */
 388:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 389:Core/Src/main.c ****     HAL_UART_Transmit(JOINT4_UART, (uint8_t *)&ch, 1, 0xFFFF);
 184              		.loc 1 389 5 is_stmt 1 view .LVU20
 185 0006 4FF6FF73 		movw	r3, #65535
 186 000a 0122     		movs	r2, #1
 187 000c 01A9     		add	r1, sp, #4
 188 000e 0348     		ldr	r0, .L15
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 11


 189              	.LVL10:
 190              		.loc 1 389 5 is_stmt 0 view .LVU21
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 192              	.LVL11:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****     return ch;
 193              		.loc 1 391 5 is_stmt 1 view .LVU22
 392:Core/Src/main.c ****  }
 194              		.loc 1 392 2 is_stmt 0 view .LVU23
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI11:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L16:
 202              		.align	2
 203              	.L15:
 204 001c 00000000 		.word	huart4
 205              		.cfi_endproc
 206              	.LFE247:
 208              		.section	.text.__io_putchar_uart5,"ax",%progbits
 209              		.align	1
 210              		.global	__io_putchar_uart5
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	__io_putchar_uart5:
 216              	.LVL12:
 217              	.LFB248:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_UART5
 395:Core/Src/main.c ****  {
 218              		.loc 1 395 2 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 395 2 is_stmt 0 view .LVU25
 223 0000 00B5     		push	{lr}
 224              	.LCFI12:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI13:
 229              		.cfi_def_cfa_offset 16
 230 0004 0190     		str	r0, [sp, #4]
 396:Core/Src/main.c ****     /* Place your implementation of fputc here */
 397:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 398:Core/Src/main.c ****     HAL_UART_Transmit(JOINT5_UART, (uint8_t *)&ch, 1, 0xFFFF);
 231              		.loc 1 398 5 is_stmt 1 view .LVU26
 232 0006 4FF6FF73 		movw	r3, #65535
 233 000a 0122     		movs	r2, #1
 234 000c 01A9     		add	r1, sp, #4
 235 000e 0348     		ldr	r0, .L19
 236              	.LVL13:
 237              		.loc 1 398 5 is_stmt 0 view .LVU27
 238 0010 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 12


 239              	.LVL14:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****     return ch;
 240              		.loc 1 400 5 is_stmt 1 view .LVU28
 401:Core/Src/main.c ****  }
 241              		.loc 1 401 2 is_stmt 0 view .LVU29
 242 0014 0198     		ldr	r0, [sp, #4]
 243 0016 03B0     		add	sp, sp, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246              		@ sp needed
 247 0018 5DF804FB 		ldr	pc, [sp], #4
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 001c 00000000 		.word	huart5
 252              		.cfi_endproc
 253              	.LFE248:
 255              		.section	.text.__io_putchar_usart6,"ax",%progbits
 256              		.align	1
 257              		.global	__io_putchar_usart6
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	__io_putchar_usart6:
 263              	.LVL15:
 264              	.LFB249:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 404:Core/Src/main.c ****  {
 265              		.loc 1 404 2 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 404 2 is_stmt 0 view .LVU31
 270 0000 00B5     		push	{lr}
 271              	.LCFI15:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 14, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 16
 277 0004 0190     		str	r0, [sp, #4]
 405:Core/Src/main.c ****     /* Place your implementation of fputc here */
 406:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 407:Core/Src/main.c ****     HAL_UART_Transmit(JOINT1_UART, (uint8_t *)&ch, 1, 0xFFFF);
 278              		.loc 1 407 5 is_stmt 1 view .LVU32
 279 0006 4FF6FF73 		movw	r3, #65535
 280 000a 0122     		movs	r2, #1
 281 000c 01A9     		add	r1, sp, #4
 282 000e 0348     		ldr	r0, .L23
 283              	.LVL16:
 284              		.loc 1 407 5 is_stmt 0 view .LVU33
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL17:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****     return ch;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 13


 287              		.loc 1 409 5 is_stmt 1 view .LVU34
 410:Core/Src/main.c ****  }
 288              		.loc 1 410 2 is_stmt 0 view .LVU35
 289 0014 0198     		ldr	r0, [sp, #4]
 290 0016 03B0     		add	sp, sp, #12
 291              	.LCFI17:
 292              		.cfi_def_cfa_offset 4
 293              		@ sp needed
 294 0018 5DF804FB 		ldr	pc, [sp], #4
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 001c 00000000 		.word	huart6
 299              		.cfi_endproc
 300              	.LFE249:
 302              		.section	.text.ProcessReceivedJoint,"ax",%progbits
 303              		.align	1
 304              		.global	ProcessReceivedJoint
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	ProcessReceivedJoint:
 310              	.LVL18:
 311              	.LFB252:
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 413:Core/Src/main.c **** {
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****     {
 418:Core/Src/main.c ****         // Store received byte in buffer
 419:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 420:Core/Src/main.c ****         {
 421:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****             // Check for newline or carriage return
 424:Core/Src/main.c ****             if (rx_byte == '\n') 
 425:Core/Src/main.c ****             {
 426:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 427:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 430:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****                 ProcessReceivedString(received_string);
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****                 
 435:Core/Src/main.c ****             }
 436:Core/Src/main.c ****         }
 437:Core/Src/main.c ****         else 
 438:Core/Src/main.c ****         {
 439:Core/Src/main.c ****             // Buffer overflow, reset index
 440:Core/Src/main.c ****             buffer_index = 0;
 441:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 442:Core/Src/main.c ****         }
 443:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 14


 444:Core/Src/main.c ****         // Restart UART reception for the next byte
 445:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 446:Core/Src/main.c ****     }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****     else if(huart -> Instance == JOINT1_UART_INSTANCE){
 449:Core/Src/main.c ****         // Store received byte in buffer
 450:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 451:Core/Src/main.c ****         {
 452:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte1;
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****             // Check for newline or carriage return
 455:Core/Src/main.c ****             if (rx_byte1 == '\n') 
 456:Core/Src/main.c ****             {
 457:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 458:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 461:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 464:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 465:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 466:Core/Src/main.c ****                 }
 467:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 468:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 469:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 470:Core/Src/main.c ****                 }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****                 
 473:Core/Src/main.c ****             }
 474:Core/Src/main.c ****         }
 475:Core/Src/main.c ****         else 
 476:Core/Src/main.c ****         {
 477:Core/Src/main.c ****             // Buffer overflow, reset index
 478:Core/Src/main.c ****             buffer_index = 0;
 479:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 480:Core/Src/main.c ****         }
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****         // Restart UART reception for the next byte
 483:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1);
 484:Core/Src/main.c ****     }
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****     else if(huart -> Instance == JOINT2_UART_INSTANCE){
 487:Core/Src/main.c ****         // Store received byte in buffer
 488:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 489:Core/Src/main.c ****         {
 490:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte2;
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****             // Check for newline or carriage return
 493:Core/Src/main.c ****             if (rx_byte2 == '\n') 
 494:Core/Src/main.c ****             {
 495:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 496:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 499:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 500:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 15


 501:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 502:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 503:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 504:Core/Src/main.c ****                 }
 505:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 506:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 507:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 508:Core/Src/main.c ****                 }
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****                 
 511:Core/Src/main.c ****             }
 512:Core/Src/main.c ****         }
 513:Core/Src/main.c ****         else 
 514:Core/Src/main.c ****         {
 515:Core/Src/main.c ****             // Buffer overflow
 516:Core/Src/main.c ****             buffer_index = 0;
 517:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 518:Core/Src/main.c ****         }
 519:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1);
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****       }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****       else if(huart -> Instance == JOINT3_UART_INSTANCE){
 524:Core/Src/main.c ****         // Store received byte in buffer
 525:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 526:Core/Src/main.c ****         {
 527:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte3;
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****             // Check for newline or carriage return
 530:Core/Src/main.c ****             if (rx_byte3 == '\n') 
 531:Core/Src/main.c ****             {
 532:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 533:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 536:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 539:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 540:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 541:Core/Src/main.c ****                 }
 542:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 543:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 544:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 545:Core/Src/main.c ****                 }
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****                 
 548:Core/Src/main.c ****             }
 549:Core/Src/main.c ****         }
 550:Core/Src/main.c ****         else 
 551:Core/Src/main.c ****         {
 552:Core/Src/main.c ****             // Buffer overflow
 553:Core/Src/main.c ****             buffer_index = 0;
 554:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 555:Core/Src/main.c ****         }
 556:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1);
 557:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 16


 558:Core/Src/main.c ****       }
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****       else if(huart -> Instance == JOINT4_UART_INSTANCE){
 561:Core/Src/main.c ****         // Store received byte in buffer
 562:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 563:Core/Src/main.c ****         {
 564:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte4;
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****             // Check for newline or carriage return
 567:Core/Src/main.c ****             if (rx_byte4 == '\n') 
 568:Core/Src/main.c ****             {
 569:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 570:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 573:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 576:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 577:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 578:Core/Src/main.c ****                 }
 579:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 580:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 581:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 582:Core/Src/main.c ****                 }
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****                 
 585:Core/Src/main.c ****             }
 586:Core/Src/main.c ****         }
 587:Core/Src/main.c ****         else 
 588:Core/Src/main.c ****         {
 589:Core/Src/main.c ****             // Buffer overflow
 590:Core/Src/main.c ****             buffer_index = 0;
 591:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 592:Core/Src/main.c ****         }
 593:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1);
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****       }
 596:Core/Src/main.c **** 
 597:Core/Src/main.c ****       else if(huart -> Instance == JOINT5_UART_INSTANCE){
 598:Core/Src/main.c ****         // Store received byte in buffer
 599:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 600:Core/Src/main.c ****         {
 601:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte5;
 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****             // Check for newline or carriage return
 604:Core/Src/main.c ****             if (rx_byte5 == '\n') 
 605:Core/Src/main.c ****             {
 606:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 607:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 610:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 613:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 614:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 17


 615:Core/Src/main.c ****                 }
 616:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 617:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 618:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 619:Core/Src/main.c ****                 }
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****                 
 622:Core/Src/main.c ****             }
 623:Core/Src/main.c ****         }
 624:Core/Src/main.c ****         else 
 625:Core/Src/main.c ****         {
 626:Core/Src/main.c ****             // Buffer overflow
 627:Core/Src/main.c ****             buffer_index = 0;
 628:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 629:Core/Src/main.c ****         }
 630:Core/Src/main.c ****         HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1);
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****       }
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** }
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****  
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****  
 641:Core/Src/main.c **** 
 642:Core/Src/main.c **** // Function to process the received string
 643:Core/Src/main.c **** void ProcessReceivedString(char *str)
 644:Core/Src/main.c **** {
 645:Core/Src/main.c ****     // Check if the string starts with "set"
 646:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 647:Core/Src/main.c ****     {
 648:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 649:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 652:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 653:Core/Src/main.c ****         {
 654:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 655:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 658:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 659:Core/Src/main.c ****                 // send to joint
 660:Core/Src/main.c ****                 prev_joint1 = joint1;
 661:Core/Src/main.c ****                 Joint1Set(joint1);
 662:Core/Src/main.c ****             }
 663:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 664:Core/Src/main.c ****                 // send to joint
 665:Core/Src/main.c ****                 prev_joint2 = joint2;
 666:Core/Src/main.c ****                 Joint2Set(joint2);
 667:Core/Src/main.c ****             }
 668:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 669:Core/Src/main.c ****                 // send to joint
 670:Core/Src/main.c ****                 prev_joint3 = joint3;
 671:Core/Src/main.c ****                 Joint3Set(joint3);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 18


 672:Core/Src/main.c ****             }
 673:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 674:Core/Src/main.c ****                 // send to joint
 675:Core/Src/main.c ****                 prev_joint4 = joint4;
 676:Core/Src/main.c ****             }
 677:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 678:Core/Src/main.c ****                 // send to joint
 679:Core/Src/main.c ****                 prev_joint5 = joint5;
 680:Core/Src/main.c ****             }
 681:Core/Src/main.c ****             if (actuator != prev_actuator) {
 682:Core/Src/main.c ****                 // send to actuator
 683:Core/Src/main.c ****                 prev_actuator = actuator;
 684:Core/Src/main.c ****             }
 685:Core/Src/main.c ****         }
 686:Core/Src/main.c ****         else
 687:Core/Src/main.c ****         {
 688:Core/Src/main.c ****             printf("Invalid format!\r\n");
 689:Core/Src/main.c ****         }
 690:Core/Src/main.c ****     }
 691:Core/Src/main.c ****     // Just setting joint1 
 692:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 693:Core/Src/main.c ****     {
 694:Core/Src/main.c ****         str += 7;
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 697:Core/Src/main.c ****         {
 698:Core/Src/main.c ****             // Successfully parsed joint1
 699:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 700:Core/Src/main.c **** 
 701:Core/Src/main.c ****             //if (joint1 != prev_joint1) {
 702:Core/Src/main.c ****                 Joint1Set(joint1);
 703:Core/Src/main.c ****                 prev_joint1 = joint1;
 704:Core/Src/main.c ****             //}
 705:Core/Src/main.c ****         }
 706:Core/Src/main.c ****         else
 707:Core/Src/main.c ****         {
 708:Core/Src/main.c ****             printf("Invalid format!\r\n");
 709:Core/Src/main.c ****         }
 710:Core/Src/main.c ****     }
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****     // Just setting joint2
 713:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 714:Core/Src/main.c ****     {
 715:Core/Src/main.c ****         str += 7;
 716:Core/Src/main.c **** 
 717:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 718:Core/Src/main.c ****         {
 719:Core/Src/main.c ****             // Successfully parsed joint2
 720:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 721:Core/Src/main.c **** 
 722:Core/Src/main.c ****             //if (joint2 != prev_joint2) {
 723:Core/Src/main.c ****                 Joint2Set(joint2);
 724:Core/Src/main.c ****                 prev_joint2 = joint2;
 725:Core/Src/main.c ****             //}
 726:Core/Src/main.c ****         }
 727:Core/Src/main.c ****         else
 728:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 19


 729:Core/Src/main.c ****             printf("Invalid format!\r\n");
 730:Core/Src/main.c ****         }
 731:Core/Src/main.c ****     }
 732:Core/Src/main.c **** 
 733:Core/Src/main.c ****     // Just setting joint3
 734:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 735:Core/Src/main.c ****     {
 736:Core/Src/main.c ****         str += 7;
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 739:Core/Src/main.c ****         {
 740:Core/Src/main.c ****             // Successfully parsed joint3
 741:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****             //if (joint3 != prev_joint3) {
 744:Core/Src/main.c ****                 Joint3Set(joint3);
 745:Core/Src/main.c ****                 prev_joint3 = joint3;
 746:Core/Src/main.c ****             //}
 747:Core/Src/main.c ****         }
 748:Core/Src/main.c ****         else
 749:Core/Src/main.c ****         {
 750:Core/Src/main.c ****             printf("Invalid format!\r\n");
 751:Core/Src/main.c ****         }
 752:Core/Src/main.c ****     }
 753:Core/Src/main.c **** 
 754:Core/Src/main.c ****     // Just setting joint4
 755:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 756:Core/Src/main.c ****     {
 757:Core/Src/main.c ****         str += 7;
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 760:Core/Src/main.c ****         {
 761:Core/Src/main.c ****             // Successfully parsed joint4
 762:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 763:Core/Src/main.c **** 
 764:Core/Src/main.c ****             //if (joint4 != prev_joint4) {
 765:Core/Src/main.c ****                 Joint4Set(joint4);
 766:Core/Src/main.c ****                 prev_joint4 = joint4;
 767:Core/Src/main.c ****             //}
 768:Core/Src/main.c ****         }
 769:Core/Src/main.c ****         else
 770:Core/Src/main.c ****         {
 771:Core/Src/main.c ****             printf("Invalid format!\r\n");
 772:Core/Src/main.c ****         }
 773:Core/Src/main.c ****     }
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****     // Just setting joint5
 776:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 777:Core/Src/main.c ****     {
 778:Core/Src/main.c ****         str += 7;
 779:Core/Src/main.c **** 
 780:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 781:Core/Src/main.c ****         {
 782:Core/Src/main.c ****             // Successfully parsed joint5
 783:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 784:Core/Src/main.c **** 
 785:Core/Src/main.c ****             //if (joint5 != prev_joint5) {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 20


 786:Core/Src/main.c ****                 Joint5Set(joint5);
 787:Core/Src/main.c ****                 prev_joint5 = joint5;
 788:Core/Src/main.c ****             //}
 789:Core/Src/main.c ****         }
 790:Core/Src/main.c ****         else
 791:Core/Src/main.c ****         {
 792:Core/Src/main.c ****             printf("Invalid format!\r\n");
 793:Core/Src/main.c ****         }
 794:Core/Src/main.c ****     }
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****     // Just setting actuator
 797:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 798:Core/Src/main.c ****     {
 799:Core/Src/main.c ****         str += 9;
 800:Core/Src/main.c **** 
 801:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 802:Core/Src/main.c ****         {
 803:Core/Src/main.c ****             // Successfully parsed joint5
 804:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 805:Core/Src/main.c **** 
 806:Core/Src/main.c ****             //if (actuator != actuator) {
 807:Core/Src/main.c ****                 ActuatorSet(actuator);
 808:Core/Src/main.c ****                 prev_actuator = actuator;
 809:Core/Src/main.c ****             //}
 810:Core/Src/main.c ****         }
 811:Core/Src/main.c ****         else
 812:Core/Src/main.c ****         {
 813:Core/Src/main.c ****             printf("Invalid format!\r\n");
 814:Core/Src/main.c ****         }
 815:Core/Src/main.c ****     }
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****     else if (strncmp(str, "j1read", 6) == 0)
 818:Core/Src/main.c ****     {
 819:Core/Src/main.c ****         printf_joint1("r\r\n");
 820:Core/Src/main.c ****     }
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****     else if (strncmp(str, "j2read", 6) == 0)
 823:Core/Src/main.c ****     {
 824:Core/Src/main.c ****         printf_joint2("r\r\n");
 825:Core/Src/main.c ****     }
 826:Core/Src/main.c **** 
 827:Core/Src/main.c ****     else if (strncmp(str, "j3read", 6) == 0)
 828:Core/Src/main.c ****     {
 829:Core/Src/main.c ****         printf_joint3("r\r\n");
 830:Core/Src/main.c ****     }
 831:Core/Src/main.c ****       
 832:Core/Src/main.c ****       else if (strncmp(str, "j4read", 6) == 0)
 833:Core/Src/main.c ****       {
 834:Core/Src/main.c ****           printf_joint4("r\r\n");
 835:Core/Src/main.c ****       }
 836:Core/Src/main.c ****   
 837:Core/Src/main.c ****       else if (strncmp(str, "j5read", 6) == 0)
 838:Core/Src/main.c ****       {
 839:Core/Src/main.c ****           printf_joint5("r\r\n");
 840:Core/Src/main.c ****       }
 841:Core/Src/main.c ****   
 842:Core/Src/main.c ****       else if (strncmp(str, "aread", 5) == 0)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 21


 843:Core/Src/main.c ****       {
 844:Core/Src/main.c ****           // Print acutator position or status
 845:Core/Src/main.c ****       }
 846:Core/Src/main.c **** 
 847:Core/Src/main.c **** 
 848:Core/Src/main.c ****     // Set Home 
 849:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 850:Core/Src/main.c ****     {
 851:Core/Src/main.c ****         str += 5;
 852:Core/Src/main.c ****         
 853:Core/Src/main.c ****         HomeSet();
 854:Core/Src/main.c ****         
 855:Core/Src/main.c ****         printf("Set all joints home\r\n");
 856:Core/Src/main.c **** 
 857:Core/Src/main.c ****     }
 858:Core/Src/main.c **** 
 859:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 860:Core/Src/main.c ****     {
 861:Core/Src/main.c ****         str += 6;
 862:Core/Src/main.c ****         ledFlag = !ledFlag;
 863:Core/Src/main.c ****         
 864:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 865:Core/Src/main.c **** 
 866:Core/Src/main.c ****     }
 867:Core/Src/main.c **** 
 868:Core/Src/main.c ****     // Prints all joints
 869:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 870:Core/Src/main.c ****     {
 871:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 872:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 873:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 874:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 875:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 876:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 877:Core/Src/main.c ****     }
 878:Core/Src/main.c **** 
 879:Core/Src/main.c ****     else if (strncmp(str, "inject", 6)== 0)
 880:Core/Src/main.c ****     {
 881:Core/Src/main.c ****         injectFlag = INJECT; 
 882:Core/Src/main.c ****         printf("injecting...\r\n");
 883:Core/Src/main.c ****     }
 884:Core/Src/main.c **** 
 885:Core/Src/main.c ****     else if (strncmp(str, "retract", 7)== 0)
 886:Core/Src/main.c ****     {
 887:Core/Src/main.c ****         injectFlag = RETRACT; 
 888:Core/Src/main.c ****         printf("retracting...\r\n");
 889:Core/Src/main.c ****     }
 890:Core/Src/main.c ****     
 891:Core/Src/main.c ****     else if (strncmp(str, "stop", 4) == 0)
 892:Core/Src/main.c ****     {
 893:Core/Src/main.c ****         injectFlag = STOP; 
 894:Core/Src/main.c ****         printf("stopped.\r\n"); 
 895:Core/Src/main.c ****     }
 896:Core/Src/main.c ****     else if (strncmp(str, "sequence", 8) == 0)
 897:Core/Src/main.c ****     {
 898:Core/Src/main.c ****         printf("inject sequence.../r/n");
 899:Core/Src/main.c ****         injectSequence(); 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 22


 900:Core/Src/main.c ****         
 901:Core/Src/main.c ****     }
 902:Core/Src/main.c **** 
 903:Core/Src/main.c ****     // Echoes string if no keywords are sent
 904:Core/Src/main.c ****     else
 905:Core/Src/main.c ****     {
 906:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 907:Core/Src/main.c ****     }
 908:Core/Src/main.c **** }
 909:Core/Src/main.c **** 
 910:Core/Src/main.c **** void ProcessReceivedJoint(char *str){
 312              		.loc 1 910 37 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 911:Core/Src/main.c **** 
 912:Core/Src/main.c **** }
 317              		.loc 1 912 1 view .LVU37
 318 0000 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE252:
 322              		.section	.rodata.Joint1Set.str1.4,"aMS",%progbits,1
 323              		.align	2
 324              	.LC0:
 325 0000 25640D0A 		.ascii	"%d\015\012\000"
 325      00
 326              		.section	.text.Joint1Set,"ax",%progbits
 327              		.align	1
 328              		.global	Joint1Set
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	Joint1Set:
 334              	.LVL19:
 335              	.LFB254:
 913:Core/Src/main.c **** void HomeSet(){
 914:Core/Src/main.c ****   //Set all joints to home
 915:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 916:Core/Src/main.c ****   Joint1Set(joint1);
 917:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 918:Core/Src/main.c ****   Joint2Set(joint2);
 919:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 920:Core/Src/main.c ****   Joint3Set(joint3);
 921:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 922:Core/Src/main.c ****   Joint4Set(joint4);
 923:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 924:Core/Src/main.c ****   Joint5Set(joint5);
 925:Core/Src/main.c ****   injectFlag = RETRACT; 
 926:Core/Src/main.c **** 
 927:Core/Src/main.c **** 
 928:Core/Src/main.c ****   
 929:Core/Src/main.c **** }
 930:Core/Src/main.c **** 
 931:Core/Src/main.c **** void Joint1Set(int theta){
 336              		.loc 1 931 26 view -0
 337              		.cfi_startproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 23


 338              		@ args = 0, pretend = 0, frame = 256
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 931 26 is_stmt 0 view .LVU39
 341 0000 30B5     		push	{r4, r5, lr}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347 0002 C1B0     		sub	sp, sp, #260
 348              	.LCFI19:
 349              		.cfi_def_cfa_offset 272
 350 0004 0346     		mov	r3, r0
 932:Core/Src/main.c ****   printf_joint1("%d\r\n", theta);
 351              		.loc 1 932 3 is_stmt 1 view .LVU40
 352              	.LBB4:
 353              		.loc 1 932 3 view .LVU41
 354              		.loc 1 932 3 view .LVU42
 355 0006 094A     		ldr	r2, .L30
 356 0008 4FF48071 		mov	r1, #256
 357 000c 6846     		mov	r0, sp
 358              	.LVL20:
 359              		.loc 1 932 3 is_stmt 0 view .LVU43
 360 000e FFF7FEFF 		bl	snprintf
 361              	.LVL21:
 362              		.loc 1 932 3 view .LVU44
 363 0012 0546     		mov	r5, r0
 364              	.LVL22:
 365              		.loc 1 932 3 is_stmt 1 discriminator 1 view .LVU45
 366              	.LBB5:
 367              		.loc 1 932 3 discriminator 1 view .LVU46
 368              		.loc 1 932 3 is_stmt 0 discriminator 1 view .LVU47
 369 0014 0024     		movs	r4, #0
 370              		.loc 1 932 3 view .LVU48
 371 0016 04E0     		b	.L27
 372              	.LVL23:
 373              	.L28:
 374              		.loc 1 932 3 is_stmt 1 discriminator 3 view .LVU49
 375 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 376 001c FFF7FEFF 		bl	__io_putchar_usart6
 377              	.LVL24:
 378              		.loc 1 932 3 discriminator 3 view .LVU50
 379 0020 0134     		adds	r4, r4, #1
 380              	.LVL25:
 381              	.L27:
 382              		.loc 1 932 3 discriminator 2 view .LVU51
 383 0022 AC42     		cmp	r4, r5
 384 0024 F8DB     		blt	.L28
 385              	.LBE5:
 386              	.LBE4:
 933:Core/Src/main.c **** 
 934:Core/Src/main.c **** }
 387              		.loc 1 934 1 is_stmt 0 view .LVU52
 388 0026 41B0     		add	sp, sp, #260
 389              	.LCFI20:
 390              		.cfi_def_cfa_offset 12
 391              		@ sp needed
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 24


 392 0028 30BD     		pop	{r4, r5, pc}
 393              	.LVL26:
 394              	.L31:
 395              		.loc 1 934 1 view .LVU53
 396 002a 00BF     		.align	2
 397              	.L30:
 398 002c 00000000 		.word	.LC0
 399              		.cfi_endproc
 400              	.LFE254:
 402              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 403              		.align	2
 404              	.LC1:
 405 0000 25640A00 		.ascii	"%d\012\000"
 406              		.section	.text.Joint2Set,"ax",%progbits
 407              		.align	1
 408              		.global	Joint2Set
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	Joint2Set:
 414              	.LVL27:
 415              	.LFB255:
 935:Core/Src/main.c **** 
 936:Core/Src/main.c **** void Joint2Set(int theta){
 416              		.loc 1 936 26 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 256
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 936 26 is_stmt 0 view .LVU55
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI21:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 C1B0     		sub	sp, sp, #260
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 272
 430 0004 0346     		mov	r3, r0
 937:Core/Src/main.c ****   printf_joint2("%d\n", theta);
 431              		.loc 1 937 3 is_stmt 1 view .LVU56
 432              	.LBB6:
 433              		.loc 1 937 3 view .LVU57
 434              		.loc 1 937 3 view .LVU58
 435 0006 094A     		ldr	r2, .L36
 436 0008 4FF48071 		mov	r1, #256
 437 000c 6846     		mov	r0, sp
 438              	.LVL28:
 439              		.loc 1 937 3 is_stmt 0 view .LVU59
 440 000e FFF7FEFF 		bl	snprintf
 441              	.LVL29:
 442              		.loc 1 937 3 view .LVU60
 443 0012 0546     		mov	r5, r0
 444              	.LVL30:
 445              		.loc 1 937 3 is_stmt 1 discriminator 1 view .LVU61
 446              	.LBB7:
 447              		.loc 1 937 3 discriminator 1 view .LVU62
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 25


 448              		.loc 1 937 3 is_stmt 0 discriminator 1 view .LVU63
 449 0014 0024     		movs	r4, #0
 450              		.loc 1 937 3 view .LVU64
 451 0016 04E0     		b	.L33
 452              	.LVL31:
 453              	.L34:
 454              		.loc 1 937 3 is_stmt 1 discriminator 3 view .LVU65
 455 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 456 001c FFF7FEFF 		bl	__io_putchar_usart2
 457              	.LVL32:
 458              		.loc 1 937 3 discriminator 3 view .LVU66
 459 0020 0134     		adds	r4, r4, #1
 460              	.LVL33:
 461              	.L33:
 462              		.loc 1 937 3 discriminator 2 view .LVU67
 463 0022 AC42     		cmp	r4, r5
 464 0024 F8DB     		blt	.L34
 465              	.LBE7:
 466              	.LBE6:
 938:Core/Src/main.c **** 
 939:Core/Src/main.c **** }
 467              		.loc 1 939 1 is_stmt 0 view .LVU68
 468 0026 41B0     		add	sp, sp, #260
 469              	.LCFI23:
 470              		.cfi_def_cfa_offset 12
 471              		@ sp needed
 472 0028 30BD     		pop	{r4, r5, pc}
 473              	.LVL34:
 474              	.L37:
 475              		.loc 1 939 1 view .LVU69
 476 002a 00BF     		.align	2
 477              	.L36:
 478 002c 00000000 		.word	.LC1
 479              		.cfi_endproc
 480              	.LFE255:
 482              		.section	.text.Joint3Set,"ax",%progbits
 483              		.align	1
 484              		.global	Joint3Set
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	Joint3Set:
 490              	.LVL35:
 491              	.LFB256:
 940:Core/Src/main.c **** 
 941:Core/Src/main.c **** void Joint3Set(int theta){
 492              		.loc 1 941 26 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 256
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 941 26 is_stmt 0 view .LVU71
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 26


 503 0002 C1B0     		sub	sp, sp, #260
 504              	.LCFI25:
 505              		.cfi_def_cfa_offset 272
 506 0004 0346     		mov	r3, r0
 942:Core/Src/main.c ****   printf_joint3("%d\r\n", theta);
 507              		.loc 1 942 3 is_stmt 1 view .LVU72
 508              	.LBB8:
 509              		.loc 1 942 3 view .LVU73
 510              		.loc 1 942 3 view .LVU74
 511 0006 094A     		ldr	r2, .L42
 512 0008 4FF48071 		mov	r1, #256
 513 000c 6846     		mov	r0, sp
 514              	.LVL36:
 515              		.loc 1 942 3 is_stmt 0 view .LVU75
 516 000e FFF7FEFF 		bl	snprintf
 517              	.LVL37:
 518              		.loc 1 942 3 view .LVU76
 519 0012 0546     		mov	r5, r0
 520              	.LVL38:
 521              		.loc 1 942 3 is_stmt 1 discriminator 1 view .LVU77
 522              	.LBB9:
 523              		.loc 1 942 3 discriminator 1 view .LVU78
 524              		.loc 1 942 3 is_stmt 0 discriminator 1 view .LVU79
 525 0014 0024     		movs	r4, #0
 526              		.loc 1 942 3 view .LVU80
 527 0016 04E0     		b	.L39
 528              	.LVL39:
 529              	.L40:
 530              		.loc 1 942 3 is_stmt 1 discriminator 3 view .LVU81
 531 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 532 001c FFF7FEFF 		bl	__io_putchar_usart3
 533              	.LVL40:
 534              		.loc 1 942 3 discriminator 3 view .LVU82
 535 0020 0134     		adds	r4, r4, #1
 536              	.LVL41:
 537              	.L39:
 538              		.loc 1 942 3 discriminator 2 view .LVU83
 539 0022 AC42     		cmp	r4, r5
 540 0024 F8DB     		blt	.L40
 541              	.LBE9:
 542              	.LBE8:
 943:Core/Src/main.c **** 
 944:Core/Src/main.c **** }
 543              		.loc 1 944 1 is_stmt 0 view .LVU84
 544 0026 41B0     		add	sp, sp, #260
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 12
 547              		@ sp needed
 548 0028 30BD     		pop	{r4, r5, pc}
 549              	.LVL42:
 550              	.L43:
 551              		.loc 1 944 1 view .LVU85
 552 002a 00BF     		.align	2
 553              	.L42:
 554 002c 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE256:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 27


 558              		.section	.text.Joint4Set,"ax",%progbits
 559              		.align	1
 560              		.global	Joint4Set
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	Joint4Set:
 566              	.LVL43:
 567              	.LFB257:
 945:Core/Src/main.c **** 
 946:Core/Src/main.c **** void Joint4Set(int theta){
 568              		.loc 1 946 26 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 256
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 946 26 is_stmt 0 view .LVU87
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI27:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 C1B0     		sub	sp, sp, #260
 580              	.LCFI28:
 581              		.cfi_def_cfa_offset 272
 582 0004 0346     		mov	r3, r0
 947:Core/Src/main.c ****   printf_joint4("%d\r\n", theta);
 583              		.loc 1 947 3 is_stmt 1 view .LVU88
 584              	.LBB10:
 585              		.loc 1 947 3 view .LVU89
 586              		.loc 1 947 3 view .LVU90
 587 0006 094A     		ldr	r2, .L48
 588 0008 4FF48071 		mov	r1, #256
 589 000c 6846     		mov	r0, sp
 590              	.LVL44:
 591              		.loc 1 947 3 is_stmt 0 view .LVU91
 592 000e FFF7FEFF 		bl	snprintf
 593              	.LVL45:
 594              		.loc 1 947 3 view .LVU92
 595 0012 0546     		mov	r5, r0
 596              	.LVL46:
 597              		.loc 1 947 3 is_stmt 1 discriminator 1 view .LVU93
 598              	.LBB11:
 599              		.loc 1 947 3 discriminator 1 view .LVU94
 600              		.loc 1 947 3 is_stmt 0 discriminator 1 view .LVU95
 601 0014 0024     		movs	r4, #0
 602              		.loc 1 947 3 view .LVU96
 603 0016 04E0     		b	.L45
 604              	.LVL47:
 605              	.L46:
 606              		.loc 1 947 3 is_stmt 1 discriminator 3 view .LVU97
 607 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 608 001c FFF7FEFF 		bl	__io_putchar_uart4
 609              	.LVL48:
 610              		.loc 1 947 3 discriminator 3 view .LVU98
 611 0020 0134     		adds	r4, r4, #1
 612              	.LVL49:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 28


 613              	.L45:
 614              		.loc 1 947 3 discriminator 2 view .LVU99
 615 0022 AC42     		cmp	r4, r5
 616 0024 F8DB     		blt	.L46
 617              	.LBE11:
 618              	.LBE10:
 948:Core/Src/main.c **** 
 949:Core/Src/main.c **** }
 619              		.loc 1 949 1 is_stmt 0 view .LVU100
 620 0026 41B0     		add	sp, sp, #260
 621              	.LCFI29:
 622              		.cfi_def_cfa_offset 12
 623              		@ sp needed
 624 0028 30BD     		pop	{r4, r5, pc}
 625              	.LVL50:
 626              	.L49:
 627              		.loc 1 949 1 view .LVU101
 628 002a 00BF     		.align	2
 629              	.L48:
 630 002c 00000000 		.word	.LC0
 631              		.cfi_endproc
 632              	.LFE257:
 634              		.section	.text.Joint5Set,"ax",%progbits
 635              		.align	1
 636              		.global	Joint5Set
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	Joint5Set:
 642              	.LVL51:
 643              	.LFB258:
 950:Core/Src/main.c **** 
 951:Core/Src/main.c **** void Joint5Set(int theta){
 644              		.loc 1 951 26 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 256
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 951 26 is_stmt 0 view .LVU103
 649 0000 30B5     		push	{r4, r5, lr}
 650              	.LCFI30:
 651              		.cfi_def_cfa_offset 12
 652              		.cfi_offset 4, -12
 653              		.cfi_offset 5, -8
 654              		.cfi_offset 14, -4
 655 0002 C1B0     		sub	sp, sp, #260
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 272
 658 0004 0346     		mov	r3, r0
 952:Core/Src/main.c ****   printf_joint5("%d\r\n", theta);
 659              		.loc 1 952 3 is_stmt 1 view .LVU104
 660              	.LBB12:
 661              		.loc 1 952 3 view .LVU105
 662              		.loc 1 952 3 view .LVU106
 663 0006 094A     		ldr	r2, .L54
 664 0008 4FF48071 		mov	r1, #256
 665 000c 6846     		mov	r0, sp
 666              	.LVL52:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 29


 667              		.loc 1 952 3 is_stmt 0 view .LVU107
 668 000e FFF7FEFF 		bl	snprintf
 669              	.LVL53:
 670              		.loc 1 952 3 view .LVU108
 671 0012 0546     		mov	r5, r0
 672              	.LVL54:
 673              		.loc 1 952 3 is_stmt 1 discriminator 1 view .LVU109
 674              	.LBB13:
 675              		.loc 1 952 3 discriminator 1 view .LVU110
 676              		.loc 1 952 3 is_stmt 0 discriminator 1 view .LVU111
 677 0014 0024     		movs	r4, #0
 678              		.loc 1 952 3 view .LVU112
 679 0016 04E0     		b	.L51
 680              	.LVL55:
 681              	.L52:
 682              		.loc 1 952 3 is_stmt 1 discriminator 3 view .LVU113
 683 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 684 001c FFF7FEFF 		bl	__io_putchar_uart5
 685              	.LVL56:
 686              		.loc 1 952 3 discriminator 3 view .LVU114
 687 0020 0134     		adds	r4, r4, #1
 688              	.LVL57:
 689              	.L51:
 690              		.loc 1 952 3 discriminator 2 view .LVU115
 691 0022 AC42     		cmp	r4, r5
 692 0024 F8DB     		blt	.L52
 693              	.LBE13:
 694              	.LBE12:
 953:Core/Src/main.c **** 
 954:Core/Src/main.c **** }
 695              		.loc 1 954 1 is_stmt 0 view .LVU116
 696 0026 41B0     		add	sp, sp, #260
 697              	.LCFI32:
 698              		.cfi_def_cfa_offset 12
 699              		@ sp needed
 700 0028 30BD     		pop	{r4, r5, pc}
 701              	.LVL58:
 702              	.L55:
 703              		.loc 1 954 1 view .LVU117
 704 002a 00BF     		.align	2
 705              	.L54:
 706 002c 00000000 		.word	.LC0
 707              		.cfi_endproc
 708              	.LFE258:
 710              		.section	.text.HomeSet,"ax",%progbits
 711              		.align	1
 712              		.global	HomeSet
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HomeSet:
 718              	.LFB253:
 913:Core/Src/main.c ****   //Set all joints to home
 719              		.loc 1 913 15 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 30


 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI33:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 915:Core/Src/main.c ****   Joint1Set(joint1);
 728              		.loc 1 915 3 view .LVU119
 915:Core/Src/main.c ****   Joint1Set(joint1);
 729              		.loc 1 915 10 is_stmt 0 view .LVU120
 730 0002 0024     		movs	r4, #0
 731 0004 0E4B     		ldr	r3, .L58
 732 0006 1C60     		str	r4, [r3]
 916:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 733              		.loc 1 916 3 is_stmt 1 view .LVU121
 734 0008 2046     		mov	r0, r4
 735 000a FFF7FEFF 		bl	Joint1Set
 736              	.LVL59:
 917:Core/Src/main.c ****   Joint2Set(joint2);
 737              		.loc 1 917 3 view .LVU122
 917:Core/Src/main.c ****   Joint2Set(joint2);
 738              		.loc 1 917 10 is_stmt 0 view .LVU123
 739 000e 5A20     		movs	r0, #90
 740 0010 0C4B     		ldr	r3, .L58+4
 741 0012 1860     		str	r0, [r3]
 918:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 742              		.loc 1 918 3 is_stmt 1 view .LVU124
 743 0014 FFF7FEFF 		bl	Joint2Set
 744              	.LVL60:
 919:Core/Src/main.c ****   Joint3Set(joint3);
 745              		.loc 1 919 3 view .LVU125
 919:Core/Src/main.c ****   Joint3Set(joint3);
 746              		.loc 1 919 10 is_stmt 0 view .LVU126
 747 0018 B420     		movs	r0, #180
 748 001a 0B4B     		ldr	r3, .L58+8
 749 001c 1860     		str	r0, [r3]
 920:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 750              		.loc 1 920 3 is_stmt 1 view .LVU127
 751 001e FFF7FEFF 		bl	Joint3Set
 752              	.LVL61:
 921:Core/Src/main.c ****   Joint4Set(joint4);
 753              		.loc 1 921 3 view .LVU128
 921:Core/Src/main.c ****   Joint4Set(joint4);
 754              		.loc 1 921 10 is_stmt 0 view .LVU129
 755 0022 0A4B     		ldr	r3, .L58+12
 756 0024 1C60     		str	r4, [r3]
 922:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 757              		.loc 1 922 3 is_stmt 1 view .LVU130
 758 0026 2046     		mov	r0, r4
 759 0028 FFF7FEFF 		bl	Joint4Set
 760              	.LVL62:
 923:Core/Src/main.c ****   Joint5Set(joint5);
 761              		.loc 1 923 3 view .LVU131
 923:Core/Src/main.c ****   Joint5Set(joint5);
 762              		.loc 1 923 10 is_stmt 0 view .LVU132
 763 002c 2820     		movs	r0, #40
 764 002e 084B     		ldr	r3, .L58+16
 765 0030 1860     		str	r0, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 31


 924:Core/Src/main.c ****   injectFlag = RETRACT; 
 766              		.loc 1 924 3 is_stmt 1 view .LVU133
 767 0032 FFF7FEFF 		bl	Joint5Set
 768              	.LVL63:
 925:Core/Src/main.c **** 
 769              		.loc 1 925 3 view .LVU134
 925:Core/Src/main.c **** 
 770              		.loc 1 925 14 is_stmt 0 view .LVU135
 771 0036 074B     		ldr	r3, .L58+20
 772 0038 0222     		movs	r2, #2
 773 003a 1A60     		str	r2, [r3]
 929:Core/Src/main.c **** 
 774              		.loc 1 929 1 view .LVU136
 775 003c 10BD     		pop	{r4, pc}
 776              	.L59:
 777 003e 00BF     		.align	2
 778              	.L58:
 779 0040 00000000 		.word	joint1
 780 0044 00000000 		.word	joint2
 781 0048 00000000 		.word	joint3
 782 004c 00000000 		.word	joint4
 783 0050 00000000 		.word	joint5
 784 0054 00000000 		.word	injectFlag
 785              		.cfi_endproc
 786              	.LFE253:
 788              		.section	.text.ActuatorSet,"ax",%progbits
 789              		.align	1
 790              		.global	ActuatorSet
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	ActuatorSet:
 796              	.LVL64:
 797              	.LFB259:
 955:Core/Src/main.c **** 
 956:Core/Src/main.c **** void ActuatorSet(int theta){
 798              		.loc 1 956 28 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 957:Core/Src/main.c ****   // Set joint. This is connected to the actuator motor controller. 
 958:Core/Src/main.c ****   // Make an actuator status function
 959:Core/Src/main.c **** 
 960:Core/Src/main.c **** }
 803              		.loc 1 960 1 view .LVU138
 804 0000 7047     		bx	lr
 805              		.cfi_endproc
 806              	.LFE259:
 808              		.section	.text.ActuatorStatus,"ax",%progbits
 809              		.align	1
 810              		.global	ActuatorStatus
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 815              	ActuatorStatus:
 816              	.LFB260:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 32


 961:Core/Src/main.c **** 
 962:Core/Src/main.c **** int ActuatorStatus(){
 817              		.loc 1 962 21 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 963:Core/Src/main.c ****   // Get actuator status
 964:Core/Src/main.c ****   return 0;
 822              		.loc 1 964 3 view .LVU140
 965:Core/Src/main.c **** }
 823              		.loc 1 965 1 is_stmt 0 view .LVU141
 824 0000 0020     		movs	r0, #0
 825 0002 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE260:
 829              		.section	.text.Read_ADC_PA0,"ax",%progbits
 830              		.align	1
 831              		.global	Read_ADC_PA0
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	Read_ADC_PA0:
 837              	.LFB261:
 966:Core/Src/main.c **** 
 967:Core/Src/main.c **** uint16_t Read_ADC_PA0() {
 838              		.loc 1 967 25 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842 0000 10B5     		push	{r4, lr}
 843              	.LCFI34:
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 4, -8
 846              		.cfi_offset 14, -4
 968:Core/Src/main.c ****   uint16_t adcValue = 0;
 847              		.loc 1 968 3 view .LVU143
 848              	.LVL65:
 969:Core/Src/main.c **** 
 970:Core/Src/main.c ****   // Start ADC Conversion
 971:Core/Src/main.c ****   HAL_ADC_Start(&hadc1);
 849              		.loc 1 971 3 view .LVU144
 850 0002 0A4C     		ldr	r4, .L67
 851 0004 2046     		mov	r0, r4
 852 0006 FFF7FEFF 		bl	HAL_ADC_Start
 853              	.LVL66:
 972:Core/Src/main.c **** 
 973:Core/Src/main.c ****   // Wait for conversion to complete
 974:Core/Src/main.c ****   if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 854              		.loc 1 974 3 view .LVU145
 855              		.loc 1 974 7 is_stmt 0 view .LVU146
 856 000a 4FF0FF31 		mov	r1, #-1
 857 000e 2046     		mov	r0, r4
 858 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 859              	.LVL67:
 860              		.loc 1 974 6 discriminator 1 view .LVU147
 861 0014 28B1     		cbz	r0, .L66
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 33


 968:Core/Src/main.c **** 
 862              		.loc 1 968 12 view .LVU148
 863 0016 0024     		movs	r4, #0
 864              	.LVL68:
 865              	.L63:
 975:Core/Src/main.c ****       // Read the ADC value
 976:Core/Src/main.c ****       adcValue = HAL_ADC_GetValue(&hadc1);
 977:Core/Src/main.c ****   }
 978:Core/Src/main.c **** 
 979:Core/Src/main.c ****   // Stop ADC (optional)
 980:Core/Src/main.c ****   HAL_ADC_Stop(&hadc1);
 866              		.loc 1 980 3 is_stmt 1 view .LVU149
 867 0018 0448     		ldr	r0, .L67
 868 001a FFF7FEFF 		bl	HAL_ADC_Stop
 869              	.LVL69:
 981:Core/Src/main.c **** 
 982:Core/Src/main.c ****   return adcValue;
 870              		.loc 1 982 3 view .LVU150
 983:Core/Src/main.c **** }
 871              		.loc 1 983 1 is_stmt 0 view .LVU151
 872 001e 2046     		mov	r0, r4
 873 0020 10BD     		pop	{r4, pc}
 874              	.LVL70:
 875              	.L66:
 976:Core/Src/main.c ****   }
 876              		.loc 1 976 7 is_stmt 1 view .LVU152
 976:Core/Src/main.c ****   }
 877              		.loc 1 976 18 is_stmt 0 view .LVU153
 878 0022 2046     		mov	r0, r4
 879 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 880              	.LVL71:
 976:Core/Src/main.c ****   }
 881              		.loc 1 976 16 discriminator 1 view .LVU154
 882 0028 84B2     		uxth	r4, r0
 883              	.LVL72:
 976:Core/Src/main.c ****   }
 884              		.loc 1 976 16 discriminator 1 view .LVU155
 885 002a F5E7     		b	.L63
 886              	.L68:
 887              		.align	2
 888              	.L67:
 889 002c 00000000 		.word	hadc1
 890              		.cfi_endproc
 891              	.LFE261:
 893              		.section	.text.injectSequence,"ax",%progbits
 894              		.align	1
 895              		.global	injectSequence
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	injectSequence:
 901              	.LFB262:
 984:Core/Src/main.c **** 
 985:Core/Src/main.c **** void injectSequence(){
 902              		.loc 1 985 22 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 34


 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 08B5     		push	{r3, lr}
 907              	.LCFI35:
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 3, -8
 910              		.cfi_offset 14, -4
 986:Core/Src/main.c ****   Joint5Set(18);
 911              		.loc 1 986 3 view .LVU157
 912 0002 1220     		movs	r0, #18
 913 0004 FFF7FEFF 		bl	Joint5Set
 914              	.LVL73:
 987:Core/Src/main.c ****   //HAL_Delay(500);
 988:Core/Src/main.c ****   Joint4Set(28);
 915              		.loc 1 988 3 view .LVU158
 916 0008 1C20     		movs	r0, #28
 917 000a FFF7FEFF 		bl	Joint4Set
 918              	.LVL74:
 989:Core/Src/main.c ****   //HAL_Delay(500);
 990:Core/Src/main.c ****   Joint3Set(70);
 919              		.loc 1 990 3 view .LVU159
 920 000e 4620     		movs	r0, #70
 921 0010 FFF7FEFF 		bl	Joint3Set
 922              	.LVL75:
 991:Core/Src/main.c ****   //HAL_Delay(500);
 992:Core/Src/main.c ****   Joint2Set(4);
 923              		.loc 1 992 3 view .LVU160
 924 0014 0420     		movs	r0, #4
 925 0016 FFF7FEFF 		bl	Joint2Set
 926              	.LVL76:
 993:Core/Src/main.c **** }
 927              		.loc 1 993 1 is_stmt 0 view .LVU161
 928 001a 08BD     		pop	{r3, pc}
 929              		.cfi_endproc
 930              	.LFE262:
 932              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 933              		.align	2
 934              	.LC2:
 935 0000 73657400 		.ascii	"set\000"
 936              		.align	2
 937              	.LC3:
 938 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 938      2533642D 
 938      2533642D 
 938      2533642D 
 938      2533642D 
 939              		.align	2
 940              	.LC4:
 941 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 941      69766564 
 941      206E756D 
 941      62657273 
 941      3A202564 
 942 0042 0000     		.align	2
 943              	.LC5:
 944 0044 496E7661 		.ascii	"Invalid format!\015\000"
 944      6C696420 
 944      666F726D 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 35


 944      6174210D 
 944      00
 945 0055 000000   		.align	2
 946              	.LC6:
 947 0058 6A6F696E 		.ascii	"joint1\000"
 947      743100
 948 005f 00       		.align	2
 949              	.LC7:
 950 0060 25336400 		.ascii	"%3d\000"
 951              		.align	2
 952              	.LC8:
 953 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 953      74312073 
 953      65743A20 
 953      25640D0A 
 953      00
 954 0075 000000   		.align	2
 955              	.LC9:
 956 0078 6A6F696E 		.ascii	"joint2\000"
 956      743200
 957 007f 00       		.align	2
 958              	.LC10:
 959 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 959      74322073 
 959      65743A20 
 959      25640D0A 
 959      00
 960 0091 000000   		.align	2
 961              	.LC11:
 962 0094 6A6F696E 		.ascii	"joint3\000"
 962      743300
 963 009b 00       		.align	2
 964              	.LC12:
 965 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 965      74332073 
 965      65743A20 
 965      25640D0A 
 965      00
 966 00ad 000000   		.align	2
 967              	.LC13:
 968 00b0 6A6F696E 		.ascii	"joint4\000"
 968      743400
 969 00b7 00       		.align	2
 970              	.LC14:
 971 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 971      74342073 
 971      65743A20 
 971      25640D0A 
 971      00
 972 00c9 000000   		.align	2
 973              	.LC15:
 974 00cc 6A6F696E 		.ascii	"joint5\000"
 974      743500
 975 00d3 00       		.align	2
 976              	.LC16:
 977 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 977      74352073 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 36


 977      65743A20 
 977      25640D0A 
 977      00
 978 00e5 000000   		.align	2
 979              	.LC17:
 980 00e8 61637475 		.ascii	"actuator\000"
 980      61746F72 
 980      00
 981 00f1 000000   		.align	2
 982              	.LC18:
 983 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 983      61746F72 
 983      20736574 
 983      3A202564 
 983      0D0A00
 984 0107 00       		.align	2
 985              	.LC19:
 986 0108 6A317265 		.ascii	"j1read\000"
 986      616400
 987 010f 00       		.align	2
 988              	.LC20:
 989 0110 6A327265 		.ascii	"j2read\000"
 989      616400
 990 0117 00       		.align	2
 991              	.LC21:
 992 0118 6A337265 		.ascii	"j3read\000"
 992      616400
 993 011f 00       		.align	2
 994              	.LC22:
 995 0120 6A347265 		.ascii	"j4read\000"
 995      616400
 996 0127 00       		.align	2
 997              	.LC23:
 998 0128 6A357265 		.ascii	"j5read\000"
 998      616400
 999 012f 00       		.align	2
 1000              	.LC24:
 1001 0130 61726561 		.ascii	"aread\000"
 1001      6400
 1002 0136 0000     		.align	2
 1003              	.LC25:
 1004 0138 686F6D65 		.ascii	"home\000"
 1004      00
 1005 013d 000000   		.align	2
 1006              	.LC26:
 1007 0140 53657420 		.ascii	"Set all joints home\015\000"
 1007      616C6C20 
 1007      6A6F696E 
 1007      74732068 
 1007      6F6D650D 
 1008 0155 000000   		.align	2
 1009              	.LC27:
 1010 0158 666C6173 		.ascii	"flash\000"
 1010      6800
 1011 015e 0000     		.align	2
 1012              	.LC28:
 1013 0160 4C454473 		.ascii	"LEDs Toggled\015\000"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 37


 1013      20546F67 
 1013      676C6564 
 1013      0D00
 1014 016e 0000     		.align	2
 1015              	.LC29:
 1016 0170 7072696E 		.ascii	"print\000"
 1016      7400
 1017 0176 0000     		.align	2
 1018              	.LC30:
 1019 0178 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 1019      74313A20 
 1019      25640D0A 
 1019      00
 1020 0185 000000   		.align	2
 1021              	.LC31:
 1022 0188 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 1022      74323A20 
 1022      25640D0A 
 1022      00
 1023 0195 000000   		.align	2
 1024              	.LC32:
 1025 0198 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 1025      74333A20 
 1025      25640D0A 
 1025      00
 1026 01a5 000000   		.align	2
 1027              	.LC33:
 1028 01a8 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 1028      74343A20 
 1028      25640D0A 
 1028      00
 1029 01b5 000000   		.align	2
 1030              	.LC34:
 1031 01b8 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 1031      74353A20 
 1031      25640D0A 
 1031      00
 1032 01c5 000000   		.align	2
 1033              	.LC35:
 1034 01c8 41637475 		.ascii	"Actuator: %d\015\012\000"
 1034      61746F72 
 1034      3A202564 
 1034      0D0A00
 1035 01d7 00       		.align	2
 1036              	.LC36:
 1037 01d8 696E6A65 		.ascii	"inject\000"
 1037      637400
 1038 01df 00       		.align	2
 1039              	.LC37:
 1040 01e0 696E6A65 		.ascii	"injecting...\015\000"
 1040      6374696E 
 1040      672E2E2E 
 1040      0D00
 1041 01ee 0000     		.align	2
 1042              	.LC38:
 1043 01f0 72657472 		.ascii	"retract\000"
 1043      61637400 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 38


 1044              		.align	2
 1045              	.LC39:
 1046 01f8 72657472 		.ascii	"retracting...\015\000"
 1046      61637469 
 1046      6E672E2E 
 1046      2E0D00
 1047 0207 00       		.align	2
 1048              	.LC40:
 1049 0208 73746F70 		.ascii	"stop\000"
 1049      00
 1050 020d 000000   		.align	2
 1051              	.LC41:
 1052 0210 73746F70 		.ascii	"stopped.\015\000"
 1052      7065642E 
 1052      0D00
 1053 021a 0000     		.align	2
 1054              	.LC42:
 1055 021c 73657175 		.ascii	"sequence\000"
 1055      656E6365 
 1055      00
 1056 0225 000000   		.align	2
 1057              	.LC43:
 1058 0228 696E6A65 		.ascii	"inject sequence.../r/n\000"
 1058      63742073 
 1058      65717565 
 1058      6E63652E 
 1058      2E2E2F72 
 1059 023f 00       		.align	2
 1060              	.LC44:
 1061 0240 52656365 		.ascii	"Received: %s\015\012\000"
 1061      69766564 
 1061      3A202573 
 1061      0D0A00
 1062              		.section	.text.ProcessReceivedString,"ax",%progbits
 1063              		.align	1
 1064              		.global	ProcessReceivedString
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1069              	ProcessReceivedString:
 1070              	.LVL77:
 1071              	.LFB251:
 644:Core/Src/main.c ****     // Check if the string starts with "set"
 1072              		.loc 1 644 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 256
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 644:Core/Src/main.c ****     // Check if the string starts with "set"
 1076              		.loc 1 644 1 is_stmt 0 view .LVU163
 1077 0000 30B5     		push	{r4, r5, lr}
 1078              	.LCFI36:
 1079              		.cfi_def_cfa_offset 12
 1080              		.cfi_offset 4, -12
 1081              		.cfi_offset 5, -8
 1082              		.cfi_offset 14, -4
 1083 0002 C5B0     		sub	sp, sp, #276
 1084              	.LCFI37:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 39


 1085              		.cfi_def_cfa_offset 288
 1086 0004 0446     		mov	r4, r0
 646:Core/Src/main.c ****     {
 1087              		.loc 1 646 5 is_stmt 1 view .LVU164
 646:Core/Src/main.c ****     {
 1088              		.loc 1 646 9 is_stmt 0 view .LVU165
 1089 0006 0322     		movs	r2, #3
 1090 0008 A649     		ldr	r1, .L143
 1091 000a FFF7FEFF 		bl	strncmp
 1092              	.LVL78:
 646:Core/Src/main.c ****     {
 1093              		.loc 1 646 8 discriminator 1 view .LVU166
 1094 000e 0028     		cmp	r0, #0
 1095 0010 00F0A280 		beq	.L115
 692:Core/Src/main.c ****     {
 1096              		.loc 1 692 10 is_stmt 1 view .LVU167
 692:Core/Src/main.c ****     {
 1097              		.loc 1 692 14 is_stmt 0 view .LVU168
 1098 0014 0622     		movs	r2, #6
 1099 0016 A449     		ldr	r1, .L143+4
 1100 0018 2046     		mov	r0, r4
 1101 001a FFF7FEFF 		bl	strncmp
 1102              	.LVL79:
 692:Core/Src/main.c ****     {
 1103              		.loc 1 692 13 discriminator 1 view .LVU169
 1104 001e 0028     		cmp	r0, #0
 1105 0020 00F0FA80 		beq	.L116
 713:Core/Src/main.c ****     {
 1106              		.loc 1 713 10 is_stmt 1 view .LVU170
 713:Core/Src/main.c ****     {
 1107              		.loc 1 713 14 is_stmt 0 view .LVU171
 1108 0024 0622     		movs	r2, #6
 1109 0026 A149     		ldr	r1, .L143+8
 1110 0028 2046     		mov	r0, r4
 1111 002a FFF7FEFF 		bl	strncmp
 1112              	.LVL80:
 713:Core/Src/main.c ****     {
 1113              		.loc 1 713 13 discriminator 1 view .LVU172
 1114 002e 0028     		cmp	r0, #0
 1115 0030 00F00981 		beq	.L117
 734:Core/Src/main.c ****     {
 1116              		.loc 1 734 10 is_stmt 1 view .LVU173
 734:Core/Src/main.c ****     {
 1117              		.loc 1 734 14 is_stmt 0 view .LVU174
 1118 0034 0622     		movs	r2, #6
 1119 0036 9E49     		ldr	r1, .L143+12
 1120 0038 2046     		mov	r0, r4
 1121 003a FFF7FEFF 		bl	strncmp
 1122              	.LVL81:
 734:Core/Src/main.c ****     {
 1123              		.loc 1 734 13 discriminator 1 view .LVU175
 1124 003e 0028     		cmp	r0, #0
 1125 0040 00F01881 		beq	.L118
 755:Core/Src/main.c ****     {
 1126              		.loc 1 755 10 is_stmt 1 view .LVU176
 755:Core/Src/main.c ****     {
 1127              		.loc 1 755 14 is_stmt 0 view .LVU177
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 40


 1128 0044 0622     		movs	r2, #6
 1129 0046 9B49     		ldr	r1, .L143+16
 1130 0048 2046     		mov	r0, r4
 1131 004a FFF7FEFF 		bl	strncmp
 1132              	.LVL82:
 755:Core/Src/main.c ****     {
 1133              		.loc 1 755 13 discriminator 1 view .LVU178
 1134 004e 0028     		cmp	r0, #0
 1135 0050 00F07881 		beq	.L119
 776:Core/Src/main.c ****     {
 1136              		.loc 1 776 10 is_stmt 1 view .LVU179
 776:Core/Src/main.c ****     {
 1137              		.loc 1 776 14 is_stmt 0 view .LVU180
 1138 0054 0622     		movs	r2, #6
 1139 0056 9849     		ldr	r1, .L143+20
 1140 0058 2046     		mov	r0, r4
 1141 005a FFF7FEFF 		bl	strncmp
 1142              	.LVL83:
 776:Core/Src/main.c ****     {
 1143              		.loc 1 776 13 discriminator 1 view .LVU181
 1144 005e 0028     		cmp	r0, #0
 1145 0060 00F08781 		beq	.L120
 797:Core/Src/main.c ****     {
 1146              		.loc 1 797 10 is_stmt 1 view .LVU182
 797:Core/Src/main.c ****     {
 1147              		.loc 1 797 14 is_stmt 0 view .LVU183
 1148 0064 0822     		movs	r2, #8
 1149 0066 9549     		ldr	r1, .L143+24
 1150 0068 2046     		mov	r0, r4
 1151 006a FFF7FEFF 		bl	strncmp
 1152              	.LVL84:
 797:Core/Src/main.c ****     {
 1153              		.loc 1 797 13 discriminator 1 view .LVU184
 1154 006e 0028     		cmp	r0, #0
 1155 0070 00F09681 		beq	.L121
 817:Core/Src/main.c ****     {
 1156              		.loc 1 817 10 is_stmt 1 view .LVU185
 817:Core/Src/main.c ****     {
 1157              		.loc 1 817 14 is_stmt 0 view .LVU186
 1158 0074 0622     		movs	r2, #6
 1159 0076 9249     		ldr	r1, .L143+28
 1160 0078 2046     		mov	r0, r4
 1161 007a FFF7FEFF 		bl	strncmp
 1162              	.LVL85:
 817:Core/Src/main.c ****     {
 1163              		.loc 1 817 13 discriminator 1 view .LVU187
 1164 007e 0546     		mov	r5, r0
 1165 0080 0028     		cmp	r0, #0
 1166 0082 00F0A281 		beq	.L122
 822:Core/Src/main.c ****     {
 1167              		.loc 1 822 10 is_stmt 1 view .LVU188
 822:Core/Src/main.c ****     {
 1168              		.loc 1 822 14 is_stmt 0 view .LVU189
 1169 0086 0622     		movs	r2, #6
 1170 0088 8E49     		ldr	r1, .L143+32
 1171 008a 2046     		mov	r0, r4
 1172 008c FFF7FEFF 		bl	strncmp
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 41


 1173              	.LVL86:
 822:Core/Src/main.c ****     {
 1174              		.loc 1 822 13 discriminator 1 view .LVU190
 1175 0090 0546     		mov	r5, r0
 1176 0092 0028     		cmp	r0, #0
 1177 0094 00F0A481 		beq	.L123
 827:Core/Src/main.c ****     {
 1178              		.loc 1 827 10 is_stmt 1 view .LVU191
 827:Core/Src/main.c ****     {
 1179              		.loc 1 827 14 is_stmt 0 view .LVU192
 1180 0098 0622     		movs	r2, #6
 1181 009a 8B49     		ldr	r1, .L143+36
 1182 009c 2046     		mov	r0, r4
 1183 009e FFF7FEFF 		bl	strncmp
 1184              	.LVL87:
 827:Core/Src/main.c ****     {
 1185              		.loc 1 827 13 discriminator 1 view .LVU193
 1186 00a2 0546     		mov	r5, r0
 1187 00a4 0028     		cmp	r0, #0
 1188 00a6 00F0A681 		beq	.L124
 832:Core/Src/main.c ****       {
 1189              		.loc 1 832 12 is_stmt 1 view .LVU194
 832:Core/Src/main.c ****       {
 1190              		.loc 1 832 16 is_stmt 0 view .LVU195
 1191 00aa 0622     		movs	r2, #6
 1192 00ac 8749     		ldr	r1, .L143+40
 1193 00ae 2046     		mov	r0, r4
 1194 00b0 FFF7FEFF 		bl	strncmp
 1195              	.LVL88:
 832:Core/Src/main.c ****       {
 1196              		.loc 1 832 15 discriminator 1 view .LVU196
 1197 00b4 0546     		mov	r5, r0
 1198 00b6 0028     		cmp	r0, #0
 1199 00b8 00F0A881 		beq	.L125
 837:Core/Src/main.c ****       {
 1200              		.loc 1 837 12 is_stmt 1 view .LVU197
 837:Core/Src/main.c ****       {
 1201              		.loc 1 837 16 is_stmt 0 view .LVU198
 1202 00bc 0622     		movs	r2, #6
 1203 00be 8449     		ldr	r1, .L143+44
 1204 00c0 2046     		mov	r0, r4
 1205 00c2 FFF7FEFF 		bl	strncmp
 1206              	.LVL89:
 837:Core/Src/main.c ****       {
 1207              		.loc 1 837 15 discriminator 1 view .LVU199
 1208 00c6 0546     		mov	r5, r0
 1209 00c8 0028     		cmp	r0, #0
 1210 00ca 00F0AA81 		beq	.L126
 842:Core/Src/main.c ****       {
 1211              		.loc 1 842 12 is_stmt 1 view .LVU200
 842:Core/Src/main.c ****       {
 1212              		.loc 1 842 16 is_stmt 0 view .LVU201
 1213 00ce 0522     		movs	r2, #5
 1214 00d0 8049     		ldr	r1, .L143+48
 1215 00d2 2046     		mov	r0, r4
 1216 00d4 FFF7FEFF 		bl	strncmp
 1217              	.LVL90:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 42


 842:Core/Src/main.c ****       {
 1218              		.loc 1 842 15 discriminator 1 view .LVU202
 1219 00d8 0028     		cmp	r0, #0
 1220 00da 50D0     		beq	.L71
 849:Core/Src/main.c ****     {
 1221              		.loc 1 849 10 is_stmt 1 view .LVU203
 849:Core/Src/main.c ****     {
 1222              		.loc 1 849 14 is_stmt 0 view .LVU204
 1223 00dc 0422     		movs	r2, #4
 1224 00de 7E49     		ldr	r1, .L143+52
 1225 00e0 2046     		mov	r0, r4
 1226 00e2 FFF7FEFF 		bl	strncmp
 1227              	.LVL91:
 849:Core/Src/main.c ****     {
 1228              		.loc 1 849 13 discriminator 1 view .LVU205
 1229 00e6 0028     		cmp	r0, #0
 1230 00e8 00F0A681 		beq	.L127
 859:Core/Src/main.c ****     {
 1231              		.loc 1 859 10 is_stmt 1 view .LVU206
 859:Core/Src/main.c ****     {
 1232              		.loc 1 859 14 is_stmt 0 view .LVU207
 1233 00ec 0522     		movs	r2, #5
 1234 00ee 7B49     		ldr	r1, .L143+56
 1235 00f0 2046     		mov	r0, r4
 1236 00f2 FFF7FEFF 		bl	strncmp
 1237              	.LVL92:
 859:Core/Src/main.c ****     {
 1238              		.loc 1 859 13 discriminator 1 view .LVU208
 1239 00f6 0028     		cmp	r0, #0
 1240 00f8 00F0A481 		beq	.L128
 869:Core/Src/main.c ****     {
 1241              		.loc 1 869 10 is_stmt 1 view .LVU209
 869:Core/Src/main.c ****     {
 1242              		.loc 1 869 14 is_stmt 0 view .LVU210
 1243 00fc 0522     		movs	r2, #5
 1244 00fe 7849     		ldr	r1, .L143+60
 1245 0100 2046     		mov	r0, r4
 1246 0102 FFF7FEFF 		bl	strncmp
 1247              	.LVL93:
 869:Core/Src/main.c ****     {
 1248              		.loc 1 869 13 discriminator 1 view .LVU211
 1249 0106 0028     		cmp	r0, #0
 1250 0108 00F0A681 		beq	.L129
 879:Core/Src/main.c ****     {
 1251              		.loc 1 879 10 is_stmt 1 view .LVU212
 879:Core/Src/main.c ****     {
 1252              		.loc 1 879 14 is_stmt 0 view .LVU213
 1253 010c 0622     		movs	r2, #6
 1254 010e 7549     		ldr	r1, .L143+64
 1255 0110 2046     		mov	r0, r4
 1256 0112 FFF7FEFF 		bl	strncmp
 1257              	.LVL94:
 879:Core/Src/main.c ****     {
 1258              		.loc 1 879 13 discriminator 1 view .LVU214
 1259 0116 0028     		cmp	r0, #0
 1260 0118 00F0BD81 		beq	.L130
 885:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 43


 1261              		.loc 1 885 10 is_stmt 1 view .LVU215
 885:Core/Src/main.c ****     {
 1262              		.loc 1 885 14 is_stmt 0 view .LVU216
 1263 011c 0722     		movs	r2, #7
 1264 011e 7249     		ldr	r1, .L143+68
 1265 0120 2046     		mov	r0, r4
 1266 0122 FFF7FEFF 		bl	strncmp
 1267              	.LVL95:
 885:Core/Src/main.c ****     {
 1268              		.loc 1 885 13 discriminator 1 view .LVU217
 1269 0126 0028     		cmp	r0, #0
 1270 0128 00F0BC81 		beq	.L131
 891:Core/Src/main.c ****     {
 1271              		.loc 1 891 10 is_stmt 1 view .LVU218
 891:Core/Src/main.c ****     {
 1272              		.loc 1 891 14 is_stmt 0 view .LVU219
 1273 012c 0422     		movs	r2, #4
 1274 012e 6F49     		ldr	r1, .L143+72
 1275 0130 2046     		mov	r0, r4
 1276 0132 FFF7FEFF 		bl	strncmp
 1277              	.LVL96:
 891:Core/Src/main.c ****     {
 1278              		.loc 1 891 13 discriminator 1 view .LVU220
 1279 0136 0028     		cmp	r0, #0
 1280 0138 00F0BB81 		beq	.L132
 896:Core/Src/main.c ****     {
 1281              		.loc 1 896 10 is_stmt 1 view .LVU221
 896:Core/Src/main.c ****     {
 1282              		.loc 1 896 14 is_stmt 0 view .LVU222
 1283 013c 0822     		movs	r2, #8
 1284 013e 6C49     		ldr	r1, .L143+76
 1285 0140 2046     		mov	r0, r4
 1286 0142 FFF7FEFF 		bl	strncmp
 1287              	.LVL97:
 896:Core/Src/main.c ****     {
 1288              		.loc 1 896 13 discriminator 1 view .LVU223
 1289 0146 0028     		cmp	r0, #0
 1290 0148 40F0BA81 		bne	.L113
 1291              	.LBB14:
 898:Core/Src/main.c ****         injectSequence(); 
 1292              		.loc 1 898 9 is_stmt 1 view .LVU224
 1293 014c 6948     		ldr	r0, .L143+80
 1294 014e FFF7FEFF 		bl	printf
 1295              	.LVL98:
 899:Core/Src/main.c ****         
 1296              		.loc 1 899 9 view .LVU225
 1297 0152 FFF7FEFF 		bl	injectSequence
 1298              	.LVL99:
 1299              	.LBE14:
 1300 0156 12E0     		b	.L71
 1301              	.L115:
 649:Core/Src/main.c **** 
 1302              		.loc 1 649 9 view .LVU226
 1303              	.LVL100:
 652:Core/Src/main.c ****         {
 1304              		.loc 1 652 9 view .LVU227
 652:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 44


 1305              		.loc 1 652 13 is_stmt 0 view .LVU228
 1306 0158 674B     		ldr	r3, .L143+84
 1307 015a 0393     		str	r3, [sp, #12]
 1308 015c 674B     		ldr	r3, .L143+88
 1309 015e 0293     		str	r3, [sp, #8]
 1310 0160 674B     		ldr	r3, .L143+92
 1311 0162 0193     		str	r3, [sp, #4]
 1312 0164 674B     		ldr	r3, .L143+96
 1313 0166 0093     		str	r3, [sp]
 1314 0168 674B     		ldr	r3, .L143+100
 1315 016a 684A     		ldr	r2, .L143+104
 1316 016c 6849     		ldr	r1, .L143+108
 1317 016e 201D     		adds	r0, r4, #4
 1318              	.LVL101:
 652:Core/Src/main.c ****         {
 1319              		.loc 1 652 13 view .LVU229
 1320 0170 FFF7FEFF 		bl	sscanf
 1321              	.LVL102:
 652:Core/Src/main.c ****         {
 1322              		.loc 1 652 12 discriminator 1 view .LVU230
 1323 0174 0628     		cmp	r0, #6
 1324 0176 04D0     		beq	.L133
 688:Core/Src/main.c ****         }
 1325              		.loc 1 688 13 is_stmt 1 view .LVU231
 1326 0178 6648     		ldr	r0, .L143+112
 1327 017a FFF7FEFF 		bl	puts
 1328              	.LVL103:
 1329              	.L71:
 908:Core/Src/main.c **** 
 1330              		.loc 1 908 1 is_stmt 0 view .LVU232
 1331 017e 45B0     		add	sp, sp, #276
 1332              	.LCFI38:
 1333              		.cfi_remember_state
 1334              		.cfi_def_cfa_offset 12
 1335              		@ sp needed
 1336 0180 30BD     		pop	{r4, r5, pc}
 1337              	.LVL104:
 1338              	.L133:
 1339              	.LCFI39:
 1340              		.cfi_restore_state
 655:Core/Src/main.c **** 
 1341              		.loc 1 655 13 is_stmt 1 view .LVU233
 1342 0182 624C     		ldr	r4, .L143+104
 1343              	.LVL105:
 655:Core/Src/main.c **** 
 1344              		.loc 1 655 13 is_stmt 0 view .LVU234
 1345 0184 5C4B     		ldr	r3, .L143+84
 1346 0186 1B68     		ldr	r3, [r3]
 1347 0188 0293     		str	r3, [sp, #8]
 1348 018a 5C4B     		ldr	r3, .L143+88
 1349 018c 1B68     		ldr	r3, [r3]
 1350 018e 0193     		str	r3, [sp, #4]
 1351 0190 5B4B     		ldr	r3, .L143+92
 1352 0192 1B68     		ldr	r3, [r3]
 1353 0194 0093     		str	r3, [sp]
 1354 0196 5B4B     		ldr	r3, .L143+96
 1355 0198 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 45


 1356 019a 5B4A     		ldr	r2, .L143+100
 1357 019c 1268     		ldr	r2, [r2]
 1358 019e 2168     		ldr	r1, [r4]
 1359 01a0 5D48     		ldr	r0, .L143+116
 1360 01a2 FFF7FEFF 		bl	printf
 1361              	.LVL106:
 658:Core/Src/main.c ****                 // send to joint
 1362              		.loc 1 658 13 is_stmt 1 view .LVU235
 658:Core/Src/main.c ****                 // send to joint
 1363              		.loc 1 658 24 is_stmt 0 view .LVU236
 1364 01a6 2068     		ldr	r0, [r4]
 1365 01a8 5C4B     		ldr	r3, .L143+120
 1366 01aa 1B68     		ldr	r3, [r3]
 658:Core/Src/main.c ****                 // send to joint
 1367              		.loc 1 658 16 view .LVU237
 1368 01ac 9842     		cmp	r0, r3
 1369 01ae 24D1     		bne	.L134
 1370              	.L74:
 663:Core/Src/main.c ****                 // send to joint
 1371              		.loc 1 663 13 is_stmt 1 view .LVU238
 663:Core/Src/main.c ****                 // send to joint
 1372              		.loc 1 663 24 is_stmt 0 view .LVU239
 1373 01b0 554B     		ldr	r3, .L143+100
 1374 01b2 1868     		ldr	r0, [r3]
 1375 01b4 5A4B     		ldr	r3, .L143+124
 1376 01b6 1B68     		ldr	r3, [r3]
 663:Core/Src/main.c ****                 // send to joint
 1377              		.loc 1 663 16 view .LVU240
 1378 01b8 9842     		cmp	r0, r3
 1379 01ba 23D1     		bne	.L135
 1380              	.L75:
 668:Core/Src/main.c ****                 // send to joint
 1381              		.loc 1 668 13 is_stmt 1 view .LVU241
 668:Core/Src/main.c ****                 // send to joint
 1382              		.loc 1 668 24 is_stmt 0 view .LVU242
 1383 01bc 514B     		ldr	r3, .L143+96
 1384 01be 1868     		ldr	r0, [r3]
 1385 01c0 584B     		ldr	r3, .L143+128
 1386 01c2 1B68     		ldr	r3, [r3]
 668:Core/Src/main.c ****                 // send to joint
 1387              		.loc 1 668 16 view .LVU243
 1388 01c4 9842     		cmp	r0, r3
 1389 01c6 22D1     		bne	.L136
 1390              	.L76:
 673:Core/Src/main.c ****                 // send to joint
 1391              		.loc 1 673 13 is_stmt 1 view .LVU244
 673:Core/Src/main.c ****                 // send to joint
 1392              		.loc 1 673 24 is_stmt 0 view .LVU245
 1393 01c8 4D4B     		ldr	r3, .L143+92
 1394 01ca 1B68     		ldr	r3, [r3]
 1395 01cc 564A     		ldr	r2, .L143+132
 1396 01ce 1268     		ldr	r2, [r2]
 673:Core/Src/main.c ****                 // send to joint
 1397              		.loc 1 673 16 view .LVU246
 1398 01d0 9342     		cmp	r3, r2
 1399 01d2 01D0     		beq	.L77
 675:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 46


 1400              		.loc 1 675 17 is_stmt 1 view .LVU247
 675:Core/Src/main.c ****             }
 1401              		.loc 1 675 29 is_stmt 0 view .LVU248
 1402 01d4 544A     		ldr	r2, .L143+132
 1403 01d6 1360     		str	r3, [r2]
 1404              	.L77:
 677:Core/Src/main.c ****                 // send to joint
 1405              		.loc 1 677 13 is_stmt 1 view .LVU249
 677:Core/Src/main.c ****                 // send to joint
 1406              		.loc 1 677 24 is_stmt 0 view .LVU250
 1407 01d8 484B     		ldr	r3, .L143+88
 1408 01da 1B68     		ldr	r3, [r3]
 1409 01dc 534A     		ldr	r2, .L143+136
 1410 01de 1268     		ldr	r2, [r2]
 677:Core/Src/main.c ****                 // send to joint
 1411              		.loc 1 677 16 view .LVU251
 1412 01e0 9342     		cmp	r3, r2
 1413 01e2 01D0     		beq	.L78
 679:Core/Src/main.c ****             }
 1414              		.loc 1 679 17 is_stmt 1 view .LVU252
 679:Core/Src/main.c ****             }
 1415              		.loc 1 679 29 is_stmt 0 view .LVU253
 1416 01e4 514A     		ldr	r2, .L143+136
 1417 01e6 1360     		str	r3, [r2]
 1418              	.L78:
 681:Core/Src/main.c ****                 // send to actuator
 1419              		.loc 1 681 13 is_stmt 1 view .LVU254
 681:Core/Src/main.c ****                 // send to actuator
 1420              		.loc 1 681 26 is_stmt 0 view .LVU255
 1421 01e8 434B     		ldr	r3, .L143+84
 1422 01ea 1B68     		ldr	r3, [r3]
 1423 01ec 504A     		ldr	r2, .L143+140
 1424 01ee 1268     		ldr	r2, [r2]
 681:Core/Src/main.c ****                 // send to actuator
 1425              		.loc 1 681 16 view .LVU256
 1426 01f0 9342     		cmp	r3, r2
 1427 01f2 C4D0     		beq	.L71
 683:Core/Src/main.c ****             }
 1428              		.loc 1 683 17 is_stmt 1 view .LVU257
 683:Core/Src/main.c ****             }
 1429              		.loc 1 683 31 is_stmt 0 view .LVU258
 1430 01f4 4E4A     		ldr	r2, .L143+140
 1431 01f6 1360     		str	r3, [r2]
 1432 01f8 C1E7     		b	.L71
 1433              	.L134:
 660:Core/Src/main.c ****                 Joint1Set(joint1);
 1434              		.loc 1 660 17 is_stmt 1 view .LVU259
 660:Core/Src/main.c ****                 Joint1Set(joint1);
 1435              		.loc 1 660 29 is_stmt 0 view .LVU260
 1436 01fa 484B     		ldr	r3, .L143+120
 1437 01fc 1860     		str	r0, [r3]
 661:Core/Src/main.c ****             }
 1438              		.loc 1 661 17 is_stmt 1 view .LVU261
 1439 01fe FFF7FEFF 		bl	Joint1Set
 1440              	.LVL107:
 1441 0202 D5E7     		b	.L74
 1442              	.L135:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 47


 665:Core/Src/main.c ****                 Joint2Set(joint2);
 1443              		.loc 1 665 17 view .LVU262
 665:Core/Src/main.c ****                 Joint2Set(joint2);
 1444              		.loc 1 665 29 is_stmt 0 view .LVU263
 1445 0204 464B     		ldr	r3, .L143+124
 1446 0206 1860     		str	r0, [r3]
 666:Core/Src/main.c ****             }
 1447              		.loc 1 666 17 is_stmt 1 view .LVU264
 1448 0208 FFF7FEFF 		bl	Joint2Set
 1449              	.LVL108:
 1450 020c D6E7     		b	.L75
 1451              	.L136:
 670:Core/Src/main.c ****                 Joint3Set(joint3);
 1452              		.loc 1 670 17 view .LVU265
 670:Core/Src/main.c ****                 Joint3Set(joint3);
 1453              		.loc 1 670 29 is_stmt 0 view .LVU266
 1454 020e 454B     		ldr	r3, .L143+128
 1455 0210 1860     		str	r0, [r3]
 671:Core/Src/main.c ****             }
 1456              		.loc 1 671 17 is_stmt 1 view .LVU267
 1457 0212 FFF7FEFF 		bl	Joint3Set
 1458              	.LVL109:
 1459 0216 D7E7     		b	.L76
 1460              	.LVL110:
 1461              	.L116:
 694:Core/Src/main.c **** 
 1462              		.loc 1 694 9 view .LVU268
 696:Core/Src/main.c ****         {
 1463              		.loc 1 696 9 view .LVU269
 696:Core/Src/main.c ****         {
 1464              		.loc 1 696 13 is_stmt 0 view .LVU270
 1465 0218 3C4A     		ldr	r2, .L143+104
 1466 021a 4649     		ldr	r1, .L143+144
 1467 021c E01D     		adds	r0, r4, #7
 1468              	.LVL111:
 696:Core/Src/main.c ****         {
 1469              		.loc 1 696 13 view .LVU271
 1470 021e FFF7FEFF 		bl	sscanf
 1471              	.LVL112:
 696:Core/Src/main.c ****         {
 1472              		.loc 1 696 12 discriminator 1 view .LVU272
 1473 0222 0128     		cmp	r0, #1
 1474 0224 03D0     		beq	.L137
 708:Core/Src/main.c ****         }
 1475              		.loc 1 708 13 is_stmt 1 view .LVU273
 1476 0226 3B48     		ldr	r0, .L143+112
 1477 0228 FFF7FEFF 		bl	puts
 1478              	.LVL113:
 1479 022c A7E7     		b	.L71
 1480              	.L137:
 699:Core/Src/main.c **** 
 1481              		.loc 1 699 13 view .LVU274
 1482 022e 374C     		ldr	r4, .L143+104
 1483              	.LVL114:
 699:Core/Src/main.c **** 
 1484              		.loc 1 699 13 is_stmt 0 view .LVU275
 1485 0230 2168     		ldr	r1, [r4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 48


 1486 0232 4148     		ldr	r0, .L143+148
 1487 0234 FFF7FEFF 		bl	printf
 1488              	.LVL115:
 702:Core/Src/main.c ****                 prev_joint1 = joint1;
 1489              		.loc 1 702 17 is_stmt 1 view .LVU276
 1490 0238 2068     		ldr	r0, [r4]
 1491 023a FFF7FEFF 		bl	Joint1Set
 1492              	.LVL116:
 703:Core/Src/main.c ****             //}
 1493              		.loc 1 703 17 view .LVU277
 703:Core/Src/main.c ****             //}
 1494              		.loc 1 703 29 is_stmt 0 view .LVU278
 1495 023e 2268     		ldr	r2, [r4]
 1496 0240 364B     		ldr	r3, .L143+120
 1497 0242 1A60     		str	r2, [r3]
 1498 0244 9BE7     		b	.L71
 1499              	.LVL117:
 1500              	.L117:
 715:Core/Src/main.c **** 
 1501              		.loc 1 715 9 is_stmt 1 view .LVU279
 717:Core/Src/main.c ****         {
 1502              		.loc 1 717 9 view .LVU280
 717:Core/Src/main.c ****         {
 1503              		.loc 1 717 13 is_stmt 0 view .LVU281
 1504 0246 304A     		ldr	r2, .L143+100
 1505 0248 3A49     		ldr	r1, .L143+144
 1506 024a E01D     		adds	r0, r4, #7
 1507              	.LVL118:
 717:Core/Src/main.c ****         {
 1508              		.loc 1 717 13 view .LVU282
 1509 024c FFF7FEFF 		bl	sscanf
 1510              	.LVL119:
 717:Core/Src/main.c ****         {
 1511              		.loc 1 717 12 discriminator 1 view .LVU283
 1512 0250 0128     		cmp	r0, #1
 1513 0252 03D0     		beq	.L138
 729:Core/Src/main.c ****         }
 1514              		.loc 1 729 13 is_stmt 1 view .LVU284
 1515 0254 2F48     		ldr	r0, .L143+112
 1516 0256 FFF7FEFF 		bl	puts
 1517              	.LVL120:
 1518 025a 90E7     		b	.L71
 1519              	.L138:
 720:Core/Src/main.c **** 
 1520              		.loc 1 720 13 view .LVU285
 1521 025c 2A4C     		ldr	r4, .L143+100
 1522              	.LVL121:
 720:Core/Src/main.c **** 
 1523              		.loc 1 720 13 is_stmt 0 view .LVU286
 1524 025e 2168     		ldr	r1, [r4]
 1525 0260 3648     		ldr	r0, .L143+152
 1526 0262 FFF7FEFF 		bl	printf
 1527              	.LVL122:
 723:Core/Src/main.c ****                 prev_joint2 = joint2;
 1528              		.loc 1 723 17 is_stmt 1 view .LVU287
 1529 0266 2068     		ldr	r0, [r4]
 1530 0268 FFF7FEFF 		bl	Joint2Set
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 49


 1531              	.LVL123:
 724:Core/Src/main.c ****             //}
 1532              		.loc 1 724 17 view .LVU288
 724:Core/Src/main.c ****             //}
 1533              		.loc 1 724 29 is_stmt 0 view .LVU289
 1534 026c 2268     		ldr	r2, [r4]
 1535 026e 2C4B     		ldr	r3, .L143+124
 1536 0270 1A60     		str	r2, [r3]
 1537 0272 84E7     		b	.L71
 1538              	.LVL124:
 1539              	.L118:
 736:Core/Src/main.c **** 
 1540              		.loc 1 736 9 is_stmt 1 view .LVU290
 738:Core/Src/main.c ****         {
 1541              		.loc 1 738 9 view .LVU291
 738:Core/Src/main.c ****         {
 1542              		.loc 1 738 13 is_stmt 0 view .LVU292
 1543 0274 234A     		ldr	r2, .L143+96
 1544 0276 2F49     		ldr	r1, .L143+144
 1545 0278 E01D     		adds	r0, r4, #7
 1546              	.LVL125:
 738:Core/Src/main.c ****         {
 1547              		.loc 1 738 13 view .LVU293
 1548 027a FFF7FEFF 		bl	sscanf
 1549              	.LVL126:
 738:Core/Src/main.c ****         {
 1550              		.loc 1 738 12 discriminator 1 view .LVU294
 1551 027e 0128     		cmp	r0, #1
 1552 0280 03D0     		beq	.L139
 750:Core/Src/main.c ****         }
 1553              		.loc 1 750 13 is_stmt 1 view .LVU295
 1554 0282 2448     		ldr	r0, .L143+112
 1555 0284 FFF7FEFF 		bl	puts
 1556              	.LVL127:
 1557 0288 79E7     		b	.L71
 1558              	.L139:
 741:Core/Src/main.c **** 
 1559              		.loc 1 741 13 view .LVU296
 1560 028a 1E4C     		ldr	r4, .L143+96
 1561              	.LVL128:
 741:Core/Src/main.c **** 
 1562              		.loc 1 741 13 is_stmt 0 view .LVU297
 1563 028c 2168     		ldr	r1, [r4]
 1564 028e 2C48     		ldr	r0, .L143+156
 1565 0290 FFF7FEFF 		bl	printf
 1566              	.LVL129:
 744:Core/Src/main.c ****                 prev_joint3 = joint3;
 1567              		.loc 1 744 17 is_stmt 1 view .LVU298
 1568 0294 2068     		ldr	r0, [r4]
 1569 0296 FFF7FEFF 		bl	Joint3Set
 1570              	.LVL130:
 745:Core/Src/main.c ****             //}
 1571              		.loc 1 745 17 view .LVU299
 745:Core/Src/main.c ****             //}
 1572              		.loc 1 745 29 is_stmt 0 view .LVU300
 1573 029a 2268     		ldr	r2, [r4]
 1574 029c 214B     		ldr	r3, .L143+128
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 50


 1575 029e 1A60     		str	r2, [r3]
 1576 02a0 6DE7     		b	.L71
 1577              	.L144:
 1578 02a2 00BF     		.align	2
 1579              	.L143:
 1580 02a4 00000000 		.word	.LC2
 1581 02a8 58000000 		.word	.LC6
 1582 02ac 78000000 		.word	.LC9
 1583 02b0 94000000 		.word	.LC11
 1584 02b4 B0000000 		.word	.LC13
 1585 02b8 CC000000 		.word	.LC15
 1586 02bc E8000000 		.word	.LC17
 1587 02c0 08010000 		.word	.LC19
 1588 02c4 10010000 		.word	.LC20
 1589 02c8 18010000 		.word	.LC21
 1590 02cc 20010000 		.word	.LC22
 1591 02d0 28010000 		.word	.LC23
 1592 02d4 30010000 		.word	.LC24
 1593 02d8 38010000 		.word	.LC25
 1594 02dc 58010000 		.word	.LC27
 1595 02e0 70010000 		.word	.LC29
 1596 02e4 D8010000 		.word	.LC36
 1597 02e8 F0010000 		.word	.LC38
 1598 02ec 08020000 		.word	.LC40
 1599 02f0 1C020000 		.word	.LC42
 1600 02f4 28020000 		.word	.LC43
 1601 02f8 00000000 		.word	actuator
 1602 02fc 00000000 		.word	joint5
 1603 0300 00000000 		.word	joint4
 1604 0304 00000000 		.word	joint3
 1605 0308 00000000 		.word	joint2
 1606 030c 00000000 		.word	joint1
 1607 0310 04000000 		.word	.LC3
 1608 0314 44000000 		.word	.LC5
 1609 0318 1C000000 		.word	.LC4
 1610 031c 00000000 		.word	prev_joint1
 1611 0320 00000000 		.word	prev_joint2
 1612 0324 00000000 		.word	prev_joint3
 1613 0328 00000000 		.word	prev_joint4
 1614 032c 00000000 		.word	prev_joint5
 1615 0330 00000000 		.word	prev_actuator
 1616 0334 60000000 		.word	.LC7
 1617 0338 64000000 		.word	.LC8
 1618 033c 80000000 		.word	.LC10
 1619 0340 9C000000 		.word	.LC12
 1620              	.LVL131:
 1621              	.L119:
 757:Core/Src/main.c **** 
 1622              		.loc 1 757 9 is_stmt 1 view .LVU301
 759:Core/Src/main.c ****         {
 1623              		.loc 1 759 9 view .LVU302
 759:Core/Src/main.c ****         {
 1624              		.loc 1 759 13 is_stmt 0 view .LVU303
 1625 0344 614A     		ldr	r2, .L145
 1626 0346 6249     		ldr	r1, .L145+4
 1627 0348 E01D     		adds	r0, r4, #7
 1628              	.LVL132:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 51


 759:Core/Src/main.c ****         {
 1629              		.loc 1 759 13 view .LVU304
 1630 034a FFF7FEFF 		bl	sscanf
 1631              	.LVL133:
 759:Core/Src/main.c ****         {
 1632              		.loc 1 759 12 discriminator 1 view .LVU305
 1633 034e 0128     		cmp	r0, #1
 1634 0350 03D0     		beq	.L140
 771:Core/Src/main.c ****         }
 1635              		.loc 1 771 13 is_stmt 1 view .LVU306
 1636 0352 6048     		ldr	r0, .L145+8
 1637 0354 FFF7FEFF 		bl	puts
 1638              	.LVL134:
 1639 0358 11E7     		b	.L71
 1640              	.L140:
 762:Core/Src/main.c **** 
 1641              		.loc 1 762 13 view .LVU307
 1642 035a 5C4C     		ldr	r4, .L145
 1643              	.LVL135:
 762:Core/Src/main.c **** 
 1644              		.loc 1 762 13 is_stmt 0 view .LVU308
 1645 035c 2168     		ldr	r1, [r4]
 1646 035e 5E48     		ldr	r0, .L145+12
 1647 0360 FFF7FEFF 		bl	printf
 1648              	.LVL136:
 765:Core/Src/main.c ****                 prev_joint4 = joint4;
 1649              		.loc 1 765 17 is_stmt 1 view .LVU309
 1650 0364 2068     		ldr	r0, [r4]
 1651 0366 FFF7FEFF 		bl	Joint4Set
 1652              	.LVL137:
 766:Core/Src/main.c ****             //}
 1653              		.loc 1 766 17 view .LVU310
 766:Core/Src/main.c ****             //}
 1654              		.loc 1 766 29 is_stmt 0 view .LVU311
 1655 036a 2268     		ldr	r2, [r4]
 1656 036c 5B4B     		ldr	r3, .L145+16
 1657 036e 1A60     		str	r2, [r3]
 1658 0370 05E7     		b	.L71
 1659              	.LVL138:
 1660              	.L120:
 778:Core/Src/main.c **** 
 1661              		.loc 1 778 9 is_stmt 1 view .LVU312
 780:Core/Src/main.c ****         {
 1662              		.loc 1 780 9 view .LVU313
 780:Core/Src/main.c ****         {
 1663              		.loc 1 780 13 is_stmt 0 view .LVU314
 1664 0372 5B4A     		ldr	r2, .L145+20
 1665 0374 5649     		ldr	r1, .L145+4
 1666 0376 E01D     		adds	r0, r4, #7
 1667              	.LVL139:
 780:Core/Src/main.c ****         {
 1668              		.loc 1 780 13 view .LVU315
 1669 0378 FFF7FEFF 		bl	sscanf
 1670              	.LVL140:
 780:Core/Src/main.c ****         {
 1671              		.loc 1 780 12 discriminator 1 view .LVU316
 1672 037c 0128     		cmp	r0, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 52


 1673 037e 03D0     		beq	.L141
 792:Core/Src/main.c ****         }
 1674              		.loc 1 792 13 is_stmt 1 view .LVU317
 1675 0380 5448     		ldr	r0, .L145+8
 1676 0382 FFF7FEFF 		bl	puts
 1677              	.LVL141:
 1678 0386 FAE6     		b	.L71
 1679              	.L141:
 783:Core/Src/main.c **** 
 1680              		.loc 1 783 13 view .LVU318
 1681 0388 554C     		ldr	r4, .L145+20
 1682              	.LVL142:
 783:Core/Src/main.c **** 
 1683              		.loc 1 783 13 is_stmt 0 view .LVU319
 1684 038a 2168     		ldr	r1, [r4]
 1685 038c 5548     		ldr	r0, .L145+24
 1686 038e FFF7FEFF 		bl	printf
 1687              	.LVL143:
 786:Core/Src/main.c ****                 prev_joint5 = joint5;
 1688              		.loc 1 786 17 is_stmt 1 view .LVU320
 1689 0392 2068     		ldr	r0, [r4]
 1690 0394 FFF7FEFF 		bl	Joint5Set
 1691              	.LVL144:
 787:Core/Src/main.c ****             //}
 1692              		.loc 1 787 17 view .LVU321
 787:Core/Src/main.c ****             //}
 1693              		.loc 1 787 29 is_stmt 0 view .LVU322
 1694 0398 2268     		ldr	r2, [r4]
 1695 039a 534B     		ldr	r3, .L145+28
 1696 039c 1A60     		str	r2, [r3]
 1697 039e EEE6     		b	.L71
 1698              	.LVL145:
 1699              	.L121:
 799:Core/Src/main.c **** 
 1700              		.loc 1 799 9 is_stmt 1 view .LVU323
 801:Core/Src/main.c ****         {
 1701              		.loc 1 801 9 view .LVU324
 801:Core/Src/main.c ****         {
 1702              		.loc 1 801 13 is_stmt 0 view .LVU325
 1703 03a0 524A     		ldr	r2, .L145+32
 1704 03a2 4B49     		ldr	r1, .L145+4
 1705 03a4 04F10900 		add	r0, r4, #9
 1706              	.LVL146:
 801:Core/Src/main.c ****         {
 1707              		.loc 1 801 13 view .LVU326
 1708 03a8 FFF7FEFF 		bl	sscanf
 1709              	.LVL147:
 801:Core/Src/main.c ****         {
 1710              		.loc 1 801 12 discriminator 1 view .LVU327
 1711 03ac 0128     		cmp	r0, #1
 1712 03ae 03D0     		beq	.L142
 813:Core/Src/main.c ****         }
 1713              		.loc 1 813 13 is_stmt 1 view .LVU328
 1714 03b0 4848     		ldr	r0, .L145+8
 1715 03b2 FFF7FEFF 		bl	puts
 1716              	.LVL148:
 1717 03b6 E2E6     		b	.L71
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 53


 1718              	.L142:
 804:Core/Src/main.c **** 
 1719              		.loc 1 804 13 view .LVU329
 1720 03b8 4C4C     		ldr	r4, .L145+32
 1721              	.LVL149:
 804:Core/Src/main.c **** 
 1722              		.loc 1 804 13 is_stmt 0 view .LVU330
 1723 03ba 2168     		ldr	r1, [r4]
 1724 03bc 4C48     		ldr	r0, .L145+36
 1725 03be FFF7FEFF 		bl	printf
 1726              	.LVL150:
 807:Core/Src/main.c ****                 prev_actuator = actuator;
 1727              		.loc 1 807 17 is_stmt 1 view .LVU331
 1728 03c2 2268     		ldr	r2, [r4]
 808:Core/Src/main.c ****             //}
 1729              		.loc 1 808 17 view .LVU332
 808:Core/Src/main.c ****             //}
 1730              		.loc 1 808 31 is_stmt 0 view .LVU333
 1731 03c4 4B4B     		ldr	r3, .L145+40
 1732 03c6 1A60     		str	r2, [r3]
 1733 03c8 D9E6     		b	.L71
 1734              	.LVL151:
 1735              	.L122:
 819:Core/Src/main.c ****     }
 1736              		.loc 1 819 9 is_stmt 1 view .LVU334
 1737              	.LBB15:
 819:Core/Src/main.c ****     }
 1738              		.loc 1 819 9 view .LVU335
 819:Core/Src/main.c ****     }
 1739              		.loc 1 819 9 view .LVU336
 1740 03ca 4B4B     		ldr	r3, .L145+44
 1741 03cc 0493     		str	r3, [sp, #16]
 1742              	.LVL152:
 819:Core/Src/main.c ****     }
 1743              		.loc 1 819 9 discriminator 1 view .LVU337
 1744              	.LBB16:
 819:Core/Src/main.c ****     }
 1745              		.loc 1 819 9 discriminator 1 view .LVU338
 819:Core/Src/main.c ****     }
 1746              		.loc 1 819 9 is_stmt 0 view .LVU339
 1747 03ce 04E0     		b	.L93
 1748              	.LVL153:
 1749              	.L94:
 819:Core/Src/main.c ****     }
 1750              		.loc 1 819 9 is_stmt 1 discriminator 3 view .LVU340
 1751 03d0 04AB     		add	r3, sp, #16
 1752 03d2 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1753 03d4 FFF7FEFF 		bl	__io_putchar_usart6
 1754              	.LVL154:
 819:Core/Src/main.c ****     }
 1755              		.loc 1 819 9 discriminator 3 view .LVU341
 1756 03d8 0135     		adds	r5, r5, #1
 1757              	.LVL155:
 1758              	.L93:
 819:Core/Src/main.c ****     }
 1759              		.loc 1 819 9 discriminator 2 view .LVU342
 1760 03da 022D     		cmp	r5, #2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 54


 1761 03dc F8DD     		ble	.L94
 1762 03de CEE6     		b	.L71
 1763              	.LVL156:
 1764              	.L123:
 819:Core/Src/main.c ****     }
 1765              		.loc 1 819 9 is_stmt 0 discriminator 2 view .LVU343
 1766              	.LBE16:
 1767              	.LBE15:
 824:Core/Src/main.c ****     }
 1768              		.loc 1 824 9 is_stmt 1 view .LVU344
 1769              	.LBB17:
 824:Core/Src/main.c ****     }
 1770              		.loc 1 824 9 view .LVU345
 824:Core/Src/main.c ****     }
 1771              		.loc 1 824 9 view .LVU346
 1772 03e0 454B     		ldr	r3, .L145+44
 1773 03e2 0493     		str	r3, [sp, #16]
 1774              	.LVL157:
 824:Core/Src/main.c ****     }
 1775              		.loc 1 824 9 discriminator 1 view .LVU347
 1776              	.LBB18:
 824:Core/Src/main.c ****     }
 1777              		.loc 1 824 9 discriminator 1 view .LVU348
 824:Core/Src/main.c ****     }
 1778              		.loc 1 824 9 is_stmt 0 view .LVU349
 1779 03e4 04E0     		b	.L96
 1780              	.LVL158:
 1781              	.L97:
 824:Core/Src/main.c ****     }
 1782              		.loc 1 824 9 is_stmt 1 discriminator 3 view .LVU350
 1783 03e6 04AB     		add	r3, sp, #16
 1784 03e8 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1785 03ea FFF7FEFF 		bl	__io_putchar_usart2
 1786              	.LVL159:
 824:Core/Src/main.c ****     }
 1787              		.loc 1 824 9 discriminator 3 view .LVU351
 1788 03ee 0135     		adds	r5, r5, #1
 1789              	.LVL160:
 1790              	.L96:
 824:Core/Src/main.c ****     }
 1791              		.loc 1 824 9 discriminator 2 view .LVU352
 1792 03f0 022D     		cmp	r5, #2
 1793 03f2 F8DD     		ble	.L97
 1794 03f4 C3E6     		b	.L71
 1795              	.LVL161:
 1796              	.L124:
 824:Core/Src/main.c ****     }
 1797              		.loc 1 824 9 is_stmt 0 discriminator 2 view .LVU353
 1798              	.LBE18:
 1799              	.LBE17:
 829:Core/Src/main.c ****     }
 1800              		.loc 1 829 9 is_stmt 1 view .LVU354
 1801              	.LBB19:
 829:Core/Src/main.c ****     }
 1802              		.loc 1 829 9 view .LVU355
 829:Core/Src/main.c ****     }
 1803              		.loc 1 829 9 view .LVU356
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 55


 1804 03f6 404B     		ldr	r3, .L145+44
 1805 03f8 0493     		str	r3, [sp, #16]
 1806              	.LVL162:
 829:Core/Src/main.c ****     }
 1807              		.loc 1 829 9 discriminator 1 view .LVU357
 1808              	.LBB20:
 829:Core/Src/main.c ****     }
 1809              		.loc 1 829 9 discriminator 1 view .LVU358
 829:Core/Src/main.c ****     }
 1810              		.loc 1 829 9 is_stmt 0 view .LVU359
 1811 03fa 04E0     		b	.L99
 1812              	.LVL163:
 1813              	.L100:
 829:Core/Src/main.c ****     }
 1814              		.loc 1 829 9 is_stmt 1 discriminator 3 view .LVU360
 1815 03fc 04AB     		add	r3, sp, #16
 1816 03fe 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1817 0400 FFF7FEFF 		bl	__io_putchar_usart3
 1818              	.LVL164:
 829:Core/Src/main.c ****     }
 1819              		.loc 1 829 9 discriminator 3 view .LVU361
 1820 0404 0135     		adds	r5, r5, #1
 1821              	.LVL165:
 1822              	.L99:
 829:Core/Src/main.c ****     }
 1823              		.loc 1 829 9 discriminator 2 view .LVU362
 1824 0406 022D     		cmp	r5, #2
 1825 0408 F8DD     		ble	.L100
 1826 040a B8E6     		b	.L71
 1827              	.LVL166:
 1828              	.L125:
 829:Core/Src/main.c ****     }
 1829              		.loc 1 829 9 is_stmt 0 discriminator 2 view .LVU363
 1830              	.LBE20:
 1831              	.LBE19:
 834:Core/Src/main.c ****       }
 1832              		.loc 1 834 11 is_stmt 1 view .LVU364
 1833              	.LBB21:
 834:Core/Src/main.c ****       }
 1834              		.loc 1 834 11 view .LVU365
 834:Core/Src/main.c ****       }
 1835              		.loc 1 834 11 view .LVU366
 1836 040c 3A4B     		ldr	r3, .L145+44
 1837 040e 0493     		str	r3, [sp, #16]
 1838              	.LVL167:
 834:Core/Src/main.c ****       }
 1839              		.loc 1 834 11 discriminator 1 view .LVU367
 1840              	.LBB22:
 834:Core/Src/main.c ****       }
 1841              		.loc 1 834 11 discriminator 1 view .LVU368
 834:Core/Src/main.c ****       }
 1842              		.loc 1 834 11 is_stmt 0 view .LVU369
 1843 0410 04E0     		b	.L102
 1844              	.LVL168:
 1845              	.L103:
 834:Core/Src/main.c ****       }
 1846              		.loc 1 834 11 is_stmt 1 discriminator 3 view .LVU370
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 56


 1847 0412 04AB     		add	r3, sp, #16
 1848 0414 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1849 0416 FFF7FEFF 		bl	__io_putchar_uart4
 1850              	.LVL169:
 834:Core/Src/main.c ****       }
 1851              		.loc 1 834 11 discriminator 3 view .LVU371
 1852 041a 0135     		adds	r5, r5, #1
 1853              	.LVL170:
 1854              	.L102:
 834:Core/Src/main.c ****       }
 1855              		.loc 1 834 11 discriminator 2 view .LVU372
 1856 041c 022D     		cmp	r5, #2
 1857 041e F8DD     		ble	.L103
 1858 0420 ADE6     		b	.L71
 1859              	.LVL171:
 1860              	.L126:
 834:Core/Src/main.c ****       }
 1861              		.loc 1 834 11 is_stmt 0 discriminator 2 view .LVU373
 1862              	.LBE22:
 1863              	.LBE21:
 839:Core/Src/main.c ****       }
 1864              		.loc 1 839 11 is_stmt 1 view .LVU374
 1865              	.LBB23:
 839:Core/Src/main.c ****       }
 1866              		.loc 1 839 11 view .LVU375
 839:Core/Src/main.c ****       }
 1867              		.loc 1 839 11 view .LVU376
 1868 0422 354B     		ldr	r3, .L145+44
 1869 0424 0493     		str	r3, [sp, #16]
 1870              	.LVL172:
 839:Core/Src/main.c ****       }
 1871              		.loc 1 839 11 discriminator 1 view .LVU377
 1872              	.LBB24:
 839:Core/Src/main.c ****       }
 1873              		.loc 1 839 11 discriminator 1 view .LVU378
 839:Core/Src/main.c ****       }
 1874              		.loc 1 839 11 is_stmt 0 view .LVU379
 1875 0426 04E0     		b	.L105
 1876              	.LVL173:
 1877              	.L106:
 839:Core/Src/main.c ****       }
 1878              		.loc 1 839 11 is_stmt 1 discriminator 3 view .LVU380
 1879 0428 04AB     		add	r3, sp, #16
 1880 042a 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1881 042c FFF7FEFF 		bl	__io_putchar_uart5
 1882              	.LVL174:
 839:Core/Src/main.c ****       }
 1883              		.loc 1 839 11 discriminator 3 view .LVU381
 1884 0430 0135     		adds	r5, r5, #1
 1885              	.LVL175:
 1886              	.L105:
 839:Core/Src/main.c ****       }
 1887              		.loc 1 839 11 discriminator 2 view .LVU382
 1888 0432 022D     		cmp	r5, #2
 1889 0434 F8DD     		ble	.L106
 1890 0436 A2E6     		b	.L71
 1891              	.LVL176:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 57


 1892              	.L127:
 839:Core/Src/main.c ****       }
 1893              		.loc 1 839 11 is_stmt 0 discriminator 2 view .LVU383
 1894              	.LBE24:
 1895              	.LBE23:
 1896              	.LBB25:
 851:Core/Src/main.c ****         
 1897              		.loc 1 851 9 is_stmt 1 view .LVU384
 853:Core/Src/main.c ****         
 1898              		.loc 1 853 9 view .LVU385
 1899 0438 FFF7FEFF 		bl	HomeSet
 1900              	.LVL177:
 855:Core/Src/main.c **** 
 1901              		.loc 1 855 9 view .LVU386
 1902 043c 2F48     		ldr	r0, .L145+48
 1903 043e FFF7FEFF 		bl	puts
 1904              	.LVL178:
 1905              	.LBE25:
 1906 0442 9CE6     		b	.L71
 1907              	.LVL179:
 1908              	.L128:
 861:Core/Src/main.c ****         ledFlag = !ledFlag;
 1909              		.loc 1 861 9 view .LVU387
 862:Core/Src/main.c ****         
 1910              		.loc 1 862 9 view .LVU388
 862:Core/Src/main.c ****         
 1911              		.loc 1 862 19 is_stmt 0 view .LVU389
 1912 0444 2E4A     		ldr	r2, .L145+52
 1913 0446 1368     		ldr	r3, [r2]
 1914 0448 B3FA83F3 		clz	r3, r3
 1915 044c 5B09     		lsrs	r3, r3, #5
 862:Core/Src/main.c ****         
 1916              		.loc 1 862 17 view .LVU390
 1917 044e 1360     		str	r3, [r2]
 864:Core/Src/main.c **** 
 1918              		.loc 1 864 9 is_stmt 1 view .LVU391
 1919 0450 2C48     		ldr	r0, .L145+56
 1920 0452 FFF7FEFF 		bl	puts
 1921              	.LVL180:
 1922 0456 92E6     		b	.L71
 1923              	.LVL181:
 1924              	.L129:
 871:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 1925              		.loc 1 871 8 view .LVU392
 1926 0458 2B4B     		ldr	r3, .L145+60
 1927 045a 1968     		ldr	r1, [r3]
 1928 045c 2B48     		ldr	r0, .L145+64
 1929 045e FFF7FEFF 		bl	printf
 1930              	.LVL182:
 872:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 1931              		.loc 1 872 8 view .LVU393
 1932 0462 2B4B     		ldr	r3, .L145+68
 1933 0464 1968     		ldr	r1, [r3]
 1934 0466 2B48     		ldr	r0, .L145+72
 1935 0468 FFF7FEFF 		bl	printf
 1936              	.LVL183:
 873:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 58


 1937              		.loc 1 873 8 view .LVU394
 1938 046c 2A4B     		ldr	r3, .L145+76
 1939 046e 1968     		ldr	r1, [r3]
 1940 0470 2A48     		ldr	r0, .L145+80
 1941 0472 FFF7FEFF 		bl	printf
 1942              	.LVL184:
 874:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 1943              		.loc 1 874 8 view .LVU395
 1944 0476 154B     		ldr	r3, .L145
 1945 0478 1968     		ldr	r1, [r3]
 1946 047a 2948     		ldr	r0, .L145+84
 1947 047c FFF7FEFF 		bl	printf
 1948              	.LVL185:
 875:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 1949              		.loc 1 875 8 view .LVU396
 1950 0480 174B     		ldr	r3, .L145+20
 1951 0482 1968     		ldr	r1, [r3]
 1952 0484 2748     		ldr	r0, .L145+88
 1953 0486 FFF7FEFF 		bl	printf
 1954              	.LVL186:
 876:Core/Src/main.c ****     }
 1955              		.loc 1 876 8 view .LVU397
 1956 048a 184B     		ldr	r3, .L145+32
 1957 048c 1968     		ldr	r1, [r3]
 1958 048e 2648     		ldr	r0, .L145+92
 1959 0490 FFF7FEFF 		bl	printf
 1960              	.LVL187:
 1961 0494 73E6     		b	.L71
 1962              	.L130:
 881:Core/Src/main.c ****         printf("injecting...\r\n");
 1963              		.loc 1 881 9 view .LVU398
 881:Core/Src/main.c ****         printf("injecting...\r\n");
 1964              		.loc 1 881 20 is_stmt 0 view .LVU399
 1965 0496 254B     		ldr	r3, .L145+96
 1966 0498 0122     		movs	r2, #1
 1967 049a 1A60     		str	r2, [r3]
 882:Core/Src/main.c ****     }
 1968              		.loc 1 882 9 is_stmt 1 view .LVU400
 1969 049c 2448     		ldr	r0, .L145+100
 1970 049e FFF7FEFF 		bl	puts
 1971              	.LVL188:
 1972 04a2 6CE6     		b	.L71
 1973              	.L131:
 887:Core/Src/main.c ****         printf("retracting...\r\n");
 1974              		.loc 1 887 9 view .LVU401
 887:Core/Src/main.c ****         printf("retracting...\r\n");
 1975              		.loc 1 887 20 is_stmt 0 view .LVU402
 1976 04a4 214B     		ldr	r3, .L145+96
 1977 04a6 0222     		movs	r2, #2
 1978 04a8 1A60     		str	r2, [r3]
 888:Core/Src/main.c ****     }
 1979              		.loc 1 888 9 is_stmt 1 view .LVU403
 1980 04aa 2248     		ldr	r0, .L145+104
 1981 04ac FFF7FEFF 		bl	puts
 1982              	.LVL189:
 1983 04b0 65E6     		b	.L71
 1984              	.L132:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 59


 893:Core/Src/main.c ****         printf("stopped.\r\n"); 
 1985              		.loc 1 893 9 view .LVU404
 893:Core/Src/main.c ****         printf("stopped.\r\n"); 
 1986              		.loc 1 893 20 is_stmt 0 view .LVU405
 1987 04b2 1E4B     		ldr	r3, .L145+96
 1988 04b4 0022     		movs	r2, #0
 1989 04b6 1A60     		str	r2, [r3]
 894:Core/Src/main.c ****     }
 1990              		.loc 1 894 9 is_stmt 1 view .LVU406
 1991 04b8 1F48     		ldr	r0, .L145+108
 1992 04ba FFF7FEFF 		bl	puts
 1993              	.LVL190:
 1994 04be 5EE6     		b	.L71
 1995              	.L113:
 906:Core/Src/main.c ****     }
 1996              		.loc 1 906 9 view .LVU407
 1997 04c0 2146     		mov	r1, r4
 1998 04c2 1E48     		ldr	r0, .L145+112
 1999 04c4 FFF7FEFF 		bl	printf
 2000              	.LVL191:
 908:Core/Src/main.c **** 
 2001              		.loc 1 908 1 is_stmt 0 view .LVU408
 2002 04c8 59E6     		b	.L71
 2003              	.L146:
 2004 04ca 00BF     		.align	2
 2005              	.L145:
 2006 04cc 00000000 		.word	joint4
 2007 04d0 60000000 		.word	.LC7
 2008 04d4 44000000 		.word	.LC5
 2009 04d8 B8000000 		.word	.LC14
 2010 04dc 00000000 		.word	prev_joint4
 2011 04e0 00000000 		.word	joint5
 2012 04e4 D4000000 		.word	.LC16
 2013 04e8 00000000 		.word	prev_joint5
 2014 04ec 00000000 		.word	actuator
 2015 04f0 F4000000 		.word	.LC18
 2016 04f4 00000000 		.word	prev_actuator
 2017 04f8 720D0A00 		.word	658802
 2018 04fc 40010000 		.word	.LC26
 2019 0500 00000000 		.word	ledFlag
 2020 0504 60010000 		.word	.LC28
 2021 0508 00000000 		.word	joint1
 2022 050c 78010000 		.word	.LC30
 2023 0510 00000000 		.word	joint2
 2024 0514 88010000 		.word	.LC31
 2025 0518 00000000 		.word	joint3
 2026 051c 98010000 		.word	.LC32
 2027 0520 A8010000 		.word	.LC33
 2028 0524 B8010000 		.word	.LC34
 2029 0528 C8010000 		.word	.LC35
 2030 052c 00000000 		.word	injectFlag
 2031 0530 E0010000 		.word	.LC37
 2032 0534 F8010000 		.word	.LC39
 2033 0538 10020000 		.word	.LC41
 2034 053c 40020000 		.word	.LC44
 2035              		.cfi_endproc
 2036              	.LFE251:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 60


 2038              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 2039              		.align	2
 2040              	.LC45:
 2041 0000 42756666 		.ascii	"Buffer overflow\015\000"
 2041      6572206F 
 2041      76657266 
 2041      6C6F770D 
 2041      00
 2042              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2043              		.align	1
 2044              		.global	HAL_UART_RxCpltCallback
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2049              	HAL_UART_RxCpltCallback:
 2050              	.LVL192:
 2051              	.LFB250:
 413:Core/Src/main.c **** 
 2052              		.loc 1 413 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 413:Core/Src/main.c **** 
 2056              		.loc 1 413 1 is_stmt 0 view .LVU410
 2057 0000 10B5     		push	{r4, lr}
 2058              	.LCFI40:
 2059              		.cfi_def_cfa_offset 8
 2060              		.cfi_offset 4, -8
 2061              		.cfi_offset 14, -4
 415:Core/Src/main.c **** 
 2062              		.loc 1 415 5 is_stmt 1 view .LVU411
 415:Core/Src/main.c **** 
 2063              		.loc 1 415 14 is_stmt 0 view .LVU412
 2064 0002 0368     		ldr	r3, [r0]
 415:Core/Src/main.c **** 
 2065              		.loc 1 415 8 view .LVU413
 2066 0004 9C4A     		ldr	r2, .L188
 2067 0006 9342     		cmp	r3, r2
 2068 0008 2DD0     		beq	.L172
 448:Core/Src/main.c ****         // Store received byte in buffer
 2069              		.loc 1 448 10 is_stmt 1 view .LVU414
 448:Core/Src/main.c ****         // Store received byte in buffer
 2070              		.loc 1 448 12 is_stmt 0 view .LVU415
 2071 000a 9C4A     		ldr	r2, .L188+4
 2072 000c 9342     		cmp	r3, r2
 2073 000e 5AD0     		beq	.L173
 486:Core/Src/main.c ****         // Store received byte in buffer
 2074              		.loc 1 486 10 is_stmt 1 view .LVU416
 486:Core/Src/main.c ****         // Store received byte in buffer
 2075              		.loc 1 486 12 is_stmt 0 view .LVU417
 2076 0010 9B4A     		ldr	r2, .L188+8
 2077 0012 9342     		cmp	r3, r2
 2078 0014 00F09F80 		beq	.L174
 523:Core/Src/main.c ****         // Store received byte in buffer
 2079              		.loc 1 523 12 is_stmt 1 view .LVU418
 523:Core/Src/main.c ****         // Store received byte in buffer
 2080              		.loc 1 523 14 is_stmt 0 view .LVU419
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 61


 2081 0018 9A4A     		ldr	r2, .L188+12
 2082 001a 9342     		cmp	r3, r2
 2083 001c 00F0E380 		beq	.L175
 560:Core/Src/main.c ****         // Store received byte in buffer
 2084              		.loc 1 560 12 is_stmt 1 view .LVU420
 560:Core/Src/main.c ****         // Store received byte in buffer
 2085              		.loc 1 560 14 is_stmt 0 view .LVU421
 2086 0020 994A     		ldr	r2, .L188+16
 2087 0022 9342     		cmp	r3, r2
 2088 0024 00F05481 		beq	.L176
 597:Core/Src/main.c ****         // Store received byte in buffer
 2089              		.loc 1 597 12 is_stmt 1 view .LVU422
 597:Core/Src/main.c ****         // Store received byte in buffer
 2090              		.loc 1 597 14 is_stmt 0 view .LVU423
 2091 0028 984A     		ldr	r2, .L188+20
 2092 002a 9342     		cmp	r3, r2
 2093 002c 34D1     		bne	.L147
 599:Core/Src/main.c ****         {
 2094              		.loc 1 599 9 is_stmt 1 view .LVU424
 599:Core/Src/main.c ****         {
 2095              		.loc 1 599 26 is_stmt 0 view .LVU425
 2096 002e 984B     		ldr	r3, .L188+24
 2097 0030 1B88     		ldrh	r3, [r3]
 2098 0032 9BB2     		uxth	r3, r3
 599:Core/Src/main.c ****         {
 2099              		.loc 1 599 12 view .LVU426
 2100 0034 FE2B     		cmp	r3, #254
 2101 0036 00F2BB81 		bhi	.L168
 601:Core/Src/main.c **** 
 2102              		.loc 1 601 13 is_stmt 1 view .LVU427
 601:Core/Src/main.c **** 
 2103              		.loc 1 601 37 is_stmt 0 view .LVU428
 2104 003a 9549     		ldr	r1, .L188+24
 2105 003c 0B88     		ldrh	r3, [r1]
 2106 003e 9BB2     		uxth	r3, r3
 2107 0040 5A1C     		adds	r2, r3, #1
 2108 0042 92B2     		uxth	r2, r2
 2109 0044 0A80     		strh	r2, [r1]	@ movhi
 601:Core/Src/main.c **** 
 2110              		.loc 1 601 41 view .LVU429
 2111 0046 9349     		ldr	r1, .L188+28
 2112 0048 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2113 004a D2B2     		uxtb	r2, r2
 2114 004c 9248     		ldr	r0, .L188+32
 2115              	.LVL193:
 601:Core/Src/main.c **** 
 2116              		.loc 1 601 41 view .LVU430
 2117 004e C254     		strb	r2, [r0, r3]
 604:Core/Src/main.c ****             {
 2118              		.loc 1 604 13 is_stmt 1 view .LVU431
 604:Core/Src/main.c ****             {
 2119              		.loc 1 604 26 is_stmt 0 view .LVU432
 2120 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2121 0052 DBB2     		uxtb	r3, r3
 604:Core/Src/main.c ****             {
 2122              		.loc 1 604 16 view .LVU433
 2123 0054 0A2B     		cmp	r3, #10
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 62


 2124 0056 00F08381 		beq	.L177
 2125              	.L169:
 630:Core/Src/main.c **** 
 2126              		.loc 1 630 9 is_stmt 1 view .LVU434
 2127 005a 0122     		movs	r2, #1
 2128 005c 8D49     		ldr	r1, .L188+28
 2129 005e 8F48     		ldr	r0, .L188+36
 2130 0060 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2131              	.LVL194:
 634:Core/Src/main.c **** 
 2132              		.loc 1 634 1 is_stmt 0 view .LVU435
 2133 0064 18E0     		b	.L147
 2134              	.LVL195:
 2135              	.L172:
 419:Core/Src/main.c ****         {
 2136              		.loc 1 419 9 is_stmt 1 view .LVU436
 419:Core/Src/main.c ****         {
 2137              		.loc 1 419 26 is_stmt 0 view .LVU437
 2138 0066 8A4B     		ldr	r3, .L188+24
 2139 0068 1B88     		ldrh	r3, [r3]
 2140 006a 9BB2     		uxth	r3, r3
 419:Core/Src/main.c ****         {
 2141              		.loc 1 419 12 view .LVU438
 2142 006c FE2B     		cmp	r3, #254
 2143 006e 23D8     		bhi	.L149
 421:Core/Src/main.c **** 
 2144              		.loc 1 421 13 is_stmt 1 view .LVU439
 421:Core/Src/main.c **** 
 2145              		.loc 1 421 37 is_stmt 0 view .LVU440
 2146 0070 8749     		ldr	r1, .L188+24
 2147 0072 0B88     		ldrh	r3, [r1]
 2148 0074 9BB2     		uxth	r3, r3
 2149 0076 5A1C     		adds	r2, r3, #1
 2150 0078 92B2     		uxth	r2, r2
 2151 007a 0A80     		strh	r2, [r1]	@ movhi
 421:Core/Src/main.c **** 
 2152              		.loc 1 421 41 view .LVU441
 2153 007c 8849     		ldr	r1, .L188+40
 2154 007e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2155 0080 D2B2     		uxtb	r2, r2
 2156 0082 8548     		ldr	r0, .L188+32
 2157              	.LVL196:
 421:Core/Src/main.c **** 
 2158              		.loc 1 421 41 view .LVU442
 2159 0084 C254     		strb	r2, [r0, r3]
 424:Core/Src/main.c ****             {
 2160              		.loc 1 424 13 is_stmt 1 view .LVU443
 424:Core/Src/main.c ****             {
 2161              		.loc 1 424 25 is_stmt 0 view .LVU444
 2162 0086 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2163 0088 DBB2     		uxtb	r3, r3
 424:Core/Src/main.c ****             {
 2164              		.loc 1 424 16 view .LVU445
 2165 008a 0A2B     		cmp	r3, #10
 2166 008c 05D0     		beq	.L178
 2167              	.L150:
 445:Core/Src/main.c ****     }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 63


 2168              		.loc 1 445 9 is_stmt 1 view .LVU446
 2169 008e 0122     		movs	r2, #1
 2170 0090 8349     		ldr	r1, .L188+40
 2171 0092 8448     		ldr	r0, .L188+44
 2172 0094 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2173              	.LVL197:
 2174              	.L147:
 634:Core/Src/main.c **** 
 2175              		.loc 1 634 1 is_stmt 0 view .LVU447
 2176 0098 10BD     		pop	{r4, pc}
 2177              	.L178:
 2178              	.LBB26:
 426:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2179              		.loc 1 426 17 is_stmt 1 view .LVU448
 426:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2180              		.loc 1 426 28 is_stmt 0 view .LVU449
 2181 009a 7D4A     		ldr	r2, .L188+24
 2182 009c 1388     		ldrh	r3, [r2]
 2183 009e 9BB2     		uxth	r3, r3
 426:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2184              		.loc 1 426 43 view .LVU450
 2185 00a0 0146     		mov	r1, r0
 2186 00a2 0020     		movs	r0, #0
 2187 00a4 C854     		strb	r0, [r1, r3]
 427:Core/Src/main.c **** 
 2188              		.loc 1 427 17 is_stmt 1 view .LVU451
 427:Core/Src/main.c **** 
 2189              		.loc 1 427 30 is_stmt 0 view .LVU452
 2190 00a6 1080     		strh	r0, [r2]	@ movhi
 430:Core/Src/main.c **** 
 2191              		.loc 1 430 17 is_stmt 1 view .LVU453
 2192 00a8 7F4C     		ldr	r4, .L188+48
 2193 00aa 2046     		mov	r0, r4
 2194 00ac FFF7FEFF 		bl	strcpy
 2195              	.LVL198:
 432:Core/Src/main.c **** 
 2196              		.loc 1 432 17 view .LVU454
 2197 00b0 2046     		mov	r0, r4
 2198 00b2 FFF7FEFF 		bl	ProcessReceivedString
 2199              	.LVL199:
 2200 00b6 EAE7     		b	.L150
 2201              	.LVL200:
 2202              	.L149:
 432:Core/Src/main.c **** 
 2203              		.loc 1 432 17 is_stmt 0 view .LVU455
 2204              	.LBE26:
 440:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2205              		.loc 1 440 13 is_stmt 1 view .LVU456
 440:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2206              		.loc 1 440 26 is_stmt 0 view .LVU457
 2207 00b8 754B     		ldr	r3, .L188+24
 2208 00ba 0022     		movs	r2, #0
 2209 00bc 1A80     		strh	r2, [r3]	@ movhi
 441:Core/Src/main.c ****         }
 2210              		.loc 1 441 13 is_stmt 1 view .LVU458
 2211 00be 7B48     		ldr	r0, .L188+52
 2212              	.LVL201:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 64


 441:Core/Src/main.c ****         }
 2213              		.loc 1 441 13 is_stmt 0 view .LVU459
 2214 00c0 FFF7FEFF 		bl	puts
 2215              	.LVL202:
 2216 00c4 E3E7     		b	.L150
 2217              	.LVL203:
 2218              	.L173:
 450:Core/Src/main.c ****         {
 2219              		.loc 1 450 9 is_stmt 1 view .LVU460
 450:Core/Src/main.c ****         {
 2220              		.loc 1 450 26 is_stmt 0 view .LVU461
 2221 00c6 724B     		ldr	r3, .L188+24
 2222 00c8 1B88     		ldrh	r3, [r3]
 2223 00ca 9BB2     		uxth	r3, r3
 450:Core/Src/main.c ****         {
 2224              		.loc 1 450 12 view .LVU462
 2225 00cc FE2B     		cmp	r3, #254
 2226 00ce 3BD8     		bhi	.L153
 452:Core/Src/main.c **** 
 2227              		.loc 1 452 13 is_stmt 1 view .LVU463
 452:Core/Src/main.c **** 
 2228              		.loc 1 452 37 is_stmt 0 view .LVU464
 2229 00d0 6F49     		ldr	r1, .L188+24
 2230 00d2 0B88     		ldrh	r3, [r1]
 2231 00d4 9BB2     		uxth	r3, r3
 2232 00d6 5A1C     		adds	r2, r3, #1
 2233 00d8 92B2     		uxth	r2, r2
 2234 00da 0A80     		strh	r2, [r1]	@ movhi
 452:Core/Src/main.c **** 
 2235              		.loc 1 452 41 view .LVU465
 2236 00dc 7449     		ldr	r1, .L188+56
 2237 00de 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2238 00e0 D2B2     		uxtb	r2, r2
 2239 00e2 6D48     		ldr	r0, .L188+32
 2240              	.LVL204:
 452:Core/Src/main.c **** 
 2241              		.loc 1 452 41 view .LVU466
 2242 00e4 C254     		strb	r2, [r0, r3]
 455:Core/Src/main.c ****             {
 2243              		.loc 1 455 13 is_stmt 1 view .LVU467
 455:Core/Src/main.c ****             {
 2244              		.loc 1 455 26 is_stmt 0 view .LVU468
 2245 00e6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2246 00e8 DBB2     		uxtb	r3, r3
 455:Core/Src/main.c ****             {
 2247              		.loc 1 455 16 view .LVU469
 2248 00ea 0A2B     		cmp	r3, #10
 2249 00ec 05D0     		beq	.L179
 2250              	.L154:
 483:Core/Src/main.c ****     }
 2251              		.loc 1 483 9 is_stmt 1 view .LVU470
 2252 00ee 0122     		movs	r2, #1
 2253 00f0 6F49     		ldr	r1, .L188+56
 2254 00f2 7048     		ldr	r0, .L188+60
 2255 00f4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2256              	.LVL205:
 2257 00f8 CEE7     		b	.L147
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 65


 2258              	.L179:
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2259              		.loc 1 457 17 view .LVU471
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2260              		.loc 1 457 28 is_stmt 0 view .LVU472
 2261 00fa 654A     		ldr	r2, .L188+24
 2262 00fc 1388     		ldrh	r3, [r2]
 2263 00fe 9BB2     		uxth	r3, r3
 457:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2264              		.loc 1 457 43 view .LVU473
 2265 0100 0146     		mov	r1, r0
 2266 0102 0020     		movs	r0, #0
 2267 0104 C854     		strb	r0, [r1, r3]
 458:Core/Src/main.c **** 
 2268              		.loc 1 458 17 is_stmt 1 view .LVU474
 458:Core/Src/main.c **** 
 2269              		.loc 1 458 30 is_stmt 0 view .LVU475
 2270 0106 1080     		strh	r0, [r2]	@ movhi
 461:Core/Src/main.c **** 
 2271              		.loc 1 461 17 is_stmt 1 view .LVU476
 2272 0108 674C     		ldr	r4, .L188+48
 2273 010a 2046     		mov	r0, r4
 2274 010c FFF7FEFF 		bl	strcpy
 2275              	.LVL206:
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2276              		.loc 1 463 17 view .LVU477
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2277              		.loc 1 463 20 is_stmt 0 view .LVU478
 2278 0110 2146     		mov	r1, r4
 2279 0112 6948     		ldr	r0, .L188+64
 2280 0114 FFF7FEFF 		bl	strcmp
 2281              	.LVL207:
 463:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2282              		.loc 1 463 19 discriminator 1 view .LVU479
 2283 0118 70B9     		cbnz	r0, .L180
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2284              		.loc 1 467 22 is_stmt 1 view .LVU480
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2285              		.loc 1 467 25 is_stmt 0 view .LVU481
 2286 011a 6849     		ldr	r1, .L188+68
 2287 011c 6248     		ldr	r0, .L188+48
 2288 011e FFF7FEFF 		bl	strcmp
 2289              	.LVL208:
 467:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2290              		.loc 1 467 24 discriminator 1 view .LVU482
 2291 0122 0028     		cmp	r0, #0
 2292 0124 E3D0     		beq	.L154
 2293              	.LBB27:
 468:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2294              		.loc 1 468 19 is_stmt 1 view .LVU483
 2295 0126 604C     		ldr	r4, .L188+48
 2296 0128 2046     		mov	r0, r4
 2297 012a FFF7FEFF 		bl	ProcessReceivedString
 2298              	.LVL209:
 469:Core/Src/main.c ****                 }
 2299              		.loc 1 469 19 view .LVU484
 2300 012e 2146     		mov	r1, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 66


 2301 0130 6248     		ldr	r0, .L188+68
 2302 0132 FFF7FEFF 		bl	strcpy
 2303              	.LVL210:
 2304 0136 DAE7     		b	.L154
 2305              	.L180:
 2306              	.LBE27:
 2307              	.LBB28:
 464:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2308              		.loc 1 464 19 view .LVU485
 2309 0138 2046     		mov	r0, r4
 2310 013a FFF7FEFF 		bl	ProcessReceivedString
 2311              	.LVL211:
 465:Core/Src/main.c ****                 }
 2312              		.loc 1 465 19 view .LVU486
 2313 013e 2146     		mov	r1, r4
 2314 0140 5E48     		ldr	r0, .L188+68
 2315 0142 FFF7FEFF 		bl	strcpy
 2316              	.LVL212:
 2317              	.LBE28:
 2318 0146 D2E7     		b	.L154
 2319              	.LVL213:
 2320              	.L153:
 478:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2321              		.loc 1 478 13 view .LVU487
 478:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2322              		.loc 1 478 26 is_stmt 0 view .LVU488
 2323 0148 514B     		ldr	r3, .L188+24
 2324 014a 0022     		movs	r2, #0
 2325 014c 1A80     		strh	r2, [r3]	@ movhi
 479:Core/Src/main.c ****         }
 2326              		.loc 1 479 13 is_stmt 1 view .LVU489
 2327 014e 5748     		ldr	r0, .L188+52
 2328              	.LVL214:
 479:Core/Src/main.c ****         }
 2329              		.loc 1 479 13 is_stmt 0 view .LVU490
 2330 0150 FFF7FEFF 		bl	puts
 2331              	.LVL215:
 2332 0154 CBE7     		b	.L154
 2333              	.LVL216:
 2334              	.L174:
 488:Core/Src/main.c ****         {
 2335              		.loc 1 488 9 is_stmt 1 view .LVU491
 488:Core/Src/main.c ****         {
 2336              		.loc 1 488 26 is_stmt 0 view .LVU492
 2337 0156 4E4B     		ldr	r3, .L188+24
 2338 0158 1B88     		ldrh	r3, [r3]
 2339 015a 9BB2     		uxth	r3, r3
 488:Core/Src/main.c ****         {
 2340              		.loc 1 488 12 view .LVU493
 2341 015c FE2B     		cmp	r3, #254
 2342 015e 3BD8     		bhi	.L157
 490:Core/Src/main.c **** 
 2343              		.loc 1 490 13 is_stmt 1 view .LVU494
 490:Core/Src/main.c **** 
 2344              		.loc 1 490 37 is_stmt 0 view .LVU495
 2345 0160 4B49     		ldr	r1, .L188+24
 2346 0162 0B88     		ldrh	r3, [r1]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 67


 2347 0164 9BB2     		uxth	r3, r3
 2348 0166 5A1C     		adds	r2, r3, #1
 2349 0168 92B2     		uxth	r2, r2
 2350 016a 0A80     		strh	r2, [r1]	@ movhi
 490:Core/Src/main.c **** 
 2351              		.loc 1 490 41 view .LVU496
 2352 016c 5449     		ldr	r1, .L188+72
 2353 016e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2354 0170 D2B2     		uxtb	r2, r2
 2355 0172 4948     		ldr	r0, .L188+32
 2356              	.LVL217:
 490:Core/Src/main.c **** 
 2357              		.loc 1 490 41 view .LVU497
 2358 0174 C254     		strb	r2, [r0, r3]
 493:Core/Src/main.c ****             {
 2359              		.loc 1 493 13 is_stmt 1 view .LVU498
 493:Core/Src/main.c ****             {
 2360              		.loc 1 493 26 is_stmt 0 view .LVU499
 2361 0176 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2362 0178 DBB2     		uxtb	r3, r3
 493:Core/Src/main.c ****             {
 2363              		.loc 1 493 16 view .LVU500
 2364 017a 0A2B     		cmp	r3, #10
 2365 017c 05D0     		beq	.L181
 2366              	.L158:
 519:Core/Src/main.c **** 
 2367              		.loc 1 519 9 is_stmt 1 view .LVU501
 2368 017e 0122     		movs	r2, #1
 2369 0180 4F49     		ldr	r1, .L188+72
 2370 0182 5048     		ldr	r0, .L188+76
 2371 0184 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2372              	.LVL218:
 2373 0188 86E7     		b	.L147
 2374              	.L181:
 495:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2375              		.loc 1 495 17 view .LVU502
 495:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2376              		.loc 1 495 28 is_stmt 0 view .LVU503
 2377 018a 414A     		ldr	r2, .L188+24
 2378 018c 1388     		ldrh	r3, [r2]
 2379 018e 9BB2     		uxth	r3, r3
 495:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2380              		.loc 1 495 43 view .LVU504
 2381 0190 0146     		mov	r1, r0
 2382 0192 0020     		movs	r0, #0
 2383 0194 C854     		strb	r0, [r1, r3]
 496:Core/Src/main.c **** 
 2384              		.loc 1 496 17 is_stmt 1 view .LVU505
 496:Core/Src/main.c **** 
 2385              		.loc 1 496 30 is_stmt 0 view .LVU506
 2386 0196 1080     		strh	r0, [r2]	@ movhi
 499:Core/Src/main.c **** 
 2387              		.loc 1 499 17 is_stmt 1 view .LVU507
 2388 0198 434C     		ldr	r4, .L188+48
 2389 019a 2046     		mov	r0, r4
 2390 019c FFF7FEFF 		bl	strcpy
 2391              	.LVL219:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 68


 501:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2392              		.loc 1 501 17 view .LVU508
 501:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2393              		.loc 1 501 20 is_stmt 0 view .LVU509
 2394 01a0 2146     		mov	r1, r4
 2395 01a2 4548     		ldr	r0, .L188+64
 2396 01a4 FFF7FEFF 		bl	strcmp
 2397              	.LVL220:
 501:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2398              		.loc 1 501 19 discriminator 1 view .LVU510
 2399 01a8 70B9     		cbnz	r0, .L182
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2400              		.loc 1 505 22 is_stmt 1 view .LVU511
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2401              		.loc 1 505 25 is_stmt 0 view .LVU512
 2402 01aa 4449     		ldr	r1, .L188+68
 2403 01ac 3E48     		ldr	r0, .L188+48
 2404 01ae FFF7FEFF 		bl	strcmp
 2405              	.LVL221:
 505:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2406              		.loc 1 505 24 discriminator 1 view .LVU513
 2407 01b2 0028     		cmp	r0, #0
 2408 01b4 E3D0     		beq	.L158
 2409              	.LBB29:
 506:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2410              		.loc 1 506 19 is_stmt 1 view .LVU514
 2411 01b6 3C4C     		ldr	r4, .L188+48
 2412 01b8 2046     		mov	r0, r4
 2413 01ba FFF7FEFF 		bl	ProcessReceivedString
 2414              	.LVL222:
 507:Core/Src/main.c ****                 }
 2415              		.loc 1 507 19 view .LVU515
 2416 01be 2146     		mov	r1, r4
 2417 01c0 3E48     		ldr	r0, .L188+68
 2418 01c2 FFF7FEFF 		bl	strcpy
 2419              	.LVL223:
 2420 01c6 DAE7     		b	.L158
 2421              	.L182:
 2422              	.LBE29:
 2423              	.LBB30:
 502:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2424              		.loc 1 502 19 view .LVU516
 2425 01c8 2046     		mov	r0, r4
 2426 01ca FFF7FEFF 		bl	ProcessReceivedString
 2427              	.LVL224:
 503:Core/Src/main.c ****                 }
 2428              		.loc 1 503 19 view .LVU517
 2429 01ce 2146     		mov	r1, r4
 2430 01d0 3A48     		ldr	r0, .L188+68
 2431 01d2 FFF7FEFF 		bl	strcpy
 2432              	.LVL225:
 2433              	.LBE30:
 2434 01d6 D2E7     		b	.L158
 2435              	.LVL226:
 2436              	.L157:
 516:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2437              		.loc 1 516 13 view .LVU518
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 69


 516:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2438              		.loc 1 516 26 is_stmt 0 view .LVU519
 2439 01d8 2D4B     		ldr	r3, .L188+24
 2440 01da 0022     		movs	r2, #0
 2441 01dc 1A80     		strh	r2, [r3]	@ movhi
 517:Core/Src/main.c ****         }
 2442              		.loc 1 517 13 is_stmt 1 view .LVU520
 2443 01de 3348     		ldr	r0, .L188+52
 2444              	.LVL227:
 517:Core/Src/main.c ****         }
 2445              		.loc 1 517 13 is_stmt 0 view .LVU521
 2446 01e0 FFF7FEFF 		bl	puts
 2447              	.LVL228:
 2448 01e4 CBE7     		b	.L158
 2449              	.LVL229:
 2450              	.L175:
 525:Core/Src/main.c ****         {
 2451              		.loc 1 525 9 is_stmt 1 view .LVU522
 525:Core/Src/main.c ****         {
 2452              		.loc 1 525 26 is_stmt 0 view .LVU523
 2453 01e6 2A4B     		ldr	r3, .L188+24
 2454 01e8 1B88     		ldrh	r3, [r3]
 2455 01ea 9BB2     		uxth	r3, r3
 525:Core/Src/main.c ****         {
 2456              		.loc 1 525 12 view .LVU524
 2457 01ec FE2B     		cmp	r3, #254
 2458 01ee 3BD8     		bhi	.L161
 527:Core/Src/main.c **** 
 2459              		.loc 1 527 13 is_stmt 1 view .LVU525
 527:Core/Src/main.c **** 
 2460              		.loc 1 527 37 is_stmt 0 view .LVU526
 2461 01f0 2749     		ldr	r1, .L188+24
 2462 01f2 0B88     		ldrh	r3, [r1]
 2463 01f4 9BB2     		uxth	r3, r3
 2464 01f6 5A1C     		adds	r2, r3, #1
 2465 01f8 92B2     		uxth	r2, r2
 2466 01fa 0A80     		strh	r2, [r1]	@ movhi
 527:Core/Src/main.c **** 
 2467              		.loc 1 527 41 view .LVU527
 2468 01fc 3249     		ldr	r1, .L188+80
 2469 01fe 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2470 0200 D2B2     		uxtb	r2, r2
 2471 0202 2548     		ldr	r0, .L188+32
 2472              	.LVL230:
 527:Core/Src/main.c **** 
 2473              		.loc 1 527 41 view .LVU528
 2474 0204 C254     		strb	r2, [r0, r3]
 530:Core/Src/main.c ****             {
 2475              		.loc 1 530 13 is_stmt 1 view .LVU529
 530:Core/Src/main.c ****             {
 2476              		.loc 1 530 26 is_stmt 0 view .LVU530
 2477 0206 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2478 0208 DBB2     		uxtb	r3, r3
 530:Core/Src/main.c ****             {
 2479              		.loc 1 530 16 view .LVU531
 2480 020a 0A2B     		cmp	r3, #10
 2481 020c 05D0     		beq	.L183
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 70


 2482              	.L162:
 556:Core/Src/main.c **** 
 2483              		.loc 1 556 9 is_stmt 1 view .LVU532
 2484 020e 0122     		movs	r2, #1
 2485 0210 2D49     		ldr	r1, .L188+80
 2486 0212 2E48     		ldr	r0, .L188+84
 2487 0214 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2488              	.LVL231:
 2489 0218 3EE7     		b	.L147
 2490              	.L183:
 532:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2491              		.loc 1 532 17 view .LVU533
 532:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2492              		.loc 1 532 28 is_stmt 0 view .LVU534
 2493 021a 1D4A     		ldr	r2, .L188+24
 2494 021c 1388     		ldrh	r3, [r2]
 2495 021e 9BB2     		uxth	r3, r3
 532:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2496              		.loc 1 532 43 view .LVU535
 2497 0220 0146     		mov	r1, r0
 2498 0222 0020     		movs	r0, #0
 2499 0224 C854     		strb	r0, [r1, r3]
 533:Core/Src/main.c **** 
 2500              		.loc 1 533 17 is_stmt 1 view .LVU536
 533:Core/Src/main.c **** 
 2501              		.loc 1 533 30 is_stmt 0 view .LVU537
 2502 0226 1080     		strh	r0, [r2]	@ movhi
 536:Core/Src/main.c **** 
 2503              		.loc 1 536 17 is_stmt 1 view .LVU538
 2504 0228 1F4C     		ldr	r4, .L188+48
 2505 022a 2046     		mov	r0, r4
 2506 022c FFF7FEFF 		bl	strcpy
 2507              	.LVL232:
 538:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2508              		.loc 1 538 17 view .LVU539
 538:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2509              		.loc 1 538 20 is_stmt 0 view .LVU540
 2510 0230 2146     		mov	r1, r4
 2511 0232 2148     		ldr	r0, .L188+64
 2512 0234 FFF7FEFF 		bl	strcmp
 2513              	.LVL233:
 538:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2514              		.loc 1 538 19 discriminator 1 view .LVU541
 2515 0238 70B9     		cbnz	r0, .L184
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2516              		.loc 1 542 22 is_stmt 1 view .LVU542
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2517              		.loc 1 542 25 is_stmt 0 view .LVU543
 2518 023a 2049     		ldr	r1, .L188+68
 2519 023c 1A48     		ldr	r0, .L188+48
 2520 023e FFF7FEFF 		bl	strcmp
 2521              	.LVL234:
 542:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2522              		.loc 1 542 24 discriminator 1 view .LVU544
 2523 0242 0028     		cmp	r0, #0
 2524 0244 E3D0     		beq	.L162
 2525              	.LBB31:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 71


 543:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2526              		.loc 1 543 19 is_stmt 1 view .LVU545
 2527 0246 184C     		ldr	r4, .L188+48
 2528 0248 2046     		mov	r0, r4
 2529 024a FFF7FEFF 		bl	ProcessReceivedString
 2530              	.LVL235:
 544:Core/Src/main.c ****                 }
 2531              		.loc 1 544 19 view .LVU546
 2532 024e 2146     		mov	r1, r4
 2533 0250 1A48     		ldr	r0, .L188+68
 2534 0252 FFF7FEFF 		bl	strcpy
 2535              	.LVL236:
 2536 0256 DAE7     		b	.L162
 2537              	.L184:
 2538              	.LBE31:
 2539              	.LBB32:
 539:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2540              		.loc 1 539 19 view .LVU547
 2541 0258 2046     		mov	r0, r4
 2542 025a FFF7FEFF 		bl	ProcessReceivedString
 2543              	.LVL237:
 540:Core/Src/main.c ****                 }
 2544              		.loc 1 540 19 view .LVU548
 2545 025e 2146     		mov	r1, r4
 2546 0260 1648     		ldr	r0, .L188+68
 2547 0262 FFF7FEFF 		bl	strcpy
 2548              	.LVL238:
 2549              	.LBE32:
 2550 0266 D2E7     		b	.L162
 2551              	.LVL239:
 2552              	.L161:
 553:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2553              		.loc 1 553 13 view .LVU549
 553:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2554              		.loc 1 553 26 is_stmt 0 view .LVU550
 2555 0268 094B     		ldr	r3, .L188+24
 2556 026a 0022     		movs	r2, #0
 2557 026c 1A80     		strh	r2, [r3]	@ movhi
 554:Core/Src/main.c ****         }
 2558              		.loc 1 554 13 is_stmt 1 view .LVU551
 2559 026e 0F48     		ldr	r0, .L188+52
 2560              	.LVL240:
 554:Core/Src/main.c ****         }
 2561              		.loc 1 554 13 is_stmt 0 view .LVU552
 2562 0270 FFF7FEFF 		bl	puts
 2563              	.LVL241:
 2564 0274 CBE7     		b	.L162
 2565              	.L189:
 2566 0276 00BF     		.align	2
 2567              	.L188:
 2568 0278 00100140 		.word	1073811456
 2569 027c 00140140 		.word	1073812480
 2570 0280 00440040 		.word	1073759232
 2571 0284 00480040 		.word	1073760256
 2572 0288 004C0040 		.word	1073761280
 2573 028c 00500040 		.word	1073762304
 2574 0290 00000000 		.word	buffer_index
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 72


 2575 0294 00000000 		.word	rx_byte5
 2576 0298 00000000 		.word	uart_buffer
 2577 029c 00000000 		.word	huart5
 2578 02a0 00000000 		.word	rx_byte
 2579 02a4 00000000 		.word	huart1
 2580 02a8 00000000 		.word	received_string
 2581 02ac 00000000 		.word	.LC45
 2582 02b0 00000000 		.word	rx_byte1
 2583 02b4 00000000 		.word	huart6
 2584 02b8 70010000 		.word	.LC29
 2585 02bc 00000000 		.word	previous_string
 2586 02c0 00000000 		.word	rx_byte2
 2587 02c4 00000000 		.word	huart2
 2588 02c8 00000000 		.word	rx_byte3
 2589 02cc 00000000 		.word	huart3
 2590              	.LVL242:
 2591              	.L176:
 562:Core/Src/main.c ****         {
 2592              		.loc 1 562 9 is_stmt 1 view .LVU553
 562:Core/Src/main.c ****         {
 2593              		.loc 1 562 26 is_stmt 0 view .LVU554
 2594 02d0 3B4B     		ldr	r3, .L190
 2595 02d2 1B88     		ldrh	r3, [r3]
 2596 02d4 9BB2     		uxth	r3, r3
 562:Core/Src/main.c ****         {
 2597              		.loc 1 562 12 view .LVU555
 2598 02d6 FE2B     		cmp	r3, #254
 2599 02d8 3BD8     		bhi	.L165
 564:Core/Src/main.c **** 
 2600              		.loc 1 564 13 is_stmt 1 view .LVU556
 564:Core/Src/main.c **** 
 2601              		.loc 1 564 37 is_stmt 0 view .LVU557
 2602 02da 3949     		ldr	r1, .L190
 2603 02dc 0B88     		ldrh	r3, [r1]
 2604 02de 9BB2     		uxth	r3, r3
 2605 02e0 5A1C     		adds	r2, r3, #1
 2606 02e2 92B2     		uxth	r2, r2
 2607 02e4 0A80     		strh	r2, [r1]	@ movhi
 564:Core/Src/main.c **** 
 2608              		.loc 1 564 41 view .LVU558
 2609 02e6 3749     		ldr	r1, .L190+4
 2610 02e8 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2611 02ea D2B2     		uxtb	r2, r2
 2612 02ec 3648     		ldr	r0, .L190+8
 2613              	.LVL243:
 564:Core/Src/main.c **** 
 2614              		.loc 1 564 41 view .LVU559
 2615 02ee C254     		strb	r2, [r0, r3]
 567:Core/Src/main.c ****             {
 2616              		.loc 1 567 13 is_stmt 1 view .LVU560
 567:Core/Src/main.c ****             {
 2617              		.loc 1 567 26 is_stmt 0 view .LVU561
 2618 02f0 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2619 02f2 DBB2     		uxtb	r3, r3
 567:Core/Src/main.c ****             {
 2620              		.loc 1 567 16 view .LVU562
 2621 02f4 0A2B     		cmp	r3, #10
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 73


 2622 02f6 05D0     		beq	.L185
 2623              	.L166:
 593:Core/Src/main.c **** 
 2624              		.loc 1 593 9 is_stmt 1 view .LVU563
 2625 02f8 0122     		movs	r2, #1
 2626 02fa 3249     		ldr	r1, .L190+4
 2627 02fc 3348     		ldr	r0, .L190+12
 2628 02fe FFF7FEFF 		bl	HAL_UART_Receive_IT
 2629              	.LVL244:
 2630 0302 C9E6     		b	.L147
 2631              	.L185:
 569:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2632              		.loc 1 569 17 view .LVU564
 569:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2633              		.loc 1 569 28 is_stmt 0 view .LVU565
 2634 0304 2E4A     		ldr	r2, .L190
 2635 0306 1388     		ldrh	r3, [r2]
 2636 0308 9BB2     		uxth	r3, r3
 569:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2637              		.loc 1 569 43 view .LVU566
 2638 030a 0146     		mov	r1, r0
 2639 030c 0020     		movs	r0, #0
 2640 030e C854     		strb	r0, [r1, r3]
 570:Core/Src/main.c **** 
 2641              		.loc 1 570 17 is_stmt 1 view .LVU567
 570:Core/Src/main.c **** 
 2642              		.loc 1 570 30 is_stmt 0 view .LVU568
 2643 0310 1080     		strh	r0, [r2]	@ movhi
 573:Core/Src/main.c **** 
 2644              		.loc 1 573 17 is_stmt 1 view .LVU569
 2645 0312 2F4C     		ldr	r4, .L190+16
 2646 0314 2046     		mov	r0, r4
 2647 0316 FFF7FEFF 		bl	strcpy
 2648              	.LVL245:
 575:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2649              		.loc 1 575 17 view .LVU570
 575:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2650              		.loc 1 575 20 is_stmt 0 view .LVU571
 2651 031a 2146     		mov	r1, r4
 2652 031c 2D48     		ldr	r0, .L190+20
 2653 031e FFF7FEFF 		bl	strcmp
 2654              	.LVL246:
 575:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2655              		.loc 1 575 19 discriminator 1 view .LVU572
 2656 0322 70B9     		cbnz	r0, .L186
 579:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2657              		.loc 1 579 22 is_stmt 1 view .LVU573
 579:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2658              		.loc 1 579 25 is_stmt 0 view .LVU574
 2659 0324 2C49     		ldr	r1, .L190+24
 2660 0326 2A48     		ldr	r0, .L190+16
 2661 0328 FFF7FEFF 		bl	strcmp
 2662              	.LVL247:
 579:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2663              		.loc 1 579 24 discriminator 1 view .LVU575
 2664 032c 0028     		cmp	r0, #0
 2665 032e E3D0     		beq	.L166
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 74


 2666              	.LBB33:
 580:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2667              		.loc 1 580 19 is_stmt 1 view .LVU576
 2668 0330 274C     		ldr	r4, .L190+16
 2669 0332 2046     		mov	r0, r4
 2670 0334 FFF7FEFF 		bl	ProcessReceivedString
 2671              	.LVL248:
 581:Core/Src/main.c ****                 }
 2672              		.loc 1 581 19 view .LVU577
 2673 0338 2146     		mov	r1, r4
 2674 033a 2748     		ldr	r0, .L190+24
 2675 033c FFF7FEFF 		bl	strcpy
 2676              	.LVL249:
 2677 0340 DAE7     		b	.L166
 2678              	.L186:
 2679              	.LBE33:
 2680              	.LBB34:
 576:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2681              		.loc 1 576 19 view .LVU578
 2682 0342 2046     		mov	r0, r4
 2683 0344 FFF7FEFF 		bl	ProcessReceivedString
 2684              	.LVL250:
 577:Core/Src/main.c ****                 }
 2685              		.loc 1 577 19 view .LVU579
 2686 0348 2146     		mov	r1, r4
 2687 034a 2348     		ldr	r0, .L190+24
 2688 034c FFF7FEFF 		bl	strcpy
 2689              	.LVL251:
 2690              	.LBE34:
 2691 0350 D2E7     		b	.L166
 2692              	.LVL252:
 2693              	.L165:
 590:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2694              		.loc 1 590 13 view .LVU580
 590:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2695              		.loc 1 590 26 is_stmt 0 view .LVU581
 2696 0352 1B4B     		ldr	r3, .L190
 2697 0354 0022     		movs	r2, #0
 2698 0356 1A80     		strh	r2, [r3]	@ movhi
 591:Core/Src/main.c ****         }
 2699              		.loc 1 591 13 is_stmt 1 view .LVU582
 2700 0358 2048     		ldr	r0, .L190+28
 2701              	.LVL253:
 591:Core/Src/main.c ****         }
 2702              		.loc 1 591 13 is_stmt 0 view .LVU583
 2703 035a FFF7FEFF 		bl	puts
 2704              	.LVL254:
 2705 035e CBE7     		b	.L166
 2706              	.L177:
 606:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2707              		.loc 1 606 17 is_stmt 1 view .LVU584
 606:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 2708              		.loc 1 606 28 is_stmt 0 view .LVU585
 2709 0360 174A     		ldr	r2, .L190
 2710 0362 1388     		ldrh	r3, [r2]
 2711 0364 9BB2     		uxth	r3, r3
 606:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 75


 2712              		.loc 1 606 43 view .LVU586
 2713 0366 0146     		mov	r1, r0
 2714 0368 0020     		movs	r0, #0
 2715 036a C854     		strb	r0, [r1, r3]
 607:Core/Src/main.c **** 
 2716              		.loc 1 607 17 is_stmt 1 view .LVU587
 607:Core/Src/main.c **** 
 2717              		.loc 1 607 30 is_stmt 0 view .LVU588
 2718 036c 1080     		strh	r0, [r2]	@ movhi
 610:Core/Src/main.c **** 
 2719              		.loc 1 610 17 is_stmt 1 view .LVU589
 2720 036e 184C     		ldr	r4, .L190+16
 2721 0370 2046     		mov	r0, r4
 2722 0372 FFF7FEFF 		bl	strcpy
 2723              	.LVL255:
 612:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2724              		.loc 1 612 17 view .LVU590
 612:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2725              		.loc 1 612 20 is_stmt 0 view .LVU591
 2726 0376 2146     		mov	r1, r4
 2727 0378 1648     		ldr	r0, .L190+20
 2728 037a FFF7FEFF 		bl	strcmp
 2729              	.LVL256:
 612:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2730              		.loc 1 612 19 discriminator 1 view .LVU592
 2731 037e 78B9     		cbnz	r0, .L187
 616:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2732              		.loc 1 616 22 is_stmt 1 view .LVU593
 616:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2733              		.loc 1 616 25 is_stmt 0 view .LVU594
 2734 0380 1549     		ldr	r1, .L190+24
 2735 0382 1348     		ldr	r0, .L190+16
 2736 0384 FFF7FEFF 		bl	strcmp
 2737              	.LVL257:
 616:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 2738              		.loc 1 616 24 discriminator 1 view .LVU595
 2739 0388 0028     		cmp	r0, #0
 2740 038a 3FF466AE 		beq	.L169
 2741              	.LBB35:
 617:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2742              		.loc 1 617 19 is_stmt 1 view .LVU596
 2743 038e 104C     		ldr	r4, .L190+16
 2744 0390 2046     		mov	r0, r4
 2745 0392 FFF7FEFF 		bl	ProcessReceivedString
 2746              	.LVL258:
 618:Core/Src/main.c ****                 }
 2747              		.loc 1 618 19 view .LVU597
 2748 0396 2146     		mov	r1, r4
 2749 0398 0F48     		ldr	r0, .L190+24
 2750 039a FFF7FEFF 		bl	strcpy
 2751              	.LVL259:
 2752 039e 5CE6     		b	.L169
 2753              	.L187:
 2754              	.LBE35:
 2755              	.LBB36:
 613:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 2756              		.loc 1 613 19 view .LVU598
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 76


 2757 03a0 2046     		mov	r0, r4
 2758 03a2 FFF7FEFF 		bl	ProcessReceivedString
 2759              	.LVL260:
 614:Core/Src/main.c ****                 }
 2760              		.loc 1 614 19 view .LVU599
 2761 03a6 2146     		mov	r1, r4
 2762 03a8 0B48     		ldr	r0, .L190+24
 2763 03aa FFF7FEFF 		bl	strcpy
 2764              	.LVL261:
 2765              	.LBE36:
 2766 03ae 54E6     		b	.L169
 2767              	.LVL262:
 2768              	.L168:
 627:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2769              		.loc 1 627 13 view .LVU600
 627:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 2770              		.loc 1 627 26 is_stmt 0 view .LVU601
 2771 03b0 034B     		ldr	r3, .L190
 2772 03b2 0022     		movs	r2, #0
 2773 03b4 1A80     		strh	r2, [r3]	@ movhi
 628:Core/Src/main.c ****         }
 2774              		.loc 1 628 13 is_stmt 1 view .LVU602
 2775 03b6 0948     		ldr	r0, .L190+28
 2776              	.LVL263:
 628:Core/Src/main.c ****         }
 2777              		.loc 1 628 13 is_stmt 0 view .LVU603
 2778 03b8 FFF7FEFF 		bl	puts
 2779              	.LVL264:
 2780 03bc 4DE6     		b	.L169
 2781              	.L191:
 2782 03be 00BF     		.align	2
 2783              	.L190:
 2784 03c0 00000000 		.word	buffer_index
 2785 03c4 00000000 		.word	rx_byte4
 2786 03c8 00000000 		.word	uart_buffer
 2787 03cc 00000000 		.word	huart4
 2788 03d0 00000000 		.word	received_string
 2789 03d4 70010000 		.word	.LC29
 2790 03d8 00000000 		.word	previous_string
 2791 03dc 00000000 		.word	.LC45
 2792              		.cfi_endproc
 2793              	.LFE250:
 2795              		.section	.text.inject,"ax",%progbits
 2796              		.align	1
 2797              		.global	inject
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2802              	inject:
 2803              	.LVL265:
 2804              	.LFB263:
 994:Core/Src/main.c **** 
 995:Core/Src/main.c **** void inject(int direction, int adc) {
 2805              		.loc 1 995 37 is_stmt 1 view -0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 77


 2809              		@ link register save eliminated.
 996:Core/Src/main.c ****   if (direction == INJECT) {
 2810              		.loc 1 996 3 view .LVU605
 2811              		.loc 1 996 6 is_stmt 0 view .LVU606
 2812 0000 0128     		cmp	r0, #1
 2813 0002 08D0     		beq	.L198
 997:Core/Src/main.c ****       if (adc > injectionLimit) {
 998:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 999:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);   // 25% duty cycle
1000:Core/Src/main.c ****       } else {
1001:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
1002:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
1003:Core/Src/main.c ****           injectFlag = STOP;
1004:Core/Src/main.c ****       }
1005:Core/Src/main.c ****   } else if (direction == RETRACT) {
 2814              		.loc 1 1005 10 is_stmt 1 view .LVU607
 2815              		.loc 1 1005 13 is_stmt 0 view .LVU608
 2816 0004 0228     		cmp	r0, #2
 2817 0006 1AD0     		beq	.L199
1006:Core/Src/main.c ****       if (adc < retractionLimit) {
1007:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
1008:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);       // 0% duty cycle
1009:Core/Src/main.c ****       } else {
1010:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
1011:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
1012:Core/Src/main.c ****           injectFlag = STOP;
1013:Core/Src/main.c ****       }
1014:Core/Src/main.c ****   } else if (direction == STOP) {
 2818              		.loc 1 1014 10 is_stmt 1 view .LVU609
 2819              		.loc 1 1014 13 is_stmt 0 view .LVU610
 2820 0008 20B9     		cbnz	r0, .L192
1015:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);
 2821              		.loc 1 1015 7 is_stmt 1 view .LVU611
 2822 000a 174B     		ldr	r3, .L200
 2823 000c 1B68     		ldr	r3, [r3]
 2824 000e 0022     		movs	r2, #0
 2825 0010 5A63     		str	r2, [r3, #52]
1016:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 2826              		.loc 1 1016 7 view .LVU612
 2827 0012 9A63     		str	r2, [r3, #56]
 2828              	.L192:
1017:Core/Src/main.c ****   }
1018:Core/Src/main.c **** }
 2829              		.loc 1 1018 1 is_stmt 0 view .LVU613
 2830 0014 7047     		bx	lr
 2831              	.L198:
 997:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2832              		.loc 1 997 7 is_stmt 1 view .LVU614
 997:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2833              		.loc 1 997 15 is_stmt 0 view .LVU615
 2834 0016 154B     		ldr	r3, .L200+4
 2835 0018 1B68     		ldr	r3, [r3]
 997:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 0);       // 0% duty cycle
 2836              		.loc 1 997 10 view .LVU616
 2837 001a 8B42     		cmp	r3, r1
 2838 001c 07DA     		bge	.L194
 998:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 16384);   // 25% duty cycle
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 78


 2839              		.loc 1 998 11 is_stmt 1 view .LVU617
 2840 001e 124B     		ldr	r3, .L200
 2841 0020 1B68     		ldr	r3, [r3]
 2842 0022 0022     		movs	r2, #0
 2843 0024 5A63     		str	r2, [r3, #52]
 999:Core/Src/main.c ****       } else {
 2844              		.loc 1 999 11 view .LVU618
 2845 0026 4FF48042 		mov	r2, #16384
 2846 002a 9A63     		str	r2, [r3, #56]
 2847 002c 7047     		bx	lr
 2848              	.L194:
1001:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 2849              		.loc 1 1001 11 view .LVU619
 2850 002e 0E4B     		ldr	r3, .L200
 2851 0030 1A68     		ldr	r2, [r3]
 2852 0032 0023     		movs	r3, #0
 2853 0034 5363     		str	r3, [r2, #52]
1002:Core/Src/main.c ****           injectFlag = STOP;
 2854              		.loc 1 1002 11 view .LVU620
 2855 0036 9363     		str	r3, [r2, #56]
1003:Core/Src/main.c ****       }
 2856              		.loc 1 1003 11 view .LVU621
1003:Core/Src/main.c ****       }
 2857              		.loc 1 1003 22 is_stmt 0 view .LVU622
 2858 0038 0D4A     		ldr	r2, .L200+8
 2859 003a 1360     		str	r3, [r2]
 2860 003c 7047     		bx	lr
 2861              	.L199:
1006:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 2862              		.loc 1 1006 7 is_stmt 1 view .LVU623
1006:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 2863              		.loc 1 1006 15 is_stmt 0 view .LVU624
 2864 003e 0D4B     		ldr	r3, .L200+12
 2865 0040 1B68     		ldr	r3, [r3]
1006:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, 16384);   // 25% duty cycle
 2866              		.loc 1 1006 10 view .LVU625
 2867 0042 8B42     		cmp	r3, r1
 2868 0044 07DD     		ble	.L197
1007:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);       // 0% duty cycle
 2869              		.loc 1 1007 11 is_stmt 1 view .LVU626
 2870 0046 084B     		ldr	r3, .L200
 2871 0048 1B68     		ldr	r3, [r3]
 2872 004a 4FF48042 		mov	r2, #16384
 2873 004e 5A63     		str	r2, [r3, #52]
1008:Core/Src/main.c ****       } else {
 2874              		.loc 1 1008 11 view .LVU627
 2875 0050 0022     		movs	r2, #0
 2876 0052 9A63     		str	r2, [r3, #56]
 2877 0054 7047     		bx	lr
 2878              	.L197:
1010:Core/Src/main.c ****           __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);
 2879              		.loc 1 1010 11 view .LVU628
 2880 0056 044B     		ldr	r3, .L200
 2881 0058 1A68     		ldr	r2, [r3]
 2882 005a 0023     		movs	r3, #0
 2883 005c 5363     		str	r3, [r2, #52]
1011:Core/Src/main.c ****           injectFlag = STOP;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 79


 2884              		.loc 1 1011 11 view .LVU629
 2885 005e 9363     		str	r3, [r2, #56]
1012:Core/Src/main.c ****       }
 2886              		.loc 1 1012 11 view .LVU630
1012:Core/Src/main.c ****       }
 2887              		.loc 1 1012 22 is_stmt 0 view .LVU631
 2888 0060 034A     		ldr	r2, .L200+8
 2889 0062 1360     		str	r3, [r2]
 2890 0064 7047     		bx	lr
 2891              	.L201:
 2892 0066 00BF     		.align	2
 2893              	.L200:
 2894 0068 00000000 		.word	htim4
 2895 006c 00000000 		.word	injectionLimit
 2896 0070 00000000 		.word	injectFlag
 2897 0074 00000000 		.word	retractionLimit
 2898              		.cfi_endproc
 2899              	.LFE263:
 2901              		.section	.text.Error_Handler,"ax",%progbits
 2902              		.align	1
 2903              		.global	Error_Handler
 2904              		.syntax unified
 2905              		.thumb
 2906              		.thumb_func
 2908              	Error_Handler:
 2909              	.LFB264:
1019:Core/Src/main.c **** 
1020:Core/Src/main.c **** 
1021:Core/Src/main.c **** /* USER CODE END 4 */
1022:Core/Src/main.c **** 
1023:Core/Src/main.c **** /**
1024:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1025:Core/Src/main.c ****   * @retval None
1026:Core/Src/main.c ****   */
1027:Core/Src/main.c **** void Error_Handler(void)
1028:Core/Src/main.c **** {
 2910              		.loc 1 1028 1 is_stmt 1 view -0
 2911              		.cfi_startproc
 2912              		@ Volatile: function does not return.
 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              		@ link register save eliminated.
1029:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1030:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1031:Core/Src/main.c ****   __disable_irq();
 2916              		.loc 1 1031 3 view .LVU633
 2917              	.LBB37:
 2918              	.LBI37:
 2919              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 80


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 81


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 82


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 83


 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 84


 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 85


 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 86


 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 87


 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 88


 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 89


 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 90


 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 91


 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 92


 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 93


 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 94


 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 95


 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 96


 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2920              		.loc 2 960 27 view .LVU634
 2921              	.LBB38:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2922              		.loc 2 962 3 view .LVU635
 2923              		.syntax unified
 2924              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2925 0000 72B6     		cpsid i
 2926              	@ 0 "" 2
 2927              		.thumb
 2928              		.syntax unified
 2929              	.L203:
 2930              	.LBE38:
 2931              	.LBE37:
1032:Core/Src/main.c ****   while (1)
 2932              		.loc 1 1032 3 view .LVU636
1033:Core/Src/main.c ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 97


1034:Core/Src/main.c ****   }
 2933              		.loc 1 1034 3 view .LVU637
1032:Core/Src/main.c ****   while (1)
 2934              		.loc 1 1032 9 view .LVU638
 2935 0002 FEE7     		b	.L203
 2936              		.cfi_endproc
 2937              	.LFE264:
 2939              		.section	.text.SystemClock_Config,"ax",%progbits
 2940              		.align	1
 2941              		.global	SystemClock_Config
 2942              		.syntax unified
 2943              		.thumb
 2944              		.thumb_func
 2946              	SystemClock_Config:
 2947              	.LFB243:
 315:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2948              		.loc 1 315 1 view -0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 80
 2951              		@ frame_needed = 0, uses_anonymous_args = 0
 2952 0000 00B5     		push	{lr}
 2953              	.LCFI41:
 2954              		.cfi_def_cfa_offset 4
 2955              		.cfi_offset 14, -4
 2956 0002 95B0     		sub	sp, sp, #84
 2957              	.LCFI42:
 2958              		.cfi_def_cfa_offset 88
 316:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2959              		.loc 1 316 3 view .LVU640
 316:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2960              		.loc 1 316 22 is_stmt 0 view .LVU641
 2961 0004 3022     		movs	r2, #48
 2962 0006 0021     		movs	r1, #0
 2963 0008 08A8     		add	r0, sp, #32
 2964 000a FFF7FEFF 		bl	memset
 2965              	.LVL266:
 317:Core/Src/main.c **** 
 2966              		.loc 1 317 3 is_stmt 1 view .LVU642
 317:Core/Src/main.c **** 
 2967              		.loc 1 317 22 is_stmt 0 view .LVU643
 2968 000e 0023     		movs	r3, #0
 2969 0010 0393     		str	r3, [sp, #12]
 2970 0012 0493     		str	r3, [sp, #16]
 2971 0014 0593     		str	r3, [sp, #20]
 2972 0016 0693     		str	r3, [sp, #24]
 2973 0018 0793     		str	r3, [sp, #28]
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2974              		.loc 1 321 3 is_stmt 1 view .LVU644
 2975              	.LBB39:
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2976              		.loc 1 321 3 view .LVU645
 2977 001a 0193     		str	r3, [sp, #4]
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2978              		.loc 1 321 3 view .LVU646
 2979 001c 204A     		ldr	r2, .L210
 2980 001e 116C     		ldr	r1, [r2, #64]
 2981 0020 41F08051 		orr	r1, r1, #268435456
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 98


 2982 0024 1164     		str	r1, [r2, #64]
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2983              		.loc 1 321 3 view .LVU647
 2984 0026 126C     		ldr	r2, [r2, #64]
 2985 0028 02F08052 		and	r2, r2, #268435456
 2986 002c 0192     		str	r2, [sp, #4]
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2987              		.loc 1 321 3 view .LVU648
 2988 002e 019A     		ldr	r2, [sp, #4]
 2989              	.LBE39:
 321:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2990              		.loc 1 321 3 view .LVU649
 322:Core/Src/main.c **** 
 2991              		.loc 1 322 3 view .LVU650
 2992              	.LBB40:
 322:Core/Src/main.c **** 
 2993              		.loc 1 322 3 view .LVU651
 2994 0030 0293     		str	r3, [sp, #8]
 322:Core/Src/main.c **** 
 2995              		.loc 1 322 3 view .LVU652
 2996 0032 1C4B     		ldr	r3, .L210+4
 2997 0034 1A68     		ldr	r2, [r3]
 2998 0036 42F48042 		orr	r2, r2, #16384
 2999 003a 1A60     		str	r2, [r3]
 322:Core/Src/main.c **** 
 3000              		.loc 1 322 3 view .LVU653
 3001 003c 1B68     		ldr	r3, [r3]
 3002 003e 03F48043 		and	r3, r3, #16384
 3003 0042 0293     		str	r3, [sp, #8]
 322:Core/Src/main.c **** 
 3004              		.loc 1 322 3 view .LVU654
 3005 0044 029B     		ldr	r3, [sp, #8]
 3006              	.LBE40:
 322:Core/Src/main.c **** 
 3007              		.loc 1 322 3 view .LVU655
 327:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3008              		.loc 1 327 3 view .LVU656
 327:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3009              		.loc 1 327 36 is_stmt 0 view .LVU657
 3010 0046 0123     		movs	r3, #1
 3011 0048 0893     		str	r3, [sp, #32]
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3012              		.loc 1 328 3 is_stmt 1 view .LVU658
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3013              		.loc 1 328 30 is_stmt 0 view .LVU659
 3014 004a 4FF48033 		mov	r3, #65536
 3015 004e 0993     		str	r3, [sp, #36]
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3016              		.loc 1 329 3 is_stmt 1 view .LVU660
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3017              		.loc 1 329 34 is_stmt 0 view .LVU661
 3018 0050 0223     		movs	r3, #2
 3019 0052 0E93     		str	r3, [sp, #56]
 330:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3020              		.loc 1 330 3 is_stmt 1 view .LVU662
 330:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3021              		.loc 1 330 35 is_stmt 0 view .LVU663
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 99


 3022 0054 4FF48002 		mov	r2, #4194304
 3023 0058 0F92     		str	r2, [sp, #60]
 331:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 3024              		.loc 1 331 3 is_stmt 1 view .LVU664
 331:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 3025              		.loc 1 331 30 is_stmt 0 view .LVU665
 3026 005a 0422     		movs	r2, #4
 3027 005c 1092     		str	r2, [sp, #64]
 332:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3028              		.loc 1 332 3 is_stmt 1 view .LVU666
 332:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3029              		.loc 1 332 30 is_stmt 0 view .LVU667
 3030 005e A822     		movs	r2, #168
 3031 0060 1192     		str	r2, [sp, #68]
 333:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 3032              		.loc 1 333 3 is_stmt 1 view .LVU668
 333:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 3033              		.loc 1 333 30 is_stmt 0 view .LVU669
 3034 0062 1293     		str	r3, [sp, #72]
 334:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3035              		.loc 1 334 3 is_stmt 1 view .LVU670
 334:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3036              		.loc 1 334 30 is_stmt 0 view .LVU671
 3037 0064 0723     		movs	r3, #7
 3038 0066 1393     		str	r3, [sp, #76]
 335:Core/Src/main.c ****   {
 3039              		.loc 1 335 3 is_stmt 1 view .LVU672
 335:Core/Src/main.c ****   {
 3040              		.loc 1 335 7 is_stmt 0 view .LVU673
 3041 0068 08A8     		add	r0, sp, #32
 3042 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 3043              	.LVL267:
 335:Core/Src/main.c ****   {
 3044              		.loc 1 335 6 discriminator 1 view .LVU674
 3045 006e 98B9     		cbnz	r0, .L208
 342:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3046              		.loc 1 342 3 is_stmt 1 view .LVU675
 342:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3047              		.loc 1 342 31 is_stmt 0 view .LVU676
 3048 0070 0F23     		movs	r3, #15
 3049 0072 0393     		str	r3, [sp, #12]
 344:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3050              		.loc 1 344 3 is_stmt 1 view .LVU677
 344:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3051              		.loc 1 344 34 is_stmt 0 view .LVU678
 3052 0074 0223     		movs	r3, #2
 3053 0076 0493     		str	r3, [sp, #16]
 345:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3054              		.loc 1 345 3 is_stmt 1 view .LVU679
 345:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3055              		.loc 1 345 35 is_stmt 0 view .LVU680
 3056 0078 0023     		movs	r3, #0
 3057 007a 0593     		str	r3, [sp, #20]
 346:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3058              		.loc 1 346 3 is_stmt 1 view .LVU681
 346:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3059              		.loc 1 346 36 is_stmt 0 view .LVU682
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 100


 3060 007c 4FF4A053 		mov	r3, #5120
 3061 0080 0693     		str	r3, [sp, #24]
 347:Core/Src/main.c **** 
 3062              		.loc 1 347 3 is_stmt 1 view .LVU683
 347:Core/Src/main.c **** 
 3063              		.loc 1 347 36 is_stmt 0 view .LVU684
 3064 0082 4FF48053 		mov	r3, #4096
 3065 0086 0793     		str	r3, [sp, #28]
 349:Core/Src/main.c ****   {
 3066              		.loc 1 349 3 is_stmt 1 view .LVU685
 349:Core/Src/main.c ****   {
 3067              		.loc 1 349 7 is_stmt 0 view .LVU686
 3068 0088 0521     		movs	r1, #5
 3069 008a 03A8     		add	r0, sp, #12
 3070 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3071              	.LVL268:
 349:Core/Src/main.c ****   {
 3072              		.loc 1 349 6 discriminator 1 view .LVU687
 3073 0090 20B9     		cbnz	r0, .L209
 353:Core/Src/main.c **** 
 3074              		.loc 1 353 1 view .LVU688
 3075 0092 15B0     		add	sp, sp, #84
 3076              	.LCFI43:
 3077              		.cfi_remember_state
 3078              		.cfi_def_cfa_offset 4
 3079              		@ sp needed
 3080 0094 5DF804FB 		ldr	pc, [sp], #4
 3081              	.L208:
 3082              	.LCFI44:
 3083              		.cfi_restore_state
 337:Core/Src/main.c ****   }
 3084              		.loc 1 337 5 is_stmt 1 view .LVU689
 3085 0098 FFF7FEFF 		bl	Error_Handler
 3086              	.LVL269:
 3087              	.L209:
 351:Core/Src/main.c ****   }
 3088              		.loc 1 351 5 view .LVU690
 3089 009c FFF7FEFF 		bl	Error_Handler
 3090              	.LVL270:
 3091              	.L211:
 3092              		.align	2
 3093              	.L210:
 3094 00a0 00380240 		.word	1073887232
 3095 00a4 00700040 		.word	1073770496
 3096              		.cfi_endproc
 3097              	.LFE243:
 3099              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3100              		.align	2
 3101              	.LC46:
 3102 0000 53797374 		.ascii	"System Initialized\015\000"
 3102      656D2049 
 3102      6E697469 
 3102      616C697A 
 3102      65640D00 
 3103              		.section	.text.main,"ax",%progbits
 3104              		.align	1
 3105              		.global	main
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 101


 3106              		.syntax unified
 3107              		.thumb
 3108              		.thumb_func
 3110              	main:
 3111              	.LFB242:
 200:Core/Src/main.c **** 
 3112              		.loc 1 200 1 view -0
 3113              		.cfi_startproc
 3114              		@ args = 0, pretend = 0, frame = 0
 3115              		@ frame_needed = 0, uses_anonymous_args = 0
 3116 0000 10B5     		push	{r4, lr}
 3117              	.LCFI45:
 3118              		.cfi_def_cfa_offset 8
 3119              		.cfi_offset 4, -8
 3120              		.cfi_offset 14, -4
 209:Core/Src/main.c **** 
 3121              		.loc 1 209 3 view .LVU692
 3122 0002 FFF7FEFF 		bl	HAL_Init
 3123              	.LVL271:
 216:Core/Src/main.c **** 
 3124              		.loc 1 216 3 view .LVU693
 3125 0006 FFF7FEFF 		bl	SystemClock_Config
 3126              	.LVL272:
 223:Core/Src/main.c ****   MX_ADC1_Init();
 3127              		.loc 1 223 3 view .LVU694
 3128 000a FFF7FEFF 		bl	MX_GPIO_Init
 3129              	.LVL273:
 224:Core/Src/main.c ****   MX_I2C1_Init();
 3130              		.loc 1 224 3 view .LVU695
 3131 000e FFF7FEFF 		bl	MX_ADC1_Init
 3132              	.LVL274:
 225:Core/Src/main.c ****   MX_TIM1_Init();
 3133              		.loc 1 225 3 view .LVU696
 3134 0012 FFF7FEFF 		bl	MX_I2C1_Init
 3135              	.LVL275:
 226:Core/Src/main.c ****   MX_TIM2_Init();
 3136              		.loc 1 226 3 view .LVU697
 3137 0016 FFF7FEFF 		bl	MX_TIM1_Init
 3138              	.LVL276:
 227:Core/Src/main.c ****   MX_UART4_Init();
 3139              		.loc 1 227 3 view .LVU698
 3140 001a FFF7FEFF 		bl	MX_TIM2_Init
 3141              	.LVL277:
 228:Core/Src/main.c ****   MX_UART5_Init();
 3142              		.loc 1 228 3 view .LVU699
 3143 001e FFF7FEFF 		bl	MX_UART4_Init
 3144              	.LVL278:
 229:Core/Src/main.c ****   MX_USART1_UART_Init();
 3145              		.loc 1 229 3 view .LVU700
 3146 0022 FFF7FEFF 		bl	MX_UART5_Init
 3147              	.LVL279:
 230:Core/Src/main.c ****   MX_USART2_UART_Init();
 3148              		.loc 1 230 3 view .LVU701
 3149 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 3150              	.LVL280:
 231:Core/Src/main.c ****   MX_USART3_UART_Init();
 3151              		.loc 1 231 3 view .LVU702
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 102


 3152 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 3153              	.LVL281:
 232:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 3154              		.loc 1 232 3 view .LVU703
 3155 002e FFF7FEFF 		bl	MX_USART3_UART_Init
 3156              	.LVL282:
 233:Core/Src/main.c ****   MX_TIM4_Init();
 3157              		.loc 1 233 3 view .LVU704
 3158 0032 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 3159              	.LVL283:
 234:Core/Src/main.c ****   MX_TIM3_Init();
 3160              		.loc 1 234 3 view .LVU705
 3161 0036 FFF7FEFF 		bl	MX_TIM4_Init
 3162              	.LVL284:
 235:Core/Src/main.c ****   MX_USART6_UART_Init();
 3163              		.loc 1 235 3 view .LVU706
 3164 003a FFF7FEFF 		bl	MX_TIM3_Init
 3165              	.LVL285:
 236:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3166              		.loc 1 236 3 view .LVU707
 3167 003e FFF7FEFF 		bl	MX_USART6_UART_Init
 3168              	.LVL286:
 240:Core/Src/main.c **** 
 3169              		.loc 1 240 3 view .LVU708
 3170 0042 3848     		ldr	r0, .L219
 3171 0044 FFF7FEFF 		bl	puts
 3172              	.LVL287:
 242:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2); // Start PWM on PD13  
 3173              		.loc 1 242 3 view .LVU709
 3174 0048 374C     		ldr	r4, .L219+4
 3175 004a 0021     		movs	r1, #0
 3176 004c 2046     		mov	r0, r4
 3177 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3178              	.LVL288:
 243:Core/Src/main.c **** 
 3179              		.loc 1 243 3 view .LVU710
 3180 0052 0421     		movs	r1, #4
 3181 0054 2046     		mov	r0, r4
 3182 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3183              	.LVL289:
 245:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, 0);  // 25% duty cycle on PD13
 3184              		.loc 1 245 3 view .LVU711
 3185 005a 2368     		ldr	r3, [r4]
 3186 005c 0022     		movs	r2, #0
 3187 005e 5A63     		str	r2, [r3, #52]
 246:Core/Src/main.c **** 
 3188              		.loc 1 246 3 view .LVU712
 3189 0060 9A63     		str	r2, [r3, #56]
 248:Core/Src/main.c **** 
 3190              		.loc 1 248 3 view .LVU713
 248:Core/Src/main.c **** 
 3191              		.loc 1 248 23 is_stmt 0 view .LVU714
 3192 0062 FFF7FEFF 		bl	Read_ADC_PA0
 3193              	.LVL290:
 250:Core/Src/main.c **** 
 3194              		.loc 1 250 3 is_stmt 1 view .LVU715
 3195 0066 FFF7FEFF 		bl	HomeSet
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 103


 3196              	.LVL291:
 252:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT1_UART, &rx_byte1, 1); // Start receiving single bytes in interrupt mode
 3197              		.loc 1 252 3 view .LVU716
 3198 006a 0122     		movs	r2, #1
 3199 006c 2F49     		ldr	r1, .L219+8
 3200 006e 3048     		ldr	r0, .L219+12
 3201 0070 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3202              	.LVL292:
 253:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT2_UART, &rx_byte2, 1); // Start receiving single bytes in interrupt mode
 3203              		.loc 1 253 3 view .LVU717
 3204 0074 0122     		movs	r2, #1
 3205 0076 2F49     		ldr	r1, .L219+16
 3206 0078 2F48     		ldr	r0, .L219+20
 3207 007a FFF7FEFF 		bl	HAL_UART_Receive_IT
 3208              	.LVL293:
 254:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT3_UART, &rx_byte3, 1); // Start receiving single bytes in interrupt mode
 3209              		.loc 1 254 3 view .LVU718
 3210 007e 0122     		movs	r2, #1
 3211 0080 2E49     		ldr	r1, .L219+24
 3212 0082 2F48     		ldr	r0, .L219+28
 3213 0084 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3214              	.LVL294:
 255:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT4_UART, &rx_byte4, 1); // Start receiving single bytes in interrupt mode
 3215              		.loc 1 255 3 view .LVU719
 3216 0088 0122     		movs	r2, #1
 3217 008a 2E49     		ldr	r1, .L219+32
 3218 008c 2E48     		ldr	r0, .L219+36
 3219 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 3220              	.LVL295:
 256:Core/Src/main.c ****   HAL_UART_Receive_IT(JOINT5_UART, &rx_byte5, 1); // Start receiving single bytes in interrupt mode
 3221              		.loc 1 256 3 view .LVU720
 3222 0092 0122     		movs	r2, #1
 3223 0094 2D49     		ldr	r1, .L219+40
 3224 0096 2E48     		ldr	r0, .L219+44
 3225 0098 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3226              	.LVL296:
 257:Core/Src/main.c **** 
 3227              		.loc 1 257 3 view .LVU721
 3228 009c 0122     		movs	r2, #1
 3229 009e 2D49     		ldr	r1, .L219+48
 3230 00a0 2D48     		ldr	r0, .L219+52
 3231 00a2 FFF7FEFF 		bl	HAL_UART_Receive_IT
 3232              	.LVL297:
 3233 00a6 1AE0     		b	.L213
 3234              	.LVL298:
 3235              	.L218:
 3236              	.LBB41:
 3237              	.LBB42:
 283:Core/Src/main.c ****           buttonPressTime = HAL_GetTick(); // Record the press time
 3238              		.loc 1 283 11 view .LVU722
 283:Core/Src/main.c ****           buttonPressTime = HAL_GetTick(); // Record the press time
 3239              		.loc 1 283 22 is_stmt 0 view .LVU723
 3240 00a8 2C4B     		ldr	r3, .L219+56
 3241 00aa 0122     		movs	r2, #1
 3242 00ac 1A60     		str	r2, [r3]
 284:Core/Src/main.c ****           injectFlag = RETRACT; 
 3243              		.loc 1 284 11 is_stmt 1 view .LVU724
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 104


 284:Core/Src/main.c ****           injectFlag = RETRACT; 
 3244              		.loc 1 284 29 is_stmt 0 view .LVU725
 3245 00ae FFF7FEFF 		bl	HAL_GetTick
 3246              	.LVL299:
 284:Core/Src/main.c ****           injectFlag = RETRACT; 
 3247              		.loc 1 284 27 discriminator 1 view .LVU726
 3248 00b2 2B4B     		ldr	r3, .L219+60
 3249 00b4 1860     		str	r0, [r3]
 285:Core/Src/main.c ****           inject(RETRACT, adcValue);
 3250              		.loc 1 285 11 is_stmt 1 view .LVU727
 285:Core/Src/main.c ****           inject(RETRACT, adcValue);
 3251              		.loc 1 285 22 is_stmt 0 view .LVU728
 3252 00b6 0220     		movs	r0, #2
 3253 00b8 2A4B     		ldr	r3, .L219+64
 3254 00ba 1860     		str	r0, [r3]
 286:Core/Src/main.c ****       } 
 3255              		.loc 1 286 11 is_stmt 1 view .LVU729
 3256 00bc 2146     		mov	r1, r4
 3257 00be FFF7FEFF 		bl	inject
 3258              	.LVL300:
 3259 00c2 1FE0     		b	.L215
 3260              	.L214:
 3261              	.LBE42:
 294:Core/Src/main.c ****       buttonPressTime = 0; // Reset timer
 3262              		.loc 1 294 7 view .LVU730
 294:Core/Src/main.c ****       buttonPressTime = 0; // Reset timer
 3263              		.loc 1 294 18 is_stmt 0 view .LVU731
 3264 00c4 0023     		movs	r3, #0
 3265 00c6 254A     		ldr	r2, .L219+56
 3266 00c8 1360     		str	r3, [r2]
 295:Core/Src/main.c ****       HomeSet();
 3267              		.loc 1 295 7 is_stmt 1 view .LVU732
 295:Core/Src/main.c ****       HomeSet();
 3268              		.loc 1 295 23 is_stmt 0 view .LVU733
 3269 00ca 254A     		ldr	r2, .L219+60
 3270 00cc 1360     		str	r3, [r2]
 296:Core/Src/main.c ****       injectFlag = RETRACT; 
 3271              		.loc 1 296 7 is_stmt 1 view .LVU734
 3272 00ce FFF7FEFF 		bl	HomeSet
 3273              	.LVL301:
 297:Core/Src/main.c ****       inject(RETRACT, adcValue);
 3274              		.loc 1 297 7 view .LVU735
 297:Core/Src/main.c ****       inject(RETRACT, adcValue);
 3275              		.loc 1 297 18 is_stmt 0 view .LVU736
 3276 00d2 0220     		movs	r0, #2
 3277 00d4 234B     		ldr	r3, .L219+64
 3278 00d6 1860     		str	r0, [r3]
 298:Core/Src/main.c ****   }
 3279              		.loc 1 298 7 is_stmt 1 view .LVU737
 3280 00d8 2146     		mov	r1, r4
 3281 00da FFF7FEFF 		bl	inject
 3282              	.LVL302:
 3283              	.L213:
 298:Core/Src/main.c ****   }
 3284              		.loc 1 298 7 is_stmt 0 view .LVU738
 3285              	.LBE41:
 264:Core/Src/main.c ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 105


 3286              		.loc 1 264 3 is_stmt 1 view .LVU739
 3287              	.LBB44:
 269:Core/Src/main.c ****     HAL_Delay(1);
 3288              		.loc 1 269 5 view .LVU740
 269:Core/Src/main.c ****     HAL_Delay(1);
 3289              		.loc 1 269 25 is_stmt 0 view .LVU741
 3290 00de FFF7FEFF 		bl	Read_ADC_PA0
 3291              	.LVL303:
 3292 00e2 0446     		mov	r4, r0
 3293              	.LVL304:
 270:Core/Src/main.c **** 
 3294              		.loc 1 270 5 is_stmt 1 view .LVU742
 3295 00e4 0120     		movs	r0, #1
 3296 00e6 FFF7FEFF 		bl	HAL_Delay
 3297              	.LVL305:
 280:Core/Src/main.c ****       injectSequence();
 3298              		.loc 1 280 5 view .LVU743
 280:Core/Src/main.c ****       injectSequence();
 3299              		.loc 1 280 10 is_stmt 0 view .LVU744
 3300 00ea 4FF48051 		mov	r1, #4096
 3301 00ee 1E48     		ldr	r0, .L219+68
 3302 00f0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3303              	.LVL306:
 280:Core/Src/main.c ****       injectSequence();
 3304              		.loc 1 280 8 discriminator 1 view .LVU745
 3305 00f4 0028     		cmp	r0, #0
 3306 00f6 E5D1     		bne	.L214
 3307              	.LBB43:
 281:Core/Src/main.c ****       if (!buttonHeld) { 
 3308              		.loc 1 281 7 is_stmt 1 view .LVU746
 3309 00f8 FFF7FEFF 		bl	injectSequence
 3310              	.LVL307:
 282:Core/Src/main.c ****           buttonHeld = 1; 
 3311              		.loc 1 282 7 view .LVU747
 282:Core/Src/main.c ****           buttonHeld = 1; 
 3312              		.loc 1 282 11 is_stmt 0 view .LVU748
 3313 00fc 174B     		ldr	r3, .L219+56
 3314 00fe 1B68     		ldr	r3, [r3]
 282:Core/Src/main.c ****           buttonHeld = 1; 
 3315              		.loc 1 282 10 view .LVU749
 3316 0100 002B     		cmp	r3, #0
 3317 0102 D1D0     		beq	.L218
 3318              	.L215:
 289:Core/Src/main.c ****         injectFlag = INJECT; 
 3319              		.loc 1 289 7 is_stmt 1 view .LVU750
 289:Core/Src/main.c ****         injectFlag = INJECT; 
 3320              		.loc 1 289 11 is_stmt 0 view .LVU751
 3321 0104 FFF7FEFF 		bl	HAL_GetTick
 3322              	.LVL308:
 289:Core/Src/main.c ****         injectFlag = INJECT; 
 3323              		.loc 1 289 25 discriminator 1 view .LVU752
 3324 0108 154B     		ldr	r3, .L219+60
 3325 010a 1B68     		ldr	r3, [r3]
 3326 010c C31A     		subs	r3, r0, r3
 289:Core/Src/main.c ****         injectFlag = INJECT; 
 3327              		.loc 1 289 10 discriminator 1 view .LVU753
 3328 010e B3F57A6F 		cmp	r3, #4000
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 106


 3329 0112 E4D3     		bcc	.L213
 290:Core/Src/main.c ****         inject(INJECT, adcValue);
 3330              		.loc 1 290 9 is_stmt 1 view .LVU754
 290:Core/Src/main.c ****         inject(INJECT, adcValue);
 3331              		.loc 1 290 20 is_stmt 0 view .LVU755
 3332 0114 0120     		movs	r0, #1
 3333 0116 134B     		ldr	r3, .L219+64
 3334 0118 1860     		str	r0, [r3]
 291:Core/Src/main.c ****       }
 3335              		.loc 1 291 9 is_stmt 1 view .LVU756
 3336 011a 2146     		mov	r1, r4
 3337 011c FFF7FEFF 		bl	inject
 3338              	.LVL309:
 3339 0120 DDE7     		b	.L213
 3340              	.L220:
 3341 0122 00BF     		.align	2
 3342              	.L219:
 3343 0124 00000000 		.word	.LC46
 3344 0128 00000000 		.word	htim4
 3345 012c 00000000 		.word	rx_byte
 3346 0130 00000000 		.word	huart1
 3347 0134 00000000 		.word	rx_byte1
 3348 0138 00000000 		.word	huart6
 3349 013c 00000000 		.word	rx_byte2
 3350 0140 00000000 		.word	huart2
 3351 0144 00000000 		.word	rx_byte3
 3352 0148 00000000 		.word	huart3
 3353 014c 00000000 		.word	rx_byte4
 3354 0150 00000000 		.word	huart4
 3355 0154 00000000 		.word	rx_byte5
 3356 0158 00000000 		.word	huart5
 3357 015c 00000000 		.word	buttonHeld
 3358 0160 00000000 		.word	buttonPressTime
 3359 0164 00000000 		.word	injectFlag
 3360 0168 00040240 		.word	1073873920
 3361              	.LBE43:
 3362              	.LBE44:
 3363              		.cfi_endproc
 3364              	.LFE242:
 3366              		.global	buttonHeld
 3367              		.section	.bss.buttonHeld,"aw",%nobits
 3368              		.align	2
 3371              	buttonHeld:
 3372 0000 00000000 		.space	4
 3373              		.global	buttonPressTime
 3374              		.section	.bss.buttonPressTime,"aw",%nobits
 3375              		.align	2
 3378              	buttonPressTime:
 3379 0000 00000000 		.space	4
 3380              		.global	prev_actuator
 3381              		.section	.bss.prev_actuator,"aw",%nobits
 3382              		.align	2
 3385              	prev_actuator:
 3386 0000 00000000 		.space	4
 3387              		.global	prev_joint5
 3388              		.section	.bss.prev_joint5,"aw",%nobits
 3389              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 107


 3392              	prev_joint5:
 3393 0000 00000000 		.space	4
 3394              		.global	prev_joint4
 3395              		.section	.bss.prev_joint4,"aw",%nobits
 3396              		.align	2
 3399              	prev_joint4:
 3400 0000 00000000 		.space	4
 3401              		.global	prev_joint3
 3402              		.section	.bss.prev_joint3,"aw",%nobits
 3403              		.align	2
 3406              	prev_joint3:
 3407 0000 00000000 		.space	4
 3408              		.global	prev_joint2
 3409              		.section	.bss.prev_joint2,"aw",%nobits
 3410              		.align	2
 3413              	prev_joint2:
 3414 0000 00000000 		.space	4
 3415              		.global	prev_joint1
 3416              		.section	.bss.prev_joint1,"aw",%nobits
 3417              		.align	2
 3420              	prev_joint1:
 3421 0000 00000000 		.space	4
 3422              		.global	retractionLimit
 3423              		.section	.data.retractionLimit,"aw"
 3424              		.align	2
 3427              	retractionLimit:
 3428 0000 D20F0000 		.word	4050
 3429              		.global	injectionLimit
 3430              		.section	.data.injectionLimit,"aw"
 3431              		.align	2
 3434              	injectionLimit:
 3435 0000 280A0000 		.word	2600
 3436              		.global	footPedalFlag
 3437              		.section	.bss.footPedalFlag,"aw",%nobits
 3440              	footPedalFlag:
 3441 0000 00       		.space	1
 3442              		.global	buttonState
 3443              		.section	.bss.buttonState,"aw",%nobits
 3446              	buttonState:
 3447 0000 00       		.space	1
 3448              		.global	injectFlag
 3449              		.section	.data.injectFlag,"aw"
 3450              		.align	2
 3453              	injectFlag:
 3454 0000 02000000 		.word	2
 3455              		.global	ledFlag
 3456              		.section	.bss.ledFlag,"aw",%nobits
 3457              		.align	2
 3460              	ledFlag:
 3461 0000 00000000 		.space	4
 3462              		.global	actuator
 3463              		.section	.bss.actuator,"aw",%nobits
 3464              		.align	2
 3467              	actuator:
 3468 0000 00000000 		.space	4
 3469              		.global	joint5
 3470              		.section	.data.joint5,"aw"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 108


 3471              		.align	2
 3474              	joint5:
 3475 0000 28000000 		.word	40
 3476              		.global	joint4
 3477              		.section	.bss.joint4,"aw",%nobits
 3478              		.align	2
 3481              	joint4:
 3482 0000 00000000 		.space	4
 3483              		.global	joint3
 3484              		.section	.data.joint3,"aw"
 3485              		.align	2
 3488              	joint3:
 3489 0000 B4000000 		.word	180
 3490              		.global	joint2
 3491              		.section	.data.joint2,"aw"
 3492              		.align	2
 3495              	joint2:
 3496 0000 5A000000 		.word	90
 3497              		.global	joint1
 3498              		.section	.bss.joint1,"aw",%nobits
 3499              		.align	2
 3502              	joint1:
 3503 0000 00000000 		.space	4
 3504              		.global	previous_string
 3505              		.section	.bss.previous_string,"aw",%nobits
 3506              		.align	2
 3509              	previous_string:
 3510 0000 00000000 		.space	256
 3510      00000000 
 3510      00000000 
 3510      00000000 
 3510      00000000 
 3511              		.global	received_string
 3512              		.section	.bss.received_string,"aw",%nobits
 3513              		.align	2
 3516              	received_string:
 3517 0000 00000000 		.space	256
 3517      00000000 
 3517      00000000 
 3517      00000000 
 3517      00000000 
 3518              		.global	uart_received
 3519              		.section	.bss.uart_received,"aw",%nobits
 3522              	uart_received:
 3523 0000 00       		.space	1
 3524              		.global	buffer_index
 3525              		.section	.bss.buffer_index,"aw",%nobits
 3526              		.align	1
 3529              	buffer_index:
 3530 0000 0000     		.space	2
 3531              		.global	uart_buffer
 3532              		.section	.bss.uart_buffer,"aw",%nobits
 3533              		.align	2
 3536              	uart_buffer:
 3537 0000 00000000 		.space	256
 3537      00000000 
 3537      00000000 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 109


 3537      00000000 
 3537      00000000 
 3538              		.global	rx_byte5
 3539              		.section	.bss.rx_byte5,"aw",%nobits
 3542              	rx_byte5:
 3543 0000 00       		.space	1
 3544              		.global	rx_byte4
 3545              		.section	.bss.rx_byte4,"aw",%nobits
 3548              	rx_byte4:
 3549 0000 00       		.space	1
 3550              		.global	rx_byte3
 3551              		.section	.bss.rx_byte3,"aw",%nobits
 3554              	rx_byte3:
 3555 0000 00       		.space	1
 3556              		.global	rx_byte2
 3557              		.section	.bss.rx_byte2,"aw",%nobits
 3560              	rx_byte2:
 3561 0000 00       		.space	1
 3562              		.global	rx_byte1
 3563              		.section	.bss.rx_byte1,"aw",%nobits
 3566              	rx_byte1:
 3567 0000 00       		.space	1
 3568              		.global	rx_byte
 3569              		.section	.bss.rx_byte,"aw",%nobits
 3572              	rx_byte:
 3573 0000 00       		.space	1
 3574              		.text
 3575              	.Letext0:
 3576              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 3577              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3578              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3579              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3580              		.file 7 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 3581              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3582              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3583              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3584              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3585              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3586              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3587              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3588              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3589              		.file 16 "Core/Inc/adc.h"
 3590              		.file 17 "Core/Inc/tim.h"
 3591              		.file 18 "Core/Inc/usart.h"
 3592              		.file 19 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 3593              		.file 20 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 3594              		.file 21 "Core/Inc/usb_otg.h"
 3595              		.file 22 "Core/Inc/i2c.h"
 3596              		.file 23 "Core/Inc/gpio.h"
 3597              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3598              		.file 25 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 110


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:68     .text.__io_putchar_usart2:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:74     .text.__io_putchar_usart2:00000000 __io_putchar_usart2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:110    .text.__io_putchar_usart2:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:115    .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:121    .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:157    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:162    .text.__io_putchar_uart4:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:168    .text.__io_putchar_uart4:00000000 __io_putchar_uart4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:204    .text.__io_putchar_uart4:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:209    .text.__io_putchar_uart5:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:215    .text.__io_putchar_uart5:00000000 __io_putchar_uart5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:251    .text.__io_putchar_uart5:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:256    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:262    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:298    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:303    .text.ProcessReceivedJoint:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:309    .text.ProcessReceivedJoint:00000000 ProcessReceivedJoint
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:323    .rodata.Joint1Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:327    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:333    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:398    .text.Joint1Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:403    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:407    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:413    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:478    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:483    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:489    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:554    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:559    .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:565    .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:630    .text.Joint4Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:635    .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:641    .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:706    .text.Joint5Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:711    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:717    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:779    .text.HomeSet:00000040 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3502   .bss.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3495   .data.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3488   .data.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3481   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3474   .data.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3453   .data.injectFlag:00000000 injectFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:789    .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:795    .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:809    .text.ActuatorStatus:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:815    .text.ActuatorStatus:00000000 ActuatorStatus
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:830    .text.Read_ADC_PA0:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:836    .text.Read_ADC_PA0:00000000 Read_ADC_PA0
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:889    .text.Read_ADC_PA0:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:894    .text.injectSequence:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:900    .text.injectSequence:00000000 injectSequence
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 111


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:933    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:1063   .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:1069   .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:1580   .text.ProcessReceivedString:000002a4 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3467   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3420   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3413   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3406   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3399   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3392   .bss.prev_joint5:00000000 prev_joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3385   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:1625   .text.ProcessReceivedString:00000344 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2006   .text.ProcessReceivedString:000004cc $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3460   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2039   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2043   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2049   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2568   .text.HAL_UART_RxCpltCallback:00000278 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3529   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3542   .bss.rx_byte5:00000000 rx_byte5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3536   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3572   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3516   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3566   .bss.rx_byte1:00000000 rx_byte1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3509   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3560   .bss.rx_byte2:00000000 rx_byte2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3554   .bss.rx_byte3:00000000 rx_byte3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2594   .text.HAL_UART_RxCpltCallback:000002d0 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2784   .text.HAL_UART_RxCpltCallback:000003c0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3548   .bss.rx_byte4:00000000 rx_byte4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2796   .text.inject:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2802   .text.inject:00000000 inject
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2894   .text.inject:00000068 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3434   .data.injectionLimit:00000000 injectionLimit
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3427   .data.retractionLimit:00000000 retractionLimit
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2902   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2908   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2940   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:2946   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3094   .text.SystemClock_Config:000000a0 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3100   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3104   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3110   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3343   .text.main:00000124 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3371   .bss.buttonHeld:00000000 buttonHeld
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3378   .bss.buttonPressTime:00000000 buttonPressTime
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3368   .bss.buttonHeld:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3375   .bss.buttonPressTime:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3382   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3389   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3396   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3403   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3410   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3417   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3424   .data.retractionLimit:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3431   .data.injectionLimit:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3440   .bss.footPedalFlag:00000000 footPedalFlag
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 112


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3441   .bss.footPedalFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3446   .bss.buttonState:00000000 buttonState
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3447   .bss.buttonState:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3450   .data.injectFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3457   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3464   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3471   .data.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3478   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3485   .data.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3492   .data.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3499   .bss.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3506   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3513   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3522   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3523   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3526   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3533   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3543   .bss.rx_byte5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3549   .bss.rx_byte4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3555   .bss.rx_byte3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3561   .bss.rx_byte2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3567   .bss.rx_byte1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s:3573   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
huart2
huart3
huart4
huart5
huart6
snprintf
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
hadc1
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
htim4
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_UART4_Init
MX_UART5_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccGCQqXr.s 			page 113


MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM4_Init
MX_TIM3_Init
MX_USART6_UART_Init
HAL_TIM_PWM_Start
HAL_GetTick
HAL_Delay
HAL_GPIO_ReadPin
