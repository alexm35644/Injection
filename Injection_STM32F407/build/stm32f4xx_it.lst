ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB239:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** extern volatile uint8_t buttonState; // Declare this variable globally in main.c
  46:Core/Src/stm32f4xx_it.c **** static uint32_t lastInterruptTime = 0;
  47:Core/Src/stm32f4xx_it.c **** static uint32_t debounceDelay = 200;  
  48:Core/Src/stm32f4xx_it.c **** 
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/stm32f4xx_it.c **** 
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/stm32f4xx_it.c **** 
  59:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  60:Core/Src/stm32f4xx_it.c **** 
  61:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart4;
  63:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart5;
  64:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  65:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  66:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  67:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart6;
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  74:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f4xx_it.c **** /**
  76:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  77:Core/Src/stm32f4xx_it.c ****   */
  78:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  79:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 79 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 3


  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 84 4 view .LVU1
  85:Core/Src/stm32f4xx_it.c ****   {
  86:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 86 3 view .LVU2
  84:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 84 10 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE239:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB240:
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  88:Core/Src/stm32f4xx_it.c **** }
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c **** /**
  91:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  92:Core/Src/stm32f4xx_it.c ****   */
  93:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  94:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 94 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 98 3 view .LVU5
  99:Core/Src/stm32f4xx_it.c ****   {
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 102 3 view .LVU6
  98:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 98 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE240:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 4


  73              	MemManage_Handler:
  74              	.LFB241:
 103:Core/Src/stm32f4xx_it.c **** }
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c **** /**
 106:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 107:Core/Src/stm32f4xx_it.c ****   */
 108:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 109:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 109 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c **** 
 112:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 113 3 view .LVU9
 114:Core/Src/stm32f4xx_it.c ****   {
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 117 3 view .LVU10
 113:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 113 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE241:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB242:
 118:Core/Src/stm32f4xx_it.c **** }
 119:Core/Src/stm32f4xx_it.c **** 
 120:Core/Src/stm32f4xx_it.c **** /**
 121:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 122:Core/Src/stm32f4xx_it.c ****   */
 123:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 124:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 124 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c **** 
 127:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 5


 105              		.loc 1 128 3 view .LVU13
 129:Core/Src/stm32f4xx_it.c ****   {
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 132 3 view .LVU14
 128:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 128 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE242:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB243:
 133:Core/Src/stm32f4xx_it.c **** }
 134:Core/Src/stm32f4xx_it.c **** 
 135:Core/Src/stm32f4xx_it.c **** /**
 136:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 137:Core/Src/stm32f4xx_it.c ****   */
 138:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 139:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 139 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 143 3 view .LVU17
 144:Core/Src/stm32f4xx_it.c ****   {
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 147 3 view .LVU18
 143:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 143 9 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE243:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB244:
 148:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** 
 150:Core/Src/stm32f4xx_it.c **** /**
 151:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 152:Core/Src/stm32f4xx_it.c ****   */
 153:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 154:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 154 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 161:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 161 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE244:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB245:
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c **** /**
 164:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 165:Core/Src/stm32f4xx_it.c ****   */
 166:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 167:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 167 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 171:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 172:Core/Src/stm32f4xx_it.c **** 
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 174:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 174 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE245:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 7


 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB246:
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c **** /**
 177:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 178:Core/Src/stm32f4xx_it.c ****   */
 179:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 180:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 180 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 187:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 187 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE246:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB247:
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c **** /**
 190:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 191:Core/Src/stm32f4xx_it.c ****   */
 192:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 193:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 193 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 197:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 197 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 199:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 8


 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 201:Core/Src/stm32f4xx_it.c **** }
 213              		.loc 1 201 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE247:
 218              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	EXTI0_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	EXTI0_IRQHandler:
 226              	.LFB248:
 202:Core/Src/stm32f4xx_it.c **** 
 203:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 205:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 206:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 207:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 208:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c **** /**
 211:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 212:Core/Src/stm32f4xx_it.c ****   */
 213:Core/Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 214:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 214 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 216:Core/Src/stm32f4xx_it.c ****   uint32_t currentTime = HAL_GetTick();  // Get the current time in ms
 236              		.loc 1 216 3 view .LVU30
 237              		.loc 1 216 26 is_stmt 0 view .LVU31
 238 0002 FFF7FEFF 		bl	HAL_GetTick
 239              	.LVL1:
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   // Check if the interrupt was triggered by the correct pin (USER1_Pin)
 219:Core/Src/stm32f4xx_it.c ****   if (__HAL_GPIO_EXTI_GET_IT(USER1_Pin) != RESET) 
 240              		.loc 1 219 3 is_stmt 1 view .LVU32
 241              		.loc 1 219 7 is_stmt 0 view .LVU33
 242 0006 0A4B     		ldr	r3, .L19
 243 0008 5B69     		ldr	r3, [r3, #20]
 244              		.loc 1 219 6 view .LVU34
 245 000a 13F0010F 		tst	r3, #1
 246 000e 0BD0     		beq	.L17
 220:Core/Src/stm32f4xx_it.c ****   {
 221:Core/Src/stm32f4xx_it.c ****       __HAL_GPIO_EXTI_CLEAR_IT(USER1_Pin);  // Clear the interrupt flag
 247              		.loc 1 221 7 is_stmt 1 view .LVU35
 248 0010 074B     		ldr	r3, .L19
 249 0012 0122     		movs	r2, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 9


 250 0014 5A61     		str	r2, [r3, #20]
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****       // Check if enough time has passed since the last interrupt
 224:Core/Src/stm32f4xx_it.c ****       if (currentTime - lastInterruptTime > debounceDelay)
 251              		.loc 1 224 7 view .LVU36
 252              		.loc 1 224 23 is_stmt 0 view .LVU37
 253 0016 074B     		ldr	r3, .L19+4
 254 0018 1B68     		ldr	r3, [r3]
 255 001a C31A     		subs	r3, r0, r3
 256              		.loc 1 224 10 view .LVU38
 257 001c C82B     		cmp	r3, #200
 258 001e 03D9     		bls	.L17
 225:Core/Src/stm32f4xx_it.c ****       {
 226:Core/Src/stm32f4xx_it.c ****           // Toggle the button state
 227:Core/Src/stm32f4xx_it.c ****           buttonState = 1;
 259              		.loc 1 227 11 is_stmt 1 view .LVU39
 260              		.loc 1 227 23 is_stmt 0 view .LVU40
 261 0020 054B     		ldr	r3, .L19+8
 262 0022 1A70     		strb	r2, [r3]
 228:Core/Src/stm32f4xx_it.c **** 
 229:Core/Src/stm32f4xx_it.c ****           // Update the last interrupt time
 230:Core/Src/stm32f4xx_it.c ****           lastInterruptTime = currentTime;
 263              		.loc 1 230 11 is_stmt 1 view .LVU41
 264              		.loc 1 230 29 is_stmt 0 view .LVU42
 265 0024 034B     		ldr	r3, .L19+4
 266 0026 1860     		str	r0, [r3]
 267              	.L17:
 231:Core/Src/stm32f4xx_it.c ****       }
 232:Core/Src/stm32f4xx_it.c ****   }
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 234:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(USER1_Pin);
 268              		.loc 1 234 3 is_stmt 1 view .LVU43
 269 0028 0120     		movs	r0, #1
 270              	.LVL2:
 271              		.loc 1 234 3 is_stmt 0 view .LVU44
 272 002a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 273              	.LVL3:
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 238:Core/Src/stm32f4xx_it.c **** }
 274              		.loc 1 238 1 view .LVU45
 275 002e 08BD     		pop	{r3, pc}
 276              	.L20:
 277              		.align	2
 278              	.L19:
 279 0030 003C0140 		.word	1073822720
 280 0034 00000000 		.word	lastInterruptTime
 281 0038 00000000 		.word	buttonState
 282              		.cfi_endproc
 283              	.LFE248:
 285              		.section	.text.USART1_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	USART1_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 10


 292              	USART1_IRQHandler:
 293              	.LFB249:
 239:Core/Src/stm32f4xx_it.c **** 
 240:Core/Src/stm32f4xx_it.c **** /**
 241:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 242:Core/Src/stm32f4xx_it.c ****   */
 243:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 244:Core/Src/stm32f4xx_it.c **** {
 294              		.loc 1 244 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI2:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 246:Core/Src/stm32f4xx_it.c **** 
 247:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 248:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 303              		.loc 1 248 3 view .LVU47
 304 0002 0248     		ldr	r0, .L23
 305 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 306              	.LVL4:
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 252:Core/Src/stm32f4xx_it.c **** }
 307              		.loc 1 252 1 is_stmt 0 view .LVU48
 308 0008 08BD     		pop	{r3, pc}
 309              	.L24:
 310 000a 00BF     		.align	2
 311              	.L23:
 312 000c 00000000 		.word	huart1
 313              		.cfi_endproc
 314              	.LFE249:
 316              		.section	.text.USART2_IRQHandler,"ax",%progbits
 317              		.align	1
 318              		.global	USART2_IRQHandler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	USART2_IRQHandler:
 324              	.LFB250:
 253:Core/Src/stm32f4xx_it.c **** 
 254:Core/Src/stm32f4xx_it.c **** /**
 255:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 256:Core/Src/stm32f4xx_it.c ****   */
 257:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 258:Core/Src/stm32f4xx_it.c **** {
 325              		.loc 1 258 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI3:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 11


 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 260:Core/Src/stm32f4xx_it.c **** 
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 262:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 334              		.loc 1 262 3 view .LVU50
 335 0002 0248     		ldr	r0, .L27
 336 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 337              	.LVL5:
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 266:Core/Src/stm32f4xx_it.c **** }
 338              		.loc 1 266 1 is_stmt 0 view .LVU51
 339 0008 08BD     		pop	{r3, pc}
 340              	.L28:
 341 000a 00BF     		.align	2
 342              	.L27:
 343 000c 00000000 		.word	huart2
 344              		.cfi_endproc
 345              	.LFE250:
 347              		.section	.text.USART3_IRQHandler,"ax",%progbits
 348              		.align	1
 349              		.global	USART3_IRQHandler
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	USART3_IRQHandler:
 355              	.LFB251:
 267:Core/Src/stm32f4xx_it.c **** 
 268:Core/Src/stm32f4xx_it.c **** /**
 269:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 270:Core/Src/stm32f4xx_it.c ****   */
 271:Core/Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 272:Core/Src/stm32f4xx_it.c **** {
 356              		.loc 1 272 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 08B5     		push	{r3, lr}
 361              	.LCFI4:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 274:Core/Src/stm32f4xx_it.c **** 
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 276:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 365              		.loc 1 276 3 view .LVU53
 366 0002 0248     		ldr	r0, .L31
 367 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 368              	.LVL6:
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 12


 280:Core/Src/stm32f4xx_it.c **** }
 369              		.loc 1 280 1 is_stmt 0 view .LVU54
 370 0008 08BD     		pop	{r3, pc}
 371              	.L32:
 372 000a 00BF     		.align	2
 373              	.L31:
 374 000c 00000000 		.word	huart3
 375              		.cfi_endproc
 376              	.LFE251:
 378              		.section	.text.UART4_IRQHandler,"ax",%progbits
 379              		.align	1
 380              		.global	UART4_IRQHandler
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	UART4_IRQHandler:
 386              	.LFB252:
 281:Core/Src/stm32f4xx_it.c **** 
 282:Core/Src/stm32f4xx_it.c **** /**
 283:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART4 global interrupt.
 284:Core/Src/stm32f4xx_it.c ****   */
 285:Core/Src/stm32f4xx_it.c **** void UART4_IRQHandler(void)
 286:Core/Src/stm32f4xx_it.c **** {
 387              		.loc 1 286 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI5:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 288:Core/Src/stm32f4xx_it.c **** 
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 290:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 396              		.loc 1 290 3 view .LVU56
 397 0002 0248     		ldr	r0, .L35
 398 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 399              	.LVL7:
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 294:Core/Src/stm32f4xx_it.c **** }
 400              		.loc 1 294 1 is_stmt 0 view .LVU57
 401 0008 08BD     		pop	{r3, pc}
 402              	.L36:
 403 000a 00BF     		.align	2
 404              	.L35:
 405 000c 00000000 		.word	huart4
 406              		.cfi_endproc
 407              	.LFE252:
 409              		.section	.text.UART5_IRQHandler,"ax",%progbits
 410              		.align	1
 411              		.global	UART5_IRQHandler
 412              		.syntax unified
 413              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 13


 414              		.thumb_func
 416              	UART5_IRQHandler:
 417              	.LFB253:
 295:Core/Src/stm32f4xx_it.c **** 
 296:Core/Src/stm32f4xx_it.c **** /**
 297:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART5 global interrupt.
 298:Core/Src/stm32f4xx_it.c ****   */
 299:Core/Src/stm32f4xx_it.c **** void UART5_IRQHandler(void)
 300:Core/Src/stm32f4xx_it.c **** {
 418              		.loc 1 300 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 08B5     		push	{r3, lr}
 423              	.LCFI6:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 3, -8
 426              		.cfi_offset 14, -4
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 0 */
 302:Core/Src/stm32f4xx_it.c **** 
 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART5_IRQn 0 */
 304:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart5);
 427              		.loc 1 304 3 view .LVU59
 428 0002 0248     		ldr	r0, .L39
 429 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 430              	.LVL8:
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 1 */
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART5_IRQn 1 */
 308:Core/Src/stm32f4xx_it.c **** }
 431              		.loc 1 308 1 is_stmt 0 view .LVU60
 432 0008 08BD     		pop	{r3, pc}
 433              	.L40:
 434 000a 00BF     		.align	2
 435              	.L39:
 436 000c 00000000 		.word	huart5
 437              		.cfi_endproc
 438              	.LFE253:
 440              		.section	.text.USART6_IRQHandler,"ax",%progbits
 441              		.align	1
 442              		.global	USART6_IRQHandler
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	USART6_IRQHandler:
 448              	.LFB254:
 309:Core/Src/stm32f4xx_it.c **** 
 310:Core/Src/stm32f4xx_it.c **** /**
 311:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART6 global interrupt.
 312:Core/Src/stm32f4xx_it.c ****   */
 313:Core/Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 314:Core/Src/stm32f4xx_it.c **** {
 449              		.loc 1 314 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 14


 454              	.LCFI7:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 3, -8
 457              		.cfi_offset 14, -4
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 316:Core/Src/stm32f4xx_it.c **** 
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 318:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 458              		.loc 1 318 3 view .LVU62
 459 0002 0248     		ldr	r0, .L43
 460 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 461              	.LVL9:
 319:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 1 */
 320:Core/Src/stm32f4xx_it.c **** 
 321:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 1 */
 322:Core/Src/stm32f4xx_it.c **** }
 462              		.loc 1 322 1 is_stmt 0 view .LVU63
 463 0008 08BD     		pop	{r3, pc}
 464              	.L44:
 465 000a 00BF     		.align	2
 466              	.L43:
 467 000c 00000000 		.word	huart6
 468              		.cfi_endproc
 469              	.LFE254:
 471              		.section	.bss.lastInterruptTime,"aw",%nobits
 472              		.align	2
 475              	lastInterruptTime:
 476 0000 00000000 		.space	4
 477              		.text
 478              	.Letext0:
 479              		.file 2 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 480              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 481              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 482              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 483              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 484              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 485              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 486              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 487              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:21     .text.NMI_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:27     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:44     .text.HardFault_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:67     .text.MemManage_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:90     .text.BusFault_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:113    .text.UsageFault_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:136    .text.SVC_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:142    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:155    .text.DebugMon_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:174    .text.PendSV_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:193    .text.SysTick_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:219    .text.EXTI0_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:225    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:279    .text.EXTI0_IRQHandler:00000030 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:475    .bss.lastInterruptTime:00000000 lastInterruptTime
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:286    .text.USART1_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:292    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:312    .text.USART1_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:317    .text.USART2_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:323    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:343    .text.USART2_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:348    .text.USART3_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:354    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:374    .text.USART3_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:379    .text.UART4_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:385    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:405    .text.UART4_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:410    .text.UART5_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:416    .text.UART5_IRQHandler:00000000 UART5_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:436    .text.UART5_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:441    .text.USART6_IRQHandler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:447    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:467    .text.USART6_IRQHandler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccmx08EL.s:472    .bss.lastInterruptTime:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GetTick
HAL_GPIO_EXTI_IRQHandler
buttonState
HAL_UART_IRQHandler
huart1
huart2
huart3
huart4
huart5
huart6
