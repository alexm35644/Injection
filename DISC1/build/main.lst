ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB139:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "i2s.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_host.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h> 
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 90
  44:Core/Src/main.c **** #define JOINT2_HOME 0
  45:Core/Src/main.c **** #define JOINT3_HOME 0
  46:Core/Src/main.c **** #define JOINT4_HOME 0 
  47:Core/Src/main.c **** #define JOINT5_HOME 0
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** #define MAIN_UART &huart2
  50:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART2
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PM */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PV */
  62:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  63:Core/Src/main.c **** volatile uint8_t rx_byte;                        // For receiving single byte
  64:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  65:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
  68:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
  69:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** int joint1 = JOINT1_HOME;
  72:Core/Src/main.c **** int joint2 = JOINT2_HOME;
  73:Core/Src/main.c **** int joint3 = JOINT3_HOME;
  74:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
  75:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
  76:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
  77:Core/Src/main.c **** int ledFlag = 0; 
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  86:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 3


  87:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  88:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  89:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
  90:Core/Src/main.c **** #define printf_usart3(...) do { \
  91:Core/Src/main.c ****     char buffer[256]; \
  92:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
  93:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
  94:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
  95:Core/Src/main.c ****     } \
  96:Core/Src/main.c **** } while (0)
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
  99:Core/Src/main.c **** #define printf_usart6(...) do { \
 100:Core/Src/main.c ****     char buffer[256]; \
 101:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 102:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 103:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 104:Core/Src/main.c ****     } \
 105:Core/Src/main.c **** } while (0)
 106:Core/Src/main.c **** /* USER CODE END PFP */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 109:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* USER CODE END 0 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief  The application entry point.
 115:Core/Src/main.c ****   * @retval int
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** int main(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Initialize all configured peripherals */
 141:Core/Src/main.c ****   MX_GPIO_Init();
 142:Core/Src/main.c ****   MX_I2C1_Init();
 143:Core/Src/main.c ****   MX_I2S3_Init();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 4


 144:Core/Src/main.c ****   MX_SPI1_Init();
 145:Core/Src/main.c ****   MX_USART2_UART_Init();
 146:Core/Src/main.c ****   MX_USART3_UART_Init();
 147:Core/Src/main.c ****   MX_USART6_UART_Init();
 148:Core/Src/main.c ****   MX_USB_HOST_Init();
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 152:Core/Src/main.c ****   // HomeSet(); // Set all joints to home position
 153:Core/Src/main.c ****   ToggleLEDs(1);
 154:Core/Src/main.c ****   printf("System Initialized\r\n");
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE END 2 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Infinite loop */
 159:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 160:Core/Src/main.c ****   while (1)
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     /* USER CODE END WHILE */
 163:Core/Src/main.c ****     MX_USB_HOST_Process();
 164:Core/Src/main.c ****     ToggleLEDs(ledFlag);
 165:Core/Src/main.c ****     
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 5


 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 221:Core/Src/main.c ****   * @retval None
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 224:Core/Src/main.c ****  {
  30              		.loc 1 224 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 224 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 225:Core/Src/main.c ****    /* Place your implementation of fputc here */
 226:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 227:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 227 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 227 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 228:Core/Src/main.c ****  
 229:Core/Src/main.c ****    return ch;
  52              		.loc 1 229 4 is_stmt 1 view .LVU4
 230:Core/Src/main.c ****  }
  53              		.loc 1 230 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 6


  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart2
  64              		.cfi_endproc
  65              	.LFE139:
  67              		.section	.text.__io_putchar_usart3,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart3
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart3:
  75              	.LVL3:
  76              	.LFB140:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 233:Core/Src/main.c ****  {
  77              		.loc 1 233 2 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 233 2 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 234:Core/Src/main.c ****     /* Place your implementation of fputc here */
 235:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 236:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 236 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 236 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****     return ch;
  99              		.loc 1 238 5 is_stmt 1 view .LVU10
 239:Core/Src/main.c ****  }
 100              		.loc 1 239 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0018 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 7


 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart3
 111              		.cfi_endproc
 112              	.LFE140:
 114              		.section	.text.__io_putchar_usart6,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart6
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart6:
 122              	.LVL6:
 123              	.LFB141:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 242:Core/Src/main.c ****  {
 124              		.loc 1 242 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 242 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 243:Core/Src/main.c ****     /* Place your implementation of fputc here */
 244:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 245:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 245 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 245 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****     return ch;
 146              		.loc 1 247 5 is_stmt 1 view .LVU16
 248:Core/Src/main.c ****  }
 147              		.loc 1 248 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
 156              	.L11:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 8


 157 001c 00000000 		.word	huart6
 158              		.cfi_endproc
 159              	.LFE141:
 161              		.section	.text.ToggleLEDs,"ax",%progbits
 162              		.align	1
 163              		.global	ToggleLEDs
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	ToggleLEDs:
 169              	.LVL9:
 170              	.LFB144:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 251:Core/Src/main.c **** {
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 254:Core/Src/main.c ****     {
 255:Core/Src/main.c ****         // Store received byte in buffer
 256:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 257:Core/Src/main.c ****         {
 258:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****             // Check for newline or carriage return
 261:Core/Src/main.c ****             if (rx_byte == '\r') 
 262:Core/Src/main.c ****             {
 263:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 264:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 267:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 270:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 271:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 272:Core/Src/main.c ****                 }
 273:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 274:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 275:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 276:Core/Src/main.c ****                 }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****                 
 279:Core/Src/main.c ****             }
 280:Core/Src/main.c ****         }
 281:Core/Src/main.c ****         else 
 282:Core/Src/main.c ****         {
 283:Core/Src/main.c ****             // Buffer overflow, reset index
 284:Core/Src/main.c ****             buffer_index = 0;
 285:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 286:Core/Src/main.c ****         }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****         // Restart UART reception for the next byte
 289:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 290:Core/Src/main.c ****     }
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 9


 294:Core/Src/main.c ****  
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****  
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** // Function to process the received string
 300:Core/Src/main.c **** void ProcessReceivedString(char *str)
 301:Core/Src/main.c **** {
 302:Core/Src/main.c ****     // Check if the string starts with "set"
 303:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 304:Core/Src/main.c ****     {
 305:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 306:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 309:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 310:Core/Src/main.c ****         {
 311:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 312:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 315:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 316:Core/Src/main.c ****                 // send to joint
 317:Core/Src/main.c ****                 prev_joint1 = joint1;
 318:Core/Src/main.c ****             }
 319:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 320:Core/Src/main.c ****                 // send to joint
 321:Core/Src/main.c ****                 prev_joint2 = joint2;
 322:Core/Src/main.c ****             }
 323:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 324:Core/Src/main.c ****                 // send to joint
 325:Core/Src/main.c ****                 prev_joint3 = joint3;
 326:Core/Src/main.c ****             }
 327:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 328:Core/Src/main.c ****                 // send to joint
 329:Core/Src/main.c ****                 prev_joint4 = joint4;
 330:Core/Src/main.c ****             }
 331:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 332:Core/Src/main.c ****                 // send to joint
 333:Core/Src/main.c ****                 prev_joint5 = joint5;
 334:Core/Src/main.c ****             }
 335:Core/Src/main.c ****             if (actuator != prev_actuator) {
 336:Core/Src/main.c ****                 // send to actuator
 337:Core/Src/main.c ****                 prev_actuator = actuator;
 338:Core/Src/main.c ****             }
 339:Core/Src/main.c ****         }
 340:Core/Src/main.c ****         else
 341:Core/Src/main.c ****         {
 342:Core/Src/main.c ****             printf("Invalid format!\r\n");
 343:Core/Src/main.c ****         }
 344:Core/Src/main.c ****     }
 345:Core/Src/main.c ****     // Just setting joint1 
 346:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
 347:Core/Src/main.c ****     {
 348:Core/Src/main.c ****         str += 7;
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 10


 351:Core/Src/main.c ****         {
 352:Core/Src/main.c ****             // Successfully parsed joint1
 353:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 356:Core/Src/main.c ****                 Joint1Set(joint1);
 357:Core/Src/main.c ****                 prev_joint1 = joint1;
 358:Core/Src/main.c ****             }
 359:Core/Src/main.c ****         }
 360:Core/Src/main.c ****         else
 361:Core/Src/main.c ****         {
 362:Core/Src/main.c ****             printf("Invalid format!\r\n");
 363:Core/Src/main.c ****         }
 364:Core/Src/main.c ****     }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****     // Just setting joint2
 367:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 368:Core/Src/main.c ****     {
 369:Core/Src/main.c ****         str += 7;
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 372:Core/Src/main.c ****         {
 373:Core/Src/main.c ****             // Successfully parsed joint2
 374:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 377:Core/Src/main.c ****                 Joint2Set(joint2);
 378:Core/Src/main.c ****                 prev_joint2 = joint2;
 379:Core/Src/main.c ****             }
 380:Core/Src/main.c ****         }
 381:Core/Src/main.c ****         else
 382:Core/Src/main.c ****         {
 383:Core/Src/main.c ****             printf("Invalid format!\r\n");
 384:Core/Src/main.c ****         }
 385:Core/Src/main.c ****     }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****     // Just setting joint3
 388:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 389:Core/Src/main.c ****     {
 390:Core/Src/main.c ****         str += 7;
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 393:Core/Src/main.c ****         {
 394:Core/Src/main.c ****             // Successfully parsed joint3
 395:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 398:Core/Src/main.c ****                 Joint3Set(joint3);
 399:Core/Src/main.c ****                 prev_joint3 = joint3;
 400:Core/Src/main.c ****             }
 401:Core/Src/main.c ****         }
 402:Core/Src/main.c ****         else
 403:Core/Src/main.c ****         {
 404:Core/Src/main.c ****             printf("Invalid format!\r\n");
 405:Core/Src/main.c ****         }
 406:Core/Src/main.c ****     }
 407:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 11


 408:Core/Src/main.c ****     // Just setting joint4
 409:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 410:Core/Src/main.c ****     {
 411:Core/Src/main.c ****         str += 7;
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 414:Core/Src/main.c ****         {
 415:Core/Src/main.c ****             // Successfully parsed joint4
 416:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 419:Core/Src/main.c ****                 Joint4Set(joint4);
 420:Core/Src/main.c ****                 prev_joint4 = joint4;
 421:Core/Src/main.c ****             }
 422:Core/Src/main.c ****         }
 423:Core/Src/main.c ****         else
 424:Core/Src/main.c ****         {
 425:Core/Src/main.c ****             printf("Invalid format!\r\n");
 426:Core/Src/main.c ****         }
 427:Core/Src/main.c ****     }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     // Just setting joint5
 430:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 431:Core/Src/main.c ****     {
 432:Core/Src/main.c ****         str += 7;
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 435:Core/Src/main.c ****         {
 436:Core/Src/main.c ****             // Successfully parsed joint5
 437:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 440:Core/Src/main.c ****                 Joint5Set(joint5);
 441:Core/Src/main.c ****                 prev_joint5 = joint5;
 442:Core/Src/main.c ****             }
 443:Core/Src/main.c ****         }
 444:Core/Src/main.c ****         else
 445:Core/Src/main.c ****         {
 446:Core/Src/main.c ****             printf("Invalid format!\r\n");
 447:Core/Src/main.c ****         }
 448:Core/Src/main.c ****     }
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****     // Just setting actuator
 451:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 452:Core/Src/main.c ****     {
 453:Core/Src/main.c ****         str += 9;
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 456:Core/Src/main.c ****         {
 457:Core/Src/main.c ****             // Successfully parsed joint5
 458:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****             if (actuator != actuator) {
 461:Core/Src/main.c ****                 ActuatorSet(actuator);
 462:Core/Src/main.c ****                 prev_actuator = actuator;
 463:Core/Src/main.c ****             }
 464:Core/Src/main.c ****         }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 12


 465:Core/Src/main.c ****         else
 466:Core/Src/main.c ****         {
 467:Core/Src/main.c ****             printf("Invalid format!\r\n");
 468:Core/Src/main.c ****         }
 469:Core/Src/main.c ****     }
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****     // Set Home 
 472:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 473:Core/Src/main.c ****     {
 474:Core/Src/main.c ****         str += 5;
 475:Core/Src/main.c ****         
 476:Core/Src/main.c ****         HomeSet();
 477:Core/Src/main.c ****         
 478:Core/Src/main.c ****         printf("Set all joints home\r\n");
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****     }
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 483:Core/Src/main.c ****     {
 484:Core/Src/main.c ****         str += 6;
 485:Core/Src/main.c ****         ledFlag = !ledFlag;
 486:Core/Src/main.c ****         
 487:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****     }
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****     // Prints all joints
 492:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 493:Core/Src/main.c ****     {
 494:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 495:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 496:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 497:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 498:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 499:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 500:Core/Src/main.c ****     }
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****     // Echoes string if no keywords are sent
 503:Core/Src/main.c ****     else
 504:Core/Src/main.c ****     {
 505:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 506:Core/Src/main.c ****     }
 507:Core/Src/main.c **** }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** void ToggleLEDs(int state){
 171              		.loc 1 510 27 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 510 27 is_stmt 0 view .LVU19
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI9:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 511:Core/Src/main.c ****   /* Toggle LEDs sequentially */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 13


 512:Core/Src/main.c ****   if(state){
 181              		.loc 1 512 3 is_stmt 1 view .LVU20
 182              		.loc 1 512 5 is_stmt 0 view .LVU21
 183 0002 08B3     		cbz	r0, .L14
 513:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 184              		.loc 1 513 5 is_stmt 1 view .LVU22
 185 0004 1D4C     		ldr	r4, .L17
 186 0006 4FF48051 		mov	r1, #4096
 187 000a 2046     		mov	r0, r4
 188              	.LVL10:
 189              		.loc 1 513 5 is_stmt 0 view .LVU23
 190 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 191              	.LVL11:
 514:Core/Src/main.c ****     HAL_Delay(100);
 192              		.loc 1 514 5 is_stmt 1 view .LVU24
 193 0010 6420     		movs	r0, #100
 194 0012 FFF7FEFF 		bl	HAL_Delay
 195              	.LVL12:
 515:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 196              		.loc 1 515 5 view .LVU25
 197 0016 4FF40051 		mov	r1, #8192
 198 001a 2046     		mov	r0, r4
 199 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 200              	.LVL13:
 516:Core/Src/main.c ****     HAL_Delay(100);
 201              		.loc 1 516 5 view .LVU26
 202 0020 6420     		movs	r0, #100
 203 0022 FFF7FEFF 		bl	HAL_Delay
 204              	.LVL14:
 517:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 205              		.loc 1 517 5 view .LVU27
 206 0026 4FF48041 		mov	r1, #16384
 207 002a 2046     		mov	r0, r4
 208 002c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 209              	.LVL15:
 518:Core/Src/main.c ****     HAL_Delay(100);
 210              		.loc 1 518 5 view .LVU28
 211 0030 6420     		movs	r0, #100
 212 0032 FFF7FEFF 		bl	HAL_Delay
 213              	.LVL16:
 519:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED4_GPIO_Port, LED4_Pin);
 214              		.loc 1 519 5 view .LVU29
 215 0036 4FF40041 		mov	r1, #32768
 216 003a 2046     		mov	r0, r4
 217 003c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 218              	.LVL17:
 520:Core/Src/main.c ****     HAL_Delay(100);
 219              		.loc 1 520 5 view .LVU30
 220 0040 6420     		movs	r0, #100
 221 0042 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL18:
 223              	.L13:
 521:Core/Src/main.c ****   }else{
 522:Core/Src/main.c ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 523:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 524:Core/Src/main.c ****     HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 525:Core/Src/main.c ****     HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_RESET);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 14


 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   
 528:Core/Src/main.c **** }
 224              		.loc 1 528 1 is_stmt 0 view .LVU31
 225 0046 10BD     		pop	{r4, pc}
 226              	.LVL19:
 227              	.L14:
 522:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 228              		.loc 1 522 5 is_stmt 1 view .LVU32
 229 0048 0C4C     		ldr	r4, .L17
 230 004a 0022     		movs	r2, #0
 231 004c 4FF48051 		mov	r1, #4096
 232 0050 2046     		mov	r0, r4
 233              	.LVL20:
 522:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 234              		.loc 1 522 5 is_stmt 0 view .LVU33
 235 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 236              	.LVL21:
 523:Core/Src/main.c ****     HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 237              		.loc 1 523 5 is_stmt 1 view .LVU34
 238 0056 0022     		movs	r2, #0
 239 0058 4FF40051 		mov	r1, #8192
 240 005c 2046     		mov	r0, r4
 241 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL22:
 524:Core/Src/main.c ****     HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_RESET);
 243              		.loc 1 524 5 view .LVU35
 244 0062 0022     		movs	r2, #0
 245 0064 4FF48041 		mov	r1, #16384
 246 0068 2046     		mov	r0, r4
 247 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL23:
 525:Core/Src/main.c ****   }
 249              		.loc 1 525 5 view .LVU36
 250 006e 0022     		movs	r2, #0
 251 0070 4FF40041 		mov	r1, #32768
 252 0074 2046     		mov	r0, r4
 253 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL24:
 255              		.loc 1 528 1 is_stmt 0 view .LVU37
 256 007a E4E7     		b	.L13
 257              	.L18:
 258              		.align	2
 259              	.L17:
 260 007c 000C0240 		.word	1073875968
 261              		.cfi_endproc
 262              	.LFE144:
 264              		.section	.text.Joint1Set,"ax",%progbits
 265              		.align	1
 266              		.global	Joint1Set
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	Joint1Set:
 272              	.LVL25:
 273              	.LFB146:
 529:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 15


 530:Core/Src/main.c **** void HomeSet(){
 531:Core/Src/main.c ****   //Set all joints to home
 532:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 533:Core/Src/main.c ****   Joint1Set(joint1);
 534:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 535:Core/Src/main.c ****   Joint2Set(joint2);
 536:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 537:Core/Src/main.c ****   Joint3Set(joint3);
 538:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 539:Core/Src/main.c ****   Joint4Set(joint4);
 540:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 541:Core/Src/main.c ****   Joint5Set(joint5);
 542:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 543:Core/Src/main.c ****   ActuatorSet(actuator);
 544:Core/Src/main.c **** }
 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** void Joint1Set(int theta){
 274              		.loc 1 546 26 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 547:Core/Src/main.c ****   //Set joint
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** }
 279              		.loc 1 549 1 view .LVU39
 280 0000 7047     		bx	lr
 281              		.cfi_endproc
 282              	.LFE146:
 284              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 285              		.align	2
 286              	.LC0:
 287 0000 4A6F696E 		.ascii	"Joint2Set: %d\015\012\000"
 287      74325365 
 287      743A2025 
 287      640D0A00 
 288              		.section	.text.Joint2Set,"ax",%progbits
 289              		.align	1
 290              		.global	Joint2Set
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	Joint2Set:
 296              	.LVL26:
 297              	.LFB147:
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** void Joint2Set(int theta){
 298              		.loc 1 551 26 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 256
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 551 26 is_stmt 0 view .LVU41
 303 0000 30B5     		push	{r4, r5, lr}
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 12
 306              		.cfi_offset 4, -12
 307              		.cfi_offset 5, -8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 16


 308              		.cfi_offset 14, -4
 309 0002 C1B0     		sub	sp, sp, #260
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 272
 312 0004 0346     		mov	r3, r0
 552:Core/Src/main.c ****   printf_usart3("Joint2Set: %d\r\n", theta);
 313              		.loc 1 552 3 is_stmt 1 view .LVU42
 314              	.LBB4:
 315              		.loc 1 552 3 view .LVU43
 316              		.loc 1 552 3 view .LVU44
 317 0006 094A     		ldr	r2, .L24
 318 0008 4FF48071 		mov	r1, #256
 319 000c 6846     		mov	r0, sp
 320              	.LVL27:
 321              		.loc 1 552 3 is_stmt 0 view .LVU45
 322 000e FFF7FEFF 		bl	snprintf
 323              	.LVL28:
 324              		.loc 1 552 3 view .LVU46
 325 0012 0546     		mov	r5, r0
 326              	.LVL29:
 327              		.loc 1 552 3 is_stmt 1 discriminator 1 view .LVU47
 328              	.LBB5:
 329              		.loc 1 552 3 discriminator 1 view .LVU48
 330              		.loc 1 552 3 is_stmt 0 discriminator 1 view .LVU49
 331 0014 0024     		movs	r4, #0
 332              		.loc 1 552 3 view .LVU50
 333 0016 04E0     		b	.L21
 334              	.LVL30:
 335              	.L22:
 336              		.loc 1 552 3 is_stmt 1 discriminator 3 view .LVU51
 337 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 338 001c FFF7FEFF 		bl	__io_putchar_usart3
 339              	.LVL31:
 340              		.loc 1 552 3 discriminator 3 view .LVU52
 341 0020 0134     		adds	r4, r4, #1
 342              	.LVL32:
 343              	.L21:
 344              		.loc 1 552 3 discriminator 2 view .LVU53
 345 0022 AC42     		cmp	r4, r5
 346 0024 F8DB     		blt	.L22
 347              	.LBE5:
 348              	.LBE4:
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** }
 349              		.loc 1 554 1 is_stmt 0 view .LVU54
 350 0026 41B0     		add	sp, sp, #260
 351              	.LCFI12:
 352              		.cfi_def_cfa_offset 12
 353              		@ sp needed
 354 0028 30BD     		pop	{r4, r5, pc}
 355              	.LVL33:
 356              	.L25:
 357              		.loc 1 554 1 view .LVU55
 358 002a 00BF     		.align	2
 359              	.L24:
 360 002c 00000000 		.word	.LC0
 361              		.cfi_endproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 17


 362              	.LFE147:
 364              		.section	.rodata.Joint3Set.str1.4,"aMS",%progbits,1
 365              		.align	2
 366              	.LC1:
 367 0000 4A6F696E 		.ascii	"Joint3Set: %d\015\012\000"
 367      74335365 
 367      743A2025 
 367      640D0A00 
 368              		.section	.text.Joint3Set,"ax",%progbits
 369              		.align	1
 370              		.global	Joint3Set
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	Joint3Set:
 376              	.LVL34:
 377              	.LFB148:
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** void Joint3Set(int theta){
 378              		.loc 1 556 26 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 256
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		.loc 1 556 26 is_stmt 0 view .LVU57
 383 0000 30B5     		push	{r4, r5, lr}
 384              	.LCFI13:
 385              		.cfi_def_cfa_offset 12
 386              		.cfi_offset 4, -12
 387              		.cfi_offset 5, -8
 388              		.cfi_offset 14, -4
 389 0002 C1B0     		sub	sp, sp, #260
 390              	.LCFI14:
 391              		.cfi_def_cfa_offset 272
 392 0004 0346     		mov	r3, r0
 557:Core/Src/main.c ****   printf_usart6("Joint3Set: %d\r\n", theta);
 393              		.loc 1 557 3 is_stmt 1 view .LVU58
 394              	.LBB6:
 395              		.loc 1 557 3 view .LVU59
 396              		.loc 1 557 3 view .LVU60
 397 0006 094A     		ldr	r2, .L30
 398 0008 4FF48071 		mov	r1, #256
 399 000c 6846     		mov	r0, sp
 400              	.LVL35:
 401              		.loc 1 557 3 is_stmt 0 view .LVU61
 402 000e FFF7FEFF 		bl	snprintf
 403              	.LVL36:
 404              		.loc 1 557 3 view .LVU62
 405 0012 0546     		mov	r5, r0
 406              	.LVL37:
 407              		.loc 1 557 3 is_stmt 1 discriminator 1 view .LVU63
 408              	.LBB7:
 409              		.loc 1 557 3 discriminator 1 view .LVU64
 410              		.loc 1 557 3 is_stmt 0 discriminator 1 view .LVU65
 411 0014 0024     		movs	r4, #0
 412              		.loc 1 557 3 view .LVU66
 413 0016 04E0     		b	.L27
 414              	.LVL38:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 18


 415              	.L28:
 416              		.loc 1 557 3 is_stmt 1 discriminator 3 view .LVU67
 417 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 418 001c FFF7FEFF 		bl	__io_putchar_usart6
 419              	.LVL39:
 420              		.loc 1 557 3 discriminator 3 view .LVU68
 421 0020 0134     		adds	r4, r4, #1
 422              	.LVL40:
 423              	.L27:
 424              		.loc 1 557 3 discriminator 2 view .LVU69
 425 0022 AC42     		cmp	r4, r5
 426 0024 F8DB     		blt	.L28
 427              	.LBE7:
 428              	.LBE6:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** }
 429              		.loc 1 559 1 is_stmt 0 view .LVU70
 430 0026 41B0     		add	sp, sp, #260
 431              	.LCFI15:
 432              		.cfi_def_cfa_offset 12
 433              		@ sp needed
 434 0028 30BD     		pop	{r4, r5, pc}
 435              	.LVL41:
 436              	.L31:
 437              		.loc 1 559 1 view .LVU71
 438 002a 00BF     		.align	2
 439              	.L30:
 440 002c 00000000 		.word	.LC1
 441              		.cfi_endproc
 442              	.LFE148:
 444              		.section	.text.HomeSet,"ax",%progbits
 445              		.align	1
 446              		.global	HomeSet
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	HomeSet:
 452              	.LFB145:
 530:Core/Src/main.c ****   //Set all joints to home
 453              		.loc 1 530 15 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 10B5     		push	{r4, lr}
 458              	.LCFI16:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
 532:Core/Src/main.c ****   Joint1Set(joint1);
 462              		.loc 1 532 3 view .LVU73
 532:Core/Src/main.c ****   Joint1Set(joint1);
 463              		.loc 1 532 10 is_stmt 0 view .LVU74
 464 0002 0A4B     		ldr	r3, .L34
 465 0004 5A22     		movs	r2, #90
 466 0006 1A60     		str	r2, [r3]
 533:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 467              		.loc 1 533 3 is_stmt 1 view .LVU75
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 19


 534:Core/Src/main.c ****   Joint2Set(joint2);
 468              		.loc 1 534 3 view .LVU76
 534:Core/Src/main.c ****   Joint2Set(joint2);
 469              		.loc 1 534 10 is_stmt 0 view .LVU77
 470 0008 0024     		movs	r4, #0
 471 000a 094B     		ldr	r3, .L34+4
 472 000c 1C60     		str	r4, [r3]
 535:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 473              		.loc 1 535 3 is_stmt 1 view .LVU78
 474 000e 2046     		mov	r0, r4
 475 0010 FFF7FEFF 		bl	Joint2Set
 476              	.LVL42:
 536:Core/Src/main.c ****   Joint3Set(joint3);
 477              		.loc 1 536 3 view .LVU79
 536:Core/Src/main.c ****   Joint3Set(joint3);
 478              		.loc 1 536 10 is_stmt 0 view .LVU80
 479 0014 074B     		ldr	r3, .L34+8
 480 0016 1C60     		str	r4, [r3]
 537:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 481              		.loc 1 537 3 is_stmt 1 view .LVU81
 482 0018 2046     		mov	r0, r4
 483 001a FFF7FEFF 		bl	Joint3Set
 484              	.LVL43:
 538:Core/Src/main.c ****   Joint4Set(joint4);
 485              		.loc 1 538 3 view .LVU82
 538:Core/Src/main.c ****   Joint4Set(joint4);
 486              		.loc 1 538 10 is_stmt 0 view .LVU83
 487 001e 064B     		ldr	r3, .L34+12
 488 0020 1C60     		str	r4, [r3]
 539:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 489              		.loc 1 539 3 is_stmt 1 view .LVU84
 540:Core/Src/main.c ****   Joint5Set(joint5);
 490              		.loc 1 540 3 view .LVU85
 540:Core/Src/main.c ****   Joint5Set(joint5);
 491              		.loc 1 540 10 is_stmt 0 view .LVU86
 492 0022 064B     		ldr	r3, .L34+16
 493 0024 1C60     		str	r4, [r3]
 541:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 494              		.loc 1 541 3 is_stmt 1 view .LVU87
 542:Core/Src/main.c ****   ActuatorSet(actuator);
 495              		.loc 1 542 3 view .LVU88
 542:Core/Src/main.c ****   ActuatorSet(actuator);
 496              		.loc 1 542 12 is_stmt 0 view .LVU89
 497 0026 064B     		ldr	r3, .L34+20
 498 0028 1C60     		str	r4, [r3]
 543:Core/Src/main.c **** }
 499              		.loc 1 543 3 is_stmt 1 view .LVU90
 544:Core/Src/main.c **** 
 500              		.loc 1 544 1 is_stmt 0 view .LVU91
 501 002a 10BD     		pop	{r4, pc}
 502              	.L35:
 503              		.align	2
 504              	.L34:
 505 002c 00000000 		.word	joint1
 506 0030 00000000 		.word	joint2
 507 0034 00000000 		.word	joint3
 508 0038 00000000 		.word	joint4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 20


 509 003c 00000000 		.word	joint5
 510 0040 00000000 		.word	actuator
 511              		.cfi_endproc
 512              	.LFE145:
 514              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 515              		.align	2
 516              	.LC2:
 517 0000 73657400 		.ascii	"set\000"
 518              		.align	2
 519              	.LC3:
 520 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 520      2533642D 
 520      2533642D 
 520      2533642D 
 520      2533642D 
 521              		.align	2
 522              	.LC4:
 523 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 523      69766564 
 523      206E756D 
 523      62657273 
 523      3A202564 
 524 0042 0000     		.align	2
 525              	.LC5:
 526 0044 496E7661 		.ascii	"Invalid format!\015\000"
 526      6C696420 
 526      666F726D 
 526      6174210D 
 526      00
 527 0055 000000   		.align	2
 528              	.LC6:
 529 0058 6A6F696E 		.ascii	"joint1\000"
 529      743100
 530 005f 00       		.align	2
 531              	.LC7:
 532 0060 25336400 		.ascii	"%3d\000"
 533              		.align	2
 534              	.LC8:
 535 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 535      74312073 
 535      65743A20 
 535      25640D0A 
 535      00
 536 0075 000000   		.align	2
 537              	.LC9:
 538 0078 6A6F696E 		.ascii	"joint2\000"
 538      743200
 539 007f 00       		.align	2
 540              	.LC10:
 541 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 541      74322073 
 541      65743A20 
 541      25640D0A 
 541      00
 542 0091 000000   		.align	2
 543              	.LC11:
 544 0094 6A6F696E 		.ascii	"joint3\000"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 21


 544      743300
 545 009b 00       		.align	2
 546              	.LC12:
 547 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 547      74332073 
 547      65743A20 
 547      25640D0A 
 547      00
 548 00ad 000000   		.align	2
 549              	.LC13:
 550 00b0 6A6F696E 		.ascii	"joint4\000"
 550      743400
 551 00b7 00       		.align	2
 552              	.LC14:
 553 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 553      74342073 
 553      65743A20 
 553      25640D0A 
 553      00
 554 00c9 000000   		.align	2
 555              	.LC15:
 556 00cc 6A6F696E 		.ascii	"joint5\000"
 556      743500
 557 00d3 00       		.align	2
 558              	.LC16:
 559 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 559      74352073 
 559      65743A20 
 559      25640D0A 
 559      00
 560 00e5 000000   		.align	2
 561              	.LC17:
 562 00e8 61637475 		.ascii	"actuator\000"
 562      61746F72 
 562      00
 563 00f1 000000   		.align	2
 564              	.LC18:
 565 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 565      61746F72 
 565      20736574 
 565      3A202564 
 565      0D0A00
 566 0107 00       		.align	2
 567              	.LC19:
 568 0108 686F6D65 		.ascii	"home\000"
 568      00
 569 010d 000000   		.align	2
 570              	.LC20:
 571 0110 53657420 		.ascii	"Set all joints home\015\000"
 571      616C6C20 
 571      6A6F696E 
 571      74732068 
 571      6F6D650D 
 572 0125 000000   		.align	2
 573              	.LC21:
 574 0128 666C6173 		.ascii	"flash\000"
 574      6800
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 22


 575 012e 0000     		.align	2
 576              	.LC22:
 577 0130 4C454473 		.ascii	"LEDs Toggled\015\000"
 577      20546F67 
 577      676C6564 
 577      0D00
 578 013e 0000     		.align	2
 579              	.LC23:
 580 0140 7072696E 		.ascii	"print\000"
 580      7400
 581 0146 0000     		.align	2
 582              	.LC24:
 583 0148 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 583      74313A20 
 583      25640D0A 
 583      00
 584 0155 000000   		.align	2
 585              	.LC25:
 586 0158 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 586      74323A20 
 586      25640D0A 
 586      00
 587 0165 000000   		.align	2
 588              	.LC26:
 589 0168 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 589      74333A20 
 589      25640D0A 
 589      00
 590 0175 000000   		.align	2
 591              	.LC27:
 592 0178 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 592      74343A20 
 592      25640D0A 
 592      00
 593 0185 000000   		.align	2
 594              	.LC28:
 595 0188 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 595      74353A20 
 595      25640D0A 
 595      00
 596 0195 000000   		.align	2
 597              	.LC29:
 598 0198 41637475 		.ascii	"Actuator: %d\015\012\000"
 598      61746F72 
 598      3A202564 
 598      0D0A00
 599 01a7 00       		.align	2
 600              	.LC30:
 601 01a8 52656365 		.ascii	"Received: %s\015\012\000"
 601      69766564 
 601      3A202573 
 601      0D0A00
 602              		.section	.text.ProcessReceivedString,"ax",%progbits
 603              		.align	1
 604              		.global	ProcessReceivedString
 605              		.syntax unified
 606              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 23


 607              		.thumb_func
 609              	ProcessReceivedString:
 610              	.LVL44:
 611              	.LFB143:
 301:Core/Src/main.c ****     // Check if the string starts with "set"
 612              		.loc 1 301 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 301:Core/Src/main.c ****     // Check if the string starts with "set"
 616              		.loc 1 301 1 is_stmt 0 view .LVU93
 617 0000 10B5     		push	{r4, lr}
 618              	.LCFI17:
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
 622 0002 84B0     		sub	sp, sp, #16
 623              	.LCFI18:
 624              		.cfi_def_cfa_offset 24
 625 0004 0446     		mov	r4, r0
 303:Core/Src/main.c ****     {
 626              		.loc 1 303 5 is_stmt 1 view .LVU94
 303:Core/Src/main.c ****     {
 627              		.loc 1 303 9 is_stmt 0 view .LVU95
 628 0006 0322     		movs	r2, #3
 629 0008 9A49     		ldr	r1, .L77
 630 000a FFF7FEFF 		bl	strncmp
 631              	.LVL45:
 303:Core/Src/main.c ****     {
 632              		.loc 1 303 8 discriminator 1 view .LVU96
 633 000e 0028     		cmp	r0, #0
 634 0010 66D0     		beq	.L61
 346:Core/Src/main.c ****     {
 635              		.loc 1 346 10 is_stmt 1 view .LVU97
 346:Core/Src/main.c ****     {
 636              		.loc 1 346 14 is_stmt 0 view .LVU98
 637 0012 0622     		movs	r2, #6
 638 0014 9849     		ldr	r1, .L77+4
 639 0016 2046     		mov	r0, r4
 640 0018 FFF7FEFF 		bl	strncmp
 641              	.LVL46:
 346:Core/Src/main.c ****     {
 642              		.loc 1 346 13 discriminator 1 view .LVU99
 643 001c 0028     		cmp	r0, #0
 644 001e 00F0B680 		beq	.L62
 367:Core/Src/main.c ****     {
 645              		.loc 1 367 10 is_stmt 1 view .LVU100
 367:Core/Src/main.c ****     {
 646              		.loc 1 367 14 is_stmt 0 view .LVU101
 647 0022 0622     		movs	r2, #6
 648 0024 9549     		ldr	r1, .L77+8
 649 0026 2046     		mov	r0, r4
 650 0028 FFF7FEFF 		bl	strncmp
 651              	.LVL47:
 367:Core/Src/main.c ****     {
 652              		.loc 1 367 13 discriminator 1 view .LVU102
 653 002c 0028     		cmp	r0, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 24


 654 002e 00F0C680 		beq	.L63
 388:Core/Src/main.c ****     {
 655              		.loc 1 388 10 is_stmt 1 view .LVU103
 388:Core/Src/main.c ****     {
 656              		.loc 1 388 14 is_stmt 0 view .LVU104
 657 0032 0622     		movs	r2, #6
 658 0034 9249     		ldr	r1, .L77+12
 659 0036 2046     		mov	r0, r4
 660 0038 FFF7FEFF 		bl	strncmp
 661              	.LVL48:
 388:Core/Src/main.c ****     {
 662              		.loc 1 388 13 discriminator 1 view .LVU105
 663 003c 0028     		cmp	r0, #0
 664 003e 00F0D980 		beq	.L64
 409:Core/Src/main.c ****     {
 665              		.loc 1 409 10 is_stmt 1 view .LVU106
 409:Core/Src/main.c ****     {
 666              		.loc 1 409 14 is_stmt 0 view .LVU107
 667 0042 0622     		movs	r2, #6
 668 0044 8F49     		ldr	r1, .L77+16
 669 0046 2046     		mov	r0, r4
 670 0048 FFF7FEFF 		bl	strncmp
 671              	.LVL49:
 409:Core/Src/main.c ****     {
 672              		.loc 1 409 13 discriminator 1 view .LVU108
 673 004c 0028     		cmp	r0, #0
 674 004e 00F0ED80 		beq	.L65
 430:Core/Src/main.c ****     {
 675              		.loc 1 430 10 is_stmt 1 view .LVU109
 430:Core/Src/main.c ****     {
 676              		.loc 1 430 14 is_stmt 0 view .LVU110
 677 0052 0622     		movs	r2, #6
 678 0054 8C49     		ldr	r1, .L77+20
 679 0056 2046     		mov	r0, r4
 680 0058 FFF7FEFF 		bl	strncmp
 681              	.LVL50:
 430:Core/Src/main.c ****     {
 682              		.loc 1 430 13 discriminator 1 view .LVU111
 683 005c 0028     		cmp	r0, #0
 684 005e 00F0FE80 		beq	.L66
 451:Core/Src/main.c ****     {
 685              		.loc 1 451 10 is_stmt 1 view .LVU112
 451:Core/Src/main.c ****     {
 686              		.loc 1 451 14 is_stmt 0 view .LVU113
 687 0062 0822     		movs	r2, #8
 688 0064 8949     		ldr	r1, .L77+24
 689 0066 2046     		mov	r0, r4
 690 0068 FFF7FEFF 		bl	strncmp
 691              	.LVL51:
 451:Core/Src/main.c ****     {
 692              		.loc 1 451 13 discriminator 1 view .LVU114
 693 006c 0028     		cmp	r0, #0
 694 006e 00F05781 		beq	.L67
 472:Core/Src/main.c ****     {
 695              		.loc 1 472 10 is_stmt 1 view .LVU115
 472:Core/Src/main.c ****     {
 696              		.loc 1 472 14 is_stmt 0 view .LVU116
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 25


 697 0072 0422     		movs	r2, #4
 698 0074 8649     		ldr	r1, .L77+28
 699 0076 2046     		mov	r0, r4
 700 0078 FFF7FEFF 		bl	strncmp
 701              	.LVL52:
 472:Core/Src/main.c ****     {
 702              		.loc 1 472 13 discriminator 1 view .LVU117
 703 007c 0028     		cmp	r0, #0
 704 007e 00F06181 		beq	.L68
 482:Core/Src/main.c ****     {
 705              		.loc 1 482 10 is_stmt 1 view .LVU118
 482:Core/Src/main.c ****     {
 706              		.loc 1 482 14 is_stmt 0 view .LVU119
 707 0082 0522     		movs	r2, #5
 708 0084 8349     		ldr	r1, .L77+32
 709 0086 2046     		mov	r0, r4
 710 0088 FFF7FEFF 		bl	strncmp
 711              	.LVL53:
 482:Core/Src/main.c ****     {
 712              		.loc 1 482 13 discriminator 1 view .LVU120
 713 008c 0028     		cmp	r0, #0
 714 008e 00F05F81 		beq	.L69
 492:Core/Src/main.c ****     {
 715              		.loc 1 492 10 is_stmt 1 view .LVU121
 492:Core/Src/main.c ****     {
 716              		.loc 1 492 14 is_stmt 0 view .LVU122
 717 0092 0522     		movs	r2, #5
 718 0094 8049     		ldr	r1, .L77+36
 719 0096 2046     		mov	r0, r4
 720 0098 FFF7FEFF 		bl	strncmp
 721              	.LVL54:
 492:Core/Src/main.c ****     {
 722              		.loc 1 492 13 discriminator 1 view .LVU123
 723 009c 0028     		cmp	r0, #0
 724 009e 40F06181 		bne	.L59
 494:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 725              		.loc 1 494 8 is_stmt 1 view .LVU124
 726 00a2 7E4B     		ldr	r3, .L77+40
 727 00a4 1968     		ldr	r1, [r3]
 728 00a6 7E48     		ldr	r0, .L77+44
 729 00a8 FFF7FEFF 		bl	printf
 730              	.LVL55:
 495:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 731              		.loc 1 495 8 view .LVU125
 732 00ac 7D4B     		ldr	r3, .L77+48
 733 00ae 1968     		ldr	r1, [r3]
 734 00b0 7D48     		ldr	r0, .L77+52
 735 00b2 FFF7FEFF 		bl	printf
 736              	.LVL56:
 496:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 737              		.loc 1 496 8 view .LVU126
 738 00b6 7D4B     		ldr	r3, .L77+56
 739 00b8 1968     		ldr	r1, [r3]
 740 00ba 7D48     		ldr	r0, .L77+60
 741 00bc FFF7FEFF 		bl	printf
 742              	.LVL57:
 497:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 26


 743              		.loc 1 497 8 view .LVU127
 744 00c0 7C4B     		ldr	r3, .L77+64
 745 00c2 1968     		ldr	r1, [r3]
 746 00c4 7C48     		ldr	r0, .L77+68
 747 00c6 FFF7FEFF 		bl	printf
 748              	.LVL58:
 498:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 749              		.loc 1 498 8 view .LVU128
 750 00ca 7C4B     		ldr	r3, .L77+72
 751 00cc 1968     		ldr	r1, [r3]
 752 00ce 7C48     		ldr	r0, .L77+76
 753 00d0 FFF7FEFF 		bl	printf
 754              	.LVL59:
 499:Core/Src/main.c ****     }
 755              		.loc 1 499 8 view .LVU129
 756 00d4 7B4B     		ldr	r3, .L77+80
 757 00d6 1968     		ldr	r1, [r3]
 758 00d8 7B48     		ldr	r0, .L77+84
 759 00da FFF7FEFF 		bl	printf
 760              	.LVL60:
 761 00de 12E0     		b	.L36
 762              	.L61:
 306:Core/Src/main.c **** 
 763              		.loc 1 306 9 view .LVU130
 764              	.LVL61:
 309:Core/Src/main.c ****         {
 765              		.loc 1 309 9 view .LVU131
 309:Core/Src/main.c ****         {
 766              		.loc 1 309 13 is_stmt 0 view .LVU132
 767 00e0 784B     		ldr	r3, .L77+80
 768 00e2 0393     		str	r3, [sp, #12]
 769 00e4 754B     		ldr	r3, .L77+72
 770 00e6 0293     		str	r3, [sp, #8]
 771 00e8 724B     		ldr	r3, .L77+64
 772 00ea 0193     		str	r3, [sp, #4]
 773 00ec 6F4B     		ldr	r3, .L77+56
 774 00ee 0093     		str	r3, [sp]
 775 00f0 6C4B     		ldr	r3, .L77+48
 776 00f2 6A4A     		ldr	r2, .L77+40
 777 00f4 7549     		ldr	r1, .L77+88
 778 00f6 201D     		adds	r0, r4, #4
 779              	.LVL62:
 309:Core/Src/main.c ****         {
 780              		.loc 1 309 13 view .LVU133
 781 00f8 FFF7FEFF 		bl	sscanf
 782              	.LVL63:
 309:Core/Src/main.c ****         {
 783              		.loc 1 309 12 discriminator 1 view .LVU134
 784 00fc 0628     		cmp	r0, #6
 785 00fe 04D0     		beq	.L70
 342:Core/Src/main.c ****         }
 786              		.loc 1 342 13 is_stmt 1 view .LVU135
 787 0100 7348     		ldr	r0, .L77+92
 788 0102 FFF7FEFF 		bl	puts
 789              	.LVL64:
 790              	.L36:
 507:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 27


 791              		.loc 1 507 1 is_stmt 0 view .LVU136
 792 0106 04B0     		add	sp, sp, #16
 793              	.LCFI19:
 794              		.cfi_remember_state
 795              		.cfi_def_cfa_offset 8
 796              		@ sp needed
 797 0108 10BD     		pop	{r4, pc}
 798              	.LVL65:
 799              	.L70:
 800              	.LCFI20:
 801              		.cfi_restore_state
 312:Core/Src/main.c **** 
 802              		.loc 1 312 13 is_stmt 1 view .LVU137
 803 010a 644C     		ldr	r4, .L77+40
 804              	.LVL66:
 312:Core/Src/main.c **** 
 805              		.loc 1 312 13 is_stmt 0 view .LVU138
 806 010c 6D4B     		ldr	r3, .L77+80
 807 010e 1B68     		ldr	r3, [r3]
 808 0110 0293     		str	r3, [sp, #8]
 809 0112 6A4B     		ldr	r3, .L77+72
 810 0114 1B68     		ldr	r3, [r3]
 811 0116 0193     		str	r3, [sp, #4]
 812 0118 664B     		ldr	r3, .L77+64
 813 011a 1B68     		ldr	r3, [r3]
 814 011c 0093     		str	r3, [sp]
 815 011e 634B     		ldr	r3, .L77+56
 816 0120 1B68     		ldr	r3, [r3]
 817 0122 604A     		ldr	r2, .L77+48
 818 0124 1268     		ldr	r2, [r2]
 819 0126 2168     		ldr	r1, [r4]
 820 0128 6A48     		ldr	r0, .L77+96
 821 012a FFF7FEFF 		bl	printf
 822              	.LVL67:
 315:Core/Src/main.c ****                 // send to joint
 823              		.loc 1 315 13 is_stmt 1 view .LVU139
 315:Core/Src/main.c ****                 // send to joint
 824              		.loc 1 315 24 is_stmt 0 view .LVU140
 825 012e 2368     		ldr	r3, [r4]
 826 0130 694A     		ldr	r2, .L77+100
 827 0132 1268     		ldr	r2, [r2]
 315:Core/Src/main.c ****                 // send to joint
 828              		.loc 1 315 16 view .LVU141
 829 0134 9342     		cmp	r3, r2
 830 0136 01D0     		beq	.L39
 317:Core/Src/main.c ****             }
 831              		.loc 1 317 17 is_stmt 1 view .LVU142
 317:Core/Src/main.c ****             }
 832              		.loc 1 317 29 is_stmt 0 view .LVU143
 833 0138 674A     		ldr	r2, .L77+100
 834 013a 1360     		str	r3, [r2]
 835              	.L39:
 319:Core/Src/main.c ****                 // send to joint
 836              		.loc 1 319 13 is_stmt 1 view .LVU144
 319:Core/Src/main.c ****                 // send to joint
 837              		.loc 1 319 24 is_stmt 0 view .LVU145
 838 013c 594B     		ldr	r3, .L77+48
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 28


 839 013e 1B68     		ldr	r3, [r3]
 840 0140 664A     		ldr	r2, .L77+104
 841 0142 1268     		ldr	r2, [r2]
 319:Core/Src/main.c ****                 // send to joint
 842              		.loc 1 319 16 view .LVU146
 843 0144 9342     		cmp	r3, r2
 844 0146 01D0     		beq	.L40
 321:Core/Src/main.c ****             }
 845              		.loc 1 321 17 is_stmt 1 view .LVU147
 321:Core/Src/main.c ****             }
 846              		.loc 1 321 29 is_stmt 0 view .LVU148
 847 0148 644A     		ldr	r2, .L77+104
 848 014a 1360     		str	r3, [r2]
 849              	.L40:
 323:Core/Src/main.c ****                 // send to joint
 850              		.loc 1 323 13 is_stmt 1 view .LVU149
 323:Core/Src/main.c ****                 // send to joint
 851              		.loc 1 323 24 is_stmt 0 view .LVU150
 852 014c 574B     		ldr	r3, .L77+56
 853 014e 1B68     		ldr	r3, [r3]
 854 0150 634A     		ldr	r2, .L77+108
 855 0152 1268     		ldr	r2, [r2]
 323:Core/Src/main.c ****                 // send to joint
 856              		.loc 1 323 16 view .LVU151
 857 0154 9342     		cmp	r3, r2
 858 0156 01D0     		beq	.L41
 325:Core/Src/main.c ****             }
 859              		.loc 1 325 17 is_stmt 1 view .LVU152
 325:Core/Src/main.c ****             }
 860              		.loc 1 325 29 is_stmt 0 view .LVU153
 861 0158 614A     		ldr	r2, .L77+108
 862 015a 1360     		str	r3, [r2]
 863              	.L41:
 327:Core/Src/main.c ****                 // send to joint
 864              		.loc 1 327 13 is_stmt 1 view .LVU154
 327:Core/Src/main.c ****                 // send to joint
 865              		.loc 1 327 24 is_stmt 0 view .LVU155
 866 015c 554B     		ldr	r3, .L77+64
 867 015e 1B68     		ldr	r3, [r3]
 868 0160 604A     		ldr	r2, .L77+112
 869 0162 1268     		ldr	r2, [r2]
 327:Core/Src/main.c ****                 // send to joint
 870              		.loc 1 327 16 view .LVU156
 871 0164 9342     		cmp	r3, r2
 872 0166 01D0     		beq	.L42
 329:Core/Src/main.c ****             }
 873              		.loc 1 329 17 is_stmt 1 view .LVU157
 329:Core/Src/main.c ****             }
 874              		.loc 1 329 29 is_stmt 0 view .LVU158
 875 0168 5E4A     		ldr	r2, .L77+112
 876 016a 1360     		str	r3, [r2]
 877              	.L42:
 331:Core/Src/main.c ****                 // send to joint
 878              		.loc 1 331 13 is_stmt 1 view .LVU159
 331:Core/Src/main.c ****                 // send to joint
 879              		.loc 1 331 24 is_stmt 0 view .LVU160
 880 016c 534B     		ldr	r3, .L77+72
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 29


 881 016e 1B68     		ldr	r3, [r3]
 882 0170 5D4A     		ldr	r2, .L77+116
 883 0172 1268     		ldr	r2, [r2]
 331:Core/Src/main.c ****                 // send to joint
 884              		.loc 1 331 16 view .LVU161
 885 0174 9342     		cmp	r3, r2
 886 0176 01D0     		beq	.L43
 333:Core/Src/main.c ****             }
 887              		.loc 1 333 17 is_stmt 1 view .LVU162
 333:Core/Src/main.c ****             }
 888              		.loc 1 333 29 is_stmt 0 view .LVU163
 889 0178 5B4A     		ldr	r2, .L77+116
 890 017a 1360     		str	r3, [r2]
 891              	.L43:
 335:Core/Src/main.c ****                 // send to actuator
 892              		.loc 1 335 13 is_stmt 1 view .LVU164
 335:Core/Src/main.c ****                 // send to actuator
 893              		.loc 1 335 26 is_stmt 0 view .LVU165
 894 017c 514B     		ldr	r3, .L77+80
 895 017e 1B68     		ldr	r3, [r3]
 896 0180 5A4A     		ldr	r2, .L77+120
 897 0182 1268     		ldr	r2, [r2]
 335:Core/Src/main.c ****                 // send to actuator
 898              		.loc 1 335 16 view .LVU166
 899 0184 9342     		cmp	r3, r2
 900 0186 BED0     		beq	.L36
 337:Core/Src/main.c ****             }
 901              		.loc 1 337 17 is_stmt 1 view .LVU167
 337:Core/Src/main.c ****             }
 902              		.loc 1 337 31 is_stmt 0 view .LVU168
 903 0188 584A     		ldr	r2, .L77+120
 904 018a 1360     		str	r3, [r2]
 905 018c BBE7     		b	.L36
 906              	.LVL68:
 907              	.L62:
 348:Core/Src/main.c **** 
 908              		.loc 1 348 9 is_stmt 1 view .LVU169
 350:Core/Src/main.c ****         {
 909              		.loc 1 350 9 view .LVU170
 350:Core/Src/main.c ****         {
 910              		.loc 1 350 13 is_stmt 0 view .LVU171
 911 018e 434A     		ldr	r2, .L77+40
 912 0190 5749     		ldr	r1, .L77+124
 913 0192 E01D     		adds	r0, r4, #7
 914              	.LVL69:
 350:Core/Src/main.c ****         {
 915              		.loc 1 350 13 view .LVU172
 916 0194 FFF7FEFF 		bl	sscanf
 917              	.LVL70:
 350:Core/Src/main.c ****         {
 918              		.loc 1 350 12 discriminator 1 view .LVU173
 919 0198 0128     		cmp	r0, #1
 920 019a 03D0     		beq	.L71
 362:Core/Src/main.c ****         }
 921              		.loc 1 362 13 is_stmt 1 view .LVU174
 922 019c 4C48     		ldr	r0, .L77+92
 923 019e FFF7FEFF 		bl	puts
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 30


 924              	.LVL71:
 925 01a2 B0E7     		b	.L36
 926              	.L71:
 353:Core/Src/main.c **** 
 927              		.loc 1 353 13 view .LVU175
 928 01a4 3D4C     		ldr	r4, .L77+40
 929              	.LVL72:
 353:Core/Src/main.c **** 
 930              		.loc 1 353 13 is_stmt 0 view .LVU176
 931 01a6 2168     		ldr	r1, [r4]
 932 01a8 5248     		ldr	r0, .L77+128
 933 01aa FFF7FEFF 		bl	printf
 934              	.LVL73:
 355:Core/Src/main.c ****                 Joint1Set(joint1);
 935              		.loc 1 355 13 is_stmt 1 view .LVU177
 355:Core/Src/main.c ****                 Joint1Set(joint1);
 936              		.loc 1 355 24 is_stmt 0 view .LVU178
 937 01ae 2368     		ldr	r3, [r4]
 938 01b0 494A     		ldr	r2, .L77+100
 939 01b2 1268     		ldr	r2, [r2]
 355:Core/Src/main.c ****                 Joint1Set(joint1);
 940              		.loc 1 355 16 view .LVU179
 941 01b4 9342     		cmp	r3, r2
 942 01b6 A6D0     		beq	.L36
 943              	.LBB8:
 356:Core/Src/main.c ****                 prev_joint1 = joint1;
 944              		.loc 1 356 17 is_stmt 1 view .LVU180
 357:Core/Src/main.c ****             }
 945              		.loc 1 357 17 view .LVU181
 357:Core/Src/main.c ****             }
 946              		.loc 1 357 29 is_stmt 0 view .LVU182
 947 01b8 474A     		ldr	r2, .L77+100
 948 01ba 1360     		str	r3, [r2]
 949 01bc A3E7     		b	.L36
 950              	.LVL74:
 951              	.L63:
 357:Core/Src/main.c ****             }
 952              		.loc 1 357 29 view .LVU183
 953              	.LBE8:
 369:Core/Src/main.c **** 
 954              		.loc 1 369 9 is_stmt 1 view .LVU184
 371:Core/Src/main.c ****         {
 955              		.loc 1 371 9 view .LVU185
 371:Core/Src/main.c ****         {
 956              		.loc 1 371 13 is_stmt 0 view .LVU186
 957 01be 394A     		ldr	r2, .L77+48
 958 01c0 4B49     		ldr	r1, .L77+124
 959 01c2 E01D     		adds	r0, r4, #7
 960              	.LVL75:
 371:Core/Src/main.c ****         {
 961              		.loc 1 371 13 view .LVU187
 962 01c4 FFF7FEFF 		bl	sscanf
 963              	.LVL76:
 371:Core/Src/main.c ****         {
 964              		.loc 1 371 12 discriminator 1 view .LVU188
 965 01c8 0128     		cmp	r0, #1
 966 01ca 03D0     		beq	.L72
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 31


 383:Core/Src/main.c ****         }
 967              		.loc 1 383 13 is_stmt 1 view .LVU189
 968 01cc 4048     		ldr	r0, .L77+92
 969 01ce FFF7FEFF 		bl	puts
 970              	.LVL77:
 971 01d2 98E7     		b	.L36
 972              	.L72:
 374:Core/Src/main.c **** 
 973              		.loc 1 374 13 view .LVU190
 974 01d4 334C     		ldr	r4, .L77+48
 975              	.LVL78:
 374:Core/Src/main.c **** 
 976              		.loc 1 374 13 is_stmt 0 view .LVU191
 977 01d6 2168     		ldr	r1, [r4]
 978 01d8 4748     		ldr	r0, .L77+132
 979 01da FFF7FEFF 		bl	printf
 980              	.LVL79:
 376:Core/Src/main.c ****                 Joint2Set(joint2);
 981              		.loc 1 376 13 is_stmt 1 view .LVU192
 376:Core/Src/main.c ****                 Joint2Set(joint2);
 982              		.loc 1 376 24 is_stmt 0 view .LVU193
 983 01de 2068     		ldr	r0, [r4]
 984 01e0 3E4B     		ldr	r3, .L77+104
 985 01e2 1B68     		ldr	r3, [r3]
 376:Core/Src/main.c ****                 Joint2Set(joint2);
 986              		.loc 1 376 16 view .LVU194
 987 01e4 9842     		cmp	r0, r3
 988 01e6 8ED0     		beq	.L36
 989              	.LBB9:
 377:Core/Src/main.c ****                 prev_joint2 = joint2;
 990              		.loc 1 377 17 is_stmt 1 view .LVU195
 991 01e8 FFF7FEFF 		bl	Joint2Set
 992              	.LVL80:
 378:Core/Src/main.c ****             }
 993              		.loc 1 378 17 view .LVU196
 378:Core/Src/main.c ****             }
 994              		.loc 1 378 29 is_stmt 0 view .LVU197
 995 01ec 2268     		ldr	r2, [r4]
 996 01ee 3B4B     		ldr	r3, .L77+104
 997 01f0 1A60     		str	r2, [r3]
 998 01f2 88E7     		b	.L36
 999              	.LVL81:
 1000              	.L64:
 378:Core/Src/main.c ****             }
 1001              		.loc 1 378 29 view .LVU198
 1002              	.LBE9:
 390:Core/Src/main.c **** 
 1003              		.loc 1 390 9 is_stmt 1 view .LVU199
 392:Core/Src/main.c ****         {
 1004              		.loc 1 392 9 view .LVU200
 392:Core/Src/main.c ****         {
 1005              		.loc 1 392 13 is_stmt 0 view .LVU201
 1006 01f4 2D4A     		ldr	r2, .L77+56
 1007 01f6 3E49     		ldr	r1, .L77+124
 1008 01f8 E01D     		adds	r0, r4, #7
 1009              	.LVL82:
 392:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 32


 1010              		.loc 1 392 13 view .LVU202
 1011 01fa FFF7FEFF 		bl	sscanf
 1012              	.LVL83:
 392:Core/Src/main.c ****         {
 1013              		.loc 1 392 12 discriminator 1 view .LVU203
 1014 01fe 0128     		cmp	r0, #1
 1015 0200 03D0     		beq	.L73
 404:Core/Src/main.c ****         }
 1016              		.loc 1 404 13 is_stmt 1 view .LVU204
 1017 0202 3348     		ldr	r0, .L77+92
 1018 0204 FFF7FEFF 		bl	puts
 1019              	.LVL84:
 1020 0208 7DE7     		b	.L36
 1021              	.L73:
 395:Core/Src/main.c **** 
 1022              		.loc 1 395 13 view .LVU205
 1023 020a 284C     		ldr	r4, .L77+56
 1024              	.LVL85:
 395:Core/Src/main.c **** 
 1025              		.loc 1 395 13 is_stmt 0 view .LVU206
 1026 020c 2168     		ldr	r1, [r4]
 1027 020e 3B48     		ldr	r0, .L77+136
 1028 0210 FFF7FEFF 		bl	printf
 1029              	.LVL86:
 397:Core/Src/main.c ****                 Joint3Set(joint3);
 1030              		.loc 1 397 13 is_stmt 1 view .LVU207
 397:Core/Src/main.c ****                 Joint3Set(joint3);
 1031              		.loc 1 397 24 is_stmt 0 view .LVU208
 1032 0214 2068     		ldr	r0, [r4]
 1033 0216 324B     		ldr	r3, .L77+108
 1034 0218 1B68     		ldr	r3, [r3]
 397:Core/Src/main.c ****                 Joint3Set(joint3);
 1035              		.loc 1 397 16 view .LVU209
 1036 021a 9842     		cmp	r0, r3
 1037 021c 3FF473AF 		beq	.L36
 1038              	.LBB10:
 398:Core/Src/main.c ****                 prev_joint3 = joint3;
 1039              		.loc 1 398 17 is_stmt 1 view .LVU210
 1040 0220 FFF7FEFF 		bl	Joint3Set
 1041              	.LVL87:
 399:Core/Src/main.c ****             }
 1042              		.loc 1 399 17 view .LVU211
 399:Core/Src/main.c ****             }
 1043              		.loc 1 399 29 is_stmt 0 view .LVU212
 1044 0224 2268     		ldr	r2, [r4]
 1045 0226 2E4B     		ldr	r3, .L77+108
 1046 0228 1A60     		str	r2, [r3]
 1047 022a 6CE7     		b	.L36
 1048              	.LVL88:
 1049              	.L65:
 399:Core/Src/main.c ****             }
 1050              		.loc 1 399 29 view .LVU213
 1051              	.LBE10:
 411:Core/Src/main.c **** 
 1052              		.loc 1 411 9 is_stmt 1 view .LVU214
 413:Core/Src/main.c ****         {
 1053              		.loc 1 413 9 view .LVU215
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 33


 413:Core/Src/main.c ****         {
 1054              		.loc 1 413 13 is_stmt 0 view .LVU216
 1055 022c 214A     		ldr	r2, .L77+64
 1056 022e 3049     		ldr	r1, .L77+124
 1057 0230 E01D     		adds	r0, r4, #7
 1058              	.LVL89:
 413:Core/Src/main.c ****         {
 1059              		.loc 1 413 13 view .LVU217
 1060 0232 FFF7FEFF 		bl	sscanf
 1061              	.LVL90:
 413:Core/Src/main.c ****         {
 1062              		.loc 1 413 12 discriminator 1 view .LVU218
 1063 0236 0128     		cmp	r0, #1
 1064 0238 03D0     		beq	.L74
 425:Core/Src/main.c ****         }
 1065              		.loc 1 425 13 is_stmt 1 view .LVU219
 1066 023a 2548     		ldr	r0, .L77+92
 1067 023c FFF7FEFF 		bl	puts
 1068              	.LVL91:
 1069 0240 61E7     		b	.L36
 1070              	.L74:
 416:Core/Src/main.c **** 
 1071              		.loc 1 416 13 view .LVU220
 1072 0242 1C4C     		ldr	r4, .L77+64
 1073              	.LVL92:
 416:Core/Src/main.c **** 
 1074              		.loc 1 416 13 is_stmt 0 view .LVU221
 1075 0244 2168     		ldr	r1, [r4]
 1076 0246 2E48     		ldr	r0, .L77+140
 1077 0248 FFF7FEFF 		bl	printf
 1078              	.LVL93:
 418:Core/Src/main.c ****                 Joint4Set(joint4);
 1079              		.loc 1 418 13 is_stmt 1 view .LVU222
 418:Core/Src/main.c ****                 Joint4Set(joint4);
 1080              		.loc 1 418 24 is_stmt 0 view .LVU223
 1081 024c 2368     		ldr	r3, [r4]
 1082 024e 254A     		ldr	r2, .L77+112
 1083 0250 1268     		ldr	r2, [r2]
 418:Core/Src/main.c ****                 Joint4Set(joint4);
 1084              		.loc 1 418 16 view .LVU224
 1085 0252 9342     		cmp	r3, r2
 1086 0254 3FF457AF 		beq	.L36
 1087              	.LBB11:
 419:Core/Src/main.c ****                 prev_joint4 = joint4;
 1088              		.loc 1 419 17 is_stmt 1 view .LVU225
 420:Core/Src/main.c ****             }
 1089              		.loc 1 420 17 view .LVU226
 420:Core/Src/main.c ****             }
 1090              		.loc 1 420 29 is_stmt 0 view .LVU227
 1091 0258 224A     		ldr	r2, .L77+112
 1092 025a 1360     		str	r3, [r2]
 1093 025c 53E7     		b	.L36
 1094              	.LVL94:
 1095              	.L66:
 420:Core/Src/main.c ****             }
 1096              		.loc 1 420 29 view .LVU228
 1097              	.LBE11:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 34


 432:Core/Src/main.c **** 
 1098              		.loc 1 432 9 is_stmt 1 view .LVU229
 434:Core/Src/main.c ****         {
 1099              		.loc 1 434 9 view .LVU230
 434:Core/Src/main.c ****         {
 1100              		.loc 1 434 13 is_stmt 0 view .LVU231
 1101 025e 174A     		ldr	r2, .L77+72
 1102 0260 2349     		ldr	r1, .L77+124
 1103 0262 E01D     		adds	r0, r4, #7
 1104              	.LVL95:
 434:Core/Src/main.c ****         {
 1105              		.loc 1 434 13 view .LVU232
 1106 0264 FFF7FEFF 		bl	sscanf
 1107              	.LVL96:
 434:Core/Src/main.c ****         {
 1108              		.loc 1 434 12 discriminator 1 view .LVU233
 1109 0268 0128     		cmp	r0, #1
 1110 026a 4BD0     		beq	.L75
 446:Core/Src/main.c ****         }
 1111              		.loc 1 446 13 is_stmt 1 view .LVU234
 1112 026c 1848     		ldr	r0, .L77+92
 1113 026e FFF7FEFF 		bl	puts
 1114              	.LVL97:
 1115 0272 48E7     		b	.L36
 1116              	.L78:
 1117              		.align	2
 1118              	.L77:
 1119 0274 00000000 		.word	.LC2
 1120 0278 58000000 		.word	.LC6
 1121 027c 78000000 		.word	.LC9
 1122 0280 94000000 		.word	.LC11
 1123 0284 B0000000 		.word	.LC13
 1124 0288 CC000000 		.word	.LC15
 1125 028c E8000000 		.word	.LC17
 1126 0290 08010000 		.word	.LC19
 1127 0294 28010000 		.word	.LC21
 1128 0298 40010000 		.word	.LC23
 1129 029c 00000000 		.word	joint1
 1130 02a0 48010000 		.word	.LC24
 1131 02a4 00000000 		.word	joint2
 1132 02a8 58010000 		.word	.LC25
 1133 02ac 00000000 		.word	joint3
 1134 02b0 68010000 		.word	.LC26
 1135 02b4 00000000 		.word	joint4
 1136 02b8 78010000 		.word	.LC27
 1137 02bc 00000000 		.word	joint5
 1138 02c0 88010000 		.word	.LC28
 1139 02c4 00000000 		.word	actuator
 1140 02c8 98010000 		.word	.LC29
 1141 02cc 04000000 		.word	.LC3
 1142 02d0 44000000 		.word	.LC5
 1143 02d4 1C000000 		.word	.LC4
 1144 02d8 00000000 		.word	prev_joint1
 1145 02dc 00000000 		.word	prev_joint2
 1146 02e0 00000000 		.word	prev_joint3
 1147 02e4 00000000 		.word	prev_joint4
 1148 02e8 00000000 		.word	prev_joint5
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 35


 1149 02ec 00000000 		.word	prev_actuator
 1150 02f0 60000000 		.word	.LC7
 1151 02f4 64000000 		.word	.LC8
 1152 02f8 80000000 		.word	.LC10
 1153 02fc 9C000000 		.word	.LC12
 1154 0300 B8000000 		.word	.LC14
 1155              	.L75:
 437:Core/Src/main.c **** 
 1156              		.loc 1 437 13 view .LVU235
 1157 0304 1A4C     		ldr	r4, .L79
 1158              	.LVL98:
 437:Core/Src/main.c **** 
 1159              		.loc 1 437 13 is_stmt 0 view .LVU236
 1160 0306 2168     		ldr	r1, [r4]
 1161 0308 1A48     		ldr	r0, .L79+4
 1162 030a FFF7FEFF 		bl	printf
 1163              	.LVL99:
 439:Core/Src/main.c ****                 Joint5Set(joint5);
 1164              		.loc 1 439 13 is_stmt 1 view .LVU237
 439:Core/Src/main.c ****                 Joint5Set(joint5);
 1165              		.loc 1 439 24 is_stmt 0 view .LVU238
 1166 030e 2368     		ldr	r3, [r4]
 1167 0310 194A     		ldr	r2, .L79+8
 1168 0312 1268     		ldr	r2, [r2]
 439:Core/Src/main.c ****                 Joint5Set(joint5);
 1169              		.loc 1 439 16 view .LVU239
 1170 0314 9342     		cmp	r3, r2
 1171 0316 3FF4F6AE 		beq	.L36
 1172              	.LBB12:
 440:Core/Src/main.c ****                 prev_joint5 = joint5;
 1173              		.loc 1 440 17 is_stmt 1 view .LVU240
 441:Core/Src/main.c ****             }
 1174              		.loc 1 441 17 view .LVU241
 441:Core/Src/main.c ****             }
 1175              		.loc 1 441 29 is_stmt 0 view .LVU242
 1176 031a 174A     		ldr	r2, .L79+8
 1177 031c 1360     		str	r3, [r2]
 1178 031e F2E6     		b	.L36
 1179              	.LVL100:
 1180              	.L67:
 441:Core/Src/main.c ****             }
 1181              		.loc 1 441 29 view .LVU243
 1182              	.LBE12:
 453:Core/Src/main.c **** 
 1183              		.loc 1 453 9 is_stmt 1 view .LVU244
 455:Core/Src/main.c ****         {
 1184              		.loc 1 455 9 view .LVU245
 455:Core/Src/main.c ****         {
 1185              		.loc 1 455 13 is_stmt 0 view .LVU246
 1186 0320 164A     		ldr	r2, .L79+12
 1187 0322 1749     		ldr	r1, .L79+16
 1188 0324 04F10900 		add	r0, r4, #9
 1189              	.LVL101:
 455:Core/Src/main.c ****         {
 1190              		.loc 1 455 13 view .LVU247
 1191 0328 FFF7FEFF 		bl	sscanf
 1192              	.LVL102:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 36


 455:Core/Src/main.c ****         {
 1193              		.loc 1 455 12 discriminator 1 view .LVU248
 1194 032c 0128     		cmp	r0, #1
 1195 032e 03D0     		beq	.L76
 467:Core/Src/main.c ****         }
 1196              		.loc 1 467 13 is_stmt 1 view .LVU249
 1197 0330 1448     		ldr	r0, .L79+20
 1198 0332 FFF7FEFF 		bl	puts
 1199              	.LVL103:
 1200 0336 E6E6     		b	.L36
 1201              	.L76:
 458:Core/Src/main.c **** 
 1202              		.loc 1 458 13 view .LVU250
 1203 0338 104B     		ldr	r3, .L79+12
 1204 033a 1968     		ldr	r1, [r3]
 1205 033c 1248     		ldr	r0, .L79+24
 1206 033e FFF7FEFF 		bl	printf
 1207              	.LVL104:
 460:Core/Src/main.c ****                 ActuatorSet(actuator);
 1208              		.loc 1 460 13 view .LVU251
 1209 0342 E0E6     		b	.L36
 1210              	.LVL105:
 1211              	.L68:
 1212              	.LBB13:
 474:Core/Src/main.c ****         
 1213              		.loc 1 474 9 view .LVU252
 476:Core/Src/main.c ****         
 1214              		.loc 1 476 9 view .LVU253
 1215 0344 FFF7FEFF 		bl	HomeSet
 1216              	.LVL106:
 478:Core/Src/main.c **** 
 1217              		.loc 1 478 9 view .LVU254
 1218 0348 1048     		ldr	r0, .L79+28
 1219 034a FFF7FEFF 		bl	puts
 1220              	.LVL107:
 1221              	.LBE13:
 1222 034e DAE6     		b	.L36
 1223              	.LVL108:
 1224              	.L69:
 484:Core/Src/main.c ****         ledFlag = !ledFlag;
 1225              		.loc 1 484 9 view .LVU255
 485:Core/Src/main.c ****         
 1226              		.loc 1 485 9 view .LVU256
 485:Core/Src/main.c ****         
 1227              		.loc 1 485 19 is_stmt 0 view .LVU257
 1228 0350 0F4A     		ldr	r2, .L79+32
 1229 0352 1368     		ldr	r3, [r2]
 1230 0354 B3FA83F3 		clz	r3, r3
 1231 0358 5B09     		lsrs	r3, r3, #5
 485:Core/Src/main.c ****         
 1232              		.loc 1 485 17 view .LVU258
 1233 035a 1360     		str	r3, [r2]
 487:Core/Src/main.c **** 
 1234              		.loc 1 487 9 is_stmt 1 view .LVU259
 1235 035c 0D48     		ldr	r0, .L79+36
 1236 035e FFF7FEFF 		bl	puts
 1237              	.LVL109:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 37


 1238 0362 D0E6     		b	.L36
 1239              	.LVL110:
 1240              	.L59:
 505:Core/Src/main.c ****     }
 1241              		.loc 1 505 9 view .LVU260
 1242 0364 2146     		mov	r1, r4
 1243 0366 0C48     		ldr	r0, .L79+40
 1244 0368 FFF7FEFF 		bl	printf
 1245              	.LVL111:
 507:Core/Src/main.c **** 
 1246              		.loc 1 507 1 is_stmt 0 view .LVU261
 1247 036c CBE6     		b	.L36
 1248              	.L80:
 1249 036e 00BF     		.align	2
 1250              	.L79:
 1251 0370 00000000 		.word	joint5
 1252 0374 D4000000 		.word	.LC16
 1253 0378 00000000 		.word	prev_joint5
 1254 037c 00000000 		.word	actuator
 1255 0380 60000000 		.word	.LC7
 1256 0384 44000000 		.word	.LC5
 1257 0388 F4000000 		.word	.LC18
 1258 038c 10010000 		.word	.LC20
 1259 0390 00000000 		.word	ledFlag
 1260 0394 30010000 		.word	.LC22
 1261 0398 A8010000 		.word	.LC30
 1262              		.cfi_endproc
 1263              	.LFE143:
 1265              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 1266              		.align	2
 1267              	.LC31:
 1268 0000 42756666 		.ascii	"Buffer overflow\015\000"
 1268      6572206F 
 1268      76657266 
 1268      6C6F770D 
 1268      00
 1269              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1270              		.align	1
 1271              		.global	HAL_UART_RxCpltCallback
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1276              	HAL_UART_RxCpltCallback:
 1277              	.LVL112:
 1278              	.LFB142:
 251:Core/Src/main.c **** 
 1279              		.loc 1 251 1 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Core/Src/main.c ****     {
 1283              		.loc 1 253 5 view .LVU263
 253:Core/Src/main.c ****     {
 1284              		.loc 1 253 14 is_stmt 0 view .LVU264
 1285 0000 0268     		ldr	r2, [r0]
 253:Core/Src/main.c ****     {
 1286              		.loc 1 253 8 view .LVU265
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 38


 1287 0002 264B     		ldr	r3, .L93
 1288 0004 9A42     		cmp	r2, r3
 1289 0006 00D0     		beq	.L90
 1290 0008 7047     		bx	lr
 1291              	.L90:
 251:Core/Src/main.c **** 
 1292              		.loc 1 251 1 view .LVU266
 1293 000a 10B5     		push	{r4, lr}
 1294              	.LCFI21:
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 4, -8
 1297              		.cfi_offset 14, -4
 256:Core/Src/main.c ****         {
 1298              		.loc 1 256 9 is_stmt 1 view .LVU267
 256:Core/Src/main.c ****         {
 1299              		.loc 1 256 26 is_stmt 0 view .LVU268
 1300 000c 244B     		ldr	r3, .L93+4
 1301 000e 1B88     		ldrh	r3, [r3]
 1302 0010 9BB2     		uxth	r3, r3
 256:Core/Src/main.c ****         {
 1303              		.loc 1 256 12 view .LVU269
 1304 0012 FE2B     		cmp	r3, #254
 1305 0014 3BD8     		bhi	.L83
 258:Core/Src/main.c **** 
 1306              		.loc 1 258 13 is_stmt 1 view .LVU270
 258:Core/Src/main.c **** 
 1307              		.loc 1 258 37 is_stmt 0 view .LVU271
 1308 0016 2249     		ldr	r1, .L93+4
 1309 0018 0B88     		ldrh	r3, [r1]
 1310 001a 9BB2     		uxth	r3, r3
 1311 001c 5A1C     		adds	r2, r3, #1
 1312 001e 92B2     		uxth	r2, r2
 1313 0020 0A80     		strh	r2, [r1]	@ movhi
 258:Core/Src/main.c **** 
 1314              		.loc 1 258 41 view .LVU272
 1315 0022 2049     		ldr	r1, .L93+8
 1316 0024 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1317 0026 D2B2     		uxtb	r2, r2
 1318 0028 1F48     		ldr	r0, .L93+12
 1319              	.LVL113:
 258:Core/Src/main.c **** 
 1320              		.loc 1 258 41 view .LVU273
 1321 002a C254     		strb	r2, [r0, r3]
 261:Core/Src/main.c ****             {
 1322              		.loc 1 261 13 is_stmt 1 view .LVU274
 261:Core/Src/main.c ****             {
 1323              		.loc 1 261 25 is_stmt 0 view .LVU275
 1324 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1325 002e DBB2     		uxtb	r3, r3
 261:Core/Src/main.c ****             {
 1326              		.loc 1 261 16 view .LVU276
 1327 0030 0D2B     		cmp	r3, #13
 1328 0032 05D0     		beq	.L91
 1329              	.L84:
 289:Core/Src/main.c ****     }
 1330              		.loc 1 289 9 is_stmt 1 view .LVU277
 1331 0034 0122     		movs	r2, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 39


 1332 0036 1B49     		ldr	r1, .L93+8
 1333 0038 1C48     		ldr	r0, .L93+16
 1334 003a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1335              	.LVL114:
 291:Core/Src/main.c **** 
 1336              		.loc 1 291 1 is_stmt 0 view .LVU278
 1337 003e 10BD     		pop	{r4, pc}
 1338              	.L91:
 263:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1339              		.loc 1 263 17 is_stmt 1 view .LVU279
 263:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1340              		.loc 1 263 28 is_stmt 0 view .LVU280
 1341 0040 174A     		ldr	r2, .L93+4
 1342 0042 1388     		ldrh	r3, [r2]
 1343 0044 9BB2     		uxth	r3, r3
 263:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1344              		.loc 1 263 43 view .LVU281
 1345 0046 0146     		mov	r1, r0
 1346 0048 0020     		movs	r0, #0
 1347 004a C854     		strb	r0, [r1, r3]
 264:Core/Src/main.c **** 
 1348              		.loc 1 264 17 is_stmt 1 view .LVU282
 264:Core/Src/main.c **** 
 1349              		.loc 1 264 30 is_stmt 0 view .LVU283
 1350 004c 1080     		strh	r0, [r2]	@ movhi
 267:Core/Src/main.c **** 
 1351              		.loc 1 267 17 is_stmt 1 view .LVU284
 1352 004e 184C     		ldr	r4, .L93+20
 1353 0050 2046     		mov	r0, r4
 1354 0052 FFF7FEFF 		bl	strcpy
 1355              	.LVL115:
 269:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1356              		.loc 1 269 17 view .LVU285
 269:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1357              		.loc 1 269 20 is_stmt 0 view .LVU286
 1358 0056 2146     		mov	r1, r4
 1359 0058 1648     		ldr	r0, .L93+24
 1360 005a FFF7FEFF 		bl	strcmp
 1361              	.LVL116:
 269:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1362              		.loc 1 269 19 discriminator 1 view .LVU287
 1363 005e 70B9     		cbnz	r0, .L92
 273:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1364              		.loc 1 273 22 is_stmt 1 view .LVU288
 273:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1365              		.loc 1 273 25 is_stmt 0 view .LVU289
 1366 0060 1549     		ldr	r1, .L93+28
 1367 0062 1348     		ldr	r0, .L93+20
 1368 0064 FFF7FEFF 		bl	strcmp
 1369              	.LVL117:
 273:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1370              		.loc 1 273 24 discriminator 1 view .LVU290
 1371 0068 0028     		cmp	r0, #0
 1372 006a E3D0     		beq	.L84
 1373              	.LBB14:
 274:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 1374              		.loc 1 274 19 is_stmt 1 view .LVU291
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 40


 1375 006c 104C     		ldr	r4, .L93+20
 1376 006e 2046     		mov	r0, r4
 1377 0070 FFF7FEFF 		bl	ProcessReceivedString
 1378              	.LVL118:
 275:Core/Src/main.c ****                 }
 1379              		.loc 1 275 19 view .LVU292
 1380 0074 2146     		mov	r1, r4
 1381 0076 1048     		ldr	r0, .L93+28
 1382 0078 FFF7FEFF 		bl	strcpy
 1383              	.LVL119:
 1384 007c DAE7     		b	.L84
 1385              	.L92:
 1386              	.LBE14:
 1387              	.LBB15:
 270:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 1388              		.loc 1 270 19 view .LVU293
 1389 007e 2046     		mov	r0, r4
 1390 0080 FFF7FEFF 		bl	ProcessReceivedString
 1391              	.LVL120:
 271:Core/Src/main.c ****                 }
 1392              		.loc 1 271 19 view .LVU294
 1393 0084 2146     		mov	r1, r4
 1394 0086 0C48     		ldr	r0, .L93+28
 1395 0088 FFF7FEFF 		bl	strcpy
 1396              	.LVL121:
 1397              	.LBE15:
 1398 008c D2E7     		b	.L84
 1399              	.LVL122:
 1400              	.L83:
 284:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 1401              		.loc 1 284 13 view .LVU295
 284:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 1402              		.loc 1 284 26 is_stmt 0 view .LVU296
 1403 008e 044B     		ldr	r3, .L93+4
 1404 0090 0022     		movs	r2, #0
 1405 0092 1A80     		strh	r2, [r3]	@ movhi
 285:Core/Src/main.c ****         }
 1406              		.loc 1 285 13 is_stmt 1 view .LVU297
 1407 0094 0948     		ldr	r0, .L93+32
 1408              	.LVL123:
 285:Core/Src/main.c ****         }
 1409              		.loc 1 285 13 is_stmt 0 view .LVU298
 1410 0096 FFF7FEFF 		bl	puts
 1411              	.LVL124:
 1412 009a CBE7     		b	.L84
 1413              	.L94:
 1414              		.align	2
 1415              	.L93:
 1416 009c 00440040 		.word	1073759232
 1417 00a0 00000000 		.word	buffer_index
 1418 00a4 00000000 		.word	rx_byte
 1419 00a8 00000000 		.word	uart_buffer
 1420 00ac 00000000 		.word	huart2
 1421 00b0 00000000 		.word	received_string
 1422 00b4 40010000 		.word	.LC23
 1423 00b8 00000000 		.word	previous_string
 1424 00bc 00000000 		.word	.LC31
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 41


 1425              		.cfi_endproc
 1426              	.LFE142:
 1428              		.section	.text.Joint4Set,"ax",%progbits
 1429              		.align	1
 1430              		.global	Joint4Set
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1435              	Joint4Set:
 1436              	.LVL125:
 1437              	.LFB149:
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** void Joint4Set(int theta){
 1438              		.loc 1 561 26 is_stmt 1 view -0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 562:Core/Src/main.c ****   //Set joint
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** }
 1443              		.loc 1 564 1 view .LVU300
 1444 0000 7047     		bx	lr
 1445              		.cfi_endproc
 1446              	.LFE149:
 1448              		.section	.text.Joint5Set,"ax",%progbits
 1449              		.align	1
 1450              		.global	Joint5Set
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1455              	Joint5Set:
 1456              	.LVL126:
 1457              	.LFB150:
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** void Joint5Set(int theta){
 1458              		.loc 1 566 26 view -0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 0
 1461              		@ frame_needed = 0, uses_anonymous_args = 0
 1462              		@ link register save eliminated.
 567:Core/Src/main.c ****   //Set joint
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** }
 1463              		.loc 1 569 1 view .LVU302
 1464 0000 7047     		bx	lr
 1465              		.cfi_endproc
 1466              	.LFE150:
 1468              		.section	.text.ActuatorSet,"ax",%progbits
 1469              		.align	1
 1470              		.global	ActuatorSet
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1475              	ActuatorSet:
 1476              	.LVL127:
 1477              	.LFB151:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 42


 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** void ActuatorSet(int theta){
 1478              		.loc 1 571 28 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 572:Core/Src/main.c ****   //Set joint
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** }
 1483              		.loc 1 574 1 view .LVU304
 1484 0000 7047     		bx	lr
 1485              		.cfi_endproc
 1486              	.LFE151:
 1488              		.section	.text.Error_Handler,"ax",%progbits
 1489              		.align	1
 1490              		.global	Error_Handler
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1495              	Error_Handler:
 1496              	.LFB152:
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /* USER CODE END 4 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** /**
 579:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 580:Core/Src/main.c ****   * @retval None
 581:Core/Src/main.c ****   */
 582:Core/Src/main.c **** void Error_Handler(void)
 583:Core/Src/main.c **** {
 1497              		.loc 1 583 1 view -0
 1498              		.cfi_startproc
 1499              		@ Volatile: function does not return.
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 584:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 585:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 586:Core/Src/main.c ****   __disable_irq();
 1503              		.loc 1 586 3 view .LVU306
 1504              	.LBB16:
 1505              	.LBI16:
 1506              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 43


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 44


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 45


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 46


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 47


 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 48


 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 49


 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 50


 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 51


 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 52


 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 53


 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 54


 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 55


 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 56


 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 57


 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 58


 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 59


 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1507              		.loc 2 960 27 view .LVU307
 1508              	.LBB17:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1509              		.loc 2 962 3 view .LVU308
 1510              		.syntax unified
 1511              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1512 0000 72B6     		cpsid i
 1513              	@ 0 "" 2
 1514              		.thumb
 1515              		.syntax unified
 1516              	.L99:
 1517              	.LBE17:
 1518              	.LBE16:
 587:Core/Src/main.c ****   while (1)
 1519              		.loc 1 587 3 view .LVU309
 588:Core/Src/main.c ****   {
 589:Core/Src/main.c ****   }
 1520              		.loc 1 589 3 view .LVU310
 587:Core/Src/main.c ****   while (1)
 1521              		.loc 1 587 9 view .LVU311
 1522 0002 FEE7     		b	.L99
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 60


 1523              		.cfi_endproc
 1524              	.LFE152:
 1526              		.section	.text.SystemClock_Config,"ax",%progbits
 1527              		.align	1
 1528              		.global	SystemClock_Config
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1533              	SystemClock_Config:
 1534              	.LFB138:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1535              		.loc 1 177 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 80
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539 0000 00B5     		push	{lr}
 1540              	.LCFI22:
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 14, -4
 1543 0002 95B0     		sub	sp, sp, #84
 1544              	.LCFI23:
 1545              		.cfi_def_cfa_offset 88
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1546              		.loc 1 178 3 view .LVU313
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1547              		.loc 1 178 22 is_stmt 0 view .LVU314
 1548 0004 3022     		movs	r2, #48
 1549 0006 0021     		movs	r1, #0
 1550 0008 08A8     		add	r0, sp, #32
 1551 000a FFF7FEFF 		bl	memset
 1552              	.LVL128:
 179:Core/Src/main.c **** 
 1553              		.loc 1 179 3 is_stmt 1 view .LVU315
 179:Core/Src/main.c **** 
 1554              		.loc 1 179 22 is_stmt 0 view .LVU316
 1555 000e 0023     		movs	r3, #0
 1556 0010 0393     		str	r3, [sp, #12]
 1557 0012 0493     		str	r3, [sp, #16]
 1558 0014 0593     		str	r3, [sp, #20]
 1559 0016 0693     		str	r3, [sp, #24]
 1560 0018 0793     		str	r3, [sp, #28]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1561              		.loc 1 183 3 is_stmt 1 view .LVU317
 1562              	.LBB18:
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1563              		.loc 1 183 3 view .LVU318
 1564 001a 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1565              		.loc 1 183 3 view .LVU319
 1566 001c 214A     		ldr	r2, .L106
 1567 001e 116C     		ldr	r1, [r2, #64]
 1568 0020 41F08051 		orr	r1, r1, #268435456
 1569 0024 1164     		str	r1, [r2, #64]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1570              		.loc 1 183 3 view .LVU320
 1571 0026 126C     		ldr	r2, [r2, #64]
 1572 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 61


 1573 002c 0192     		str	r2, [sp, #4]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1574              		.loc 1 183 3 view .LVU321
 1575 002e 019A     		ldr	r2, [sp, #4]
 1576              	.LBE18:
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1577              		.loc 1 183 3 view .LVU322
 184:Core/Src/main.c **** 
 1578              		.loc 1 184 3 view .LVU323
 1579              	.LBB19:
 184:Core/Src/main.c **** 
 1580              		.loc 1 184 3 view .LVU324
 1581 0030 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c **** 
 1582              		.loc 1 184 3 view .LVU325
 1583 0032 1D4B     		ldr	r3, .L106+4
 1584 0034 1A68     		ldr	r2, [r3]
 1585 0036 42F48042 		orr	r2, r2, #16384
 1586 003a 1A60     		str	r2, [r3]
 184:Core/Src/main.c **** 
 1587              		.loc 1 184 3 view .LVU326
 1588 003c 1B68     		ldr	r3, [r3]
 1589 003e 03F48043 		and	r3, r3, #16384
 1590 0042 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c **** 
 1591              		.loc 1 184 3 view .LVU327
 1592 0044 029B     		ldr	r3, [sp, #8]
 1593              	.LBE19:
 184:Core/Src/main.c **** 
 1594              		.loc 1 184 3 view .LVU328
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1595              		.loc 1 189 3 view .LVU329
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1596              		.loc 1 189 36 is_stmt 0 view .LVU330
 1597 0046 0123     		movs	r3, #1
 1598 0048 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1599              		.loc 1 190 3 is_stmt 1 view .LVU331
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1600              		.loc 1 190 30 is_stmt 0 view .LVU332
 1601 004a 4FF48033 		mov	r3, #65536
 1602 004e 0993     		str	r3, [sp, #36]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1603              		.loc 1 191 3 is_stmt 1 view .LVU333
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1604              		.loc 1 191 34 is_stmt 0 view .LVU334
 1605 0050 0223     		movs	r3, #2
 1606 0052 0E93     		str	r3, [sp, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1607              		.loc 1 192 3 is_stmt 1 view .LVU335
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1608              		.loc 1 192 35 is_stmt 0 view .LVU336
 1609 0054 4FF48002 		mov	r2, #4194304
 1610 0058 0F92     		str	r2, [sp, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1611              		.loc 1 193 3 is_stmt 1 view .LVU337
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 62


 1612              		.loc 1 193 30 is_stmt 0 view .LVU338
 1613 005a 0822     		movs	r2, #8
 1614 005c 1092     		str	r2, [sp, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1615              		.loc 1 194 3 is_stmt 1 view .LVU339
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1616              		.loc 1 194 30 is_stmt 0 view .LVU340
 1617 005e 4FF4A872 		mov	r2, #336
 1618 0062 1192     		str	r2, [sp, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1619              		.loc 1 195 3 is_stmt 1 view .LVU341
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1620              		.loc 1 195 30 is_stmt 0 view .LVU342
 1621 0064 1293     		str	r3, [sp, #72]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1622              		.loc 1 196 3 is_stmt 1 view .LVU343
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1623              		.loc 1 196 30 is_stmt 0 view .LVU344
 1624 0066 0723     		movs	r3, #7
 1625 0068 1393     		str	r3, [sp, #76]
 197:Core/Src/main.c ****   {
 1626              		.loc 1 197 3 is_stmt 1 view .LVU345
 197:Core/Src/main.c ****   {
 1627              		.loc 1 197 7 is_stmt 0 view .LVU346
 1628 006a 08A8     		add	r0, sp, #32
 1629 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1630              	.LVL129:
 197:Core/Src/main.c ****   {
 1631              		.loc 1 197 6 discriminator 1 view .LVU347
 1632 0070 98B9     		cbnz	r0, .L104
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1633              		.loc 1 204 3 is_stmt 1 view .LVU348
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1634              		.loc 1 204 31 is_stmt 0 view .LVU349
 1635 0072 0F23     		movs	r3, #15
 1636 0074 0393     		str	r3, [sp, #12]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1637              		.loc 1 206 3 is_stmt 1 view .LVU350
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1638              		.loc 1 206 34 is_stmt 0 view .LVU351
 1639 0076 0223     		movs	r3, #2
 1640 0078 0493     		str	r3, [sp, #16]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1641              		.loc 1 207 3 is_stmt 1 view .LVU352
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1642              		.loc 1 207 35 is_stmt 0 view .LVU353
 1643 007a 0023     		movs	r3, #0
 1644 007c 0593     		str	r3, [sp, #20]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1645              		.loc 1 208 3 is_stmt 1 view .LVU354
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1646              		.loc 1 208 36 is_stmt 0 view .LVU355
 1647 007e 4FF4A053 		mov	r3, #5120
 1648 0082 0693     		str	r3, [sp, #24]
 209:Core/Src/main.c **** 
 1649              		.loc 1 209 3 is_stmt 1 view .LVU356
 209:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 63


 1650              		.loc 1 209 36 is_stmt 0 view .LVU357
 1651 0084 4FF48053 		mov	r3, #4096
 1652 0088 0793     		str	r3, [sp, #28]
 211:Core/Src/main.c ****   {
 1653              		.loc 1 211 3 is_stmt 1 view .LVU358
 211:Core/Src/main.c ****   {
 1654              		.loc 1 211 7 is_stmt 0 view .LVU359
 1655 008a 0521     		movs	r1, #5
 1656 008c 03A8     		add	r0, sp, #12
 1657 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1658              	.LVL130:
 211:Core/Src/main.c ****   {
 1659              		.loc 1 211 6 discriminator 1 view .LVU360
 1660 0092 20B9     		cbnz	r0, .L105
 215:Core/Src/main.c **** 
 1661              		.loc 1 215 1 view .LVU361
 1662 0094 15B0     		add	sp, sp, #84
 1663              	.LCFI24:
 1664              		.cfi_remember_state
 1665              		.cfi_def_cfa_offset 4
 1666              		@ sp needed
 1667 0096 5DF804FB 		ldr	pc, [sp], #4
 1668              	.L104:
 1669              	.LCFI25:
 1670              		.cfi_restore_state
 199:Core/Src/main.c ****   }
 1671              		.loc 1 199 5 is_stmt 1 view .LVU362
 1672 009a FFF7FEFF 		bl	Error_Handler
 1673              	.LVL131:
 1674              	.L105:
 213:Core/Src/main.c ****   }
 1675              		.loc 1 213 5 view .LVU363
 1676 009e FFF7FEFF 		bl	Error_Handler
 1677              	.LVL132:
 1678              	.L107:
 1679 00a2 00BF     		.align	2
 1680              	.L106:
 1681 00a4 00380240 		.word	1073887232
 1682 00a8 00700040 		.word	1073770496
 1683              		.cfi_endproc
 1684              	.LFE138:
 1686              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1687              		.align	2
 1688              	.LC32:
 1689 0000 53797374 		.ascii	"System Initialized\015\000"
 1689      656D2049 
 1689      6E697469 
 1689      616C697A 
 1689      65640D00 
 1690              		.section	.text.main,"ax",%progbits
 1691              		.align	1
 1692              		.global	main
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1697              	main:
 1698              	.LFB137:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 64


 118:Core/Src/main.c **** 
 1699              		.loc 1 118 1 view -0
 1700              		.cfi_startproc
 1701              		@ Volatile: function does not return.
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704 0000 08B5     		push	{r3, lr}
 1705              	.LCFI26:
 1706              		.cfi_def_cfa_offset 8
 1707              		.cfi_offset 3, -8
 1708              		.cfi_offset 14, -4
 127:Core/Src/main.c **** 
 1709              		.loc 1 127 3 view .LVU365
 1710 0002 FFF7FEFF 		bl	HAL_Init
 1711              	.LVL133:
 134:Core/Src/main.c **** 
 1712              		.loc 1 134 3 view .LVU366
 1713 0006 FFF7FEFF 		bl	SystemClock_Config
 1714              	.LVL134:
 141:Core/Src/main.c ****   MX_I2C1_Init();
 1715              		.loc 1 141 3 view .LVU367
 1716 000a FFF7FEFF 		bl	MX_GPIO_Init
 1717              	.LVL135:
 142:Core/Src/main.c ****   MX_I2S3_Init();
 1718              		.loc 1 142 3 view .LVU368
 1719 000e FFF7FEFF 		bl	MX_I2C1_Init
 1720              	.LVL136:
 143:Core/Src/main.c ****   MX_SPI1_Init();
 1721              		.loc 1 143 3 view .LVU369
 1722 0012 FFF7FEFF 		bl	MX_I2S3_Init
 1723              	.LVL137:
 144:Core/Src/main.c ****   MX_USART2_UART_Init();
 1724              		.loc 1 144 3 view .LVU370
 1725 0016 FFF7FEFF 		bl	MX_SPI1_Init
 1726              	.LVL138:
 145:Core/Src/main.c ****   MX_USART3_UART_Init();
 1727              		.loc 1 145 3 view .LVU371
 1728 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 1729              	.LVL139:
 146:Core/Src/main.c ****   MX_USART6_UART_Init();
 1730              		.loc 1 146 3 view .LVU372
 1731 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 1732              	.LVL140:
 147:Core/Src/main.c ****   MX_USB_HOST_Init();
 1733              		.loc 1 147 3 view .LVU373
 1734 0022 FFF7FEFF 		bl	MX_USART6_UART_Init
 1735              	.LVL141:
 148:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1736              		.loc 1 148 3 view .LVU374
 1737 0026 FFF7FEFF 		bl	MX_USB_HOST_Init
 1738              	.LVL142:
 151:Core/Src/main.c ****   // HomeSet(); // Set all joints to home position
 1739              		.loc 1 151 3 view .LVU375
 1740 002a 0122     		movs	r2, #1
 1741 002c 0849     		ldr	r1, .L111
 1742 002e 0948     		ldr	r0, .L111+4
 1743 0030 FFF7FEFF 		bl	HAL_UART_Receive_IT
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 65


 1744              	.LVL143:
 153:Core/Src/main.c ****   printf("System Initialized\r\n");
 1745              		.loc 1 153 3 view .LVU376
 1746 0034 0120     		movs	r0, #1
 1747 0036 FFF7FEFF 		bl	ToggleLEDs
 1748              	.LVL144:
 154:Core/Src/main.c **** 
 1749              		.loc 1 154 3 view .LVU377
 1750 003a 0748     		ldr	r0, .L111+8
 1751 003c FFF7FEFF 		bl	puts
 1752              	.LVL145:
 1753              	.L109:
 160:Core/Src/main.c ****   {
 1754              		.loc 1 160 3 view .LVU378
 163:Core/Src/main.c ****     ToggleLEDs(ledFlag);
 1755              		.loc 1 163 5 view .LVU379
 1756 0040 FFF7FEFF 		bl	MX_USB_HOST_Process
 1757              	.LVL146:
 164:Core/Src/main.c ****     
 1758              		.loc 1 164 5 discriminator 1 view .LVU380
 1759 0044 054B     		ldr	r3, .L111+12
 1760 0046 1868     		ldr	r0, [r3]
 1761 0048 FFF7FEFF 		bl	ToggleLEDs
 1762              	.LVL147:
 160:Core/Src/main.c ****   {
 1763              		.loc 1 160 9 view .LVU381
 1764 004c F8E7     		b	.L109
 1765              	.L112:
 1766 004e 00BF     		.align	2
 1767              	.L111:
 1768 0050 00000000 		.word	rx_byte
 1769 0054 00000000 		.word	huart2
 1770 0058 00000000 		.word	.LC32
 1771 005c 00000000 		.word	ledFlag
 1772              		.cfi_endproc
 1773              	.LFE137:
 1775              		.global	prev_actuator
 1776              		.section	.bss.prev_actuator,"aw",%nobits
 1777              		.align	2
 1780              	prev_actuator:
 1781 0000 00000000 		.space	4
 1782              		.global	prev_joint5
 1783              		.section	.bss.prev_joint5,"aw",%nobits
 1784              		.align	2
 1787              	prev_joint5:
 1788 0000 00000000 		.space	4
 1789              		.global	prev_joint4
 1790              		.section	.bss.prev_joint4,"aw",%nobits
 1791              		.align	2
 1794              	prev_joint4:
 1795 0000 00000000 		.space	4
 1796              		.global	prev_joint3
 1797              		.section	.bss.prev_joint3,"aw",%nobits
 1798              		.align	2
 1801              	prev_joint3:
 1802 0000 00000000 		.space	4
 1803              		.global	prev_joint2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 66


 1804              		.section	.bss.prev_joint2,"aw",%nobits
 1805              		.align	2
 1808              	prev_joint2:
 1809 0000 00000000 		.space	4
 1810              		.global	prev_joint1
 1811              		.section	.bss.prev_joint1,"aw",%nobits
 1812              		.align	2
 1815              	prev_joint1:
 1816 0000 00000000 		.space	4
 1817              		.global	ledFlag
 1818              		.section	.bss.ledFlag,"aw",%nobits
 1819              		.align	2
 1822              	ledFlag:
 1823 0000 00000000 		.space	4
 1824              		.global	actuator
 1825              		.section	.bss.actuator,"aw",%nobits
 1826              		.align	2
 1829              	actuator:
 1830 0000 00000000 		.space	4
 1831              		.global	joint5
 1832              		.section	.bss.joint5,"aw",%nobits
 1833              		.align	2
 1836              	joint5:
 1837 0000 00000000 		.space	4
 1838              		.global	joint4
 1839              		.section	.bss.joint4,"aw",%nobits
 1840              		.align	2
 1843              	joint4:
 1844 0000 00000000 		.space	4
 1845              		.global	joint3
 1846              		.section	.bss.joint3,"aw",%nobits
 1847              		.align	2
 1850              	joint3:
 1851 0000 00000000 		.space	4
 1852              		.global	joint2
 1853              		.section	.bss.joint2,"aw",%nobits
 1854              		.align	2
 1857              	joint2:
 1858 0000 00000000 		.space	4
 1859              		.global	joint1
 1860              		.section	.data.joint1,"aw"
 1861              		.align	2
 1864              	joint1:
 1865 0000 5A000000 		.word	90
 1866              		.global	previous_string
 1867              		.section	.bss.previous_string,"aw",%nobits
 1868              		.align	2
 1871              	previous_string:
 1872 0000 00000000 		.space	256
 1872      00000000 
 1872      00000000 
 1872      00000000 
 1872      00000000 
 1873              		.global	received_string
 1874              		.section	.bss.received_string,"aw",%nobits
 1875              		.align	2
 1878              	received_string:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 67


 1879 0000 00000000 		.space	256
 1879      00000000 
 1879      00000000 
 1879      00000000 
 1879      00000000 
 1880              		.global	uart_received
 1881              		.section	.bss.uart_received,"aw",%nobits
 1884              	uart_received:
 1885 0000 00       		.space	1
 1886              		.global	buffer_index
 1887              		.section	.bss.buffer_index,"aw",%nobits
 1888              		.align	1
 1891              	buffer_index:
 1892 0000 0000     		.space	2
 1893              		.global	uart_buffer
 1894              		.section	.bss.uart_buffer,"aw",%nobits
 1895              		.align	2
 1898              	uart_buffer:
 1899 0000 00000000 		.space	256
 1899      00000000 
 1899      00000000 
 1899      00000000 
 1899      00000000 
 1900              		.global	rx_byte
 1901              		.section	.bss.rx_byte,"aw",%nobits
 1904              	rx_byte:
 1905 0000 00       		.space	1
 1906              		.text
 1907              	.Letext0:
 1908              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1909              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1910              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1911              		.file 6 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 1912              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1913              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1914              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1915              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1916              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1917              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1918              		.file 13 "Core/Inc/usart.h"
 1919              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1920              		.file 15 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 1921              		.file 16 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 1922              		.file 17 "USB_HOST/App/usb_host.h"
 1923              		.file 18 "Core/Inc/spi.h"
 1924              		.file 19 "Core/Inc/i2s.h"
 1925              		.file 20 "Core/Inc/i2c.h"
 1926              		.file 21 "Core/Inc/gpio.h"
 1927              		.file 22 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:68     .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:74     .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:110    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:115    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:121    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:157    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:162    .text.ToggleLEDs:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:168    .text.ToggleLEDs:00000000 ToggleLEDs
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:260    .text.ToggleLEDs:0000007c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:265    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:271    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:285    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:289    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:295    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:360    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:365    .rodata.Joint3Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:369    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:375    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:440    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:445    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:451    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:505    .text.HomeSet:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1864   .data.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1857   .bss.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1850   .bss.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1843   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1836   .bss.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1829   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:515    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:603    .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:609    .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1119   .text.ProcessReceivedString:00000274 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1815   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1808   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1801   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1794   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1787   .bss.prev_joint5:00000000 prev_joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1780   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1157   .text.ProcessReceivedString:00000304 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1251   .text.ProcessReceivedString:00000370 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1822   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1266   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1270   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1276   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1416   .text.HAL_UART_RxCpltCallback:0000009c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1891   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1904   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1898   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1878   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1871   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1429   .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1435   .text.Joint4Set:00000000 Joint4Set
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 69


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1449   .text.Joint5Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1455   .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1469   .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1475   .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1489   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1495   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1527   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1533   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1681   .text.SystemClock_Config:000000a4 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1687   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1691   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1697   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1768   .text.main:00000050 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1777   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1784   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1791   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1798   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1805   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1812   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1819   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1826   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1833   .bss.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1840   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1847   .bss.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1854   .bss.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1861   .data.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1868   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1875   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1884   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1885   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1888   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1895   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s:1905   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
huart3
huart6
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_WritePin
snprintf
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_I2S3_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccz2lTrY.s 			page 70


MX_SPI1_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USART6_UART_Init
MX_USB_HOST_Init
MX_USB_HOST_Process
