ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB139:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "i2s.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "usb_host.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdlib.h> 
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define JOINT1_HOME 0
  44:Core/Src/main.c **** #define JOINT2_HOME 45
  45:Core/Src/main.c **** #define JOINT3_HOME 0
  46:Core/Src/main.c **** #define JOINT4_HOME 0 
  47:Core/Src/main.c **** #define JOINT5_HOME 0
  48:Core/Src/main.c **** #define ACTUATOR_HOME 0
  49:Core/Src/main.c **** #define MAIN_UART &huart2
  50:Core/Src/main.c **** #define MAIN_UART_INSTANCE USART2
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PM */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PV */
  62:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  63:Core/Src/main.c **** volatile uint8_t rx_byte;                        // For receiving single byte
  64:Core/Src/main.c **** volatile uint8_t uart_buffer[UART_BUFFER_SIZE];  // Circular buffer
  65:Core/Src/main.c **** volatile uint16_t buffer_index = 0;     // Index for storing data
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** volatile uint8_t uart_received = 0; // Flag to indicate a new message is available
  68:Core/Src/main.c **** volatile char received_string[UART_BUFFER_SIZE]; // Store the received string
  69:Core/Src/main.c **** volatile char previous_string[UART_BUFFER_SIZE]; // Store the received string
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** int joint1 = JOINT1_HOME;
  72:Core/Src/main.c **** int joint2 = JOINT2_HOME;
  73:Core/Src/main.c **** int joint3 = JOINT3_HOME;
  74:Core/Src/main.c **** int joint4 = JOINT4_HOME; 
  75:Core/Src/main.c **** int joint5 = JOINT5_HOME; 
  76:Core/Src/main.c **** int actuator = ACTUATOR_HOME; 
  77:Core/Src/main.c **** int ledFlag = 0; 
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** int prev_joint1, prev_joint2, prev_joint3, prev_joint4, prev_joint5, prev_actuator; 
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  86:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 3


  87:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  88:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART3 int __io_putchar_usart3(int ch)
  91:Core/Src/main.c **** #define printf_usart3(...) do { \
  92:Core/Src/main.c ****     char buffer[256]; \
  93:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
  94:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
  95:Core/Src/main.c ****         __io_putchar_usart3(buffer[i]); \
  96:Core/Src/main.c ****     } \
  97:Core/Src/main.c **** } while (0)
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE_USART6 int __io_putchar_usart6(int ch)
 100:Core/Src/main.c **** #define printf_usart6(...) do { \
 101:Core/Src/main.c ****     char buffer[256]; \
 102:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), __VA_ARGS__); \
 103:Core/Src/main.c ****     for (int i = 0; i < len; i++) { \
 104:Core/Src/main.c ****         __io_putchar_usart6(buffer[i]); \
 105:Core/Src/main.c ****     } \
 106:Core/Src/main.c **** } while (0)
 107:Core/Src/main.c **** /* USER CODE END PFP */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 110:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief  The application entry point.
 116:Core/Src/main.c ****   * @retval int
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** int main(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END 1 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 128:Core/Src/main.c ****   HAL_Init();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Configure the system clock */
 135:Core/Src/main.c ****   SystemClock_Config();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Initialize all configured peripherals */
 142:Core/Src/main.c ****   MX_GPIO_Init();
 143:Core/Src/main.c ****   MX_I2C1_Init();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 4


 144:Core/Src/main.c ****   MX_I2S3_Init();
 145:Core/Src/main.c ****   MX_SPI1_Init();
 146:Core/Src/main.c ****   MX_USART2_UART_Init();
 147:Core/Src/main.c ****   MX_USART3_UART_Init();
 148:Core/Src/main.c ****   MX_USART6_UART_Init();
 149:Core/Src/main.c ****   MX_USB_HOST_Init();
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1); // Start receiving single bytes in interrupt mode
 153:Core/Src/main.c ****   // HomeSet(); // Set all joints to home position
 154:Core/Src/main.c ****   ToggleLEDs(1);
 155:Core/Src/main.c ****   printf("System Initialized\r\n");
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Infinite loop */
 160:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 161:Core/Src/main.c ****   while (1)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     /* USER CODE END WHILE */
 164:Core/Src/main.c ****     MX_USB_HOST_Process();
 165:Core/Src/main.c ****     ToggleLEDs(ledFlag);
 166:Core/Src/main.c ****     
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   /* USER CODE END 3 */
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief System Clock Configuration
 175:Core/Src/main.c ****   * @retval None
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c **** void SystemClock_Config(void)
 178:Core/Src/main.c **** {
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 188:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 5


 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 225:Core/Src/main.c ****  {
  30              		.loc 1 225 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 225 2 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 226:Core/Src/main.c ****    /* Place your implementation of fputc here */
 227:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 228:Core/Src/main.c ****    HAL_UART_Transmit(MAIN_UART, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 228 4 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 228 4 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
 229:Core/Src/main.c ****  
 230:Core/Src/main.c ****    return ch;
  52              		.loc 1 230 4 is_stmt 1 view .LVU4
 231:Core/Src/main.c ****  }
  53              		.loc 1 231 2 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 6


  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart2
  64              		.cfi_endproc
  65              	.LFE139:
  67              		.section	.text.__io_putchar_usart3,"ax",%progbits
  68              		.align	1
  69              		.global	__io_putchar_usart3
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	__io_putchar_usart3:
  75              	.LVL3:
  76              	.LFB140:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART3
 234:Core/Src/main.c ****  {
  77              		.loc 1 234 2 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 234 2 is_stmt 0 view .LVU7
  82 0000 00B5     		push	{lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 14, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI4:
  88              		.cfi_def_cfa_offset 16
  89 0004 0190     		str	r0, [sp, #4]
 235:Core/Src/main.c ****     /* Place your implementation of fputc here */
 236:Core/Src/main.c ****     /* e.g. write a character to the USART3 and Loop until the end of transmission */
 237:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, 0xFFFF);
  90              		.loc 1 237 5 is_stmt 1 view .LVU8
  91 0006 4FF6FF73 		movw	r3, #65535
  92 000a 0122     		movs	r2, #1
  93 000c 01A9     		add	r1, sp, #4
  94 000e 0348     		ldr	r0, .L7
  95              	.LVL4:
  96              		.loc 1 237 5 is_stmt 0 view .LVU9
  97 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  98              	.LVL5:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****     return ch;
  99              		.loc 1 239 5 is_stmt 1 view .LVU10
 240:Core/Src/main.c ****  }
 100              		.loc 1 240 2 is_stmt 0 view .LVU11
 101 0014 0198     		ldr	r0, [sp, #4]
 102 0016 03B0     		add	sp, sp, #12
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 7


 106 0018 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 001c 00000000 		.word	huart3
 111              		.cfi_endproc
 112              	.LFE140:
 114              		.section	.text.__io_putchar_usart6,"ax",%progbits
 115              		.align	1
 116              		.global	__io_putchar_usart6
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	__io_putchar_usart6:
 122              	.LVL6:
 123              	.LFB141:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****  PUTCHAR_PROTOTYPE_USART6
 243:Core/Src/main.c ****  {
 124              		.loc 1 243 2 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		.loc 1 243 2 is_stmt 0 view .LVU13
 129 0000 00B5     		push	{lr}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 0190     		str	r0, [sp, #4]
 244:Core/Src/main.c ****     /* Place your implementation of fputc here */
 245:Core/Src/main.c ****     /* e.g. write a character to the USART6 and Loop until the end of transmission */
 246:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t *)&ch, 1, 0xFFFF);
 137              		.loc 1 246 5 is_stmt 1 view .LVU14
 138 0006 4FF6FF73 		movw	r3, #65535
 139 000a 0122     		movs	r2, #1
 140 000c 01A9     		add	r1, sp, #4
 141 000e 0348     		ldr	r0, .L11
 142              	.LVL7:
 143              		.loc 1 246 5 is_stmt 0 view .LVU15
 144 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 145              	.LVL8:
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****     return ch;
 146              		.loc 1 248 5 is_stmt 1 view .LVU16
 249:Core/Src/main.c ****  }
 147              		.loc 1 249 2 is_stmt 0 view .LVU17
 148 0014 0198     		ldr	r0, [sp, #4]
 149 0016 03B0     		add	sp, sp, #12
 150              	.LCFI8:
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0018 5DF804FB 		ldr	pc, [sp], #4
 154              	.L12:
 155              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 8


 156              	.L11:
 157 001c 00000000 		.word	huart6
 158              		.cfi_endproc
 159              	.LFE141:
 161              		.section	.text.ToggleLEDs,"ax",%progbits
 162              		.align	1
 163              		.global	ToggleLEDs
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	ToggleLEDs:
 169              	.LVL9:
 170              	.LFB144:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     if (huart->Instance == MAIN_UART_INSTANCE) // Correct UART instance
 255:Core/Src/main.c ****     {
 256:Core/Src/main.c ****         // Store received byte in buffer
 257:Core/Src/main.c ****         if (buffer_index < UART_BUFFER_SIZE - 1) 
 258:Core/Src/main.c ****         {
 259:Core/Src/main.c ****             uart_buffer[buffer_index++] = rx_byte;
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****             // Check for newline or carriage return
 262:Core/Src/main.c ****             if (rx_byte == '\n') 
 263:Core/Src/main.c ****             {
 264:Core/Src/main.c ****                 uart_buffer[buffer_index] = '\0'; // Null-terminate the string
 265:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****                 // Copy received string to the global buffer for main loop access
 268:Core/Src/main.c ****                 strcpy((char *)received_string, (char *)uart_buffer);
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****                 if(strcmp("print", (char* )received_string)){
 271:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 272:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 273:Core/Src/main.c ****                 }
 274:Core/Src/main.c ****                 else if(strcmp((char *)received_string, (char *)previous_string)){
 275:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 276:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 277:Core/Src/main.c ****                 }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****                 
 280:Core/Src/main.c ****             }
 281:Core/Src/main.c ****         }
 282:Core/Src/main.c ****         else 
 283:Core/Src/main.c ****         {
 284:Core/Src/main.c ****             // Buffer overflow, reset index
 285:Core/Src/main.c ****             buffer_index = 0;
 286:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 287:Core/Src/main.c ****         }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****         // Restart UART reception for the next byte
 290:Core/Src/main.c ****         HAL_UART_Receive_IT(MAIN_UART, &rx_byte, 1);
 291:Core/Src/main.c ****     }
 292:Core/Src/main.c **** }
 293:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 9


 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****  
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****  
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** // Function to process the received string
 301:Core/Src/main.c **** void ProcessReceivedString(char *str)
 302:Core/Src/main.c **** {
 303:Core/Src/main.c ****     // Check if the string starts with "set"
 304:Core/Src/main.c ****     if (strncmp(str, "set", 3) == 0)
 305:Core/Src/main.c ****     {
 306:Core/Src/main.c ****         // Move the pointer to after "set" and the space
 307:Core/Src/main.c ****         str += 4;  // Skip "set " (4 characters)
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****         // Now we expect a format like "000-000-000-000-000-000"
 310:Core/Src/main.c ****         if (sscanf(str, "%3d-%3d-%3d-%3d-%3d-%3d", &joint1, &joint2, &joint3, &joint4, &joint5, &ac
 311:Core/Src/main.c ****         {
 312:Core/Src/main.c ****             // Successfully parsed the 6 numbers
 313:Core/Src/main.c ****             printf("Received numbers: %d %d %d %d %d %d\r\n", joint1, joint2, joint3, joint4, joint
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****             // Check for changes in each joint and send new values if changed
 316:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 317:Core/Src/main.c ****                 // send to joint
 318:Core/Src/main.c ****                 prev_joint1 = joint1;
 319:Core/Src/main.c ****                 Joint1Set(joint1);
 320:Core/Src/main.c ****             }
 321:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 322:Core/Src/main.c ****                 // send to joint
 323:Core/Src/main.c ****                 prev_joint2 = joint2;
 324:Core/Src/main.c ****                 Joint2Set(joint2);
 325:Core/Src/main.c ****             }
 326:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 327:Core/Src/main.c ****                 // send to joint
 328:Core/Src/main.c ****                 prev_joint3 = joint3;
 329:Core/Src/main.c ****                 Joint3Set(joint3);
 330:Core/Src/main.c ****             }
 331:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 332:Core/Src/main.c ****                 // send to joint
 333:Core/Src/main.c ****                 prev_joint4 = joint4;
 334:Core/Src/main.c ****             }
 335:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 336:Core/Src/main.c ****                 // send to joint
 337:Core/Src/main.c ****                 prev_joint5 = joint5;
 338:Core/Src/main.c ****             }
 339:Core/Src/main.c ****             if (actuator != prev_actuator) {
 340:Core/Src/main.c ****                 // send to actuator
 341:Core/Src/main.c ****                 prev_actuator = actuator;
 342:Core/Src/main.c ****             }
 343:Core/Src/main.c ****         }
 344:Core/Src/main.c ****         else
 345:Core/Src/main.c ****         {
 346:Core/Src/main.c ****             printf("Invalid format!\r\n");
 347:Core/Src/main.c ****         }
 348:Core/Src/main.c ****     }
 349:Core/Src/main.c ****     // Just setting joint1 
 350:Core/Src/main.c ****     else if (strncmp(str, "joint1", 6) == 0)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 10


 351:Core/Src/main.c ****     {
 352:Core/Src/main.c ****         str += 7;
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint1) == 1)
 355:Core/Src/main.c ****         {
 356:Core/Src/main.c ****             // Successfully parsed joint1
 357:Core/Src/main.c ****             printf("Joint1 set: %d\r\n", joint1);
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****             if (joint1 != prev_joint1) {
 360:Core/Src/main.c ****                 Joint1Set(joint1);
 361:Core/Src/main.c ****                 prev_joint1 = joint1;
 362:Core/Src/main.c ****             }
 363:Core/Src/main.c ****         }
 364:Core/Src/main.c ****         else
 365:Core/Src/main.c ****         {
 366:Core/Src/main.c ****             printf("Invalid format!\r\n");
 367:Core/Src/main.c ****         }
 368:Core/Src/main.c ****     }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****     // Just setting joint2
 371:Core/Src/main.c ****     else if (strncmp(str, "joint2", 6) == 0)
 372:Core/Src/main.c ****     {
 373:Core/Src/main.c ****         str += 7;
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint2) == 1)
 376:Core/Src/main.c ****         {
 377:Core/Src/main.c ****             // Successfully parsed joint2
 378:Core/Src/main.c ****             printf("Joint2 set: %d\r\n", joint2);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****             if (joint2 != prev_joint2) {
 381:Core/Src/main.c ****                 Joint2Set(joint2);
 382:Core/Src/main.c ****                 prev_joint2 = joint2;
 383:Core/Src/main.c ****             }
 384:Core/Src/main.c ****         }
 385:Core/Src/main.c ****         else
 386:Core/Src/main.c ****         {
 387:Core/Src/main.c ****             printf("Invalid format!\r\n");
 388:Core/Src/main.c ****         }
 389:Core/Src/main.c ****     }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****     // Just setting joint3
 392:Core/Src/main.c ****     else if (strncmp(str, "joint3", 6) == 0)
 393:Core/Src/main.c ****     {
 394:Core/Src/main.c ****         str += 7;
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint3) == 1)
 397:Core/Src/main.c ****         {
 398:Core/Src/main.c ****             // Successfully parsed joint3
 399:Core/Src/main.c ****             printf("Joint3 set: %d\r\n", joint3);
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****             if (joint3 != prev_joint3) {
 402:Core/Src/main.c ****                 Joint3Set(joint3);
 403:Core/Src/main.c ****                 prev_joint3 = joint3;
 404:Core/Src/main.c ****             }
 405:Core/Src/main.c ****         }
 406:Core/Src/main.c ****         else
 407:Core/Src/main.c ****         {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 11


 408:Core/Src/main.c ****             printf("Invalid format!\r\n");
 409:Core/Src/main.c ****         }
 410:Core/Src/main.c ****     }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****     // Just setting joint4
 413:Core/Src/main.c ****     else if (strncmp(str, "joint4", 6) == 0)
 414:Core/Src/main.c ****     {
 415:Core/Src/main.c ****         str += 7;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint4) == 1)
 418:Core/Src/main.c ****         {
 419:Core/Src/main.c ****             // Successfully parsed joint4
 420:Core/Src/main.c ****             printf("Joint4 set: %d\r\n", joint4);
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****             if (joint4 != prev_joint4) {
 423:Core/Src/main.c ****                 Joint4Set(joint4);
 424:Core/Src/main.c ****                 prev_joint4 = joint4;
 425:Core/Src/main.c ****             }
 426:Core/Src/main.c ****         }
 427:Core/Src/main.c ****         else
 428:Core/Src/main.c ****         {
 429:Core/Src/main.c ****             printf("Invalid format!\r\n");
 430:Core/Src/main.c ****         }
 431:Core/Src/main.c ****     }
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****     // Just setting joint5
 434:Core/Src/main.c ****     else if (strncmp(str, "joint5", 6) == 0)
 435:Core/Src/main.c ****     {
 436:Core/Src/main.c ****         str += 7;
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****         if (sscanf(str, "%3d", &joint5) == 1)
 439:Core/Src/main.c ****         {
 440:Core/Src/main.c ****             // Successfully parsed joint5
 441:Core/Src/main.c ****             printf("Joint5 set: %d\r\n", joint5);
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****             if (joint5 != prev_joint5) {
 444:Core/Src/main.c ****                 Joint5Set(joint5);
 445:Core/Src/main.c ****                 prev_joint5 = joint5;
 446:Core/Src/main.c ****             }
 447:Core/Src/main.c ****         }
 448:Core/Src/main.c ****         else
 449:Core/Src/main.c ****         {
 450:Core/Src/main.c ****             printf("Invalid format!\r\n");
 451:Core/Src/main.c ****         }
 452:Core/Src/main.c ****     }
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****     // Just setting actuator
 455:Core/Src/main.c ****     else if (strncmp(str, "actuator", 8) == 0)
 456:Core/Src/main.c ****     {
 457:Core/Src/main.c ****         str += 9;
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****         if (sscanf(str, "%3d", &actuator) == 1)
 460:Core/Src/main.c ****         {
 461:Core/Src/main.c ****             // Successfully parsed joint5
 462:Core/Src/main.c ****             printf("Actuator set: %d\r\n", actuator);
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****             if (actuator != actuator) {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 12


 465:Core/Src/main.c ****                 ActuatorSet(actuator);
 466:Core/Src/main.c ****                 prev_actuator = actuator;
 467:Core/Src/main.c ****             }
 468:Core/Src/main.c ****         }
 469:Core/Src/main.c ****         else
 470:Core/Src/main.c ****         {
 471:Core/Src/main.c ****             printf("Invalid format!\r\n");
 472:Core/Src/main.c ****         }
 473:Core/Src/main.c ****     }
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****     // Set Home 
 476:Core/Src/main.c ****     else if (strncmp(str, "home", 4) == 0)
 477:Core/Src/main.c ****     {
 478:Core/Src/main.c ****         str += 5;
 479:Core/Src/main.c ****         
 480:Core/Src/main.c ****         HomeSet();
 481:Core/Src/main.c ****         
 482:Core/Src/main.c ****         printf("Set all joints home\r\n");
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****     }
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****     else if (strncmp(str, "flash", 5) == 0)
 487:Core/Src/main.c ****     {
 488:Core/Src/main.c ****         str += 6;
 489:Core/Src/main.c ****         ledFlag = !ledFlag;
 490:Core/Src/main.c ****         
 491:Core/Src/main.c ****         printf("LEDs Toggled\r\n");
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****     }
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****     // Prints all joints
 496:Core/Src/main.c ****     else if (strncmp(str, "print", 5) == 0)
 497:Core/Src/main.c ****     {
 498:Core/Src/main.c ****        printf("Joint1: %d\r\n", joint1);
 499:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 500:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 501:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 502:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 503:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 504:Core/Src/main.c ****     }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****     // Echoes string if no keywords are sent
 507:Core/Src/main.c ****     else
 508:Core/Src/main.c ****     {
 509:Core/Src/main.c ****         printf("Received: %s\r\n", str);
 510:Core/Src/main.c ****     }
 511:Core/Src/main.c **** }
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** void ToggleLEDs(int state){
 171              		.loc 1 514 27 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 514 27 is_stmt 0 view .LVU19
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI9:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 13


 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 515:Core/Src/main.c ****   /* Toggle LEDs sequentially */
 516:Core/Src/main.c ****   if(state){
 181              		.loc 1 516 3 is_stmt 1 view .LVU20
 182              		.loc 1 516 5 is_stmt 0 view .LVU21
 183 0002 08B3     		cbz	r0, .L14
 517:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 184              		.loc 1 517 5 is_stmt 1 view .LVU22
 185 0004 1D4C     		ldr	r4, .L17
 186 0006 4FF48051 		mov	r1, #4096
 187 000a 2046     		mov	r0, r4
 188              	.LVL10:
 189              		.loc 1 517 5 is_stmt 0 view .LVU23
 190 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 191              	.LVL11:
 518:Core/Src/main.c ****     HAL_Delay(100);
 192              		.loc 1 518 5 is_stmt 1 view .LVU24
 193 0010 6420     		movs	r0, #100
 194 0012 FFF7FEFF 		bl	HAL_Delay
 195              	.LVL12:
 519:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 196              		.loc 1 519 5 view .LVU25
 197 0016 4FF40051 		mov	r1, #8192
 198 001a 2046     		mov	r0, r4
 199 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 200              	.LVL13:
 520:Core/Src/main.c ****     HAL_Delay(100);
 201              		.loc 1 520 5 view .LVU26
 202 0020 6420     		movs	r0, #100
 203 0022 FFF7FEFF 		bl	HAL_Delay
 204              	.LVL14:
 521:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 205              		.loc 1 521 5 view .LVU27
 206 0026 4FF48041 		mov	r1, #16384
 207 002a 2046     		mov	r0, r4
 208 002c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 209              	.LVL15:
 522:Core/Src/main.c ****     HAL_Delay(100);
 210              		.loc 1 522 5 view .LVU28
 211 0030 6420     		movs	r0, #100
 212 0032 FFF7FEFF 		bl	HAL_Delay
 213              	.LVL16:
 523:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED4_GPIO_Port, LED4_Pin);
 214              		.loc 1 523 5 view .LVU29
 215 0036 4FF40041 		mov	r1, #32768
 216 003a 2046     		mov	r0, r4
 217 003c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 218              	.LVL17:
 524:Core/Src/main.c ****     HAL_Delay(100);
 219              		.loc 1 524 5 view .LVU30
 220 0040 6420     		movs	r0, #100
 221 0042 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL18:
 223              	.L13:
 525:Core/Src/main.c ****   }else{
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 14


 526:Core/Src/main.c ****     HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 527:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 528:Core/Src/main.c ****     HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 529:Core/Src/main.c ****     HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_RESET);
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   
 532:Core/Src/main.c **** }
 224              		.loc 1 532 1 is_stmt 0 view .LVU31
 225 0046 10BD     		pop	{r4, pc}
 226              	.LVL19:
 227              	.L14:
 526:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 228              		.loc 1 526 5 is_stmt 1 view .LVU32
 229 0048 0C4C     		ldr	r4, .L17
 230 004a 0022     		movs	r2, #0
 231 004c 4FF48051 		mov	r1, #4096
 232 0050 2046     		mov	r0, r4
 233              	.LVL20:
 526:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 234              		.loc 1 526 5 is_stmt 0 view .LVU33
 235 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 236              	.LVL21:
 527:Core/Src/main.c ****     HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 237              		.loc 1 527 5 is_stmt 1 view .LVU34
 238 0056 0022     		movs	r2, #0
 239 0058 4FF40051 		mov	r1, #8192
 240 005c 2046     		mov	r0, r4
 241 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL22:
 528:Core/Src/main.c ****     HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_RESET);
 243              		.loc 1 528 5 view .LVU35
 244 0062 0022     		movs	r2, #0
 245 0064 4FF48041 		mov	r1, #16384
 246 0068 2046     		mov	r0, r4
 247 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL23:
 529:Core/Src/main.c ****   }
 249              		.loc 1 529 5 view .LVU36
 250 006e 0022     		movs	r2, #0
 251 0070 4FF40041 		mov	r1, #32768
 252 0074 2046     		mov	r0, r4
 253 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL24:
 255              		.loc 1 532 1 is_stmt 0 view .LVU37
 256 007a E4E7     		b	.L13
 257              	.L18:
 258              		.align	2
 259              	.L17:
 260 007c 000C0240 		.word	1073875968
 261              		.cfi_endproc
 262              	.LFE144:
 264              		.section	.text.Joint1Set,"ax",%progbits
 265              		.align	1
 266              		.global	Joint1Set
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 15


 271              	Joint1Set:
 272              	.LVL25:
 273              	.LFB146:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** void HomeSet(){
 535:Core/Src/main.c ****   //Set all joints to home
 536:Core/Src/main.c ****   joint1 = JOINT1_HOME;
 537:Core/Src/main.c ****   Joint1Set(joint1);
 538:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 539:Core/Src/main.c ****   Joint2Set(joint2);
 540:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 541:Core/Src/main.c ****   Joint3Set(joint3);
 542:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 543:Core/Src/main.c ****   Joint4Set(joint4);
 544:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 545:Core/Src/main.c ****   Joint5Set(joint5);
 546:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 547:Core/Src/main.c ****   ActuatorSet(actuator);
 548:Core/Src/main.c **** }
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** void Joint1Set(int theta){
 274              		.loc 1 550 26 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 551:Core/Src/main.c ****   //Set joint
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** }
 279              		.loc 1 553 1 view .LVU39
 280 0000 7047     		bx	lr
 281              		.cfi_endproc
 282              	.LFE146:
 284              		.section	.rodata.Joint2Set.str1.4,"aMS",%progbits,1
 285              		.align	2
 286              	.LC0:
 287 0000 25640D0A 		.ascii	"%d\015\012\000"
 287      00
 288              		.section	.text.Joint2Set,"ax",%progbits
 289              		.align	1
 290              		.global	Joint2Set
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	Joint2Set:
 296              	.LVL26:
 297              	.LFB147:
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** void Joint2Set(int theta){
 298              		.loc 1 555 26 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 256
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 555 26 is_stmt 0 view .LVU41
 303 0000 30B5     		push	{r4, r5, lr}
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 16


 306              		.cfi_offset 4, -12
 307              		.cfi_offset 5, -8
 308              		.cfi_offset 14, -4
 309 0002 C1B0     		sub	sp, sp, #260
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 272
 312 0004 0346     		mov	r3, r0
 556:Core/Src/main.c ****   printf_usart3("%d\r\n", theta);
 313              		.loc 1 556 3 is_stmt 1 view .LVU42
 314              	.LBB4:
 315              		.loc 1 556 3 view .LVU43
 316              		.loc 1 556 3 view .LVU44
 317 0006 094A     		ldr	r2, .L24
 318 0008 4FF48071 		mov	r1, #256
 319 000c 6846     		mov	r0, sp
 320              	.LVL27:
 321              		.loc 1 556 3 is_stmt 0 view .LVU45
 322 000e FFF7FEFF 		bl	snprintf
 323              	.LVL28:
 324              		.loc 1 556 3 view .LVU46
 325 0012 0546     		mov	r5, r0
 326              	.LVL29:
 327              		.loc 1 556 3 is_stmt 1 discriminator 1 view .LVU47
 328              	.LBB5:
 329              		.loc 1 556 3 discriminator 1 view .LVU48
 330              		.loc 1 556 3 is_stmt 0 discriminator 1 view .LVU49
 331 0014 0024     		movs	r4, #0
 332              		.loc 1 556 3 view .LVU50
 333 0016 04E0     		b	.L21
 334              	.LVL30:
 335              	.L22:
 336              		.loc 1 556 3 is_stmt 1 discriminator 3 view .LVU51
 337 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 338 001c FFF7FEFF 		bl	__io_putchar_usart3
 339              	.LVL31:
 340              		.loc 1 556 3 discriminator 3 view .LVU52
 341 0020 0134     		adds	r4, r4, #1
 342              	.LVL32:
 343              	.L21:
 344              		.loc 1 556 3 discriminator 2 view .LVU53
 345 0022 AC42     		cmp	r4, r5
 346 0024 F8DB     		blt	.L22
 347              	.LBE5:
 348              	.LBE4:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** }
 349              		.loc 1 558 1 is_stmt 0 view .LVU54
 350 0026 41B0     		add	sp, sp, #260
 351              	.LCFI12:
 352              		.cfi_def_cfa_offset 12
 353              		@ sp needed
 354 0028 30BD     		pop	{r4, r5, pc}
 355              	.LVL33:
 356              	.L25:
 357              		.loc 1 558 1 view .LVU55
 358 002a 00BF     		.align	2
 359              	.L24:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 17


 360 002c 00000000 		.word	.LC0
 361              		.cfi_endproc
 362              	.LFE147:
 364              		.section	.text.Joint3Set,"ax",%progbits
 365              		.align	1
 366              		.global	Joint3Set
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 371              	Joint3Set:
 372              	.LVL34:
 373              	.LFB148:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** void Joint3Set(int theta){
 374              		.loc 1 560 26 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 256
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		.loc 1 560 26 is_stmt 0 view .LVU57
 379 0000 30B5     		push	{r4, r5, lr}
 380              	.LCFI13:
 381              		.cfi_def_cfa_offset 12
 382              		.cfi_offset 4, -12
 383              		.cfi_offset 5, -8
 384              		.cfi_offset 14, -4
 385 0002 C1B0     		sub	sp, sp, #260
 386              	.LCFI14:
 387              		.cfi_def_cfa_offset 272
 388 0004 0346     		mov	r3, r0
 561:Core/Src/main.c ****   printf_usart6("%d\r\n", theta);
 389              		.loc 1 561 3 is_stmt 1 view .LVU58
 390              	.LBB6:
 391              		.loc 1 561 3 view .LVU59
 392              		.loc 1 561 3 view .LVU60
 393 0006 094A     		ldr	r2, .L30
 394 0008 4FF48071 		mov	r1, #256
 395 000c 6846     		mov	r0, sp
 396              	.LVL35:
 397              		.loc 1 561 3 is_stmt 0 view .LVU61
 398 000e FFF7FEFF 		bl	snprintf
 399              	.LVL36:
 400              		.loc 1 561 3 view .LVU62
 401 0012 0546     		mov	r5, r0
 402              	.LVL37:
 403              		.loc 1 561 3 is_stmt 1 discriminator 1 view .LVU63
 404              	.LBB7:
 405              		.loc 1 561 3 discriminator 1 view .LVU64
 406              		.loc 1 561 3 is_stmt 0 discriminator 1 view .LVU65
 407 0014 0024     		movs	r4, #0
 408              		.loc 1 561 3 view .LVU66
 409 0016 04E0     		b	.L27
 410              	.LVL38:
 411              	.L28:
 412              		.loc 1 561 3 is_stmt 1 discriminator 3 view .LVU67
 413 0018 1DF80400 		ldrb	r0, [sp, r4]	@ zero_extendqisi2
 414 001c FFF7FEFF 		bl	__io_putchar_usart6
 415              	.LVL39:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 18


 416              		.loc 1 561 3 discriminator 3 view .LVU68
 417 0020 0134     		adds	r4, r4, #1
 418              	.LVL40:
 419              	.L27:
 420              		.loc 1 561 3 discriminator 2 view .LVU69
 421 0022 AC42     		cmp	r4, r5
 422 0024 F8DB     		blt	.L28
 423              	.LBE7:
 424              	.LBE6:
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** }
 425              		.loc 1 563 1 is_stmt 0 view .LVU70
 426 0026 41B0     		add	sp, sp, #260
 427              	.LCFI15:
 428              		.cfi_def_cfa_offset 12
 429              		@ sp needed
 430 0028 30BD     		pop	{r4, r5, pc}
 431              	.LVL41:
 432              	.L31:
 433              		.loc 1 563 1 view .LVU71
 434 002a 00BF     		.align	2
 435              	.L30:
 436 002c 00000000 		.word	.LC0
 437              		.cfi_endproc
 438              	.LFE148:
 440              		.section	.text.HomeSet,"ax",%progbits
 441              		.align	1
 442              		.global	HomeSet
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	HomeSet:
 448              	.LFB145:
 534:Core/Src/main.c ****   //Set all joints to home
 449              		.loc 1 534 15 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 10B5     		push	{r4, lr}
 454              	.LCFI16:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 536:Core/Src/main.c ****   Joint1Set(joint1);
 458              		.loc 1 536 3 view .LVU73
 536:Core/Src/main.c ****   Joint1Set(joint1);
 459              		.loc 1 536 10 is_stmt 0 view .LVU74
 460 0002 0024     		movs	r4, #0
 461 0004 094B     		ldr	r3, .L34
 462 0006 1C60     		str	r4, [r3]
 537:Core/Src/main.c ****   joint2 = JOINT2_HOME;
 463              		.loc 1 537 3 is_stmt 1 view .LVU75
 538:Core/Src/main.c ****   Joint2Set(joint2);
 464              		.loc 1 538 3 view .LVU76
 538:Core/Src/main.c ****   Joint2Set(joint2);
 465              		.loc 1 538 10 is_stmt 0 view .LVU77
 466 0008 2D20     		movs	r0, #45
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 19


 467 000a 094B     		ldr	r3, .L34+4
 468 000c 1860     		str	r0, [r3]
 539:Core/Src/main.c ****   joint3 = JOINT3_HOME;
 469              		.loc 1 539 3 is_stmt 1 view .LVU78
 470 000e FFF7FEFF 		bl	Joint2Set
 471              	.LVL42:
 540:Core/Src/main.c ****   Joint3Set(joint3);
 472              		.loc 1 540 3 view .LVU79
 540:Core/Src/main.c ****   Joint3Set(joint3);
 473              		.loc 1 540 10 is_stmt 0 view .LVU80
 474 0012 084B     		ldr	r3, .L34+8
 475 0014 1C60     		str	r4, [r3]
 541:Core/Src/main.c ****   joint4 = JOINT4_HOME;
 476              		.loc 1 541 3 is_stmt 1 view .LVU81
 477 0016 2046     		mov	r0, r4
 478 0018 FFF7FEFF 		bl	Joint3Set
 479              	.LVL43:
 542:Core/Src/main.c ****   Joint4Set(joint4);
 480              		.loc 1 542 3 view .LVU82
 542:Core/Src/main.c ****   Joint4Set(joint4);
 481              		.loc 1 542 10 is_stmt 0 view .LVU83
 482 001c 064B     		ldr	r3, .L34+12
 483 001e 1C60     		str	r4, [r3]
 543:Core/Src/main.c ****   joint5 = JOINT5_HOME;
 484              		.loc 1 543 3 is_stmt 1 view .LVU84
 544:Core/Src/main.c ****   Joint5Set(joint5);
 485              		.loc 1 544 3 view .LVU85
 544:Core/Src/main.c ****   Joint5Set(joint5);
 486              		.loc 1 544 10 is_stmt 0 view .LVU86
 487 0020 064B     		ldr	r3, .L34+16
 488 0022 1C60     		str	r4, [r3]
 545:Core/Src/main.c ****   actuator = ACTUATOR_HOME;
 489              		.loc 1 545 3 is_stmt 1 view .LVU87
 546:Core/Src/main.c ****   ActuatorSet(actuator);
 490              		.loc 1 546 3 view .LVU88
 546:Core/Src/main.c ****   ActuatorSet(actuator);
 491              		.loc 1 546 12 is_stmt 0 view .LVU89
 492 0024 064B     		ldr	r3, .L34+20
 493 0026 1C60     		str	r4, [r3]
 547:Core/Src/main.c **** }
 494              		.loc 1 547 3 is_stmt 1 view .LVU90
 548:Core/Src/main.c **** 
 495              		.loc 1 548 1 is_stmt 0 view .LVU91
 496 0028 10BD     		pop	{r4, pc}
 497              	.L35:
 498 002a 00BF     		.align	2
 499              	.L34:
 500 002c 00000000 		.word	joint1
 501 0030 00000000 		.word	joint2
 502 0034 00000000 		.word	joint3
 503 0038 00000000 		.word	joint4
 504 003c 00000000 		.word	joint5
 505 0040 00000000 		.word	actuator
 506              		.cfi_endproc
 507              	.LFE145:
 509              		.section	.rodata.ProcessReceivedString.str1.4,"aMS",%progbits,1
 510              		.align	2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 20


 511              	.LC1:
 512 0000 73657400 		.ascii	"set\000"
 513              		.align	2
 514              	.LC2:
 515 0004 2533642D 		.ascii	"%3d-%3d-%3d-%3d-%3d-%3d\000"
 515      2533642D 
 515      2533642D 
 515      2533642D 
 515      2533642D 
 516              		.align	2
 517              	.LC3:
 518 001c 52656365 		.ascii	"Received numbers: %d %d %d %d %d %d\015\012\000"
 518      69766564 
 518      206E756D 
 518      62657273 
 518      3A202564 
 519 0042 0000     		.align	2
 520              	.LC4:
 521 0044 496E7661 		.ascii	"Invalid format!\015\000"
 521      6C696420 
 521      666F726D 
 521      6174210D 
 521      00
 522 0055 000000   		.align	2
 523              	.LC5:
 524 0058 6A6F696E 		.ascii	"joint1\000"
 524      743100
 525 005f 00       		.align	2
 526              	.LC6:
 527 0060 25336400 		.ascii	"%3d\000"
 528              		.align	2
 529              	.LC7:
 530 0064 4A6F696E 		.ascii	"Joint1 set: %d\015\012\000"
 530      74312073 
 530      65743A20 
 530      25640D0A 
 530      00
 531 0075 000000   		.align	2
 532              	.LC8:
 533 0078 6A6F696E 		.ascii	"joint2\000"
 533      743200
 534 007f 00       		.align	2
 535              	.LC9:
 536 0080 4A6F696E 		.ascii	"Joint2 set: %d\015\012\000"
 536      74322073 
 536      65743A20 
 536      25640D0A 
 536      00
 537 0091 000000   		.align	2
 538              	.LC10:
 539 0094 6A6F696E 		.ascii	"joint3\000"
 539      743300
 540 009b 00       		.align	2
 541              	.LC11:
 542 009c 4A6F696E 		.ascii	"Joint3 set: %d\015\012\000"
 542      74332073 
 542      65743A20 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 21


 542      25640D0A 
 542      00
 543 00ad 000000   		.align	2
 544              	.LC12:
 545 00b0 6A6F696E 		.ascii	"joint4\000"
 545      743400
 546 00b7 00       		.align	2
 547              	.LC13:
 548 00b8 4A6F696E 		.ascii	"Joint4 set: %d\015\012\000"
 548      74342073 
 548      65743A20 
 548      25640D0A 
 548      00
 549 00c9 000000   		.align	2
 550              	.LC14:
 551 00cc 6A6F696E 		.ascii	"joint5\000"
 551      743500
 552 00d3 00       		.align	2
 553              	.LC15:
 554 00d4 4A6F696E 		.ascii	"Joint5 set: %d\015\012\000"
 554      74352073 
 554      65743A20 
 554      25640D0A 
 554      00
 555 00e5 000000   		.align	2
 556              	.LC16:
 557 00e8 61637475 		.ascii	"actuator\000"
 557      61746F72 
 557      00
 558 00f1 000000   		.align	2
 559              	.LC17:
 560 00f4 41637475 		.ascii	"Actuator set: %d\015\012\000"
 560      61746F72 
 560      20736574 
 560      3A202564 
 560      0D0A00
 561 0107 00       		.align	2
 562              	.LC18:
 563 0108 686F6D65 		.ascii	"home\000"
 563      00
 564 010d 000000   		.align	2
 565              	.LC19:
 566 0110 53657420 		.ascii	"Set all joints home\015\000"
 566      616C6C20 
 566      6A6F696E 
 566      74732068 
 566      6F6D650D 
 567 0125 000000   		.align	2
 568              	.LC20:
 569 0128 666C6173 		.ascii	"flash\000"
 569      6800
 570 012e 0000     		.align	2
 571              	.LC21:
 572 0130 4C454473 		.ascii	"LEDs Toggled\015\000"
 572      20546F67 
 572      676C6564 
 572      0D00
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 22


 573 013e 0000     		.align	2
 574              	.LC22:
 575 0140 7072696E 		.ascii	"print\000"
 575      7400
 576 0146 0000     		.align	2
 577              	.LC23:
 578 0148 4A6F696E 		.ascii	"Joint1: %d\015\012\000"
 578      74313A20 
 578      25640D0A 
 578      00
 579 0155 000000   		.align	2
 580              	.LC24:
 581 0158 4A6F696E 		.ascii	"Joint2: %d\015\012\000"
 581      74323A20 
 581      25640D0A 
 581      00
 582 0165 000000   		.align	2
 583              	.LC25:
 584 0168 4A6F696E 		.ascii	"Joint3: %d\015\012\000"
 584      74333A20 
 584      25640D0A 
 584      00
 585 0175 000000   		.align	2
 586              	.LC26:
 587 0178 4A6F696E 		.ascii	"Joint4: %d\015\012\000"
 587      74343A20 
 587      25640D0A 
 587      00
 588 0185 000000   		.align	2
 589              	.LC27:
 590 0188 4A6F696E 		.ascii	"Joint5: %d\015\012\000"
 590      74353A20 
 590      25640D0A 
 590      00
 591 0195 000000   		.align	2
 592              	.LC28:
 593 0198 41637475 		.ascii	"Actuator: %d\015\012\000"
 593      61746F72 
 593      3A202564 
 593      0D0A00
 594 01a7 00       		.align	2
 595              	.LC29:
 596 01a8 52656365 		.ascii	"Received: %s\015\012\000"
 596      69766564 
 596      3A202573 
 596      0D0A00
 597              		.section	.text.ProcessReceivedString,"ax",%progbits
 598              		.align	1
 599              		.global	ProcessReceivedString
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	ProcessReceivedString:
 605              	.LVL44:
 606              	.LFB143:
 302:Core/Src/main.c ****     // Check if the string starts with "set"
 607              		.loc 1 302 1 is_stmt 1 view -0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 23


 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 302:Core/Src/main.c ****     // Check if the string starts with "set"
 611              		.loc 1 302 1 is_stmt 0 view .LVU93
 612 0000 10B5     		push	{r4, lr}
 613              	.LCFI17:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617 0002 84B0     		sub	sp, sp, #16
 618              	.LCFI18:
 619              		.cfi_def_cfa_offset 24
 620 0004 0446     		mov	r4, r0
 304:Core/Src/main.c ****     {
 621              		.loc 1 304 5 is_stmt 1 view .LVU94
 304:Core/Src/main.c ****     {
 622              		.loc 1 304 9 is_stmt 0 view .LVU95
 623 0006 0322     		movs	r2, #3
 624 0008 9849     		ldr	r1, .L79
 625 000a FFF7FEFF 		bl	strncmp
 626              	.LVL45:
 304:Core/Src/main.c ****     {
 627              		.loc 1 304 8 discriminator 1 view .LVU96
 628 000e 0028     		cmp	r0, #0
 629 0010 66D0     		beq	.L61
 350:Core/Src/main.c ****     {
 630              		.loc 1 350 10 is_stmt 1 view .LVU97
 350:Core/Src/main.c ****     {
 631              		.loc 1 350 14 is_stmt 0 view .LVU98
 632 0012 0622     		movs	r2, #6
 633 0014 9649     		ldr	r1, .L79+4
 634 0016 2046     		mov	r0, r4
 635 0018 FFF7FEFF 		bl	strncmp
 636              	.LVL46:
 350:Core/Src/main.c ****     {
 637              		.loc 1 350 13 discriminator 1 view .LVU99
 638 001c 0028     		cmp	r0, #0
 639 001e 00F0BC80 		beq	.L62
 371:Core/Src/main.c ****     {
 640              		.loc 1 371 10 is_stmt 1 view .LVU100
 371:Core/Src/main.c ****     {
 641              		.loc 1 371 14 is_stmt 0 view .LVU101
 642 0022 0622     		movs	r2, #6
 643 0024 9349     		ldr	r1, .L79+8
 644 0026 2046     		mov	r0, r4
 645 0028 FFF7FEFF 		bl	strncmp
 646              	.LVL47:
 371:Core/Src/main.c ****     {
 647              		.loc 1 371 13 discriminator 1 view .LVU102
 648 002c 0028     		cmp	r0, #0
 649 002e 00F0CC80 		beq	.L63
 392:Core/Src/main.c ****     {
 650              		.loc 1 392 10 is_stmt 1 view .LVU103
 392:Core/Src/main.c ****     {
 651              		.loc 1 392 14 is_stmt 0 view .LVU104
 652 0032 0622     		movs	r2, #6
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 24


 653 0034 9049     		ldr	r1, .L79+12
 654 0036 2046     		mov	r0, r4
 655 0038 FFF7FEFF 		bl	strncmp
 656              	.LVL48:
 392:Core/Src/main.c ****     {
 657              		.loc 1 392 13 discriminator 1 view .LVU105
 658 003c 0028     		cmp	r0, #0
 659 003e 00F0DF80 		beq	.L64
 413:Core/Src/main.c ****     {
 660              		.loc 1 413 10 is_stmt 1 view .LVU106
 413:Core/Src/main.c ****     {
 661              		.loc 1 413 14 is_stmt 0 view .LVU107
 662 0042 0622     		movs	r2, #6
 663 0044 8D49     		ldr	r1, .L79+16
 664 0046 2046     		mov	r0, r4
 665 0048 FFF7FEFF 		bl	strncmp
 666              	.LVL49:
 413:Core/Src/main.c ****     {
 667              		.loc 1 413 13 discriminator 1 view .LVU108
 668 004c 0028     		cmp	r0, #0
 669 004e 00F0F380 		beq	.L65
 434:Core/Src/main.c ****     {
 670              		.loc 1 434 10 is_stmt 1 view .LVU109
 434:Core/Src/main.c ****     {
 671              		.loc 1 434 14 is_stmt 0 view .LVU110
 672 0052 0622     		movs	r2, #6
 673 0054 8A49     		ldr	r1, .L79+20
 674 0056 2046     		mov	r0, r4
 675 0058 FFF7FEFF 		bl	strncmp
 676              	.LVL50:
 434:Core/Src/main.c ****     {
 677              		.loc 1 434 13 discriminator 1 view .LVU111
 678 005c 0028     		cmp	r0, #0
 679 005e 00F04D81 		beq	.L66
 455:Core/Src/main.c ****     {
 680              		.loc 1 455 10 is_stmt 1 view .LVU112
 455:Core/Src/main.c ****     {
 681              		.loc 1 455 14 is_stmt 0 view .LVU113
 682 0062 0822     		movs	r2, #8
 683 0064 8749     		ldr	r1, .L79+24
 684 0066 2046     		mov	r0, r4
 685 0068 FFF7FEFF 		bl	strncmp
 686              	.LVL51:
 455:Core/Src/main.c ****     {
 687              		.loc 1 455 13 discriminator 1 view .LVU114
 688 006c 0028     		cmp	r0, #0
 689 006e 00F05E81 		beq	.L67
 476:Core/Src/main.c ****     {
 690              		.loc 1 476 10 is_stmt 1 view .LVU115
 476:Core/Src/main.c ****     {
 691              		.loc 1 476 14 is_stmt 0 view .LVU116
 692 0072 0422     		movs	r2, #4
 693 0074 8449     		ldr	r1, .L79+28
 694 0076 2046     		mov	r0, r4
 695 0078 FFF7FEFF 		bl	strncmp
 696              	.LVL52:
 476:Core/Src/main.c ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 25


 697              		.loc 1 476 13 discriminator 1 view .LVU117
 698 007c 0028     		cmp	r0, #0
 699 007e 00F06881 		beq	.L68
 486:Core/Src/main.c ****     {
 700              		.loc 1 486 10 is_stmt 1 view .LVU118
 486:Core/Src/main.c ****     {
 701              		.loc 1 486 14 is_stmt 0 view .LVU119
 702 0082 0522     		movs	r2, #5
 703 0084 8149     		ldr	r1, .L79+32
 704 0086 2046     		mov	r0, r4
 705 0088 FFF7FEFF 		bl	strncmp
 706              	.LVL53:
 486:Core/Src/main.c ****     {
 707              		.loc 1 486 13 discriminator 1 view .LVU120
 708 008c 0028     		cmp	r0, #0
 709 008e 00F06681 		beq	.L69
 496:Core/Src/main.c ****     {
 710              		.loc 1 496 10 is_stmt 1 view .LVU121
 496:Core/Src/main.c ****     {
 711              		.loc 1 496 14 is_stmt 0 view .LVU122
 712 0092 0522     		movs	r2, #5
 713 0094 7E49     		ldr	r1, .L79+36
 714 0096 2046     		mov	r0, r4
 715 0098 FFF7FEFF 		bl	strncmp
 716              	.LVL54:
 496:Core/Src/main.c ****     {
 717              		.loc 1 496 13 discriminator 1 view .LVU123
 718 009c 0028     		cmp	r0, #0
 719 009e 40F06881 		bne	.L59
 498:Core/Src/main.c ****        printf("Joint2: %d\r\n", joint2);
 720              		.loc 1 498 8 is_stmt 1 view .LVU124
 721 00a2 7C4B     		ldr	r3, .L79+40
 722 00a4 1968     		ldr	r1, [r3]
 723 00a6 7C48     		ldr	r0, .L79+44
 724 00a8 FFF7FEFF 		bl	printf
 725              	.LVL55:
 499:Core/Src/main.c ****        printf("Joint3: %d\r\n", joint3);
 726              		.loc 1 499 8 view .LVU125
 727 00ac 7B4B     		ldr	r3, .L79+48
 728 00ae 1968     		ldr	r1, [r3]
 729 00b0 7B48     		ldr	r0, .L79+52
 730 00b2 FFF7FEFF 		bl	printf
 731              	.LVL56:
 500:Core/Src/main.c ****        printf("Joint4: %d\r\n", joint4);
 732              		.loc 1 500 8 view .LVU126
 733 00b6 7B4B     		ldr	r3, .L79+56
 734 00b8 1968     		ldr	r1, [r3]
 735 00ba 7B48     		ldr	r0, .L79+60
 736 00bc FFF7FEFF 		bl	printf
 737              	.LVL57:
 501:Core/Src/main.c ****        printf("Joint5: %d\r\n", joint5);
 738              		.loc 1 501 8 view .LVU127
 739 00c0 7A4B     		ldr	r3, .L79+64
 740 00c2 1968     		ldr	r1, [r3]
 741 00c4 7A48     		ldr	r0, .L79+68
 742 00c6 FFF7FEFF 		bl	printf
 743              	.LVL58:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 26


 502:Core/Src/main.c ****        printf("Actuator: %d\r\n", actuator);
 744              		.loc 1 502 8 view .LVU128
 745 00ca 7A4B     		ldr	r3, .L79+72
 746 00cc 1968     		ldr	r1, [r3]
 747 00ce 7A48     		ldr	r0, .L79+76
 748 00d0 FFF7FEFF 		bl	printf
 749              	.LVL59:
 503:Core/Src/main.c ****     }
 750              		.loc 1 503 8 view .LVU129
 751 00d4 794B     		ldr	r3, .L79+80
 752 00d6 1968     		ldr	r1, [r3]
 753 00d8 7948     		ldr	r0, .L79+84
 754 00da FFF7FEFF 		bl	printf
 755              	.LVL60:
 756 00de 12E0     		b	.L36
 757              	.L61:
 307:Core/Src/main.c **** 
 758              		.loc 1 307 9 view .LVU130
 759              	.LVL61:
 310:Core/Src/main.c ****         {
 760              		.loc 1 310 9 view .LVU131
 310:Core/Src/main.c ****         {
 761              		.loc 1 310 13 is_stmt 0 view .LVU132
 762 00e0 764B     		ldr	r3, .L79+80
 763 00e2 0393     		str	r3, [sp, #12]
 764 00e4 734B     		ldr	r3, .L79+72
 765 00e6 0293     		str	r3, [sp, #8]
 766 00e8 704B     		ldr	r3, .L79+64
 767 00ea 0193     		str	r3, [sp, #4]
 768 00ec 6D4B     		ldr	r3, .L79+56
 769 00ee 0093     		str	r3, [sp]
 770 00f0 6A4B     		ldr	r3, .L79+48
 771 00f2 684A     		ldr	r2, .L79+40
 772 00f4 7349     		ldr	r1, .L79+88
 773 00f6 201D     		adds	r0, r4, #4
 774              	.LVL62:
 310:Core/Src/main.c ****         {
 775              		.loc 1 310 13 view .LVU133
 776 00f8 FFF7FEFF 		bl	sscanf
 777              	.LVL63:
 310:Core/Src/main.c ****         {
 778              		.loc 1 310 12 discriminator 1 view .LVU134
 779 00fc 0628     		cmp	r0, #6
 780 00fe 04D0     		beq	.L70
 346:Core/Src/main.c ****         }
 781              		.loc 1 346 13 is_stmt 1 view .LVU135
 782 0100 7148     		ldr	r0, .L79+92
 783 0102 FFF7FEFF 		bl	puts
 784              	.LVL64:
 785              	.L36:
 511:Core/Src/main.c **** 
 786              		.loc 1 511 1 is_stmt 0 view .LVU136
 787 0106 04B0     		add	sp, sp, #16
 788              	.LCFI19:
 789              		.cfi_remember_state
 790              		.cfi_def_cfa_offset 8
 791              		@ sp needed
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 27


 792 0108 10BD     		pop	{r4, pc}
 793              	.LVL65:
 794              	.L70:
 795              	.LCFI20:
 796              		.cfi_restore_state
 313:Core/Src/main.c **** 
 797              		.loc 1 313 13 is_stmt 1 view .LVU137
 798 010a 624C     		ldr	r4, .L79+40
 799              	.LVL66:
 313:Core/Src/main.c **** 
 800              		.loc 1 313 13 is_stmt 0 view .LVU138
 801 010c 6B4B     		ldr	r3, .L79+80
 802 010e 1B68     		ldr	r3, [r3]
 803 0110 0293     		str	r3, [sp, #8]
 804 0112 684B     		ldr	r3, .L79+72
 805 0114 1B68     		ldr	r3, [r3]
 806 0116 0193     		str	r3, [sp, #4]
 807 0118 644B     		ldr	r3, .L79+64
 808 011a 1B68     		ldr	r3, [r3]
 809 011c 0093     		str	r3, [sp]
 810 011e 614B     		ldr	r3, .L79+56
 811 0120 1B68     		ldr	r3, [r3]
 812 0122 5E4A     		ldr	r2, .L79+48
 813 0124 1268     		ldr	r2, [r2]
 814 0126 2168     		ldr	r1, [r4]
 815 0128 6848     		ldr	r0, .L79+96
 816 012a FFF7FEFF 		bl	printf
 817              	.LVL67:
 316:Core/Src/main.c ****                 // send to joint
 818              		.loc 1 316 13 is_stmt 1 view .LVU139
 316:Core/Src/main.c ****                 // send to joint
 819              		.loc 1 316 24 is_stmt 0 view .LVU140
 820 012e 2368     		ldr	r3, [r4]
 821 0130 674A     		ldr	r2, .L79+100
 822 0132 1268     		ldr	r2, [r2]
 316:Core/Src/main.c ****                 // send to joint
 823              		.loc 1 316 16 view .LVU141
 824 0134 9342     		cmp	r3, r2
 825 0136 01D0     		beq	.L39
 826              	.LBB8:
 318:Core/Src/main.c ****                 Joint1Set(joint1);
 827              		.loc 1 318 17 is_stmt 1 view .LVU142
 318:Core/Src/main.c ****                 Joint1Set(joint1);
 828              		.loc 1 318 29 is_stmt 0 view .LVU143
 829 0138 654A     		ldr	r2, .L79+100
 830 013a 1360     		str	r3, [r2]
 319:Core/Src/main.c ****             }
 831              		.loc 1 319 17 is_stmt 1 view .LVU144
 832              	.L39:
 833              	.LBE8:
 321:Core/Src/main.c ****                 // send to joint
 834              		.loc 1 321 13 view .LVU145
 321:Core/Src/main.c ****                 // send to joint
 835              		.loc 1 321 24 is_stmt 0 view .LVU146
 836 013c 574B     		ldr	r3, .L79+48
 837 013e 1868     		ldr	r0, [r3]
 838 0140 644B     		ldr	r3, .L79+104
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 28


 839 0142 1B68     		ldr	r3, [r3]
 321:Core/Src/main.c ****                 // send to joint
 840              		.loc 1 321 16 view .LVU147
 841 0144 9842     		cmp	r0, r3
 842 0146 1ED1     		bne	.L71
 843              	.L40:
 326:Core/Src/main.c ****                 // send to joint
 844              		.loc 1 326 13 is_stmt 1 view .LVU148
 326:Core/Src/main.c ****                 // send to joint
 845              		.loc 1 326 24 is_stmt 0 view .LVU149
 846 0148 564B     		ldr	r3, .L79+56
 847 014a 1868     		ldr	r0, [r3]
 848 014c 624B     		ldr	r3, .L79+108
 849 014e 1B68     		ldr	r3, [r3]
 326:Core/Src/main.c ****                 // send to joint
 850              		.loc 1 326 16 view .LVU150
 851 0150 9842     		cmp	r0, r3
 852 0152 1DD1     		bne	.L72
 853              	.L41:
 331:Core/Src/main.c ****                 // send to joint
 854              		.loc 1 331 13 is_stmt 1 view .LVU151
 331:Core/Src/main.c ****                 // send to joint
 855              		.loc 1 331 24 is_stmt 0 view .LVU152
 856 0154 554B     		ldr	r3, .L79+64
 857 0156 1B68     		ldr	r3, [r3]
 858 0158 604A     		ldr	r2, .L79+112
 859 015a 1268     		ldr	r2, [r2]
 331:Core/Src/main.c ****                 // send to joint
 860              		.loc 1 331 16 view .LVU153
 861 015c 9342     		cmp	r3, r2
 862 015e 01D0     		beq	.L42
 333:Core/Src/main.c ****             }
 863              		.loc 1 333 17 is_stmt 1 view .LVU154
 333:Core/Src/main.c ****             }
 864              		.loc 1 333 29 is_stmt 0 view .LVU155
 865 0160 5E4A     		ldr	r2, .L79+112
 866 0162 1360     		str	r3, [r2]
 867              	.L42:
 335:Core/Src/main.c ****                 // send to joint
 868              		.loc 1 335 13 is_stmt 1 view .LVU156
 335:Core/Src/main.c ****                 // send to joint
 869              		.loc 1 335 24 is_stmt 0 view .LVU157
 870 0164 534B     		ldr	r3, .L79+72
 871 0166 1B68     		ldr	r3, [r3]
 872 0168 5D4A     		ldr	r2, .L79+116
 873 016a 1268     		ldr	r2, [r2]
 335:Core/Src/main.c ****                 // send to joint
 874              		.loc 1 335 16 view .LVU158
 875 016c 9342     		cmp	r3, r2
 876 016e 01D0     		beq	.L43
 337:Core/Src/main.c ****             }
 877              		.loc 1 337 17 is_stmt 1 view .LVU159
 337:Core/Src/main.c ****             }
 878              		.loc 1 337 29 is_stmt 0 view .LVU160
 879 0170 5B4A     		ldr	r2, .L79+116
 880 0172 1360     		str	r3, [r2]
 881              	.L43:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 29


 339:Core/Src/main.c ****                 // send to actuator
 882              		.loc 1 339 13 is_stmt 1 view .LVU161
 339:Core/Src/main.c ****                 // send to actuator
 883              		.loc 1 339 26 is_stmt 0 view .LVU162
 884 0174 514B     		ldr	r3, .L79+80
 885 0176 1B68     		ldr	r3, [r3]
 886 0178 5A4A     		ldr	r2, .L79+120
 887 017a 1268     		ldr	r2, [r2]
 339:Core/Src/main.c ****                 // send to actuator
 888              		.loc 1 339 16 view .LVU163
 889 017c 9342     		cmp	r3, r2
 890 017e C2D0     		beq	.L36
 341:Core/Src/main.c ****             }
 891              		.loc 1 341 17 is_stmt 1 view .LVU164
 341:Core/Src/main.c ****             }
 892              		.loc 1 341 31 is_stmt 0 view .LVU165
 893 0180 584A     		ldr	r2, .L79+120
 894 0182 1360     		str	r3, [r2]
 895 0184 BFE7     		b	.L36
 896              	.L71:
 897              	.LBB9:
 323:Core/Src/main.c ****                 Joint2Set(joint2);
 898              		.loc 1 323 17 is_stmt 1 view .LVU166
 323:Core/Src/main.c ****                 Joint2Set(joint2);
 899              		.loc 1 323 29 is_stmt 0 view .LVU167
 900 0186 534B     		ldr	r3, .L79+104
 901 0188 1860     		str	r0, [r3]
 324:Core/Src/main.c ****             }
 902              		.loc 1 324 17 is_stmt 1 view .LVU168
 903 018a FFF7FEFF 		bl	Joint2Set
 904              	.LVL68:
 905 018e DBE7     		b	.L40
 906              	.L72:
 907              	.LBE9:
 908              	.LBB10:
 328:Core/Src/main.c ****                 Joint3Set(joint3);
 909              		.loc 1 328 17 view .LVU169
 328:Core/Src/main.c ****                 Joint3Set(joint3);
 910              		.loc 1 328 29 is_stmt 0 view .LVU170
 911 0190 514B     		ldr	r3, .L79+108
 912 0192 1860     		str	r0, [r3]
 329:Core/Src/main.c ****             }
 913              		.loc 1 329 17 is_stmt 1 view .LVU171
 914 0194 FFF7FEFF 		bl	Joint3Set
 915              	.LVL69:
 916 0198 DCE7     		b	.L41
 917              	.LVL70:
 918              	.L62:
 329:Core/Src/main.c ****             }
 919              		.loc 1 329 17 is_stmt 0 view .LVU172
 920              	.LBE10:
 352:Core/Src/main.c **** 
 921              		.loc 1 352 9 is_stmt 1 view .LVU173
 354:Core/Src/main.c ****         {
 922              		.loc 1 354 9 view .LVU174
 354:Core/Src/main.c ****         {
 923              		.loc 1 354 13 is_stmt 0 view .LVU175
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 30


 924 019a 3E4A     		ldr	r2, .L79+40
 925 019c 5249     		ldr	r1, .L79+124
 926 019e E01D     		adds	r0, r4, #7
 927              	.LVL71:
 354:Core/Src/main.c ****         {
 928              		.loc 1 354 13 view .LVU176
 929 01a0 FFF7FEFF 		bl	sscanf
 930              	.LVL72:
 354:Core/Src/main.c ****         {
 931              		.loc 1 354 12 discriminator 1 view .LVU177
 932 01a4 0128     		cmp	r0, #1
 933 01a6 03D0     		beq	.L73
 366:Core/Src/main.c ****         }
 934              		.loc 1 366 13 is_stmt 1 view .LVU178
 935 01a8 4748     		ldr	r0, .L79+92
 936 01aa FFF7FEFF 		bl	puts
 937              	.LVL73:
 938 01ae AAE7     		b	.L36
 939              	.L73:
 357:Core/Src/main.c **** 
 940              		.loc 1 357 13 view .LVU179
 941 01b0 384C     		ldr	r4, .L79+40
 942              	.LVL74:
 357:Core/Src/main.c **** 
 943              		.loc 1 357 13 is_stmt 0 view .LVU180
 944 01b2 2168     		ldr	r1, [r4]
 945 01b4 4D48     		ldr	r0, .L79+128
 946 01b6 FFF7FEFF 		bl	printf
 947              	.LVL75:
 359:Core/Src/main.c ****                 Joint1Set(joint1);
 948              		.loc 1 359 13 is_stmt 1 view .LVU181
 359:Core/Src/main.c ****                 Joint1Set(joint1);
 949              		.loc 1 359 24 is_stmt 0 view .LVU182
 950 01ba 2368     		ldr	r3, [r4]
 951 01bc 444A     		ldr	r2, .L79+100
 952 01be 1268     		ldr	r2, [r2]
 359:Core/Src/main.c ****                 Joint1Set(joint1);
 953              		.loc 1 359 16 view .LVU183
 954 01c0 9342     		cmp	r3, r2
 955 01c2 A0D0     		beq	.L36
 956              	.LBB11:
 360:Core/Src/main.c ****                 prev_joint1 = joint1;
 957              		.loc 1 360 17 is_stmt 1 view .LVU184
 361:Core/Src/main.c ****             }
 958              		.loc 1 361 17 view .LVU185
 361:Core/Src/main.c ****             }
 959              		.loc 1 361 29 is_stmt 0 view .LVU186
 960 01c4 424A     		ldr	r2, .L79+100
 961 01c6 1360     		str	r3, [r2]
 962 01c8 9DE7     		b	.L36
 963              	.LVL76:
 964              	.L63:
 361:Core/Src/main.c ****             }
 965              		.loc 1 361 29 view .LVU187
 966              	.LBE11:
 373:Core/Src/main.c **** 
 967              		.loc 1 373 9 is_stmt 1 view .LVU188
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 31


 375:Core/Src/main.c ****         {
 968              		.loc 1 375 9 view .LVU189
 375:Core/Src/main.c ****         {
 969              		.loc 1 375 13 is_stmt 0 view .LVU190
 970 01ca 344A     		ldr	r2, .L79+48
 971 01cc 4649     		ldr	r1, .L79+124
 972 01ce E01D     		adds	r0, r4, #7
 973              	.LVL77:
 375:Core/Src/main.c ****         {
 974              		.loc 1 375 13 view .LVU191
 975 01d0 FFF7FEFF 		bl	sscanf
 976              	.LVL78:
 375:Core/Src/main.c ****         {
 977              		.loc 1 375 12 discriminator 1 view .LVU192
 978 01d4 0128     		cmp	r0, #1
 979 01d6 03D0     		beq	.L74
 387:Core/Src/main.c ****         }
 980              		.loc 1 387 13 is_stmt 1 view .LVU193
 981 01d8 3B48     		ldr	r0, .L79+92
 982 01da FFF7FEFF 		bl	puts
 983              	.LVL79:
 984 01de 92E7     		b	.L36
 985              	.L74:
 378:Core/Src/main.c **** 
 986              		.loc 1 378 13 view .LVU194
 987 01e0 2E4C     		ldr	r4, .L79+48
 988              	.LVL80:
 378:Core/Src/main.c **** 
 989              		.loc 1 378 13 is_stmt 0 view .LVU195
 990 01e2 2168     		ldr	r1, [r4]
 991 01e4 4248     		ldr	r0, .L79+132
 992 01e6 FFF7FEFF 		bl	printf
 993              	.LVL81:
 380:Core/Src/main.c ****                 Joint2Set(joint2);
 994              		.loc 1 380 13 is_stmt 1 view .LVU196
 380:Core/Src/main.c ****                 Joint2Set(joint2);
 995              		.loc 1 380 24 is_stmt 0 view .LVU197
 996 01ea 2068     		ldr	r0, [r4]
 997 01ec 394B     		ldr	r3, .L79+104
 998 01ee 1B68     		ldr	r3, [r3]
 380:Core/Src/main.c ****                 Joint2Set(joint2);
 999              		.loc 1 380 16 view .LVU198
 1000 01f0 9842     		cmp	r0, r3
 1001 01f2 88D0     		beq	.L36
 1002              	.LBB12:
 381:Core/Src/main.c ****                 prev_joint2 = joint2;
 1003              		.loc 1 381 17 is_stmt 1 view .LVU199
 1004 01f4 FFF7FEFF 		bl	Joint2Set
 1005              	.LVL82:
 382:Core/Src/main.c ****             }
 1006              		.loc 1 382 17 view .LVU200
 382:Core/Src/main.c ****             }
 1007              		.loc 1 382 29 is_stmt 0 view .LVU201
 1008 01f8 2268     		ldr	r2, [r4]
 1009 01fa 364B     		ldr	r3, .L79+104
 1010 01fc 1A60     		str	r2, [r3]
 1011 01fe 82E7     		b	.L36
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 32


 1012              	.LVL83:
 1013              	.L64:
 382:Core/Src/main.c ****             }
 1014              		.loc 1 382 29 view .LVU202
 1015              	.LBE12:
 394:Core/Src/main.c **** 
 1016              		.loc 1 394 9 is_stmt 1 view .LVU203
 396:Core/Src/main.c ****         {
 1017              		.loc 1 396 9 view .LVU204
 396:Core/Src/main.c ****         {
 1018              		.loc 1 396 13 is_stmt 0 view .LVU205
 1019 0200 284A     		ldr	r2, .L79+56
 1020 0202 3949     		ldr	r1, .L79+124
 1021 0204 E01D     		adds	r0, r4, #7
 1022              	.LVL84:
 396:Core/Src/main.c ****         {
 1023              		.loc 1 396 13 view .LVU206
 1024 0206 FFF7FEFF 		bl	sscanf
 1025              	.LVL85:
 396:Core/Src/main.c ****         {
 1026              		.loc 1 396 12 discriminator 1 view .LVU207
 1027 020a 0128     		cmp	r0, #1
 1028 020c 03D0     		beq	.L75
 408:Core/Src/main.c ****         }
 1029              		.loc 1 408 13 is_stmt 1 view .LVU208
 1030 020e 2E48     		ldr	r0, .L79+92
 1031 0210 FFF7FEFF 		bl	puts
 1032              	.LVL86:
 1033 0214 77E7     		b	.L36
 1034              	.L75:
 399:Core/Src/main.c **** 
 1035              		.loc 1 399 13 view .LVU209
 1036 0216 234C     		ldr	r4, .L79+56
 1037              	.LVL87:
 399:Core/Src/main.c **** 
 1038              		.loc 1 399 13 is_stmt 0 view .LVU210
 1039 0218 2168     		ldr	r1, [r4]
 1040 021a 3648     		ldr	r0, .L79+136
 1041 021c FFF7FEFF 		bl	printf
 1042              	.LVL88:
 401:Core/Src/main.c ****                 Joint3Set(joint3);
 1043              		.loc 1 401 13 is_stmt 1 view .LVU211
 401:Core/Src/main.c ****                 Joint3Set(joint3);
 1044              		.loc 1 401 24 is_stmt 0 view .LVU212
 1045 0220 2068     		ldr	r0, [r4]
 1046 0222 2D4B     		ldr	r3, .L79+108
 1047 0224 1B68     		ldr	r3, [r3]
 401:Core/Src/main.c ****                 Joint3Set(joint3);
 1048              		.loc 1 401 16 view .LVU213
 1049 0226 9842     		cmp	r0, r3
 1050 0228 3FF46DAF 		beq	.L36
 1051              	.LBB13:
 402:Core/Src/main.c ****                 prev_joint3 = joint3;
 1052              		.loc 1 402 17 is_stmt 1 view .LVU214
 1053 022c FFF7FEFF 		bl	Joint3Set
 1054              	.LVL89:
 403:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 33


 1055              		.loc 1 403 17 view .LVU215
 403:Core/Src/main.c ****             }
 1056              		.loc 1 403 29 is_stmt 0 view .LVU216
 1057 0230 2268     		ldr	r2, [r4]
 1058 0232 294B     		ldr	r3, .L79+108
 1059 0234 1A60     		str	r2, [r3]
 1060 0236 66E7     		b	.L36
 1061              	.LVL90:
 1062              	.L65:
 403:Core/Src/main.c ****             }
 1063              		.loc 1 403 29 view .LVU217
 1064              	.LBE13:
 415:Core/Src/main.c **** 
 1065              		.loc 1 415 9 is_stmt 1 view .LVU218
 417:Core/Src/main.c ****         {
 1066              		.loc 1 417 9 view .LVU219
 417:Core/Src/main.c ****         {
 1067              		.loc 1 417 13 is_stmt 0 view .LVU220
 1068 0238 1C4A     		ldr	r2, .L79+64
 1069 023a 2B49     		ldr	r1, .L79+124
 1070 023c E01D     		adds	r0, r4, #7
 1071              	.LVL91:
 417:Core/Src/main.c ****         {
 1072              		.loc 1 417 13 view .LVU221
 1073 023e FFF7FEFF 		bl	sscanf
 1074              	.LVL92:
 417:Core/Src/main.c ****         {
 1075              		.loc 1 417 12 discriminator 1 view .LVU222
 1076 0242 0128     		cmp	r0, #1
 1077 0244 03D0     		beq	.L76
 429:Core/Src/main.c ****         }
 1078              		.loc 1 429 13 is_stmt 1 view .LVU223
 1079 0246 2048     		ldr	r0, .L79+92
 1080 0248 FFF7FEFF 		bl	puts
 1081              	.LVL93:
 1082 024c 5BE7     		b	.L36
 1083              	.L76:
 420:Core/Src/main.c **** 
 1084              		.loc 1 420 13 view .LVU224
 1085 024e 174C     		ldr	r4, .L79+64
 1086              	.LVL94:
 420:Core/Src/main.c **** 
 1087              		.loc 1 420 13 is_stmt 0 view .LVU225
 1088 0250 2168     		ldr	r1, [r4]
 1089 0252 2948     		ldr	r0, .L79+140
 1090 0254 FFF7FEFF 		bl	printf
 1091              	.LVL95:
 422:Core/Src/main.c ****                 Joint4Set(joint4);
 1092              		.loc 1 422 13 is_stmt 1 view .LVU226
 422:Core/Src/main.c ****                 Joint4Set(joint4);
 1093              		.loc 1 422 24 is_stmt 0 view .LVU227
 1094 0258 2368     		ldr	r3, [r4]
 1095 025a 204A     		ldr	r2, .L79+112
 1096 025c 1268     		ldr	r2, [r2]
 422:Core/Src/main.c ****                 Joint4Set(joint4);
 1097              		.loc 1 422 16 view .LVU228
 1098 025e 9342     		cmp	r3, r2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 34


 1099 0260 3FF451AF 		beq	.L36
 1100              	.LBB14:
 423:Core/Src/main.c ****                 prev_joint4 = joint4;
 1101              		.loc 1 423 17 is_stmt 1 view .LVU229
 424:Core/Src/main.c ****             }
 1102              		.loc 1 424 17 view .LVU230
 424:Core/Src/main.c ****             }
 1103              		.loc 1 424 29 is_stmt 0 view .LVU231
 1104 0264 1D4A     		ldr	r2, .L79+112
 1105 0266 1360     		str	r3, [r2]
 1106 0268 4DE7     		b	.L36
 1107              	.L80:
 1108 026a 00BF     		.align	2
 1109              	.L79:
 1110 026c 00000000 		.word	.LC1
 1111 0270 58000000 		.word	.LC5
 1112 0274 78000000 		.word	.LC8
 1113 0278 94000000 		.word	.LC10
 1114 027c B0000000 		.word	.LC12
 1115 0280 CC000000 		.word	.LC14
 1116 0284 E8000000 		.word	.LC16
 1117 0288 08010000 		.word	.LC18
 1118 028c 28010000 		.word	.LC20
 1119 0290 40010000 		.word	.LC22
 1120 0294 00000000 		.word	joint1
 1121 0298 48010000 		.word	.LC23
 1122 029c 00000000 		.word	joint2
 1123 02a0 58010000 		.word	.LC24
 1124 02a4 00000000 		.word	joint3
 1125 02a8 68010000 		.word	.LC25
 1126 02ac 00000000 		.word	joint4
 1127 02b0 78010000 		.word	.LC26
 1128 02b4 00000000 		.word	joint5
 1129 02b8 88010000 		.word	.LC27
 1130 02bc 00000000 		.word	actuator
 1131 02c0 98010000 		.word	.LC28
 1132 02c4 04000000 		.word	.LC2
 1133 02c8 44000000 		.word	.LC4
 1134 02cc 1C000000 		.word	.LC3
 1135 02d0 00000000 		.word	prev_joint1
 1136 02d4 00000000 		.word	prev_joint2
 1137 02d8 00000000 		.word	prev_joint3
 1138 02dc 00000000 		.word	prev_joint4
 1139 02e0 00000000 		.word	prev_joint5
 1140 02e4 00000000 		.word	prev_actuator
 1141 02e8 60000000 		.word	.LC6
 1142 02ec 64000000 		.word	.LC7
 1143 02f0 80000000 		.word	.LC9
 1144 02f4 9C000000 		.word	.LC11
 1145 02f8 B8000000 		.word	.LC13
 1146              	.LVL96:
 1147              	.L66:
 424:Core/Src/main.c ****             }
 1148              		.loc 1 424 29 view .LVU232
 1149              	.LBE14:
 436:Core/Src/main.c **** 
 1150              		.loc 1 436 9 is_stmt 1 view .LVU233
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 35


 438:Core/Src/main.c ****         {
 1151              		.loc 1 438 9 view .LVU234
 438:Core/Src/main.c ****         {
 1152              		.loc 1 438 13 is_stmt 0 view .LVU235
 1153 02fc 1F4A     		ldr	r2, .L81
 1154 02fe 2049     		ldr	r1, .L81+4
 1155 0300 E01D     		adds	r0, r4, #7
 1156              	.LVL97:
 438:Core/Src/main.c ****         {
 1157              		.loc 1 438 13 view .LVU236
 1158 0302 FFF7FEFF 		bl	sscanf
 1159              	.LVL98:
 438:Core/Src/main.c ****         {
 1160              		.loc 1 438 12 discriminator 1 view .LVU237
 1161 0306 0128     		cmp	r0, #1
 1162 0308 03D0     		beq	.L77
 450:Core/Src/main.c ****         }
 1163              		.loc 1 450 13 is_stmt 1 view .LVU238
 1164 030a 1E48     		ldr	r0, .L81+8
 1165 030c FFF7FEFF 		bl	puts
 1166              	.LVL99:
 1167 0310 F9E6     		b	.L36
 1168              	.L77:
 441:Core/Src/main.c **** 
 1169              		.loc 1 441 13 view .LVU239
 1170 0312 1A4C     		ldr	r4, .L81
 1171              	.LVL100:
 441:Core/Src/main.c **** 
 1172              		.loc 1 441 13 is_stmt 0 view .LVU240
 1173 0314 2168     		ldr	r1, [r4]
 1174 0316 1C48     		ldr	r0, .L81+12
 1175 0318 FFF7FEFF 		bl	printf
 1176              	.LVL101:
 443:Core/Src/main.c ****                 Joint5Set(joint5);
 1177              		.loc 1 443 13 is_stmt 1 view .LVU241
 443:Core/Src/main.c ****                 Joint5Set(joint5);
 1178              		.loc 1 443 24 is_stmt 0 view .LVU242
 1179 031c 2368     		ldr	r3, [r4]
 1180 031e 1B4A     		ldr	r2, .L81+16
 1181 0320 1268     		ldr	r2, [r2]
 443:Core/Src/main.c ****                 Joint5Set(joint5);
 1182              		.loc 1 443 16 view .LVU243
 1183 0322 9342     		cmp	r3, r2
 1184 0324 3FF4EFAE 		beq	.L36
 1185              	.LBB15:
 444:Core/Src/main.c ****                 prev_joint5 = joint5;
 1186              		.loc 1 444 17 is_stmt 1 view .LVU244
 445:Core/Src/main.c ****             }
 1187              		.loc 1 445 17 view .LVU245
 445:Core/Src/main.c ****             }
 1188              		.loc 1 445 29 is_stmt 0 view .LVU246
 1189 0328 184A     		ldr	r2, .L81+16
 1190 032a 1360     		str	r3, [r2]
 1191 032c EBE6     		b	.L36
 1192              	.LVL102:
 1193              	.L67:
 445:Core/Src/main.c ****             }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 36


 1194              		.loc 1 445 29 view .LVU247
 1195              	.LBE15:
 457:Core/Src/main.c **** 
 1196              		.loc 1 457 9 is_stmt 1 view .LVU248
 459:Core/Src/main.c ****         {
 1197              		.loc 1 459 9 view .LVU249
 459:Core/Src/main.c ****         {
 1198              		.loc 1 459 13 is_stmt 0 view .LVU250
 1199 032e 184A     		ldr	r2, .L81+20
 1200 0330 1349     		ldr	r1, .L81+4
 1201 0332 04F10900 		add	r0, r4, #9
 1202              	.LVL103:
 459:Core/Src/main.c ****         {
 1203              		.loc 1 459 13 view .LVU251
 1204 0336 FFF7FEFF 		bl	sscanf
 1205              	.LVL104:
 459:Core/Src/main.c ****         {
 1206              		.loc 1 459 12 discriminator 1 view .LVU252
 1207 033a 0128     		cmp	r0, #1
 1208 033c 03D0     		beq	.L78
 471:Core/Src/main.c ****         }
 1209              		.loc 1 471 13 is_stmt 1 view .LVU253
 1210 033e 1148     		ldr	r0, .L81+8
 1211 0340 FFF7FEFF 		bl	puts
 1212              	.LVL105:
 1213 0344 DFE6     		b	.L36
 1214              	.L78:
 462:Core/Src/main.c **** 
 1215              		.loc 1 462 13 view .LVU254
 1216 0346 124B     		ldr	r3, .L81+20
 1217 0348 1968     		ldr	r1, [r3]
 1218 034a 1248     		ldr	r0, .L81+24
 1219 034c FFF7FEFF 		bl	printf
 1220              	.LVL106:
 464:Core/Src/main.c ****                 ActuatorSet(actuator);
 1221              		.loc 1 464 13 view .LVU255
 1222 0350 D9E6     		b	.L36
 1223              	.LVL107:
 1224              	.L68:
 1225              	.LBB16:
 478:Core/Src/main.c ****         
 1226              		.loc 1 478 9 view .LVU256
 480:Core/Src/main.c ****         
 1227              		.loc 1 480 9 view .LVU257
 1228 0352 FFF7FEFF 		bl	HomeSet
 1229              	.LVL108:
 482:Core/Src/main.c **** 
 1230              		.loc 1 482 9 view .LVU258
 1231 0356 1048     		ldr	r0, .L81+28
 1232 0358 FFF7FEFF 		bl	puts
 1233              	.LVL109:
 1234              	.LBE16:
 1235 035c D3E6     		b	.L36
 1236              	.LVL110:
 1237              	.L69:
 488:Core/Src/main.c ****         ledFlag = !ledFlag;
 1238              		.loc 1 488 9 view .LVU259
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 37


 489:Core/Src/main.c ****         
 1239              		.loc 1 489 9 view .LVU260
 489:Core/Src/main.c ****         
 1240              		.loc 1 489 19 is_stmt 0 view .LVU261
 1241 035e 0F4A     		ldr	r2, .L81+32
 1242 0360 1368     		ldr	r3, [r2]
 1243 0362 B3FA83F3 		clz	r3, r3
 1244 0366 5B09     		lsrs	r3, r3, #5
 489:Core/Src/main.c ****         
 1245              		.loc 1 489 17 view .LVU262
 1246 0368 1360     		str	r3, [r2]
 491:Core/Src/main.c **** 
 1247              		.loc 1 491 9 is_stmt 1 view .LVU263
 1248 036a 0D48     		ldr	r0, .L81+36
 1249 036c FFF7FEFF 		bl	puts
 1250              	.LVL111:
 1251 0370 C9E6     		b	.L36
 1252              	.LVL112:
 1253              	.L59:
 509:Core/Src/main.c ****     }
 1254              		.loc 1 509 9 view .LVU264
 1255 0372 2146     		mov	r1, r4
 1256 0374 0B48     		ldr	r0, .L81+40
 1257 0376 FFF7FEFF 		bl	printf
 1258              	.LVL113:
 511:Core/Src/main.c **** 
 1259              		.loc 1 511 1 is_stmt 0 view .LVU265
 1260 037a C4E6     		b	.L36
 1261              	.L82:
 1262              		.align	2
 1263              	.L81:
 1264 037c 00000000 		.word	joint5
 1265 0380 60000000 		.word	.LC6
 1266 0384 44000000 		.word	.LC4
 1267 0388 D4000000 		.word	.LC15
 1268 038c 00000000 		.word	prev_joint5
 1269 0390 00000000 		.word	actuator
 1270 0394 F4000000 		.word	.LC17
 1271 0398 10010000 		.word	.LC19
 1272 039c 00000000 		.word	ledFlag
 1273 03a0 30010000 		.word	.LC21
 1274 03a4 A8010000 		.word	.LC29
 1275              		.cfi_endproc
 1276              	.LFE143:
 1278              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 1279              		.align	2
 1280              	.LC30:
 1281 0000 42756666 		.ascii	"Buffer overflow\015\000"
 1281      6572206F 
 1281      76657266 
 1281      6C6F770D 
 1281      00
 1282              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1283              		.align	1
 1284              		.global	HAL_UART_RxCpltCallback
 1285              		.syntax unified
 1286              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 38


 1287              		.thumb_func
 1289              	HAL_UART_RxCpltCallback:
 1290              	.LVL114:
 1291              	.LFB142:
 252:Core/Src/main.c **** 
 1292              		.loc 1 252 1 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/main.c ****     {
 1296              		.loc 1 254 5 view .LVU267
 254:Core/Src/main.c ****     {
 1297              		.loc 1 254 14 is_stmt 0 view .LVU268
 1298 0000 0268     		ldr	r2, [r0]
 254:Core/Src/main.c ****     {
 1299              		.loc 1 254 8 view .LVU269
 1300 0002 264B     		ldr	r3, .L95
 1301 0004 9A42     		cmp	r2, r3
 1302 0006 00D0     		beq	.L92
 1303 0008 7047     		bx	lr
 1304              	.L92:
 252:Core/Src/main.c **** 
 1305              		.loc 1 252 1 view .LVU270
 1306 000a 10B5     		push	{r4, lr}
 1307              	.LCFI21:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 4, -8
 1310              		.cfi_offset 14, -4
 257:Core/Src/main.c ****         {
 1311              		.loc 1 257 9 is_stmt 1 view .LVU271
 257:Core/Src/main.c ****         {
 1312              		.loc 1 257 26 is_stmt 0 view .LVU272
 1313 000c 244B     		ldr	r3, .L95+4
 1314 000e 1B88     		ldrh	r3, [r3]
 1315 0010 9BB2     		uxth	r3, r3
 257:Core/Src/main.c ****         {
 1316              		.loc 1 257 12 view .LVU273
 1317 0012 FE2B     		cmp	r3, #254
 1318 0014 3BD8     		bhi	.L85
 259:Core/Src/main.c **** 
 1319              		.loc 1 259 13 is_stmt 1 view .LVU274
 259:Core/Src/main.c **** 
 1320              		.loc 1 259 37 is_stmt 0 view .LVU275
 1321 0016 2249     		ldr	r1, .L95+4
 1322 0018 0B88     		ldrh	r3, [r1]
 1323 001a 9BB2     		uxth	r3, r3
 1324 001c 5A1C     		adds	r2, r3, #1
 1325 001e 92B2     		uxth	r2, r2
 1326 0020 0A80     		strh	r2, [r1]	@ movhi
 259:Core/Src/main.c **** 
 1327              		.loc 1 259 41 view .LVU276
 1328 0022 2049     		ldr	r1, .L95+8
 1329 0024 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1330 0026 D2B2     		uxtb	r2, r2
 1331 0028 1F48     		ldr	r0, .L95+12
 1332              	.LVL115:
 259:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 39


 1333              		.loc 1 259 41 view .LVU277
 1334 002a C254     		strb	r2, [r0, r3]
 262:Core/Src/main.c ****             {
 1335              		.loc 1 262 13 is_stmt 1 view .LVU278
 262:Core/Src/main.c ****             {
 1336              		.loc 1 262 25 is_stmt 0 view .LVU279
 1337 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1338 002e DBB2     		uxtb	r3, r3
 262:Core/Src/main.c ****             {
 1339              		.loc 1 262 16 view .LVU280
 1340 0030 0A2B     		cmp	r3, #10
 1341 0032 05D0     		beq	.L93
 1342              	.L86:
 290:Core/Src/main.c ****     }
 1343              		.loc 1 290 9 is_stmt 1 view .LVU281
 1344 0034 0122     		movs	r2, #1
 1345 0036 1B49     		ldr	r1, .L95+8
 1346 0038 1C48     		ldr	r0, .L95+16
 1347 003a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1348              	.LVL116:
 292:Core/Src/main.c **** 
 1349              		.loc 1 292 1 is_stmt 0 view .LVU282
 1350 003e 10BD     		pop	{r4, pc}
 1351              	.L93:
 264:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1352              		.loc 1 264 17 is_stmt 1 view .LVU283
 264:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1353              		.loc 1 264 28 is_stmt 0 view .LVU284
 1354 0040 174A     		ldr	r2, .L95+4
 1355 0042 1388     		ldrh	r3, [r2]
 1356 0044 9BB2     		uxth	r3, r3
 264:Core/Src/main.c ****                 buffer_index = 0;                // Reset the index for the next string
 1357              		.loc 1 264 43 view .LVU285
 1358 0046 0146     		mov	r1, r0
 1359 0048 0020     		movs	r0, #0
 1360 004a C854     		strb	r0, [r1, r3]
 265:Core/Src/main.c **** 
 1361              		.loc 1 265 17 is_stmt 1 view .LVU286
 265:Core/Src/main.c **** 
 1362              		.loc 1 265 30 is_stmt 0 view .LVU287
 1363 004c 1080     		strh	r0, [r2]	@ movhi
 268:Core/Src/main.c **** 
 1364              		.loc 1 268 17 is_stmt 1 view .LVU288
 1365 004e 184C     		ldr	r4, .L95+20
 1366 0050 2046     		mov	r0, r4
 1367 0052 FFF7FEFF 		bl	strcpy
 1368              	.LVL117:
 270:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1369              		.loc 1 270 17 view .LVU289
 270:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1370              		.loc 1 270 20 is_stmt 0 view .LVU290
 1371 0056 2146     		mov	r1, r4
 1372 0058 1648     		ldr	r0, .L95+24
 1373 005a FFF7FEFF 		bl	strcmp
 1374              	.LVL118:
 270:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1375              		.loc 1 270 19 discriminator 1 view .LVU291
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 40


 1376 005e 70B9     		cbnz	r0, .L94
 274:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1377              		.loc 1 274 22 is_stmt 1 view .LVU292
 274:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1378              		.loc 1 274 25 is_stmt 0 view .LVU293
 1379 0060 1549     		ldr	r1, .L95+28
 1380 0062 1348     		ldr	r0, .L95+20
 1381 0064 FFF7FEFF 		bl	strcmp
 1382              	.LVL119:
 274:Core/Src/main.c ****                   ProcessReceivedString((char *)received_string);
 1383              		.loc 1 274 24 discriminator 1 view .LVU294
 1384 0068 0028     		cmp	r0, #0
 1385 006a E3D0     		beq	.L86
 1386              	.LBB17:
 275:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 1387              		.loc 1 275 19 is_stmt 1 view .LVU295
 1388 006c 104C     		ldr	r4, .L95+20
 1389 006e 2046     		mov	r0, r4
 1390 0070 FFF7FEFF 		bl	ProcessReceivedString
 1391              	.LVL120:
 276:Core/Src/main.c ****                 }
 1392              		.loc 1 276 19 view .LVU296
 1393 0074 2146     		mov	r1, r4
 1394 0076 1048     		ldr	r0, .L95+28
 1395 0078 FFF7FEFF 		bl	strcpy
 1396              	.LVL121:
 1397 007c DAE7     		b	.L86
 1398              	.L94:
 1399              	.LBE17:
 1400              	.LBB18:
 271:Core/Src/main.c ****                   strcpy((char *)previous_string, (char *)received_string);
 1401              		.loc 1 271 19 view .LVU297
 1402 007e 2046     		mov	r0, r4
 1403 0080 FFF7FEFF 		bl	ProcessReceivedString
 1404              	.LVL122:
 272:Core/Src/main.c ****                 }
 1405              		.loc 1 272 19 view .LVU298
 1406 0084 2146     		mov	r1, r4
 1407 0086 0C48     		ldr	r0, .L95+28
 1408 0088 FFF7FEFF 		bl	strcpy
 1409              	.LVL123:
 1410              	.LBE18:
 1411 008c D2E7     		b	.L86
 1412              	.LVL124:
 1413              	.L85:
 285:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 1414              		.loc 1 285 13 view .LVU299
 285:Core/Src/main.c ****             printf("Buffer overflow\r\n");
 1415              		.loc 1 285 26 is_stmt 0 view .LVU300
 1416 008e 044B     		ldr	r3, .L95+4
 1417 0090 0022     		movs	r2, #0
 1418 0092 1A80     		strh	r2, [r3]	@ movhi
 286:Core/Src/main.c ****         }
 1419              		.loc 1 286 13 is_stmt 1 view .LVU301
 1420 0094 0948     		ldr	r0, .L95+32
 1421              	.LVL125:
 286:Core/Src/main.c ****         }
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 41


 1422              		.loc 1 286 13 is_stmt 0 view .LVU302
 1423 0096 FFF7FEFF 		bl	puts
 1424              	.LVL126:
 1425 009a CBE7     		b	.L86
 1426              	.L96:
 1427              		.align	2
 1428              	.L95:
 1429 009c 00440040 		.word	1073759232
 1430 00a0 00000000 		.word	buffer_index
 1431 00a4 00000000 		.word	rx_byte
 1432 00a8 00000000 		.word	uart_buffer
 1433 00ac 00000000 		.word	huart2
 1434 00b0 00000000 		.word	received_string
 1435 00b4 40010000 		.word	.LC22
 1436 00b8 00000000 		.word	previous_string
 1437 00bc 00000000 		.word	.LC30
 1438              		.cfi_endproc
 1439              	.LFE142:
 1441              		.section	.text.Joint4Set,"ax",%progbits
 1442              		.align	1
 1443              		.global	Joint4Set
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1448              	Joint4Set:
 1449              	.LVL127:
 1450              	.LFB149:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** void Joint4Set(int theta){
 1451              		.loc 1 565 26 is_stmt 1 view -0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
 566:Core/Src/main.c ****   //Set joint
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** }
 1456              		.loc 1 568 1 view .LVU304
 1457 0000 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE149:
 1461              		.section	.text.Joint5Set,"ax",%progbits
 1462              		.align	1
 1463              		.global	Joint5Set
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1468              	Joint5Set:
 1469              	.LVL128:
 1470              	.LFB150:
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** void Joint5Set(int theta){
 1471              		.loc 1 570 26 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 42


 571:Core/Src/main.c ****   //Set joint
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** }
 1476              		.loc 1 573 1 view .LVU306
 1477 0000 7047     		bx	lr
 1478              		.cfi_endproc
 1479              	.LFE150:
 1481              		.section	.text.ActuatorSet,"ax",%progbits
 1482              		.align	1
 1483              		.global	ActuatorSet
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1488              	ActuatorSet:
 1489              	.LVL129:
 1490              	.LFB151:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** void ActuatorSet(int theta){
 1491              		.loc 1 575 28 view -0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 576:Core/Src/main.c ****   //Set joint
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** }
 1496              		.loc 1 578 1 view .LVU308
 1497 0000 7047     		bx	lr
 1498              		.cfi_endproc
 1499              	.LFE151:
 1501              		.section	.text.Error_Handler,"ax",%progbits
 1502              		.align	1
 1503              		.global	Error_Handler
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1508              	Error_Handler:
 1509              	.LFB152:
 579:Core/Src/main.c **** 
 580:Core/Src/main.c **** /* USER CODE END 4 */
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** /**
 583:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 584:Core/Src/main.c ****   * @retval None
 585:Core/Src/main.c ****   */
 586:Core/Src/main.c **** void Error_Handler(void)
 587:Core/Src/main.c **** {
 1510              		.loc 1 587 1 view -0
 1511              		.cfi_startproc
 1512              		@ Volatile: function does not return.
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 588:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 589:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 590:Core/Src/main.c ****   __disable_irq();
 1516              		.loc 1 590 3 view .LVU310
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 43


 1517              	.LBB19:
 1518              	.LBI19:
 1519              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 44


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 45


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 46


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 47


 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 48


 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 49


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 50


 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 51


 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 52


 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 53


 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 54


 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 55


 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 56


 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 57


 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 58


 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 59


 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1520              		.loc 2 960 27 view .LVU311
 1521              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1522              		.loc 2 962 3 view .LVU312
 1523              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 60


 1524              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1525 0000 72B6     		cpsid i
 1526              	@ 0 "" 2
 1527              		.thumb
 1528              		.syntax unified
 1529              	.L101:
 1530              	.LBE20:
 1531              	.LBE19:
 591:Core/Src/main.c ****   while (1)
 1532              		.loc 1 591 3 view .LVU313
 592:Core/Src/main.c ****   {
 593:Core/Src/main.c ****   }
 1533              		.loc 1 593 3 view .LVU314
 591:Core/Src/main.c ****   while (1)
 1534              		.loc 1 591 9 view .LVU315
 1535 0002 FEE7     		b	.L101
 1536              		.cfi_endproc
 1537              	.LFE152:
 1539              		.section	.text.SystemClock_Config,"ax",%progbits
 1540              		.align	1
 1541              		.global	SystemClock_Config
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1546              	SystemClock_Config:
 1547              	.LFB138:
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1548              		.loc 1 178 1 view -0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 80
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552 0000 00B5     		push	{lr}
 1553              	.LCFI22:
 1554              		.cfi_def_cfa_offset 4
 1555              		.cfi_offset 14, -4
 1556 0002 95B0     		sub	sp, sp, #84
 1557              	.LCFI23:
 1558              		.cfi_def_cfa_offset 88
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1559              		.loc 1 179 3 view .LVU317
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1560              		.loc 1 179 22 is_stmt 0 view .LVU318
 1561 0004 3022     		movs	r2, #48
 1562 0006 0021     		movs	r1, #0
 1563 0008 08A8     		add	r0, sp, #32
 1564 000a FFF7FEFF 		bl	memset
 1565              	.LVL130:
 180:Core/Src/main.c **** 
 1566              		.loc 1 180 3 is_stmt 1 view .LVU319
 180:Core/Src/main.c **** 
 1567              		.loc 1 180 22 is_stmt 0 view .LVU320
 1568 000e 0023     		movs	r3, #0
 1569 0010 0393     		str	r3, [sp, #12]
 1570 0012 0493     		str	r3, [sp, #16]
 1571 0014 0593     		str	r3, [sp, #20]
 1572 0016 0693     		str	r3, [sp, #24]
 1573 0018 0793     		str	r3, [sp, #28]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 61


 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1574              		.loc 1 184 3 is_stmt 1 view .LVU321
 1575              	.LBB21:
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1576              		.loc 1 184 3 view .LVU322
 1577 001a 0193     		str	r3, [sp, #4]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1578              		.loc 1 184 3 view .LVU323
 1579 001c 214A     		ldr	r2, .L108
 1580 001e 116C     		ldr	r1, [r2, #64]
 1581 0020 41F08051 		orr	r1, r1, #268435456
 1582 0024 1164     		str	r1, [r2, #64]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1583              		.loc 1 184 3 view .LVU324
 1584 0026 126C     		ldr	r2, [r2, #64]
 1585 0028 02F08052 		and	r2, r2, #268435456
 1586 002c 0192     		str	r2, [sp, #4]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1587              		.loc 1 184 3 view .LVU325
 1588 002e 019A     		ldr	r2, [sp, #4]
 1589              	.LBE21:
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1590              		.loc 1 184 3 view .LVU326
 185:Core/Src/main.c **** 
 1591              		.loc 1 185 3 view .LVU327
 1592              	.LBB22:
 185:Core/Src/main.c **** 
 1593              		.loc 1 185 3 view .LVU328
 1594 0030 0293     		str	r3, [sp, #8]
 185:Core/Src/main.c **** 
 1595              		.loc 1 185 3 view .LVU329
 1596 0032 1D4B     		ldr	r3, .L108+4
 1597 0034 1A68     		ldr	r2, [r3]
 1598 0036 42F48042 		orr	r2, r2, #16384
 1599 003a 1A60     		str	r2, [r3]
 185:Core/Src/main.c **** 
 1600              		.loc 1 185 3 view .LVU330
 1601 003c 1B68     		ldr	r3, [r3]
 1602 003e 03F48043 		and	r3, r3, #16384
 1603 0042 0293     		str	r3, [sp, #8]
 185:Core/Src/main.c **** 
 1604              		.loc 1 185 3 view .LVU331
 1605 0044 029B     		ldr	r3, [sp, #8]
 1606              	.LBE22:
 185:Core/Src/main.c **** 
 1607              		.loc 1 185 3 view .LVU332
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1608              		.loc 1 190 3 view .LVU333
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1609              		.loc 1 190 36 is_stmt 0 view .LVU334
 1610 0046 0123     		movs	r3, #1
 1611 0048 0893     		str	r3, [sp, #32]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1612              		.loc 1 191 3 is_stmt 1 view .LVU335
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1613              		.loc 1 191 30 is_stmt 0 view .LVU336
 1614 004a 4FF48033 		mov	r3, #65536
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 62


 1615 004e 0993     		str	r3, [sp, #36]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1616              		.loc 1 192 3 is_stmt 1 view .LVU337
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1617              		.loc 1 192 34 is_stmt 0 view .LVU338
 1618 0050 0223     		movs	r3, #2
 1619 0052 0E93     		str	r3, [sp, #56]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1620              		.loc 1 193 3 is_stmt 1 view .LVU339
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1621              		.loc 1 193 35 is_stmt 0 view .LVU340
 1622 0054 4FF48002 		mov	r2, #4194304
 1623 0058 0F92     		str	r2, [sp, #60]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1624              		.loc 1 194 3 is_stmt 1 view .LVU341
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1625              		.loc 1 194 30 is_stmt 0 view .LVU342
 1626 005a 0822     		movs	r2, #8
 1627 005c 1092     		str	r2, [sp, #64]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1628              		.loc 1 195 3 is_stmt 1 view .LVU343
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1629              		.loc 1 195 30 is_stmt 0 view .LVU344
 1630 005e 4FF4A872 		mov	r2, #336
 1631 0062 1192     		str	r2, [sp, #68]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1632              		.loc 1 196 3 is_stmt 1 view .LVU345
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1633              		.loc 1 196 30 is_stmt 0 view .LVU346
 1634 0064 1293     		str	r3, [sp, #72]
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1635              		.loc 1 197 3 is_stmt 1 view .LVU347
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1636              		.loc 1 197 30 is_stmt 0 view .LVU348
 1637 0066 0723     		movs	r3, #7
 1638 0068 1393     		str	r3, [sp, #76]
 198:Core/Src/main.c ****   {
 1639              		.loc 1 198 3 is_stmt 1 view .LVU349
 198:Core/Src/main.c ****   {
 1640              		.loc 1 198 7 is_stmt 0 view .LVU350
 1641 006a 08A8     		add	r0, sp, #32
 1642 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1643              	.LVL131:
 198:Core/Src/main.c ****   {
 1644              		.loc 1 198 6 discriminator 1 view .LVU351
 1645 0070 98B9     		cbnz	r0, .L106
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1646              		.loc 1 205 3 is_stmt 1 view .LVU352
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1647              		.loc 1 205 31 is_stmt 0 view .LVU353
 1648 0072 0F23     		movs	r3, #15
 1649 0074 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1650              		.loc 1 207 3 is_stmt 1 view .LVU354
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1651              		.loc 1 207 34 is_stmt 0 view .LVU355
 1652 0076 0223     		movs	r3, #2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 63


 1653 0078 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1654              		.loc 1 208 3 is_stmt 1 view .LVU356
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1655              		.loc 1 208 35 is_stmt 0 view .LVU357
 1656 007a 0023     		movs	r3, #0
 1657 007c 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1658              		.loc 1 209 3 is_stmt 1 view .LVU358
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1659              		.loc 1 209 36 is_stmt 0 view .LVU359
 1660 007e 4FF4A053 		mov	r3, #5120
 1661 0082 0693     		str	r3, [sp, #24]
 210:Core/Src/main.c **** 
 1662              		.loc 1 210 3 is_stmt 1 view .LVU360
 210:Core/Src/main.c **** 
 1663              		.loc 1 210 36 is_stmt 0 view .LVU361
 1664 0084 4FF48053 		mov	r3, #4096
 1665 0088 0793     		str	r3, [sp, #28]
 212:Core/Src/main.c ****   {
 1666              		.loc 1 212 3 is_stmt 1 view .LVU362
 212:Core/Src/main.c ****   {
 1667              		.loc 1 212 7 is_stmt 0 view .LVU363
 1668 008a 0521     		movs	r1, #5
 1669 008c 03A8     		add	r0, sp, #12
 1670 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1671              	.LVL132:
 212:Core/Src/main.c ****   {
 1672              		.loc 1 212 6 discriminator 1 view .LVU364
 1673 0092 20B9     		cbnz	r0, .L107
 216:Core/Src/main.c **** 
 1674              		.loc 1 216 1 view .LVU365
 1675 0094 15B0     		add	sp, sp, #84
 1676              	.LCFI24:
 1677              		.cfi_remember_state
 1678              		.cfi_def_cfa_offset 4
 1679              		@ sp needed
 1680 0096 5DF804FB 		ldr	pc, [sp], #4
 1681              	.L106:
 1682              	.LCFI25:
 1683              		.cfi_restore_state
 200:Core/Src/main.c ****   }
 1684              		.loc 1 200 5 is_stmt 1 view .LVU366
 1685 009a FFF7FEFF 		bl	Error_Handler
 1686              	.LVL133:
 1687              	.L107:
 214:Core/Src/main.c ****   }
 1688              		.loc 1 214 5 view .LVU367
 1689 009e FFF7FEFF 		bl	Error_Handler
 1690              	.LVL134:
 1691              	.L109:
 1692 00a2 00BF     		.align	2
 1693              	.L108:
 1694 00a4 00380240 		.word	1073887232
 1695 00a8 00700040 		.word	1073770496
 1696              		.cfi_endproc
 1697              	.LFE138:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 64


 1699              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1700              		.align	2
 1701              	.LC31:
 1702 0000 53797374 		.ascii	"System Initialized\015\000"
 1702      656D2049 
 1702      6E697469 
 1702      616C697A 
 1702      65640D00 
 1703              		.section	.text.main,"ax",%progbits
 1704              		.align	1
 1705              		.global	main
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1710              	main:
 1711              	.LFB137:
 119:Core/Src/main.c **** 
 1712              		.loc 1 119 1 view -0
 1713              		.cfi_startproc
 1714              		@ Volatile: function does not return.
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717 0000 08B5     		push	{r3, lr}
 1718              	.LCFI26:
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 3, -8
 1721              		.cfi_offset 14, -4
 128:Core/Src/main.c **** 
 1722              		.loc 1 128 3 view .LVU369
 1723 0002 FFF7FEFF 		bl	HAL_Init
 1724              	.LVL135:
 135:Core/Src/main.c **** 
 1725              		.loc 1 135 3 view .LVU370
 1726 0006 FFF7FEFF 		bl	SystemClock_Config
 1727              	.LVL136:
 142:Core/Src/main.c ****   MX_I2C1_Init();
 1728              		.loc 1 142 3 view .LVU371
 1729 000a FFF7FEFF 		bl	MX_GPIO_Init
 1730              	.LVL137:
 143:Core/Src/main.c ****   MX_I2S3_Init();
 1731              		.loc 1 143 3 view .LVU372
 1732 000e FFF7FEFF 		bl	MX_I2C1_Init
 1733              	.LVL138:
 144:Core/Src/main.c ****   MX_SPI1_Init();
 1734              		.loc 1 144 3 view .LVU373
 1735 0012 FFF7FEFF 		bl	MX_I2S3_Init
 1736              	.LVL139:
 145:Core/Src/main.c ****   MX_USART2_UART_Init();
 1737              		.loc 1 145 3 view .LVU374
 1738 0016 FFF7FEFF 		bl	MX_SPI1_Init
 1739              	.LVL140:
 146:Core/Src/main.c ****   MX_USART3_UART_Init();
 1740              		.loc 1 146 3 view .LVU375
 1741 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 1742              	.LVL141:
 147:Core/Src/main.c ****   MX_USART6_UART_Init();
 1743              		.loc 1 147 3 view .LVU376
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 65


 1744 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 1745              	.LVL142:
 148:Core/Src/main.c ****   MX_USB_HOST_Init();
 1746              		.loc 1 148 3 view .LVU377
 1747 0022 FFF7FEFF 		bl	MX_USART6_UART_Init
 1748              	.LVL143:
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1749              		.loc 1 149 3 view .LVU378
 1750 0026 FFF7FEFF 		bl	MX_USB_HOST_Init
 1751              	.LVL144:
 152:Core/Src/main.c ****   // HomeSet(); // Set all joints to home position
 1752              		.loc 1 152 3 view .LVU379
 1753 002a 0122     		movs	r2, #1
 1754 002c 0849     		ldr	r1, .L113
 1755 002e 0948     		ldr	r0, .L113+4
 1756 0030 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1757              	.LVL145:
 154:Core/Src/main.c ****   printf("System Initialized\r\n");
 1758              		.loc 1 154 3 view .LVU380
 1759 0034 0120     		movs	r0, #1
 1760 0036 FFF7FEFF 		bl	ToggleLEDs
 1761              	.LVL146:
 155:Core/Src/main.c **** 
 1762              		.loc 1 155 3 view .LVU381
 1763 003a 0748     		ldr	r0, .L113+8
 1764 003c FFF7FEFF 		bl	puts
 1765              	.LVL147:
 1766              	.L111:
 161:Core/Src/main.c ****   {
 1767              		.loc 1 161 3 view .LVU382
 164:Core/Src/main.c ****     ToggleLEDs(ledFlag);
 1768              		.loc 1 164 5 view .LVU383
 1769 0040 FFF7FEFF 		bl	MX_USB_HOST_Process
 1770              	.LVL148:
 165:Core/Src/main.c ****     
 1771              		.loc 1 165 5 discriminator 1 view .LVU384
 1772 0044 054B     		ldr	r3, .L113+12
 1773 0046 1868     		ldr	r0, [r3]
 1774 0048 FFF7FEFF 		bl	ToggleLEDs
 1775              	.LVL149:
 161:Core/Src/main.c ****   {
 1776              		.loc 1 161 9 view .LVU385
 1777 004c F8E7     		b	.L111
 1778              	.L114:
 1779 004e 00BF     		.align	2
 1780              	.L113:
 1781 0050 00000000 		.word	rx_byte
 1782 0054 00000000 		.word	huart2
 1783 0058 00000000 		.word	.LC31
 1784 005c 00000000 		.word	ledFlag
 1785              		.cfi_endproc
 1786              	.LFE137:
 1788              		.global	prev_actuator
 1789              		.section	.bss.prev_actuator,"aw",%nobits
 1790              		.align	2
 1793              	prev_actuator:
 1794 0000 00000000 		.space	4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 66


 1795              		.global	prev_joint5
 1796              		.section	.bss.prev_joint5,"aw",%nobits
 1797              		.align	2
 1800              	prev_joint5:
 1801 0000 00000000 		.space	4
 1802              		.global	prev_joint4
 1803              		.section	.bss.prev_joint4,"aw",%nobits
 1804              		.align	2
 1807              	prev_joint4:
 1808 0000 00000000 		.space	4
 1809              		.global	prev_joint3
 1810              		.section	.bss.prev_joint3,"aw",%nobits
 1811              		.align	2
 1814              	prev_joint3:
 1815 0000 00000000 		.space	4
 1816              		.global	prev_joint2
 1817              		.section	.bss.prev_joint2,"aw",%nobits
 1818              		.align	2
 1821              	prev_joint2:
 1822 0000 00000000 		.space	4
 1823              		.global	prev_joint1
 1824              		.section	.bss.prev_joint1,"aw",%nobits
 1825              		.align	2
 1828              	prev_joint1:
 1829 0000 00000000 		.space	4
 1830              		.global	ledFlag
 1831              		.section	.bss.ledFlag,"aw",%nobits
 1832              		.align	2
 1835              	ledFlag:
 1836 0000 00000000 		.space	4
 1837              		.global	actuator
 1838              		.section	.bss.actuator,"aw",%nobits
 1839              		.align	2
 1842              	actuator:
 1843 0000 00000000 		.space	4
 1844              		.global	joint5
 1845              		.section	.bss.joint5,"aw",%nobits
 1846              		.align	2
 1849              	joint5:
 1850 0000 00000000 		.space	4
 1851              		.global	joint4
 1852              		.section	.bss.joint4,"aw",%nobits
 1853              		.align	2
 1856              	joint4:
 1857 0000 00000000 		.space	4
 1858              		.global	joint3
 1859              		.section	.bss.joint3,"aw",%nobits
 1860              		.align	2
 1863              	joint3:
 1864 0000 00000000 		.space	4
 1865              		.global	joint2
 1866              		.section	.data.joint2,"aw"
 1867              		.align	2
 1870              	joint2:
 1871 0000 2D000000 		.word	45
 1872              		.global	joint1
 1873              		.section	.bss.joint1,"aw",%nobits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 67


 1874              		.align	2
 1877              	joint1:
 1878 0000 00000000 		.space	4
 1879              		.global	previous_string
 1880              		.section	.bss.previous_string,"aw",%nobits
 1881              		.align	2
 1884              	previous_string:
 1885 0000 00000000 		.space	256
 1885      00000000 
 1885      00000000 
 1885      00000000 
 1885      00000000 
 1886              		.global	received_string
 1887              		.section	.bss.received_string,"aw",%nobits
 1888              		.align	2
 1891              	received_string:
 1892 0000 00000000 		.space	256
 1892      00000000 
 1892      00000000 
 1892      00000000 
 1892      00000000 
 1893              		.global	uart_received
 1894              		.section	.bss.uart_received,"aw",%nobits
 1897              	uart_received:
 1898 0000 00       		.space	1
 1899              		.global	buffer_index
 1900              		.section	.bss.buffer_index,"aw",%nobits
 1901              		.align	1
 1904              	buffer_index:
 1905 0000 0000     		.space	2
 1906              		.global	uart_buffer
 1907              		.section	.bss.uart_buffer,"aw",%nobits
 1908              		.align	2
 1911              	uart_buffer:
 1912 0000 00000000 		.space	256
 1912      00000000 
 1912      00000000 
 1912      00000000 
 1912      00000000 
 1913              		.global	rx_byte
 1914              		.section	.bss.rx_byte,"aw",%nobits
 1917              	rx_byte:
 1918 0000 00       		.space	1
 1919              		.text
 1920              	.Letext0:
 1921              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1922              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1923              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1924              		.file 6 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/includ
 1925              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1926              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1927              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1928              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1929              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1930              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1931              		.file 13 "Core/Inc/usart.h"
 1932              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 68


 1933              		.file 15 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 1934              		.file 16 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 1935              		.file 17 "USB_HOST/App/usb_host.h"
 1936              		.file 18 "Core/Inc/spi.h"
 1937              		.file 19 "Core/Inc/i2s.h"
 1938              		.file 20 "Core/Inc/i2c.h"
 1939              		.file 21 "Core/Inc/gpio.h"
 1940              		.file 22 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 69


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:21     .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:27     .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:63     .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:68     .text.__io_putchar_usart3:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:74     .text.__io_putchar_usart3:00000000 __io_putchar_usart3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:110    .text.__io_putchar_usart3:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:115    .text.__io_putchar_usart6:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:121    .text.__io_putchar_usart6:00000000 __io_putchar_usart6
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:157    .text.__io_putchar_usart6:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:162    .text.ToggleLEDs:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:168    .text.ToggleLEDs:00000000 ToggleLEDs
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:260    .text.ToggleLEDs:0000007c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:265    .text.Joint1Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:271    .text.Joint1Set:00000000 Joint1Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:285    .rodata.Joint2Set.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:289    .text.Joint2Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:295    .text.Joint2Set:00000000 Joint2Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:360    .text.Joint2Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:365    .text.Joint3Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:371    .text.Joint3Set:00000000 Joint3Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:436    .text.Joint3Set:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:441    .text.HomeSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:447    .text.HomeSet:00000000 HomeSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:500    .text.HomeSet:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1877   .bss.joint1:00000000 joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1870   .data.joint2:00000000 joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1863   .bss.joint3:00000000 joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1856   .bss.joint4:00000000 joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1849   .bss.joint5:00000000 joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1842   .bss.actuator:00000000 actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:510    .rodata.ProcessReceivedString.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:598    .text.ProcessReceivedString:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:604    .text.ProcessReceivedString:00000000 ProcessReceivedString
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1110   .text.ProcessReceivedString:0000026c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1828   .bss.prev_joint1:00000000 prev_joint1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1821   .bss.prev_joint2:00000000 prev_joint2
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1814   .bss.prev_joint3:00000000 prev_joint3
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1807   .bss.prev_joint4:00000000 prev_joint4
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1800   .bss.prev_joint5:00000000 prev_joint5
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1793   .bss.prev_actuator:00000000 prev_actuator
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1153   .text.ProcessReceivedString:000002fc $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1264   .text.ProcessReceivedString:0000037c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1835   .bss.ledFlag:00000000 ledFlag
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1279   .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1283   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1289   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1429   .text.HAL_UART_RxCpltCallback:0000009c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1904   .bss.buffer_index:00000000 buffer_index
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1917   .bss.rx_byte:00000000 rx_byte
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1911   .bss.uart_buffer:00000000 uart_buffer
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1891   .bss.received_string:00000000 received_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1884   .bss.previous_string:00000000 previous_string
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1442   .text.Joint4Set:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1448   .text.Joint4Set:00000000 Joint4Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1462   .text.Joint5Set:00000000 $t
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 70


/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1468   .text.Joint5Set:00000000 Joint5Set
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1482   .text.ActuatorSet:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1488   .text.ActuatorSet:00000000 ActuatorSet
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1502   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1508   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1540   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1546   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1694   .text.SystemClock_Config:000000a4 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1700   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1704   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1710   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1781   .text.main:00000050 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1790   .bss.prev_actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1797   .bss.prev_joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1804   .bss.prev_joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1811   .bss.prev_joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1818   .bss.prev_joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1825   .bss.prev_joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1832   .bss.ledFlag:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1839   .bss.actuator:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1846   .bss.joint5:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1853   .bss.joint4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1860   .bss.joint3:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1867   .data.joint2:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1874   .bss.joint1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1881   .bss.previous_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1888   .bss.received_string:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1897   .bss.uart_received:00000000 uart_received
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1898   .bss.uart_received:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1901   .bss.buffer_index:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1908   .bss.uart_buffer:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s:1918   .bss.rx_byte:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
huart3
huart6
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_WritePin
snprintf
strncmp
printf
sscanf
puts
HAL_UART_Receive_IT
strcpy
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_I2S3_Init
MX_SPI1_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//cczfYMUR.s 			page 71


MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USART6_UART_Init
MX_USB_HOST_Init
MX_USB_HOST_Process
