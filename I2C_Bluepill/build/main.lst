ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** #define AS5600_I2C_ADDRESS (0x36 << 1) // Shift left for 8-bit address
  41:Core/Src/main.c **** #define AS5600_RAW_ANGLE_REGISTER 0x0C // Raw angle register address
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_I2C1_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  61:Core/Src/main.c **** uint16_t AS5600_ReadRawAngle(void);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
  76:Core/Src/main.c **** {
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 3


  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_I2C1_Init();
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   uint16_t raw_angle;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 116:Core/Src/main.c ****     //printf("Calling AS5600...\n");
 117:Core/Src/main.c ****     raw_angle = AS5600_ReadRawAngle();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     char str[6]; // Enough to hold the maximum value of uint16_t (65535) + null terminator
 120:Core/Src/main.c ****     sprintf(str, "%u", raw_angle); // Format the number as an unsigned decimal
 121:Core/Src/main.c ****     printf(str);
 122:Core/Src/main.c ****     printf("\n");
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     HAL_Delay(200);
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 139:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 167:Core/Src/main.c ****   * @param None
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** static void MX_I2C1_Init(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 180:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 181:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 182:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 183:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 184:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 185:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 186:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 187:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 188:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 189:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief USART1 Initialization Function
 201:Core/Src/main.c ****   * @param None
 202:Core/Src/main.c ****   * @retval None
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 5


 205:Core/Src/main.c **** {
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 214:Core/Src/main.c ****   huart1.Instance = USART1;
 215:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 216:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 217:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 218:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 219:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 220:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 221:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 222:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief GPIO Initialization Function
 234:Core/Src/main.c ****   * @param None
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** static void MX_GPIO_Init(void)
 238:Core/Src/main.c **** {
  26              		.loc 1 238 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 239:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 239 3 view .LVU1
  40              		.loc 1 239 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 240:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 241:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 6


 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 244:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 244 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 244 3 view .LVU4
  49              		.loc 1 244 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 244 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 244 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 244 3 view .LVU8
 245:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 245 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 245 3 view .LVU10
  65              		.loc 1 245 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 245 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
  73              		.loc 1 245 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 245 3 view .LVU14
 246:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 246 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 246 3 view .LVU16
  80              		.loc 1 246 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 246 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00402 		and	r2, r2, #4
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 246 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 246 3 view .LVU20
 247:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 247 3 view .LVU21
  93              	.LBB7:
  94              		.loc 1 247 3 view .LVU22
  95              		.loc 1 247 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 7


  97 0048 42F00802 		orr	r2, r2, #8
  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 247 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00803 		and	r3, r3, #8
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 247 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE7:
 106              		.loc 1 247 3 view .LVU26
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 250:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 107              		.loc 1 250 3 view .LVU27
 108 0058 0B4D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF40051 		mov	r1, #8192
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 253:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 114              		.loc 1 253 3 view .LVU28
 115              		.loc 1 253 23 is_stmt 0 view .LVU29
 116 0066 4FF40053 		mov	r3, #8192
 117 006a 0493     		str	r3, [sp, #16]
 254:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 254 3 is_stmt 1 view .LVU30
 119              		.loc 1 254 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
 121 006e 0593     		str	r3, [sp, #20]
 255:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 255 3 is_stmt 1 view .LVU32
 123              		.loc 1 255 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 256:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 256 3 is_stmt 1 view .LVU34
 126              		.loc 1 256 25 is_stmt 0 view .LVU35
 127 0072 0223     		movs	r3, #2
 128 0074 0793     		str	r3, [sp, #28]
 257:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 129              		.loc 1 257 3 is_stmt 1 view .LVU36
 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 260:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 261:Core/Src/main.c **** }
 134              		.loc 1 261 1 is_stmt 0 view .LVU37
 135 007e 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0080 30BD     		pop	{r4, r5, pc}
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 8


 140              	.L4:
 141 0082 00BF     		.align	2
 142              	.L3:
 143 0084 00100240 		.word	1073876992
 144 0088 00100140 		.word	1073811456
 145              		.cfi_endproc
 146              	.LFE72:
 148              		.section	.text.__io_putchar,"ax",%progbits
 149              		.align	1
 150              		.global	__io_putchar
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	__io_putchar:
 156              	.LVL2:
 157              	.LFB73:
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c ****  PUTCHAR_PROTOTYPE
 269:Core/Src/main.c ****  {
 158              		.loc 1 269 2 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		.loc 1 269 2 is_stmt 0 view .LVU39
 163 0000 00B5     		push	{lr}
 164              	.LCFI3:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 14, -4
 167 0002 83B0     		sub	sp, sp, #12
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 16
 170 0004 0190     		str	r0, [sp, #4]
 270:Core/Src/main.c ****    /* Place your implementation of fputc here */
 271:Core/Src/main.c ****    /* e.g. write a character to the USART1 and Loop until the end of transmission */
 272:Core/Src/main.c ****    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 171              		.loc 1 272 4 is_stmt 1 view .LVU40
 172 0006 4FF6FF73 		movw	r3, #65535
 173 000a 0122     		movs	r2, #1
 174 000c 01A9     		add	r1, sp, #4
 175 000e 0348     		ldr	r0, .L7
 176              	.LVL3:
 177              		.loc 1 272 4 is_stmt 0 view .LVU41
 178 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 179              	.LVL4:
 273:Core/Src/main.c ****  
 274:Core/Src/main.c ****    return ch;
 180              		.loc 1 274 4 is_stmt 1 view .LVU42
 275:Core/Src/main.c ****  }
 181              		.loc 1 275 2 is_stmt 0 view .LVU43
 182 0014 0198     		ldr	r0, [sp, #4]
 183 0016 03B0     		add	sp, sp, #12
 184              	.LCFI5:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 9


 185              		.cfi_def_cfa_offset 4
 186              		@ sp needed
 187 0018 5DF804FB 		ldr	pc, [sp], #4
 188              	.L8:
 189              		.align	2
 190              	.L7:
 191 001c 00000000 		.word	huart1
 192              		.cfi_endproc
 193              	.LFE73:
 195              		.section	.text.AS5600_ReadRawAngle,"ax",%progbits
 196              		.align	1
 197              		.global	AS5600_ReadRawAngle
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	AS5600_ReadRawAngle:
 203              	.LFB74:
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****  uint16_t AS5600_ReadRawAngle(void)
 278:Core/Src/main.c **** {
 204              		.loc 1 278 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 213 0002 86B0     		sub	sp, sp, #24
 214              	.LCFI7:
 215              		.cfi_def_cfa_offset 32
 279:Core/Src/main.c ****     //printf("starting I2C scan...\n");
 280:Core/Src/main.c ****     uint8_t buffer[2] = {0};
 216              		.loc 1 280 5 view .LVU45
 217              		.loc 1 280 13 is_stmt 0 view .LVU46
 218 0004 0023     		movs	r3, #0
 219 0006 ADF81430 		strh	r3, [sp, #20]	@ movhi
 281:Core/Src/main.c ****     uint16_t raw_angle = 0;
 220              		.loc 1 281 5 is_stmt 1 view .LVU47
 221              	.LVL5:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****     if (__HAL_I2C_GET_FLAG(&hi2c1, I2C_FLAG_BUSY))
 222              		.loc 1 283 5 view .LVU48
 223              		.loc 1 283 9 is_stmt 0 view .LVU49
 224 000a 154B     		ldr	r3, .L15
 225 000c 1B68     		ldr	r3, [r3]
 226 000e 9B69     		ldr	r3, [r3, #24]
 227              		.loc 1 283 8 view .LVU50
 228 0010 13F0020F 		tst	r3, #2
 229 0014 19D1     		bne	.L14
 230              	.L10:
 284:Core/Src/main.c ****     {
 285:Core/Src/main.c ****       //printf("I2C bus busy, resetting...\n");
 286:Core/Src/main.c ****       HAL_I2C_DeInit(&hi2c1);
 287:Core/Src/main.c ****       HAL_I2C_Init(&hi2c1);
 288:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 10


 289:Core/Src/main.c ****     }
 290:Core/Src/main.c ****     
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****     
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     if (HAL_I2C_Mem_Read(&hi2c1, AS5600_I2C_ADDRESS, AS5600_RAW_ANGLE_REGISTER, 
 231              		.loc 1 294 5 is_stmt 1 view .LVU51
 232              		.loc 1 294 9 is_stmt 0 view .LVU52
 233 0016 4FF0FF33 		mov	r3, #-1
 234 001a 0293     		str	r3, [sp, #8]
 235 001c 0223     		movs	r3, #2
 236 001e 0193     		str	r3, [sp, #4]
 237 0020 05AB     		add	r3, sp, #20
 238 0022 0093     		str	r3, [sp]
 239 0024 0123     		movs	r3, #1
 240 0026 0C22     		movs	r2, #12
 241 0028 6C21     		movs	r1, #108
 242 002a 0D48     		ldr	r0, .L15
 243 002c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 244              	.LVL6:
 245              		.loc 1 294 8 discriminator 1 view .LVU53
 246 0030 98B9     		cbnz	r0, .L12
 295:Core/Src/main.c ****                          I2C_MEMADD_SIZE_8BIT, buffer, 2, HAL_MAX_DELAY) == HAL_OK)
 296:Core/Src/main.c ****     {
 297:Core/Src/main.c ****         raw_angle = (buffer[0] << 8) | buffer[1]; // Combine MSB and LSB
 247              		.loc 1 297 9 is_stmt 1 view .LVU54
 248              		.loc 1 297 28 is_stmt 0 view .LVU55
 249 0032 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 250              		.loc 1 297 46 view .LVU56
 251 0036 9DF81540 		ldrb	r4, [sp, #21]	@ zero_extendqisi2
 252              		.loc 1 297 19 view .LVU57
 253 003a 44EA0324 		orr	r4, r4, r3, lsl #8
 254              	.LVL7:
 255              	.L11:
 298:Core/Src/main.c ****     }
 299:Core/Src/main.c ****     HAL_Delay(10); // 10 ms delay between I2C operations
 256              		.loc 1 299 5 is_stmt 1 view .LVU58
 257 003e 0A20     		movs	r0, #10
 258 0040 FFF7FEFF 		bl	HAL_Delay
 259              	.LVL8:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     return raw_angle;
 260              		.loc 1 301 5 view .LVU59
 302:Core/Src/main.c **** }
 261              		.loc 1 302 1 is_stmt 0 view .LVU60
 262 0044 2046     		mov	r0, r4
 263 0046 06B0     		add	sp, sp, #24
 264              	.LCFI8:
 265              		.cfi_remember_state
 266              		.cfi_def_cfa_offset 8
 267              		@ sp needed
 268 0048 10BD     		pop	{r4, pc}
 269              	.LVL9:
 270              	.L14:
 271              	.LCFI9:
 272              		.cfi_restore_state
 286:Core/Src/main.c ****       HAL_I2C_Init(&hi2c1);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 11


 273              		.loc 1 286 7 is_stmt 1 view .LVU61
 274 004a 054C     		ldr	r4, .L15
 275 004c 2046     		mov	r0, r4
 276 004e FFF7FEFF 		bl	HAL_I2C_DeInit
 277              	.LVL10:
 287:Core/Src/main.c **** 
 278              		.loc 1 287 7 view .LVU62
 279 0052 2046     		mov	r0, r4
 280 0054 FFF7FEFF 		bl	HAL_I2C_Init
 281              	.LVL11:
 282 0058 DDE7     		b	.L10
 283              	.L12:
 281:Core/Src/main.c **** 
 284              		.loc 1 281 14 is_stmt 0 view .LVU63
 285 005a 0024     		movs	r4, #0
 286 005c EFE7     		b	.L11
 287              	.L16:
 288 005e 00BF     		.align	2
 289              	.L15:
 290 0060 00000000 		.word	hi2c1
 291              		.cfi_endproc
 292              	.LFE74:
 294              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 295              		.align	2
 296              	.LC0:
 297 0000 62727568 		.ascii	"bruh\000"
 297      00
 298              		.section	.text.Error_Handler,"ax",%progbits
 299              		.align	1
 300              		.global	Error_Handler
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	Error_Handler:
 306              	.LFB75:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE END 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** void Error_Handler(void)
 311:Core/Src/main.c **** {
 307              		.loc 1 311 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI10:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 312:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 313:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 314:Core/Src/main.c ****   printf("bruh");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 12


 317              		.loc 1 314 3 view .LVU65
 318 0002 0248     		ldr	r0, .L20
 319 0004 FFF7FEFF 		bl	printf
 320              	.LVL12:
 315:Core/Src/main.c ****   __disable_irq();
 321              		.loc 1 315 3 view .LVU66
 322              	.LBB8:
 323              	.LBI8:
 324              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 13


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 14


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 325              		.loc 2 140 27 view .LVU67
 326              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 327              		.loc 2 142 3 view .LVU68
 328              		.syntax unified
 329              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 330 0008 72B6     		cpsid i
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334              	.L18:
 335              	.LBE9:
 336              	.LBE8:
 316:Core/Src/main.c ****   while (1)
 337              		.loc 1 316 3 view .LVU69
 317:Core/Src/main.c ****   {
 318:Core/Src/main.c ****       
 319:Core/Src/main.c ****   }
 338              		.loc 1 319 3 view .LVU70
 316:Core/Src/main.c ****   while (1)
 339              		.loc 1 316 9 view .LVU71
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 15


 340 000a FEE7     		b	.L18
 341              	.L21:
 342              		.align	2
 343              	.L20:
 344 000c 00000000 		.word	.LC0
 345              		.cfi_endproc
 346              	.LFE75:
 348              		.section	.text.MX_I2C1_Init,"ax",%progbits
 349              		.align	1
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	MX_I2C1_Init:
 355              	.LFB70:
 171:Core/Src/main.c **** 
 356              		.loc 1 171 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 08B5     		push	{r3, lr}
 361              	.LCFI11:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 180:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 365              		.loc 1 180 3 view .LVU73
 180:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 366              		.loc 1 180 18 is_stmt 0 view .LVU74
 367 0002 0A48     		ldr	r0, .L26
 368 0004 0A4B     		ldr	r3, .L26+4
 369 0006 0360     		str	r3, [r0]
 181:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 370              		.loc 1 181 3 is_stmt 1 view .LVU75
 181:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 371              		.loc 1 181 25 is_stmt 0 view .LVU76
 372 0008 0A4B     		ldr	r3, .L26+8
 373 000a 4360     		str	r3, [r0, #4]
 182:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 374              		.loc 1 182 3 is_stmt 1 view .LVU77
 182:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 375              		.loc 1 182 24 is_stmt 0 view .LVU78
 376 000c 0023     		movs	r3, #0
 377 000e 8360     		str	r3, [r0, #8]
 183:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 378              		.loc 1 183 3 is_stmt 1 view .LVU79
 183:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 379              		.loc 1 183 26 is_stmt 0 view .LVU80
 380 0010 C360     		str	r3, [r0, #12]
 184:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 381              		.loc 1 184 3 is_stmt 1 view .LVU81
 184:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 382              		.loc 1 184 29 is_stmt 0 view .LVU82
 383 0012 4FF48042 		mov	r2, #16384
 384 0016 0261     		str	r2, [r0, #16]
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 385              		.loc 1 185 3 is_stmt 1 view .LVU83
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 16


 386              		.loc 1 185 30 is_stmt 0 view .LVU84
 387 0018 4361     		str	r3, [r0, #20]
 186:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 388              		.loc 1 186 3 is_stmt 1 view .LVU85
 186:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 389              		.loc 1 186 26 is_stmt 0 view .LVU86
 390 001a 8361     		str	r3, [r0, #24]
 187:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 391              		.loc 1 187 3 is_stmt 1 view .LVU87
 187:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 392              		.loc 1 187 30 is_stmt 0 view .LVU88
 393 001c C361     		str	r3, [r0, #28]
 188:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 394              		.loc 1 188 3 is_stmt 1 view .LVU89
 188:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 395              		.loc 1 188 28 is_stmt 0 view .LVU90
 396 001e 0362     		str	r3, [r0, #32]
 189:Core/Src/main.c ****   {
 397              		.loc 1 189 3 is_stmt 1 view .LVU91
 189:Core/Src/main.c ****   {
 398              		.loc 1 189 7 is_stmt 0 view .LVU92
 399 0020 FFF7FEFF 		bl	HAL_I2C_Init
 400              	.LVL13:
 189:Core/Src/main.c ****   {
 401              		.loc 1 189 6 discriminator 1 view .LVU93
 402 0024 00B9     		cbnz	r0, .L25
 197:Core/Src/main.c **** 
 403              		.loc 1 197 1 view .LVU94
 404 0026 08BD     		pop	{r3, pc}
 405              	.L25:
 191:Core/Src/main.c ****   }
 406              		.loc 1 191 5 is_stmt 1 view .LVU95
 407 0028 FFF7FEFF 		bl	Error_Handler
 408              	.LVL14:
 409              	.L27:
 410              		.align	2
 411              	.L26:
 412 002c 00000000 		.word	hi2c1
 413 0030 00540040 		.word	1073763328
 414 0034 A0860100 		.word	100000
 415              		.cfi_endproc
 416              	.LFE70:
 418              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 419              		.align	1
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	MX_USART1_UART_Init:
 425              	.LFB71:
 205:Core/Src/main.c **** 
 426              		.loc 1 205 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 08B5     		push	{r3, lr}
 431              	.LCFI12:
 432              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 17


 433              		.cfi_offset 3, -8
 434              		.cfi_offset 14, -4
 214:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 435              		.loc 1 214 3 view .LVU97
 214:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 436              		.loc 1 214 19 is_stmt 0 view .LVU98
 437 0002 0A48     		ldr	r0, .L32
 438 0004 0A4B     		ldr	r3, .L32+4
 439 0006 0360     		str	r3, [r0]
 215:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 440              		.loc 1 215 3 is_stmt 1 view .LVU99
 215:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 441              		.loc 1 215 24 is_stmt 0 view .LVU100
 442 0008 4FF4E133 		mov	r3, #115200
 443 000c 4360     		str	r3, [r0, #4]
 216:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 444              		.loc 1 216 3 is_stmt 1 view .LVU101
 216:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 445              		.loc 1 216 26 is_stmt 0 view .LVU102
 446 000e 0023     		movs	r3, #0
 447 0010 8360     		str	r3, [r0, #8]
 217:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 448              		.loc 1 217 3 is_stmt 1 view .LVU103
 217:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 449              		.loc 1 217 24 is_stmt 0 view .LVU104
 450 0012 C360     		str	r3, [r0, #12]
 218:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 451              		.loc 1 218 3 is_stmt 1 view .LVU105
 218:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 452              		.loc 1 218 22 is_stmt 0 view .LVU106
 453 0014 0361     		str	r3, [r0, #16]
 219:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 454              		.loc 1 219 3 is_stmt 1 view .LVU107
 219:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 455              		.loc 1 219 20 is_stmt 0 view .LVU108
 456 0016 0C22     		movs	r2, #12
 457 0018 4261     		str	r2, [r0, #20]
 220:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 458              		.loc 1 220 3 is_stmt 1 view .LVU109
 220:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 459              		.loc 1 220 25 is_stmt 0 view .LVU110
 460 001a 8361     		str	r3, [r0, #24]
 221:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 461              		.loc 1 221 3 is_stmt 1 view .LVU111
 221:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 462              		.loc 1 221 28 is_stmt 0 view .LVU112
 463 001c C361     		str	r3, [r0, #28]
 222:Core/Src/main.c ****   {
 464              		.loc 1 222 3 is_stmt 1 view .LVU113
 222:Core/Src/main.c ****   {
 465              		.loc 1 222 7 is_stmt 0 view .LVU114
 466 001e FFF7FEFF 		bl	HAL_UART_Init
 467              	.LVL15:
 222:Core/Src/main.c ****   {
 468              		.loc 1 222 6 discriminator 1 view .LVU115
 469 0022 00B9     		cbnz	r0, .L31
 230:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 18


 470              		.loc 1 230 1 view .LVU116
 471 0024 08BD     		pop	{r3, pc}
 472              	.L31:
 224:Core/Src/main.c ****   }
 473              		.loc 1 224 5 is_stmt 1 view .LVU117
 474 0026 FFF7FEFF 		bl	Error_Handler
 475              	.LVL16:
 476              	.L33:
 477 002a 00BF     		.align	2
 478              	.L32:
 479 002c 00000000 		.word	huart1
 480 0030 00380140 		.word	1073821696
 481              		.cfi_endproc
 482              	.LFE71:
 484              		.section	.text.SystemClock_Config,"ax",%progbits
 485              		.align	1
 486              		.global	SystemClock_Config
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 491              	SystemClock_Config:
 492              	.LFB69:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 493              		.loc 1 134 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 64
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 00B5     		push	{lr}
 498              	.LCFI13:
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 14, -4
 501 0002 91B0     		sub	sp, sp, #68
 502              	.LCFI14:
 503              		.cfi_def_cfa_offset 72
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 504              		.loc 1 135 3 view .LVU119
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 505              		.loc 1 135 22 is_stmt 0 view .LVU120
 506 0004 2822     		movs	r2, #40
 507 0006 0021     		movs	r1, #0
 508 0008 06A8     		add	r0, sp, #24
 509 000a FFF7FEFF 		bl	memset
 510              	.LVL17:
 136:Core/Src/main.c **** 
 511              		.loc 1 136 3 is_stmt 1 view .LVU121
 136:Core/Src/main.c **** 
 512              		.loc 1 136 22 is_stmt 0 view .LVU122
 513 000e 0023     		movs	r3, #0
 514 0010 0193     		str	r3, [sp, #4]
 515 0012 0293     		str	r3, [sp, #8]
 516 0014 0393     		str	r3, [sp, #12]
 517 0016 0493     		str	r3, [sp, #16]
 518 0018 0593     		str	r3, [sp, #20]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 519              		.loc 1 141 3 is_stmt 1 view .LVU123
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 520              		.loc 1 141 36 is_stmt 0 view .LVU124
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 19


 521 001a 0223     		movs	r3, #2
 522 001c 0693     		str	r3, [sp, #24]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 523              		.loc 1 142 3 is_stmt 1 view .LVU125
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 524              		.loc 1 142 30 is_stmt 0 view .LVU126
 525 001e 0123     		movs	r3, #1
 526 0020 0A93     		str	r3, [sp, #40]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 527              		.loc 1 143 3 is_stmt 1 view .LVU127
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 528              		.loc 1 143 41 is_stmt 0 view .LVU128
 529 0022 1023     		movs	r3, #16
 530 0024 0B93     		str	r3, [sp, #44]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 531              		.loc 1 144 3 is_stmt 1 view .LVU129
 145:Core/Src/main.c ****   {
 532              		.loc 1 145 3 view .LVU130
 145:Core/Src/main.c ****   {
 533              		.loc 1 145 7 is_stmt 0 view .LVU131
 534 0026 06A8     		add	r0, sp, #24
 535 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 536              	.LVL18:
 145:Core/Src/main.c ****   {
 537              		.loc 1 145 6 discriminator 1 view .LVU132
 538 002c 68B9     		cbnz	r0, .L38
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 539              		.loc 1 152 3 is_stmt 1 view .LVU133
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 540              		.loc 1 152 31 is_stmt 0 view .LVU134
 541 002e 0F23     		movs	r3, #15
 542 0030 0193     		str	r3, [sp, #4]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 543              		.loc 1 154 3 is_stmt 1 view .LVU135
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 544              		.loc 1 154 34 is_stmt 0 view .LVU136
 545 0032 0021     		movs	r1, #0
 546 0034 0291     		str	r1, [sp, #8]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 547              		.loc 1 155 3 is_stmt 1 view .LVU137
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 548              		.loc 1 155 35 is_stmt 0 view .LVU138
 549 0036 0391     		str	r1, [sp, #12]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 550              		.loc 1 156 3 is_stmt 1 view .LVU139
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 551              		.loc 1 156 36 is_stmt 0 view .LVU140
 552 0038 0491     		str	r1, [sp, #16]
 157:Core/Src/main.c **** 
 553              		.loc 1 157 3 is_stmt 1 view .LVU141
 157:Core/Src/main.c **** 
 554              		.loc 1 157 36 is_stmt 0 view .LVU142
 555 003a 0591     		str	r1, [sp, #20]
 159:Core/Src/main.c ****   {
 556              		.loc 1 159 3 is_stmt 1 view .LVU143
 159:Core/Src/main.c ****   {
 557              		.loc 1 159 7 is_stmt 0 view .LVU144
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 20


 558 003c 01A8     		add	r0, sp, #4
 559 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 560              	.LVL19:
 159:Core/Src/main.c ****   {
 561              		.loc 1 159 6 discriminator 1 view .LVU145
 562 0042 20B9     		cbnz	r0, .L39
 163:Core/Src/main.c **** 
 563              		.loc 1 163 1 view .LVU146
 564 0044 11B0     		add	sp, sp, #68
 565              	.LCFI15:
 566              		.cfi_remember_state
 567              		.cfi_def_cfa_offset 4
 568              		@ sp needed
 569 0046 5DF804FB 		ldr	pc, [sp], #4
 570              	.L38:
 571              	.LCFI16:
 572              		.cfi_restore_state
 147:Core/Src/main.c ****   }
 573              		.loc 1 147 5 is_stmt 1 view .LVU147
 574 004a FFF7FEFF 		bl	Error_Handler
 575              	.LVL20:
 576              	.L39:
 161:Core/Src/main.c ****   }
 577              		.loc 1 161 5 view .LVU148
 578 004e FFF7FEFF 		bl	Error_Handler
 579              	.LVL21:
 580              		.cfi_endproc
 581              	.LFE69:
 583              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 584              		.align	2
 585              	.LC1:
 586 0000 257500   		.ascii	"%u\000"
 587              		.section	.text.main,"ax",%progbits
 588              		.align	1
 589              		.global	main
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	main:
 595              	.LFB68:
  76:Core/Src/main.c **** 
 596              		.loc 1 76 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 00B5     		push	{lr}
 601              	.LCFI17:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 14, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              	.LCFI18:
 606              		.cfi_def_cfa_offset 16
  85:Core/Src/main.c **** 
 607              		.loc 1 85 3 view .LVU150
 608 0004 FFF7FEFF 		bl	HAL_Init
 609              	.LVL22:
  92:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 21


 610              		.loc 1 92 3 view .LVU151
 611 0008 FFF7FEFF 		bl	SystemClock_Config
 612              	.LVL23:
  99:Core/Src/main.c ****   MX_I2C1_Init();
 613              		.loc 1 99 3 view .LVU152
 614 000c FFF7FEFF 		bl	MX_GPIO_Init
 615              	.LVL24:
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 616              		.loc 1 100 3 view .LVU153
 617 0010 FFF7FEFF 		bl	MX_I2C1_Init
 618              	.LVL25:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 619              		.loc 1 101 3 view .LVU154
 620 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 621              	.LVL26:
 622              	.L41:
 104:Core/Src/main.c **** 
 623              		.loc 1 104 3 view .LVU155
 110:Core/Src/main.c ****   {
 624              		.loc 1 110 3 view .LVU156
 625              	.LBB10:
 115:Core/Src/main.c ****     //printf("Calling AS5600...\n");
 626              		.loc 1 115 5 view .LVU157
 627 0018 4FF40051 		mov	r1, #8192
 628 001c 0948     		ldr	r0, .L43
 629 001e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 630              	.LVL27:
 117:Core/Src/main.c **** 
 631              		.loc 1 117 5 view .LVU158
 117:Core/Src/main.c **** 
 632              		.loc 1 117 17 is_stmt 0 view .LVU159
 633 0022 FFF7FEFF 		bl	AS5600_ReadRawAngle
 634              	.LVL28:
 635 0026 0246     		mov	r2, r0
 636              	.LVL29:
 119:Core/Src/main.c ****     sprintf(str, "%u", raw_angle); // Format the number as an unsigned decimal
 637              		.loc 1 119 5 is_stmt 1 view .LVU160
 120:Core/Src/main.c ****     printf(str);
 638              		.loc 1 120 5 view .LVU161
 639 0028 0749     		ldr	r1, .L43+4
 640 002a 6846     		mov	r0, sp
 641 002c FFF7FEFF 		bl	sprintf
 642              	.LVL30:
 121:Core/Src/main.c ****     printf("\n");
 643              		.loc 1 121 5 view .LVU162
 644 0030 6846     		mov	r0, sp
 645 0032 FFF7FEFF 		bl	printf
 646              	.LVL31:
 122:Core/Src/main.c **** 
 647              		.loc 1 122 5 view .LVU163
 648 0036 0A20     		movs	r0, #10
 649 0038 FFF7FEFF 		bl	putchar
 650              	.LVL32:
 124:Core/Src/main.c ****   }
 651              		.loc 1 124 5 view .LVU164
 652 003c C820     		movs	r0, #200
 653 003e FFF7FEFF 		bl	HAL_Delay
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 22


 654              	.LVL33:
 655              	.LBE10:
 110:Core/Src/main.c ****   {
 656              		.loc 1 110 9 view .LVU165
 657 0042 E9E7     		b	.L41
 658              	.L44:
 659              		.align	2
 660              	.L43:
 661 0044 00100140 		.word	1073811456
 662 0048 00000000 		.word	.LC1
 663              		.cfi_endproc
 664              	.LFE68:
 666              		.global	huart1
 667              		.section	.bss.huart1,"aw",%nobits
 668              		.align	2
 671              	huart1:
 672 0000 00000000 		.space	72
 672      00000000 
 672      00000000 
 672      00000000 
 672      00000000 
 673              		.global	hi2c1
 674              		.section	.bss.hi2c1,"aw",%nobits
 675              		.align	2
 678              	hi2c1:
 679 0000 00000000 		.space	84
 679      00000000 
 679      00000000 
 679      00000000 
 679      00000000 
 680              		.text
 681              	.Letext0:
 682              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 683              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 684              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 685              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 686              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 687              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 688              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 689              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 690              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 691              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 692              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 693              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 694              		.file 15 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 695              		.file 16 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:19     .text.MX_GPIO_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:143    .text.MX_GPIO_Init:00000084 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:149    .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:155    .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:191    .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:671    .bss.huart1:00000000 huart1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:196    .text.AS5600_ReadRawAngle:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:202    .text.AS5600_ReadRawAngle:00000000 AS5600_ReadRawAngle
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:290    .text.AS5600_ReadRawAngle:00000060 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:678    .bss.hi2c1:00000000 hi2c1
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:295    .rodata.Error_Handler.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:299    .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:305    .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:344    .text.Error_Handler:0000000c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:349    .text.MX_I2C1_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:354    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:412    .text.MX_I2C1_Init:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:419    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:424    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:479    .text.MX_USART1_UART_Init:0000002c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:485    .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:491    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:584    .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:588    .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:594    .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:661    .text.main:00000044 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:668    .bss.huart1:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccyaDyFh.s:675    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_I2C_Mem_Read
HAL_Delay
HAL_I2C_DeInit
HAL_I2C_Init
printf
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
sprintf
putchar
